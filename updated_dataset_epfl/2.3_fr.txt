1
00:00:04,040 --> 00:00:06,170
Move on to the matrices.

2
00:00:07,020 --> 00:00:11,250
Thus, a matrix is ​​very similar
to a vector only

3
00:00:11,250 --> 00:00:14,020
it has several lines and several columns.

4
00:00:16,480 --> 00:00:21,620
Let us define a matrix with two rows.

5
00:00:23,770 --> 00:00:28,910
For example, I can take a 3.5,
that's the first line.

6
00:00:29,970 --> 00:00:37,170
And on the second, 3, 4 minus 2.

7
00:00:37,270 --> 00:00:37,660
Considering that.

8
00:00:39,140 --> 00:00:43,850
So I have the same symbol with brackets
at the beginning and

9
00:00:43,850 --> 00:00:46,410
the end, to show when it starts and
when it ends.

10
00:00:46,980 --> 00:00:48,570
And here I have matrix A.

11
00:00:49,380 --> 00:00:52,110
If I want to write all these in one line.

12
00:00:52,110 --> 00:00:53,120
I'll take a second matrix.

13
00:00:54,670 --> 00:00:57,470
I'll take the same size, one of times 3.

14
00:00:58,360 --> 00:01:02,760
But when defining, I will not go to the
line.

15
00:01:02,650 --> 00:01:04,380
So I do 0, 2, 4.

16
00:01:06,010 --> 00:01:07,090
5

17
00:01:07,200 --> 00:01:10,260
And then we said what is a line
it is a semicolon,

18
00:01:10,630 --> 00:01:17,040
So a semicolon then 1; 5.3 less 0.3.

19
00:01:17,290 --> 00:01:19,810
I close the brackets.

20
00:01:20,760 --> 00:01:22,480
And it is a matrix of the same size.

21
00:01:23,100 --> 00:01:26,220
So, I can also do addition
operations,

22
00:01:26,220 --> 00:01:27,840
and a scalar multiplication.

23
00:01:28,920 --> 00:01:30,170
So a new matrix C.

24
00:01:31,220 --> 00:01:34,990
I can set it as A - 2 times B.

25
00:01:38,640 --> 00:01:42,860
We see it is the right size, the same
size of A and B.

26
00:01:43,220 --> 00:01:44,320
I did the operations.

27
00:01:44,990 --> 00:01:47,010
I can also concatenate two matrices.

28
00:01:48,560 --> 00:01:53,280
For example, matrix A and matrix B.

29
00:01:57,760 --> 00:02:00,790
I get the two matrices, A and B,
one beside the other.

30
00:02:01,780 --> 00:02:04,150
But now, I cannot do the sum

31
00:02:04,490 --> 00:02:09,600
between A and this new matrix
because they do not have

32
00:02:09,180 --> 00:02:09,600
compatible sizes.

33
00:02:11,260 --> 00:02:16,140
Let's see now, what we can do with these
matrices A, B and D.

34
00:02:16,540 --> 00:02:21,880
So for example, I can concatenate
the matrix

35
00:02:23,560 --> 00:02:25,430
D with another matrix.

36
00:02:25,370 --> 00:02:29,650
So for example, I'll take D.

37
00:02:30,000 --> 00:02:32,650
Now, I put it together, but on another
line.

38
00:02:33,000 --> 00:02:37,510
So, I'll see the matrix D and the next.

39
00:02:37,540 --> 00:02:44,030
Thus, for example, 2 times D on
different lines.

40
00:02:46,590 --> 00:02:50,960
If I look at the size of D it's a 2 by 6
matrix.

41
00:02:51,640 --> 00:02:56,930
If I look at the size of this
new matrix, it's a 4 by 6 matrix.

42
00:02:56,750 --> 00:02:59,100
I doubled the lines.

43
00:03:01,150 --> 00:03:05,160
So I can extract, like I did for
the vectors,

44
00:03:05,910 --> 00:03:10,050
some of the matrix inputs.

45
00:03:10,080 --> 00:03:12,250
Only that a matrix, has two indexes.

46
00:03:12,250 --> 00:03:14,320
So for example, I can take the index 2, 3.

47
00:03:15,810 --> 00:03:20,910
If I want to extract several matrix
inputs once

48
00:03:20,910 --> 00:03:37,600
I can for example take the lines 2, 3
and the columns 4 and 6.

49
00:03:40,310 --> 00:03:42,990
And I get a 2 by 2 matrix.

50
00:03:43,920 --> 00:03:47,050
We can also do a matrix transposition.

51
00:03:47,710 --> 00:03:51,880
So if I take the A we used earlier and
I tranpose it with

52
00:03:51,880 --> 00:03:56,780
the same symbol, I get a 3 by 2 matrix.

53
00:03:57,090 --> 00:04:00,860
Therefore, the inputs are matrix A
transpose.

54
00:04:01,620 --> 00:04:03,100
There are also special matrices.

55
00:04:03,280 --> 00:04:08,440
You can define a matrix with only 0s.

56
00:04:10,200 --> 00:04:12,260
So, I use the same function as earlier, 0.

57
00:04:12,600 --> 00:04:17,800
Now, instead of what gave
4, 1 or 1, 4 for a vector,

58
00:04:18,040 --> 00:04:20,320
it gave the matrix size.

59
00:04:20,320 --> 00:04:24,940
So, I'll take a zero matrix, of size
3 by 4.

60
00:04:26,670 --> 00:04:30,540
And, equivalently, there is a matrix
which is filled

61
00:04:30,540 --> 00:04:36,290
by 1 with the command 1.

62
00:04:38,840 --> 00:04:41,130
And again, I can take the size 3, 4.

63
00:04:42,610 --> 00:04:46,990
There is a special matrix which is
the matrix I.

64
00:04:48,340 --> 00:04:51,850
And in general, it is used to build
identity matrix.

65
00:04:53,080 --> 00:04:59,300
So I, I can define it, this I, 3 by 3.

66
00:05:01,000 --> 00:05:02,860
I get identity matrix.

67
00:05:04,550 --> 00:05:08,170
In reality, what this function I does
is to produce

68
00:05:08,500 --> 00:05:12,630
a matrix of the desired size with on
the main diagonal,

69
00:05:13,040 --> 00:05:15,170
1s and 0s elsewhere.

70
00:05:15,840 --> 00:05:18,840
So, is it possible to build
a diagonal matrix

71
00:05:18,840 --> 00:05:24,690
from a vector containing the values ​
of the diagonal?

72
00:05:25,320 --> 00:05:28,640
We must first define this vector V.

73
00:05:28,710 --> 00:05:35,030
So, for example 1, 2, 3 and 4.

74
00:05:35,030 --> 00:05:38,050
You see now, instead of putting commas

75
00:05:38,490 --> 00:05:41,870
between the numbers I put a space.

76
00:05:42,500 --> 00:05:43,300
This is equivalent.

77
00:05:43,340 --> 00:05:46,310
I can put commas or put spaces.

78
00:05:46,820 --> 00:05:48,430
Now I have a line vector.

79
00:05:49,570 --> 00:05:56,670
I can define a diagonal matrix using
the diag function.

80
00:05:59,730 --> 00:06:05,590
In fact, I can use the command diag
to extract

81
00:06:05,700 --> 00:06:07,060
the diagonal of a matrix.

82
00:06:07,800 --> 00:06:08,700
So do the inverse operation.

83
00:06:10,500 --> 00:06:16,860
So when I look at A, I can extract the
main diagonal,

84
00:06:16,860 --> 00:06:18,730
here, it'll be 1, 4.

85
00:06:20,670 --> 00:06:25,360
I define the vector U as the diagonal of
A.

86
00:06:26,710 --> 00:06:30,130
I get a column vector 1, 4.

87
00:06:30,400 --> 00:06:35,910
If I want the row vector at this point,
I have to transpose the diag A.

