The bad way of dealing with the problem is the following : 
I am looking for p, a polynomial
of degree n that I write p(t)+a0+a1*t+a2*t^2+...+an*t^n.
So I have n+1 unknown quantities, which are the coefficients a0, a1, a2 up to an, the coefficiants of the polynomial in the canonical basis
1,t,t^2 up to t^n. I get n+1 equations that correspond to p(t0)=p0 for the first equation, so a0+a1*t0+a2+t0^2+...+an*t0^n=p0 likewise for p at t1, that should give us p1, which gives a0+a1*t1+a2*t1^2+...+an*t1^n=p1. and so on until p(tn)=pn.
I can write those n+1 equations as a linear system since a0,a1,a2...,are linear factors of our canonical basis
The unknown quantinies are a0,a1,...,an
We can see the ai's as coordinates of the vector a. 
On the right handside of the equality we get the given values p0,p1,...pn as entries of the vector p
Now I have to write down the entries if the matrix T such that Ta=p.
The first line is a0+t0*a1+t0^2*a2+...+t0^n*an = p0.
So on the second line we have 1,t1,t1^2,... until t1^n
And finally on the last line we have 1 tn tn^2 ... tn^n
We're now down to solving a linear system. This method is bad because the number of operations to solve a linear system is high. We'll see in the chapter 4 that this number has the size of n cubed, n^3.
On the other hand we have another method that will give us an explicit formula for the polynomial p(t). Here the formula isn't explicit because I have to solve a linear system to get the coefficients.
We'll see later an explicit formula for the polynomial, we're now going to talk about Lagrange interpolation. 
