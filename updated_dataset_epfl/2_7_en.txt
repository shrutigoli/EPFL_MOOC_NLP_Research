We'll now check the central finite difference formula is indeed of order 2 in h
So the error between f'(x0) and its approximation by a central finite difference formula is in h squared
So choose a function f, for example sin(x)
Choose a point x0, for example x0=1
And we can use a program that computes the error for a given h that is the difference between f'(x0) and its approximation by the central finite difference formula
So for h = 10^(-1), observe an error of 2.2*10^(-4) 
So the formula is a lot more precise than the forward and backward
 finite difference formulaes
We expected it, because the error is in hÂ² instead of h
For h=10^(-2) so when h is divided by 10 then the error is approximatively divided by 100.
For h=10^(-3) the error is divided by 100 again
Likewise for 10^(-4).
For 10^(-5), the error isn't divided by 100 but less and for 10^(-6) the error increases what we observe here is that the truncation error takes over when h is relatively small this is still the truncation in Taylor's formula.
And if h is very small, the rounding error takes over.
So if h is less than 10^(-5) observe  the effect or rounding errors.
We'll now try to explain where those rounding errors come from.
