So in order to analyse our morphologies, we will use NeuroM, a software that is available in GitHub.
With NeuroM, you can visualise a neuronal morphology, assess its quality, and extract basic morphometrics that can be used for the comparison and classification of neurons.
First of all, we provide two applications to check the quality of the cell, and extract some basic morphometrics without even using Python coding.
The first one is morph_check.
You select the morphology and you give the path to the file that you want to analyse.
So once you run that, you go through a list of checks: if the whole morphology is connected, if it has a soma, if the IDs are sequential, if it has valid neurites, if it contains a dendrite, if it contains an axon, and then some more detailed tests that concern the length of the segment, the length of the sections, and the radius.
So, you don't necessarily need to pass all those tests for your morphology to be valid.
For example, some morphologies do not have an apical dendrite, so it's up to you to decide how to interpret the results of this test.
But then you might want to go into more details and do some morphological statistics extraction.
So we will use the application morph_stats for that.
Calling this application you see that returns a list of different morphological features.
The most common one is total length.
And then some more detailed statistics on the lengths of the sections, or the volumes.
So this is just an example of some feature analysis that you can run on your selected morphology.
You see that this is separated into different sections that refer to different tree types.
For example, in the beginning we have the axonal features, then we sum up the features for the whole morphology.
Then the soma features, the apical and the basal dendrites.
So with this application, you can extract the global statistics and save them into a file and then do some further analysis.
But if you want to do that directly in Python, we can use NeuroM interactively.
So here, we will import a model and load the neuron.
To import NeuroM, you just import NeuroM and once you have your module loaded, you can get your morphology.
So once again you have to select tot he morphology file.
And then you do neurom.load_neuron.
In this case, you will just load one neuron in the program.
You can also do the same thing for multiple neurons but then you just have to do load_neurons and give the full path to a set of morphologies, not the single morphology file.
So once you've loaded your morphology we can go into the visualisation.
Those are just some commands to setup the size of the figures but the module we're going to use is inside neurom.viewer, and from that the draw function.
So from neurom.viewer, we import the draw function.
And if you want to see more details about this draw function, you just call the help.
So you can do that by draw?
And what appears here is a small example about how you can use this viewer.
So here is the help function of the draw.
You can see the details of how you can use the draw function.
And what is currently available in the viewer is a 2D plot, a 3D plot or a dendogram.
So let's go and run those three functions and see our morphology.
So if you just do draw(my_neuron), you get the figure of the morphology, the 2D plot.
And what you can see is the apical dendrite in purple, the basal dendrite in red, and the axon in blue.
And this is a convention we use throughout NeuroM in general, this colour code.
Now you can select a different mode for the draw.
So what you can do is to draw your morphology in 3D.
And once you do that, you get the 3D plot of the morphology.
If you're doing electrical modeling, you might be interested in the dendogram of the morphology.
So let's now try the mode dendogram of the same function.
If you're interested in the electrical activity of the neuron, you might want to see the dendogram.
To do so,  we select the mode dendogram.
So we draw our neuron and, as you can see we use the same colour code where the apical is purple, the basals are red, and the axons are blue.
And here you can already see the difference in the sizes of those three types of trees because the apicals and the axons extend much more than the basal dendrites.
So now that we've seen our morphologies, we want to start analysing them.
So we want to extract some basic morphological features.
And the most common features that are used is the total length or the total surface area or a global statistic such as the soma size.
To get the complete list of features that are currently available in NeuroM, you can use the help function of the get.
So you do neurom.get? and this help box appears here.
So you have different levels of features.
The first one is neurite features which refers to individual trees.
Those are lengths, volumes, number of sections, or number of bifurcations, or number of terminations, and then at the end, you have the neuron features.
So those are global features for the whole neuron morphology.
Some of them refer to the soma such as the soma radi, or the surface areas and others refer to the trunks.
So those are soma statistics about the beginning of each tree.
So once you've seen those features, you can select one and let's try the total length.
So we run total length, neurom.get() and then we add the string of the feature we want to extract.
And after that, our neuron.
So then we can print the total length and see already the first statistical measurement.
So how long in total is our neuron?
So this gives us the sum of the lengths.
What if we want to study the individual lengths of each section?
Then we can select another feature: section lengths with my neuron.
And this is exactly the same process for any feature that you might want to analyse.
So let's see.
You get a very lengthy list of numbers.
And this is probably not telling you much.
So what we want to do next, is start to perform some statistical analysis on the morphometrics that we have extracted.
And we're going to do that in the next part of the tutorial.
