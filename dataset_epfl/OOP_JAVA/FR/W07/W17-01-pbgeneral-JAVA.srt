1
00:00:04,248 --> 00:00:06,674
Voici donc la dernière série 
de séquence vidéo

2
00:00:06,674 --> 00:00:09,901
de ce mooc d'introduction 
à la programmation orienté objet (POO)

3
00:00:09,901 --> 00:00:11,249
illustrée en Java.

4
00:00:11,446 --> 00:00:13,352
Dans cette dernière série 
de séquence vidéo,

5
00:00:13,352 --> 00:00:16,243
nous avons voulu vous présenter 
un problème dans sa globalité,

6
00:00:16,243 --> 00:00:19,194
un problème très général, 
vous présenter une étude de cas

7
00:00:19,194 --> 00:00:22,462
où il s'agira donc de représenter
différentes montres,

8
00:00:22,462 --> 00:00:24,536
il y aura des montres analogiques,
des montres à aiguille

9
00:00:24,536 --> 00:00:27,282
des montres digitales, 
des montres qui seront les deux,

10
00:00:27,282 --> 00:00:31,230
les montres auront des accessoires
comme des bracelets, des boîtiers...

11
00:00:31,578 --> 00:00:34,277
Donc un cadre assez général 
qui pourrait par exemple servir

12
00:00:34,277 --> 00:00:37,170
à un logiciel de gestion de bijouterie 
ou un logiciel de vente

13
00:00:37,170 --> 00:00:39,009
ou même d'impression de catalogues,

14
00:00:39,009 --> 00:00:42,702
dans le cadre duquel nous allons pouvoir
vous illustrer différents concepts

15
00:00:42,702 --> 00:00:44,956
présentés tout au long de ce cours.

16
00:00:45,447 --> 00:00:47,885
Les thématiques que nous avons choisi
de vous présenter

17
00:00:47,885 --> 00:00:50,979
dans ces vidéos de synthèse,
contiennent tout d'abord bien sûr

18
00:00:50,979 --> 00:00:54,240
la notion de conception du problème, 
la modélisation du problème

19
00:00:54,240 --> 00:00:56,710
d'un point de vue de la POO,

20
00:00:56,710 --> 00:00:58,572
quelles classes doivent 
hériter de quelle autre,

21
00:00:58,572 --> 00:01:01,217
est-ce qu'il doit y avoir
des classes abstraites,

22
00:01:01,217 --> 00:01:05,718
comment par exemple rendre le calcul 
du prix des montres polymorphique,

23
00:01:05,718 --> 00:01:07,386
ou l'affichage polymorphique.

24
00:01:07,386 --> 00:01:10,619
L'affichage justement sera traité
de façon très spécifique

25
00:01:10,619 --> 00:01:13,795
avec redéfinition de la méthode toString
héritée de object,

26
00:01:13,795 --> 00:01:16,880
et puis donc révision de la façon 
de faire un affichage

27
00:01:16,880 --> 00:01:20,676
qui s'adapte à chacune des classes,
un affichage polymorphique.

28
00:01:20,957 --> 00:01:22,978
Nous aborderons également les interfaces,

29
00:01:22,978 --> 00:01:24,607
avec les différents mécanismes,

30
00:01:24,607 --> 00:01:28,144
mécanisme digital ou mécanisme 
analogique, à aiguille,

31
00:01:28,144 --> 00:01:32,521
voire les mécanismes doubles
qui sont à la fois à aiguille et digital,

32
00:01:32,521 --> 00:01:35,287
et puis nous terminerons 
pas une dernière séquence vidéo

33
00:01:35,287 --> 00:01:38,642
qui présentera le problème 
non encore abordé

34
00:01:38,642 --> 00:01:41,855
dans le cours pour l'instant,
de la notion de copie polymorphique,

35
00:01:41,855 --> 00:01:44,883
comment copier 
des collections hétérogènes,

36
00:01:44,883 --> 00:01:48,900
comment allons-nous copier les montres
qui contiennent différents composants

37
00:01:48,900 --> 00:01:51,215
qui peuvent se comporter 
de façon différente,

38
00:01:51,215 --> 00:01:53,395
soit du point de vue du prix,
soit du point de vue de l'affichage.

39
00:01:54,174 --> 00:01:56,904
Voilà donc le menu
de cette dernière semaine.

40
00:01:57,100 --> 00:02:00,762
Mais commençons par présenter
le problème un peu plus en détails,

41
00:02:00,762 --> 00:02:03,478
ce que nous voulons donc modéliser
ce sont des montres,

42
00:02:03,478 --> 00:02:05,733
on va dire que des montres 
sont des produits,

43
00:02:05,733 --> 00:02:09,765
au sens qu'un produit est quelque chose
que l'on peut vendre, qui a un prix.

44
00:02:09,765 --> 00:02:13,530
Les montres par ailleurs,
auront des mécanismes de base,

45
00:02:13,530 --> 00:02:16,593
typiquement donc des aiguilles, 
pour pouvoir afficher l'heure,

46
00:02:16,593 --> 00:02:19,420
et seront constituées 
de différents accessoires,

47
00:02:19,420 --> 00:02:23,974
comme un boitier, un bracelet,
le verre sur la montre.. le fermoir.

48
00:02:24,325 --> 00:02:27,058
Les produits dont nous allons parler
tout à l'heure ont un prix,

49
00:02:27,058 --> 00:02:29,874
et le calcul de ce prix peut varier.

50
00:02:29,874 --> 00:02:33,307
Donc cet aspect là est intéressant
pour la conception,

51
00:02:33,307 --> 00:02:37,903
à partir d'une valeur de base qui 
doit être fixée au niveau du produit.

52
00:02:38,488 --> 00:02:44,485
Tous les produits sont affichables,
et cet affichage peut aussi varier,

53
00:02:44,485 --> 00:02:47,541
chaque produit doit être affiché
à sa façon propre.

54
00:02:47,541 --> 00:02:49,346
Bien sûr, ce qui est derrière ces notions

55
00:02:49,346 --> 00:02:52,137
de "peut varier" et "affichable
à sa façon propre",

56
00:02:52,137 --> 00:02:54,574
c'est la notion de polymorphisme.

57
00:02:54,896 --> 00:02:58,533
Ensuite, les mécanismes dont 
nous avons parlé juste au dessus,

58
00:02:58,533 --> 00:03:02,408
et les accessoires dont 
sont constituées les montres,

59
00:03:02,408 --> 00:03:06,629
ces mécanismes et ces accessoires
sont aussi des produits.

60
00:03:06,629 --> 00:03:10,570
On voit ici plusieurs fois
l'emploi du verbe être,

61
00:03:10,570 --> 00:03:14,219
qui va nous qualifier 
donc des relations d'héritage.

62
00:03:14,586 --> 00:03:18,739
On pourrait par exemple acheter 
séparément des accessoires ou mécanismes,

63
00:03:18,739 --> 00:03:21,303
donc chacun pourrait 
se comporter comme un produit,

64
00:03:21,303 --> 00:03:24,097
donc chacun avoir son prix propre,

65
00:03:24,097 --> 00:03:27,108
et sa façon propre de calculer son prix.

66
00:03:27,663 --> 00:03:30,353
Il existe fondamentalement 
trois sortes de mécanisme,

67
00:03:30,353 --> 00:03:32,307
les mécanismes qu'on va 
qualifier d'analogique,

68
00:03:32,307 --> 00:03:34,265
pour représenter les montres à aiguilles,

69
00:03:34,265 --> 00:03:37,984
les montres digitales seront représentées
par un mécanisme digital,

70
00:03:37,984 --> 00:03:40,553
et puis on aura des montres
qui seront à la fois

71
00:03:40,553 --> 00:03:44,140
à aiguille et à la fois 
à affichage digital.

72
00:03:44,502 --> 00:03:47,665
Enfin pour ces mécanisme qu'on a qualifiés
de mécanismes doubles,

73
00:03:47,665 --> 00:03:50,790
on supposera qu'ils n'indiquent
qu'une seule heure,

74
00:03:50,790 --> 00:03:55,354
donc on va dire qu'il y aura 
une heure associée à une montre ici,

75
00:03:55,354 --> 00:03:57,847
et qu'elle aura deux façons
de se représenter,

76
00:03:57,847 --> 00:04:00,057
c'est un point de vue 
choisi pour l'exercice,

77
00:04:00,057 --> 00:04:02,443
évidemment on aurait pu choisir
un autre point de vue

78
00:04:02,443 --> 00:04:06,759
qui consistait à associer une heure à
chacun des mécanismes de représentation,

79
00:04:06,759 --> 00:04:08,150
soit aiguille, soit digital,

80
00:04:08,150 --> 00:04:10,033
mais ce n'est pas le point de vue
qu'on a pris ici,

81
00:04:10,033 --> 00:04:12,741
justement pour pouvoir introduire 
une problématique intéressante

82
00:04:12,741 --> 00:04:14,486
au niveau donc du codage de ces classes.

83
00:04:15,001 --> 00:04:16,706
Pour résumer, au niveau des classes,

84
00:04:16,706 --> 00:04:19,323
c'est-à-dire au niveau des types d'objets
que nous aurons dans notre programme,

85
00:04:19,323 --> 00:04:22,502
nous allons avoir donc des montres,
nous allons avoir des produits,

86
00:04:22,502 --> 00:04:26,573
nous allons avoir des mécanismes
et des accessoires,

87
00:04:26,573 --> 00:04:29,650
les accessoires peuvent être
des boîtiers, des bracelets,

88
00:04:29,650 --> 00:04:31,677
tous ceci seront des classes,

89
00:04:31,677 --> 00:04:34,319
au niveau des mécanismes, on peut avoir
des mécanismes analogiques,

90
00:04:34,319 --> 00:04:37,713
des mécanismes digitaux, 
des mécanismes doubles.

91
00:04:37,713 --> 00:04:39,673
Voilà l'ensemble des classes.

92
00:04:39,673 --> 00:04:41,742
Au niveau des relations d'héritage,

93
00:04:41,742 --> 00:04:44,712
nous avons vu que les montres
sont des produits,

94
00:04:44,712 --> 00:04:46,909
donc vont hériter de Produit,

95
00:04:46,909 --> 00:04:52,290
on a vu que les mécanismes analogiques
digitaux et doubles

96
00:04:52,290 --> 00:04:54,833
sont des sortes de mécanismes,

97
00:04:54,833 --> 00:05:00,935
donc les trois classes ici, vont hériter
naturellement de la classe Mecanisme.

98
00:05:01,463 --> 00:05:04,303
Nous avons aussi vu que
les mécanismes et les accessoires

99
00:05:04,303 --> 00:05:07,801
sont également des produits.

100
00:05:08,109 --> 00:05:13,704
Tout ceci donc, va nous conduire à 
la modélisation hiérarchique suivante :

101
00:05:13,704 --> 00:05:16,762
nous avons donc tout en haut
la notion de produit,

102
00:05:17,217 --> 00:05:21,715
les accessoires, les mécanismes,
les montres sont des produits,

103
00:05:21,715 --> 00:05:27,388
par contre une montre aura un mécanisme
et aura des accessoires,

104
00:05:27,388 --> 00:05:29,973
donc encapsulera ces classes là.

105
00:05:30,075 --> 00:05:32,817
Parmi les accessoires, nous aurons 
des boîtiers, des bracelets

106
00:05:32,817 --> 00:05:36,701
des fermoirs, des vitres,
tout ceci sont des accessoires.

107
00:05:36,701 --> 00:05:39,712
Au niveau des mécanismes, 
les mécanismes analogiques

108
00:05:39,712 --> 00:05:43,154
et les mécanismes digitaux 
sont des mécanismes.

109
00:05:43,154 --> 00:05:46,438
Enfin, le mécanisme double, 
au départ, c'est un mécanisme,

110
00:05:46,438 --> 00:05:49,749
mais nous avons décidé 
par la dernière remarque précédente,

111
00:05:49,749 --> 00:05:51,986
qu'il n'indiquait qu'une seule heure,

112
00:05:51,986 --> 00:05:56,727
qu'on va certainement représenter
au niveau de la notion de mécanisme,

113
00:05:56,727 --> 00:06:01,333
et qu'il se comporte à la fois
comme des mécanismes analogiques

114
00:06:01,333 --> 00:06:05,146
et des mécanismes digitaux,
d'où certainement la notion d'interface,

115
00:06:05,146 --> 00:06:08,337
mais nous verrons plus tard comment
modéliser cela exactement.

116
00:06:08,557 --> 00:06:11,340
Regardons comment tout ceci se traduit
au niveau du code.

117
00:06:11,340 --> 00:06:14,044
Nous vous conseillons d'ailleurs 
en même temps que vous suivez ces vidéos,

118
00:06:14,044 --> 00:06:17,165
de temps en temps faire des pauses,
et écrire par vous-même le code

119
00:06:17,165 --> 00:06:20,192
dans votre environnement 
de développement habituel.

120
00:06:20,192 --> 00:06:23,031
Le premier point, 
les montres sont des produits,

121
00:06:23,031 --> 00:06:28,751
se traduit donc par une classe Montre,
qui est un, qui hérite d'un produit,

122
00:06:28,751 --> 00:06:32,294
et donc bien sûr 
on introduit une classe Produit,

123
00:06:32,294 --> 00:06:35,155
dont hérite Montre,
et puis ensuite pour l'instant,

124
00:06:35,155 --> 00:06:37,434
on a simplement un main vide.

125
00:06:37,434 --> 00:06:41,393
Deuxième point, 
les montres ont un mécanisme,

126
00:06:41,393 --> 00:06:44,745
donc elles vont encapsuler un mécanisme,

127
00:06:44,745 --> 00:06:47,397
les montres ont un mécanisme
et sont constituées,

128
00:06:47,397 --> 00:06:50,372
donc ont différents accessoires.

129
00:06:50,546 --> 00:06:52,345
Donc comment on dit
différents accessoires,

130
00:06:52,345 --> 00:06:54,554
c'est simplement 
une collection d'accessoires,

131
00:06:54,554 --> 00:06:57,266
un tableau dynamique d'accessoires.

132
00:06:57,266 --> 00:07:00,085
Et ceci introduit donc 
deux nouvelles classes.

133
00:07:00,085 --> 00:07:03,852
Une classe Mecanisme
et une classe Accessoire.

134
00:07:04,462 --> 00:07:07,534
L'aspect suivant,
les produits ont un prix.

135
00:07:07,534 --> 00:07:10,626
Donc ici tout simplement, 
on pourrait encapsuler un prix,

136
00:07:10,626 --> 00:07:13,968
naturellement représenté comme un double,

137
00:07:13,968 --> 00:07:17,172
mais la contrainte nous dit,
dont le calcul peut varier,

138
00:07:17,172 --> 00:07:20,652
ce qui montre que l'on va devoir 
calculer le prix,

139
00:07:20,652 --> 00:07:22,982
par exemple plus tard, 
on décidera que le prix des montres,

140
00:07:22,982 --> 00:07:26,576
c'est le prix de son mécanisme 
et la somme des prix de ses accessoires,

141
00:07:26,576 --> 00:07:30,197
et donc un prix ne devient plus une donnée
mais devient un traitement

142
00:07:30,197 --> 00:07:33,817
que l'on va représenter
sous la forme d'une méthode ici.

143
00:07:33,817 --> 00:07:36,978
Elle renvoie naturellement à un prix,
c'est naturellement un double,

144
00:07:36,978 --> 00:07:40,812
et ensuite on veut dire
que le prix peut varier,

145
00:07:40,812 --> 00:07:45,788
donc peut varier, ça veut dire que l'on
peut avoir un comportement polymorphique.

146
00:07:45,788 --> 00:07:50,402
Disons donc, que de base, 
on va retourner le prix de base,

147
00:07:50,402 --> 00:07:52,785
qui sera qualifié ici, de valeur de base,

148
00:07:52,785 --> 00:07:55,258
et donc ce que l'on avait 
appelé avant prix,

149
00:07:55,258 --> 00:07:58,037
va devenir un support, une valeur de base,

150
00:07:58,037 --> 00:08:01,659
pour par défaut, être le prix du produit,

151
00:08:01,659 --> 00:08:03,939
mais peut-être possiblement plus tard,

152
00:08:03,939 --> 00:08:06,051
dans d'autres sous-classes
de la classe Produit,

153
00:08:06,051 --> 00:08:08,945
être simplement utilisé 
dans des calculs différents

154
00:08:08,945 --> 00:08:13,209
du prix d'autres produits, sous-classes
dérivées de la classe Produit.

155
00:08:13,506 --> 00:08:16,012
De plus, tous les produits 
sont affichables,

156
00:08:16,012 --> 00:08:20,807
c'est-à-dire concrètement qu'on va ajouter 
une méthode toString polymorphique,

157
00:08:20,807 --> 00:08:23,849
qui sera capable de nous donner
une chaîne de caractère

158
00:08:23,849 --> 00:08:26,323
correspondant à l'affichage d'un produit.

159
00:08:26,653 --> 00:08:29,980
Les produits sont affichables
mais chacun à sa façon,

160
00:08:29,980 --> 00:08:33,225
c'est-à-dire que donc, 
on va avoir un affichage polymorphique,

161
00:08:33,225 --> 00:08:35,552
on laisse ça pour
la prochaine séquence vidéo,

162
00:08:35,552 --> 00:08:37,693
on y reviendra dans cette séquence vidéo,

163
00:08:37,693 --> 00:08:40,254
pour l'instant on se contente
de mettre juste un entête

164
00:08:40,254 --> 00:08:44,131
pour se souvenir que l'on veut redéfinir
la méthode toString pour les produits.

165
00:08:44,576 --> 00:08:47,324
Du côté des mécanismes et des accessoires,

166
00:08:47,324 --> 00:08:50,941
on a dit que les mécanismes
et les accessoires sont des produits.

167
00:08:50,941 --> 00:08:53,895
Donc on a ici aussi 
une relation d'héritage,

168
00:08:53,895 --> 00:08:56,937
la classe Accessoire 
hérite de la classe Produit,

169
00:08:56,937 --> 00:08:58,473
qui était définie précedemment,

170
00:08:58,473 --> 00:09:02,699
et la classe Mecanisme hérite 
également de la classe Produit.

171
00:09:03,779 --> 00:09:08,401
Au niveau des mécanismes, il existe
trois sortes de mécanismes,

172
00:09:08,401 --> 00:09:11,854
donc là aussi ces trois mécanismes 
sont des mécanismes bien sûr,

173
00:09:11,854 --> 00:09:15,633
donc nous avons mécanisme analogique
qui est un mécanisme,

174
00:09:15,633 --> 00:09:17,848
qui hérite de Mecanisme,

175
00:09:17,848 --> 00:09:20,676
mécanisme digital, 
qui hérite de mécanisme,

176
00:09:20,676 --> 00:09:24,029
et mécanisme double, 
qui hérite de mécanisme.

177
00:09:24,029 --> 00:09:27,231
Et enfin le dernier point, 
pour les mécanismes doubles,

178
00:09:27,231 --> 00:09:31,686
on supposera qu'il n'existe qu'une seule 
heure au niveau du mécanisme double,

179
00:09:31,686 --> 00:09:33,543
mais que les mécanismes doubles
se comportent

180
00:09:33,543 --> 00:09:36,777
comme des mécanismes analogiques,
et des mécanismes digitaux,

181
00:09:36,777 --> 00:09:39,147
ce que nous n'avons 
pas du tout traduit ici,

182
00:09:39,147 --> 00:09:42,447
qui va donc remettre bien sûr en cause
cette relation d'héritage,

183
00:09:42,447 --> 00:09:44,781
mais nous reviendrons sur ce point précis

184
00:09:44,781 --> 00:09:47,706
dans une vidéo spécifiquement
dédiée à cet aspect là.

185
00:09:48,219 --> 00:09:50,772
Voilà, ceci conclut cette 
première séquence vidéo

186
00:09:50,772 --> 00:09:54,691
de présentation générale et de 
modélisation orienté objet du problème.

187
00:09:54,691 --> 00:09:56,915
La prochaine séquence vidéo
va s'intéresser

188
00:09:56,915 --> 00:09:58,444
à l'affichage polymorphique

189
00:09:58,444 --> 00:10:00,217
et à remplir la classe produit.
