1
00:00:03,897 --> 00:00:05,529
Nous allons dans cette séquence-ci

2
00:00:05,529 --> 00:00:07,976
nous intéresser à un autre
constructeur particulier,

3
00:00:07,976 --> 00:00:09,298
le constructeur de copie.

4
00:00:09,298 --> 00:00:11,552
C'est-à-dire que nous allons
regarder ce qu'il se passe

5
00:00:11,552 --> 00:00:13,536
lorsqu'un objet est initialisé

6
00:00:13,536 --> 00:00:16,482
avec une copie d'un autre objet
de la même classe.

7
00:00:17,312 --> 00:00:20,156
JAVA offre en effet un moyen de créer
des copies d'instances,

8
00:00:20,156 --> 00:00:21,476
comme par exemple ici,

9
00:00:21,476 --> 00:00:25,017
où nous avons une première instance <i>r1</i>
de la classe <i>Rectangle</i>

10
00:00:25,017 --> 00:00:28,370
que nous initialisons
avec un appel ici au constructeur

11
00:00:28,370 --> 00:00:31,864
qui prend donc 2 valeurs,
ce qui nous donne donc le schéma suivant.

12
00:00:34,634 --> 00:00:39,505
Donc initialisée avec
les valeurs 12.3 et 24.5

13
00:00:39,505 --> 00:00:45,066
et où nous avons donc une seconde instance
<i>r2</i> de la classe <i>Rectangle</i>, qui elle,

14
00:00:45,066 --> 00:00:48,969
est initialisée donc avec une copie de <i>r1</i>.

15
00:00:50,239 --> 00:00:56,764
On va donc effectuer ici la copie
de la hauteur de <i>r1</i> dans <i>r2</i>

16
00:00:56,764 --> 00:01:00,135
et la copie de la largeur de <i>r1</i> dans <i>r2</i>.

17
00:01:00,135 --> 00:01:05,517
Mais on a bien que <i>r1</i> et <i>r2</i>
sont deux instances séparées ici,

18
00:01:05,517 --> 00:01:10,669
où simplement on a initialisé
<i>r2</i> avec une copie de <i>r1</i>.

19
00:01:10,669 --> 00:01:15,442
C'est le constructeur de copie
qui réalise ce type d'initialisation.

20
00:01:15,442 --> 00:01:19,081
Le constructeur de copie a donc pour but
d'initialiser une instance

21
00:01:19,081 --> 00:01:22,412
avec une copie d'une autre instance
de la même classe.

22
00:01:23,002 --> 00:01:26,716
Son entête est donc parfaitement définie
puisque c'est un constructeur.

23
00:01:26,716 --> 00:01:28,758
Donc il a le même nom
que le nom de la classe.

24
00:01:28,758 --> 00:01:32,138
Mais comme il reçoit
une autre instance de la même classe,

25
00:01:32,138 --> 00:01:36,011
sa liste de paramètres est réduite
à un seul paramètre,

26
00:01:36,011 --> 00:01:38,518
qui est une autre instance
de la même classe.

27
00:01:38,518 --> 00:01:42,129
Donc par exemple dans le cas
de notre classe <i>Rectangle</i>,

28
00:01:42,129 --> 00:01:45,919
on aurait ici un constructeur bien sûr
qui est toujours dans l'interface,

29
00:01:45,919 --> 00:01:48,771
de la classe <i>Rectangle</i>,
donc qui s'appelle <i>Rectangle</i>,

30
00:01:48,771 --> 00:01:52,526
mais qui reçoit comme unique
autre paramètre, un autre rectangle,

31
00:01:52,526 --> 00:01:54,964
autre instance de la classe <i>Rectangle</i> ;

32
00:01:54,964 --> 00:01:56,151
et qui donc, par exemple,

33
00:01:56,151 --> 00:01:59,901
serait naturellement
la copie de la hauteur

34
00:01:59,901 --> 00:02:04,579
de l'autre rectangle reçu en paramètre,
dans notre propre hauteur

35
00:02:04,579 --> 00:02:07,588
de l'instance qu'on est
en train d'initialiser.

36
00:02:07,588 --> 00:02:12,543
Et puis copie de la largeur
de l'autre rectangle, dans la largeur

37
00:02:12,543 --> 00:02:14,865
de l'instance qu'on est
en train d'initialiser.

38
00:02:15,785 --> 00:02:20,396
Si je reprends donc l'exemple précédent
où nous avions un rectangle <i>r1</i>

39
00:02:21,086 --> 00:02:26,315
avec une hauteur de 12.3
et une largeur de 24.5,

40
00:02:27,435 --> 00:02:29,535
et un rectangle <i>r2</i>

41
00:02:33,315 --> 00:02:36,065
initialisé avec le constructeur de copie.

42
00:02:39,195 --> 00:02:45,075
Dans cette ligne donc on a bien appel
à ce constructeur de copie.

43
00:02:45,075 --> 00:02:47,769
Donc ici c'est bien la construction de <i>r2</i>

44
00:02:47,769 --> 00:02:50,385
qui va lancer l'appel
au constructeur de copie

45
00:02:50,385 --> 00:02:53,021
en passant comme paramètre <i>r1</i>,

46
00:02:53,021 --> 00:02:58,066
qui est donc le paramètre
ici <i>autreRectangle</i>.

47
00:02:58,066 --> 00:03:00,379
Ici donc dans ce cas-là, c'est bien <i>r1</i>

48
00:03:00,379 --> 00:03:04,483
qui est passé au constructeur
de copie de <i>r2</i>.

49
00:03:04,483 --> 00:03:08,490
Et donc ce qui se passe,
c'est qu'on a ici la hauteur de <i>r2</i>

50
00:03:09,230 --> 00:03:14,505
qui va recevoir la hauteur de <i>r1</i> en copie.

51
00:03:15,125 --> 00:03:20,023
Donc ici, ce qu'il va se passer
à cette ligne, c'est qu'on va recopier

52
00:03:20,903 --> 00:03:25,783
la hauteur de <i>r1</i> dans la hauteur de <i>r2</i>.

53
00:03:26,573 --> 00:03:30,076
Et dans la ligne suivante,
ce que l'on fait,

54
00:03:30,076 --> 00:03:31,786
c'est que l'on recopie donc la largeur,

55
00:03:31,786 --> 00:03:35,760
ici c'est largeur du rectangle
qu'on est en train de construire, de <i>r2</i>.

56
00:03:35,760 --> 00:03:40,905
Donc ici c'est bien la largeur de <i>r2</i>
qui reçoit la largeur de <i>r1</i>.

57
00:03:41,685 --> 00:03:48,647
Et donc ici on va recopier la largeur
de <i>r1</i> dans celle de <i>r2</i>.

58
00:03:48,967 --> 00:03:50,793
A noter que contrairement
à d'autres langages,

59
00:03:50,793 --> 00:03:54,141
java ne fournit pas par défaut
une version du constructeur de copie.

60
00:03:54,141 --> 00:03:56,153
C'est-à-dire que si
on ne fait rien de particulier,

61
00:03:56,153 --> 00:03:58,791
on n'a pas le droit comme ça,
de faire des copies.

62
00:03:58,791 --> 00:04:01,256
Ce constructeur ici n'existe pas,

63
00:04:01,256 --> 00:04:04,794
ce qu'il faut faire c'est, si on veut
faire une construction de copie,

64
00:04:04,794 --> 00:04:07,589
explicitement donc, l'écrire.

65
00:04:08,679 --> 00:04:11,815
Seconde remarque, le constructeur de copie
n'est pas la seule façon

66
00:04:11,815 --> 00:04:13,092
de faire des copies en JAVA.

67
00:04:13,092 --> 00:04:15,983
Il existe une façon qui est souvent
d'ailleurs plus utilisée,

68
00:04:15,983 --> 00:04:19,293
qui est donc la méthode <i>clone</i>
comme dans par exemple ici,

69
00:04:19,573 --> 00:04:24,806
on va cloner, avec un appel
à la méthode <i>clone</i>, l'instance <i>r1</i>,

70
00:04:24,806 --> 00:04:28,604
qu'on avait donc au préalable initialisée
avec le constructeur usuel,

71
00:04:28,604 --> 00:04:34,150
la cloner dans <i>r2</i> lors ici,
de la déclaration initialisation,

72
00:04:34,150 --> 00:04:37,221
de l'instance <i>r2</i> de la classe <i>Rectangle</i>.

73
00:04:37,221 --> 00:04:40,806
Cette méthode <i>clone</i> sera détaillée
plus tard dans d'autres séquences vidéos,

74
00:04:40,806 --> 00:04:42,810
dans des semaines qui vont venir.

75
00:04:42,950 --> 00:04:46,795
Voilà ce qui conclut cette courte séquence
sur le constructeur de copie en JAVA.
