1
00:00:05,250 --> 00:00:08,909
Dans la vidéo précédente, vous aviez
vu comment écrire la boucle principale

2
00:00:08,909 --> 00:00:12,379
qui permet aux joueurs
de jouer chacun leur tour.

3
00:00:12,380 --> 00:00:13,769
Il manquait juste

4
00:00:13,769 --> 00:00:16,367
la condition d'arrêt, c'est-à-dire

5
00:00:16,367 --> 00:00:18,158
qu'il manquait ce qu'il faut écrire

6
00:00:18,158 --> 00:00:20,969
ici pour que la boucle s'arrête

7
00:00:20,969 --> 00:00:24,259
quand un des deux jours a gagné 
ou quand la grille est pleine.

8
00:00:24,259 --> 00:00:26,899
Alors pour l'instant 
nous allons nous concentrer

9
00:00:26,899 --> 00:00:30,060
sur le cas où la boucle doit
s'arrêter

10
00:00:30,059 --> 00:00:31,739
quand un des deux joueurs a gagné.

11
00:00:31,739 --> 00:00:33,339
Et pour cela je vais introduire

12
00:00:33,340 --> 00:00:37,040
simplement une nouvelle fonction que je
vais appeler « est_ce_gagne »

13
00:00:37,040 --> 00:00:39,330
et que je vais appeler de cette façon-ci :

14
00:00:39,329 --> 00:00:43,369
je vais mettre le résultat de ma
fonction « est_ce_gagne » dans une variable

15
00:00:43,369 --> 00:00:44,599
que je vais appeler « gagne » ;

16
00:00:44,600 --> 00:00:46,919
ce sera une variable de type booleéen.

17
00:00:46,919 --> 00:00:49,689
« gagne » va recevoir

18
00:00:49,689 --> 00:00:52,689
la valeur de retour de ma fonction
« est_ce_gagne ».

19
00:00:52,689 --> 00:00:55,169
Ma fonction « est_ce_gagne »
va prendre

20
00:00:55,170 --> 00:00:57,329
en argument la grille

21
00:00:57,329 --> 00:00:59,509
et la couleur du joueur

22
00:00:59,509 --> 00:01:00,810
qui vient juste de jouer.

23
00:01:00,810 --> 00:01:04,310
Alors il faut que je déclare également
ma variable « gagne » ;

24
00:01:04,310 --> 00:01:07,000
et comme je dois m'en servir

25
00:01:07,000 --> 00:01:12,469
dans la condition d'arrêt, il faut que
je déclare « gagne » en dehors de la boucle,

26
00:01:12,469 --> 00:01:15,059
c'est-à-dire quelque part ici.
Et maintenant je peux utiliser

27
00:01:15,060 --> 00:01:18,560
la variable « gagne » 
dans ma condition d'arrêt.

28
00:01:18,560 --> 00:01:20,430
Et ça va s'écrire très simplement

29
00:01:20,430 --> 00:01:21,789
de la façon suivante :

30
00:01:21,789 --> 00:01:23,769
on va répéter la boucle

31
00:01:23,770 --> 00:01:26,960
tant que le joueur n'a pas gagné.

32
00:01:26,959 --> 00:01:31,250
Il nous faut donc écrire cette fonction
« est_ce_gagne », ce qui est sans doute

33
00:01:31,250 --> 00:01:34,069
la partie la plus difficile
de notre programme.

34
00:01:34,069 --> 00:01:34,899
Alors comment

35
00:01:34,900 --> 00:01:36,609
allons-nous nous y prendre ?

36
00:01:36,609 --> 00:01:40,120
Ayant en fait plusieurs façons 
d'écrire la fonction « est_ce_gagne »,

37
00:01:40,120 --> 00:01:43,990
la stratégie que nous vous proposons 
est la suivante :

38
00:01:43,989 --> 00:01:46,929
nous allons parcourir la grille
ligne par ligne

39
00:01:46,930 --> 00:01:49,179
et colonne par colonne

40
00:01:49,179 --> 00:01:52,599
jusqu'à trouver
un pion de la couleur

41
00:01:52,599 --> 00:01:53,998
du joueur qui vient de jouer.

42
00:01:53,998 --> 00:01:58,379
Disons par exemple que c'est le joueur
rouge qui vient de jouer

43
00:01:58,379 --> 00:02:00,549
et que l'on trouve ce pion-ci ;

44
00:02:00,549 --> 00:02:03,379
nous allons partir de ce pion

45
00:02:03,379 --> 00:02:07,759
et parcourir la grille 
dans plusieurs directions

46
00:02:07,759 --> 00:02:11,159
horizontalement, 
verticalement et en diagonale

47
00:02:11,158 --> 00:02:14,229
pour compter combien il y a de pions,

48
00:02:14,229 --> 00:02:16,048
à partir de ce pion-ci,

49
00:02:16,049 --> 00:02:17,628
qui sont de la même couleur.

50
00:02:17,628 --> 00:02:20,598
Si par exemple on considère 
cette direction-ci,

51
00:02:20,598 --> 00:02:22,279
on arrive à compter

52
00:02:22,279 --> 00:02:25,560
1, 2, 3, 4 pions rouges,

53
00:02:25,560 --> 00:02:27,988
et donc on sait que
le joueur a gagné.

54
00:02:27,989 --> 00:02:30,920
Si en revanche on a parcouru 
toute la grille

55
00:02:30,919 --> 00:02:33,469
et qu'on a toujours compté 
moins que 4 pions,

56
00:02:33,469 --> 00:02:36,258
on sait que le joueur n'a pas gagné.

57
00:02:36,258 --> 00:02:39,329
On peut en fait remarquer qu'on n'est
pas obligé de considérer

58
00:02:39,329 --> 00:02:41,030
toutes les directions et en fait

59
00:02:41,030 --> 00:02:45,240
nous allons nous contenter de compter
les pions dans quatre directions seulement.

60
00:02:45,240 --> 00:02:47,779
Et nous allons choisir par exemple

61
00:02:48,049 --> 00:02:49,488
vers le haut et la droite,

62
00:02:49,818 --> 00:02:50,948
vers la droite,

63
00:02:51,449 --> 00:02:52,969
vers le bas et la droite,

64
00:02:52,968 --> 00:02:54,028
et vers le bas.

65
00:02:54,028 --> 00:02:55,060
Alors pourquoi

66
00:02:55,060 --> 00:02:56,479
on peut se contenter

67
00:02:56,479 --> 00:02:58,659
de considérer ces quatre directions ?

68
00:02:58,658 --> 00:03:01,229
J'ai dit que nous allions
parcourir la grille

69
00:03:01,229 --> 00:03:02,698
ligne par ligne

70
00:03:02,699 --> 00:03:04,679
et colonne par colonne.

71
00:03:04,679 --> 00:03:08,449
Supposons encore une fois que 
c'est le joueur rouge qui vient de jouer.

72
00:03:08,449 --> 00:03:10,509
Le premier pion que nous allons trouver

73
00:03:10,509 --> 00:03:11,918
est celui-ci.

74
00:03:11,919 --> 00:03:16,639
Nous allons compter tout d'abord les pions,
dans cette direction-ci.

75
00:03:16,639 --> 00:03:19,469
Nous n'allons compter qu'un seul pion,
celui-ci.

76
00:03:19,468 --> 00:03:23,338
Même chose pour cette direction-ci 
et cette direction-ci :

77
00:03:23,338 --> 00:03:25,779
il n'y a qu'un seul pion 
dans ces trois directions.

78
00:03:25,779 --> 00:03:30,829
Dans cette direction-ci, il y a deux pions,
mais ce n'est pas suffisant pour gagner ;

79
00:03:30,829 --> 00:03:33,709
et nous allons continuer 
à parcourir la grille.

80
00:03:33,709 --> 00:03:35,509
Le prochain pion rouge

81
00:03:35,509 --> 00:03:36,508
que nous allons trouver,

82
00:03:36,508 --> 00:03:39,308
est celui-ci, dans cette direction-ci

83
00:03:39,308 --> 00:03:41,748
et cette direction-ci,
nous allons compter

84
00:03:41,748 --> 00:03:45,679
que deux pions ; ce n'est pas suffisant
pour gagner ; dans cette direction-ci

85
00:03:45,679 --> 00:03:48,919
et cette direction-ci, nous allons
compter qu'un seul pion,

86
00:03:48,919 --> 00:03:51,528
ce n'est toujours pas suffisant
pour gagner.

87
00:03:51,528 --> 00:03:54,360
Donc nous allons continuer 
à parcourir la grille

88
00:03:54,360 --> 00:03:56,688
jusqu'à atteindre ce pion-ci.

89
00:03:56,688 --> 00:03:58,519
Nous allons compter les pions

90
00:03:58,519 --> 00:04:00,058
dans cette direction-ci

91
00:04:00,058 --> 00:04:04,288
et nous allons compter cette fois
1, 2, 3, 4 pions

92
00:04:04,288 --> 00:04:07,578
et on sait que le joueur rouge a gagné.

93
00:04:07,579 --> 00:04:11,829
Pour prouver que le joueur rouge
a bien aligné ses quatre pions,

94
00:04:11,829 --> 00:04:17,269
on peut donc soit partir de ce pion-ci
et aller dans cette direction-ci

95
00:04:17,269 --> 00:04:21,979
soit partir de ce pion là et
aller dans cette direction-là.

96
00:04:21,979 --> 00:04:26,128
On est donc pas obligé de considérer 
ces deux directions.

97
00:04:26,128 --> 00:04:28,945
On peut se contenter d'une seule.
Et c'est la même chose

98
00:04:28,945 --> 00:04:31,262
pour les six autres directions.

99
00:04:31,442 --> 00:04:34,289
On va regarder uniquement dans cette
direction-ci

100
00:04:34,289 --> 00:04:36,258
et pas dans cette direction-ci

101
00:04:36,259 --> 00:04:37,960
dans cette direction-ci

102
00:04:37,959 --> 00:04:39,228
et pas celle-ci

103
00:04:39,228 --> 00:04:42,068
dans cette direction-ci 
et pas celle-ci.

104
00:04:42,069 --> 00:04:45,949
Il nous reste donc que
quatre directions à considérer.

105
00:04:46,399 --> 00:04:50,618
Il ne nous reste plus qu'à coder cette
stratégie en écrivant la fonction « est_gagne ».

106
00:04:50,618 --> 00:04:53,449
Alors je rappelle qu'on va appeler la
fonction « est_ce_gagne »

107
00:04:53,449 --> 00:04:54,949
de la façon suivante ;

108
00:04:54,949 --> 00:04:56,699
c'est-à-dire qu'on va mettre

109
00:04:56,699 --> 00:05:01,679
la valeur de retour de la fonction
dans une variable de type booléen

110
00:05:01,679 --> 00:05:05,279
et que la fonction atteint la grille
en argument

111
00:05:05,279 --> 00:05:06,870
et la couleur du joueur

112
00:05:06,870 --> 00:05:07,848
qui vient jouer ;

113
00:05:07,848 --> 00:05:13,198
l'en tête de cette fonction
va tout simplement être celui-ci ;

114
00:05:13,198 --> 00:05:16,480
le résultat sera de type booléen ;

115
00:05:16,480 --> 00:05:19,018
et on va passer la grille

116
00:05:19,018 --> 00:05:22,749
par référence constante, puisque la
grille n'a pas besoin d'être modifiée

117
00:05:22,749 --> 00:05:24,569
dans cette fonction « est_ce_gagne ».

118
00:05:24,569 --> 00:05:28,609
Et le deuxième paramètre sera
de type « Couleur ».

119
00:05:29,569 --> 00:05:33,359
Notre stratégie consiste
à parcourir la grille ;

120
00:05:33,360 --> 00:05:34,699
ce qu'on va faire

121
00:05:34,699 --> 00:05:36,680
à l'aide de deux « boucles for ».

122
00:05:37,019 --> 00:05:39,399
Et comme on a besoin 
des coordonnées du pion,

123
00:05:39,399 --> 00:05:43,648
on va utiliser deux « boucles for classiques »
qui vont s'écrire de la façon suivante.

124
00:05:45,259 --> 00:05:47,920
Les variables ligne et colonne

125
00:05:47,920 --> 00:05:51,100
vont contenir les coordonnées du pion
à partir duquel

126
00:05:51,100 --> 00:05:54,850
on va compter le nombre de pions alignés.
Et pour simplifier un peu

127
00:05:54,850 --> 00:05:57,689
l'écriture de code, je vais introduire

128
00:05:57,689 --> 00:06:00,218
une variable locale,

129
00:06:00,218 --> 00:06:02,858
que je vais appeler « couleur_case »,

130
00:06:02,858 --> 00:06:06,148
pour contenir la couleur de ce pion.

131
00:06:06,668 --> 00:06:09,598
Si la couleur de la case est la même

132
00:06:09,598 --> 00:06:12,550
que la couleur du joueur
qui vient de jouer,

133
00:06:12,550 --> 00:06:16,930
alors je vais compter les pions
alignés à partir de cette case

134
00:06:16,930 --> 00:06:18,418
dans les quatre directions

135
00:06:18,418 --> 00:06:19,478
qui nous intéressent.

136
00:06:19,478 --> 00:06:22,008
Comme c'est un peu compliqué de
compter les pions alignés,

137
00:06:22,009 --> 00:06:25,369
je vais introduire une fonction que je
vais appeler « compte ».

138
00:06:25,369 --> 00:06:28,189
De quels arguments la fonction « compte »
a-t-elle besoin ?

139
00:06:28,189 --> 00:06:31,189
Tout d'abord, bien sûr de la grille,

140
00:06:31,599 --> 00:06:36,610
des coordonnées de la case à partir de
laquelle on va compter les pions alignés.

141
00:06:36,610 --> 00:06:37,949
Donc c'est tout simplement

142
00:06:37,949 --> 00:06:41,038
les variables « ligne » et « colonne »;

143
00:06:41,528 --> 00:06:44,259
et puis également de la direction
dans laquelle

144
00:06:44,259 --> 00:06:45,728
on veut compter les pions.

145
00:06:45,728 --> 00:06:47,588
Alors comment peut-on définir

146
00:06:47,588 --> 00:06:48,719
cette direction ?

147
00:06:48,720 --> 00:06:51,370
Supposons par exemple que je vais
compter les pions

148
00:06:51,370 --> 00:06:54,919
en diagonale vers le haut 
et vers la droite.

149
00:06:54,919 --> 00:06:58,918
Alors dans ce cas pour passer
d'une case à l'autre

150
00:06:58,918 --> 00:07:02,088
il va falloir soustraire 1 à la ligne

151
00:07:02,088 --> 00:07:05,678
et ajouter 1 à la colonne.

152
00:07:05,680 --> 00:07:11,449
Et donc je vais utiliser ces deux valeurs-là,
ce -1 et ce +1,

153
00:07:11,449 --> 00:07:13,879
en arguments à ma fonction « compte »

154
00:07:13,879 --> 00:07:19,209
pour dire que je vais aller
vers le haut et vers la droite.

155
00:07:19,669 --> 00:07:22,430
Je vais faire renvoyer 
à ma fonction « compte »

156
00:07:22,430 --> 00:07:24,379
le nombre de pions alignés

157
00:07:24,379 --> 00:07:25,830
et de la même couleur ;

158
00:07:25,829 --> 00:07:29,078
et je sais que 
si ce nombre de pions alignés

159
00:07:29,078 --> 00:07:30,848
est supérieur ou égal à 4,

160
00:07:30,848 --> 00:07:32,478
alors le joueur a gagné.

161
00:07:32,478 --> 00:07:35,538
Alors pourquoi supérieur ou égal à 4

162
00:07:35,538 --> 00:07:39,219
plutôt que simplement égal à 4 ?
C'est parce que bien sûr

163
00:07:39,220 --> 00:07:42,330
on peut aligner plus que quatre pions.

164
00:07:42,329 --> 00:07:45,760
Alors évidemment il faut que je considère
aussi les trois autres directions

165
00:07:45,760 --> 00:07:49,038
et ça va s'écrire de la façon suivante

166
00:07:49,038 --> 00:07:51,868
pour compter les pions horizontalement

167
00:07:51,869 --> 00:07:55,429
Eh bien je ne vais pas changer la ligne ;
c'est pour ça que j'utilise 0

168
00:07:55,429 --> 00:07:56,729
en argument ici.

169
00:07:56,728 --> 00:07:58,188
Par contre, la colonne

170
00:07:58,189 --> 00:08:01,179
va changer ; je vais passer à
la colonne suivante.

171
00:08:01,179 --> 00:08:04,280
C'est pour ça que j'utilise
la valeur +1 en dernier argument.

172
00:08:04,280 --> 00:08:05,428
Ensuite,

173
00:08:06,718 --> 00:08:08,899
pour compter les pions en diagonale

174
00:08:08,899 --> 00:08:09,968
vers le bas

175
00:08:09,968 --> 00:08:11,139
et la droite,

176
00:08:11,139 --> 00:08:14,318
eh bien, pour passer d'une case à l'autre

177
00:08:14,998 --> 00:08:17,838
je vais ajouter 1 à la ligne ;

178
00:08:18,458 --> 00:08:20,838
c'est pour ça que j' utilise 
la valeur +1 ici.

179
00:08:20,838 --> 00:08:25,269
Et puis j'ajoute également 1
à la colonne ;

180
00:08:25,269 --> 00:08:28,770
et c'est pour ça que j'utilise la
valeur +1 ici.

181
00:08:28,769 --> 00:08:31,419
Enfin, il nous reste une dernière direction

182
00:08:32,789 --> 00:08:36,168
pour compter les pions 
verticalement vers le bas

183
00:08:36,168 --> 00:08:39,570
je vais passer d'une case à l'autre

184
00:08:39,570 --> 00:08:41,356
en ajoutant 1 à la ligne

185
00:08:43,142 --> 00:08:44,930
c'est pour ça que j'ai la valeur +1 ici.

186
00:08:44,930 --> 00:08:51,080
Par contre, la colonne ne va pas changer 
et j'utilise la valeur 0 ici.

187
00:08:51,080 --> 00:08:54,059
Si l'une de ces quatre conditions 
est vraie,

188
00:08:54,059 --> 00:08:56,350
alors je sais que le joueur a gagné.

189
00:08:56,350 --> 00:08:59,230
Alors il suffit qu'une de ces conditions
soit vraie, 

190
00:08:59,230 --> 00:09:02,309
et c'est pour ça que j'ai utilisé « or » ici.

191
00:09:02,309 --> 00:09:05,879
Et dans ce cas je vais faire
« envoyer true » à la fonction.

192
00:09:05,879 --> 00:09:09,618
Je vais fermer les accolades que 
j'avais ouvertes précédemment.

193
00:09:11,018 --> 00:09:12,730
Et si j'arrive à ce point-ci 
de ma fonction,

194
00:09:12,730 --> 00:09:16,590
ça veut dire que j'ai parcouru
toute la grille

195
00:09:16,590 --> 00:09:18,629
sans jamais passer par ici,

196
00:09:18,629 --> 00:09:20,879
puisque sinon je serais déjà sorti 
de ma fonction.

197
00:09:20,879 --> 00:09:22,850
Et je sais que dans ce cas-là,

198
00:09:22,850 --> 00:09:24,470
eh bien, je n'ai pas trouvé

199
00:09:24,470 --> 00:09:28,500
au moins quatre pions alignés.
Et je sais que le joueur n'a pas encore gagné.

200
00:09:28,500 --> 00:09:31,580
Donc je fais « renvoyer false » 
à ma fonction.

201
00:09:32,120 --> 00:09:35,260
Mais évidemment il faut encore écrire
la fonction « compte ».

202
00:09:35,260 --> 00:09:38,210
Cette fonction « compte » on va l'appeler
par exemple ainsi ;

203
00:09:38,210 --> 00:09:42,080
c'est-à-dire qu'elle va renvoyer
le nombre de pions alignés

204
00:09:42,080 --> 00:09:46,420
qui est forcément un nombre positif ou nul.
Donc, c'est pour ça que je vais utiliser

205
00:09:46,420 --> 00:09:51,330
le type « unsigned int » pour définir 
le type de résultat de ma fonction.

206
00:09:51,330 --> 00:09:53,750
Le premier paramètre de ma
fonction est donc la grille

207
00:09:53,750 --> 00:09:55,539
que je vais passer encore une fois

208
00:09:55,539 --> 00:09:57,219
par référence constante.

209
00:09:57,220 --> 00:09:59,829
Les deux paramètres suivants sont
simplement

210
00:09:59,828 --> 00:10:01,489
la ligne et la colonne

211
00:10:01,490 --> 00:10:04,590
de la case de départ à partir de
laquelle je vais compter les pions

212
00:10:04,590 --> 00:10:06,639
et les deux derniers paramètres

213
00:10:06,639 --> 00:10:07,769
de ma fonction

214
00:10:07,769 --> 00:10:11,809
sont les deux valeurs qui vont définir
la direction et qui peuvent être

215
00:10:11,809 --> 00:10:16,529
des entiers négatifs ou positifs.
Donc cette fois-ci je vais utiliser le type « int »

216
00:10:16,529 --> 00:10:18,635
Et je vais appeler 
ces paramètres « dir_ligne »

217
00:10:18,635 --> 00:10:22,711
et « dir_colonne » 
pour signaler que c'est deux valeurs

218
00:10:22,711 --> 00:10:24,839
qui vont correspondre 
aux lignes et à la colonne

219
00:10:24,839 --> 00:10:26,830
pour une direction donnée.

220
00:10:26,830 --> 00:10:29,570
Je vais me servir d'une variable compteur

221
00:10:29,570 --> 00:10:34,810
initialisée à 0 et du même type que la
valeur de résultats de la fonction « compte »

222
00:10:34,810 --> 00:10:36,888
pour compter le nombre
de pions alignés.

223
00:10:36,888 --> 00:10:39,800
Que doit faire la fonction « compte » 
exactement ?

224
00:10:39,800 --> 00:10:43,993
Elle doit partir de la case 
de coordonnées « ligne_depart »

225
00:10:43,993 --> 00:10:46,006
et « colonne_depart ».

226
00:10:47,506 --> 00:10:50,909
Et elle doit parcourir la grille
dans la direction donnée

227
00:10:51,539 --> 00:10:56,149
tant que l'on trouve des pions 
de la même couleur que le pion

228
00:10:56,149 --> 00:10:57,776
qui est en « ligne_depart »

229
00:10:57,776 --> 00:10:59,403
« colonne_depart ».

230
00:10:59,403 --> 00:11:01,030
Alors comment on va faire ça ?

231
00:11:01,029 --> 00:11:05,980
On va utiliser les variables 
que je vais appeler « ligne » et « colonne »,

232
00:11:05,980 --> 00:11:08,660
qui seront respectivement initialisées

233
00:11:08,659 --> 00:11:10,019
à « ligne_depart »

234
00:11:10,019 --> 00:11:11,758
et « colonne_depart ».

235
00:11:11,758 --> 00:11:13,230
Et à chaque tour de boucle

236
00:11:13,230 --> 00:11:15,590
pour passer d'une case à l'autre,

237
00:11:15,590 --> 00:11:19,520
je vais ajouter « dir_ligne » 
à la variable ligne

238
00:11:20,610 --> 00:11:23,420
et « dir_colonne » à la variable colonne.

239
00:11:25,350 --> 00:11:27,139
Comme on va parcourir la grille

240
00:11:27,139 --> 00:11:30,289
tant qu'on trouve des pions de la même
couleur que le pion qui est

241
00:11:30,289 --> 00:11:30,846
en « ligne_depart »

242
00:11:30,846 --> 00:11:31,703
« colonne_depart »,

243
00:11:31,703 --> 00:11:33,670
eh bien on va utiliser une « boucle while » !

244
00:11:33,669 --> 00:11:36,270
Et à chaque tour de la « boucle while »

245
00:11:36,270 --> 00:11:39,919
on aura trouvé un nouveau pion de
la même couleur

246
00:11:39,919 --> 00:11:42,750
et on va incrémenter la variable « compteur ».

247
00:11:42,750 --> 00:11:46,820
Comment tout cela va-t-il s'écrire ?
Eh bien on va commencer par déclarer

248
00:11:46,820 --> 00:11:49,690
les variables ligne et colonne,

249
00:11:49,690 --> 00:11:52,226
initialisées à « ligne_depart »

250
00:11:52,226 --> 00:11:54,762
et « colonne_depart ».

251
00:11:54,762 --> 00:11:57,299
On va donc utiliser une « boucle while »  
dont la condition d'arrêt

252
00:11:57,299 --> 00:11:59,858
dépend de la couleur du pion
en ligne et colonne.

253
00:11:59,858 --> 00:12:02,600
Et on va continuer tant que la
couleur de ce pion est la même

254
00:12:02,600 --> 00:12:05,239
que la couleur du pion qui est
en « ligne_depart »

255
00:12:05,239 --> 00:12:07,128
« colonne_depart ».

256
00:12:07,688 --> 00:12:10,519
A chaque tour de boucle, on va donc 
incrémenter la variable « compteur »

257
00:12:10,519 --> 00:12:11,309
puisqu'on a trouvé

258
00:12:11,309 --> 00:12:13,919
un nouveau pion de la même couleur 
que le premier.

259
00:12:13,919 --> 00:12:15,600
Et puis on va ajouter

260
00:12:16,240 --> 00:12:17,370
« dir_ligne »

261
00:12:17,370 --> 00:12:18,640
et « dir_colonne »

262
00:12:18,930 --> 00:12:20,650
à ligne et colonne.

263
00:12:21,750 --> 00:12:24,070
Notez au passage que j'ai ajouté 
des espaces ici

264
00:12:24,070 --> 00:12:28,710
et ici pour aligner les signes = et +
sur ces deux lignes,

265
00:12:28,710 --> 00:12:30,679
ça rend le code plus clair

266
00:12:30,678 --> 00:12:32,379
ça met en évidence que

267
00:12:32,379 --> 00:12:36,010
les variables ligne et colonne
sont de même nature.

268
00:12:36,309 --> 00:12:39,310
Quand on sort de la boucle, 
c'est qu'on a trouvé un pion

269
00:12:39,310 --> 00:12:40,428
qui n'était pas de la bonne couleur

270
00:12:40,428 --> 00:12:43,679
et on peut renvoyer la valeur contenue
dans la variable compteur.

271
00:12:43,679 --> 00:12:45,878
Sauf que ce n'est pas tout à fait correct

272
00:12:45,879 --> 00:12:47,670
et j'espère que vous voyez pourquoi

273
00:12:47,669 --> 00:12:49,490
à ce stade,

274
00:12:49,490 --> 00:12:51,299
comme pour la fonction « joue »

275
00:12:51,299 --> 00:12:54,389
si on ajoute pas de conditions à notre
« boucle while »,

276
00:12:54,389 --> 00:12:57,640
il se peut très bien qu'on sorte du
tableau « grille ».

277
00:12:58,070 --> 00:13:02,890
Comme pour la dernière version
alternative de la fonction « joue »

278
00:13:02,889 --> 00:13:04,659
je vais utiliser la même solution.

279
00:13:04,659 --> 00:13:08,059
Et je vais rajouter un test sur
la variable ligne

280
00:13:08,059 --> 00:13:12,259
pour vérifier qu'elle est bien
inférieure à la taille de « grille ».

281
00:13:12,289 --> 00:13:15,529
Et la même chose 
pour la variable colonne.

282
00:13:16,080 --> 00:13:19,879
Pour finir, je vais revenir sur la fonction
« est_ce_gagne » pour faire remarquer que

283
00:13:19,879 --> 00:13:22,299
si la ligne de la case de départ

284
00:13:22,299 --> 00:13:25,289
a pour indice 0, 1, ou 2,

285
00:13:25,289 --> 00:13:28,019
eh bien ce n'est pas la peine de chercher

286
00:13:28,019 --> 00:13:30,559
dans cette direction-ci !
Par exemple,

287
00:13:30,559 --> 00:13:32,308
puisqu'on sait déjà que

288
00:13:32,308 --> 00:13:36,309
le joueur n'aura pas pu aligner quatre
pions dans cette direction-là

289
00:13:36,309 --> 00:13:38,839
on peut aligner au maximum

290
00:13:38,840 --> 00:13:42,289
deux / trois pions si on part 
de la ligne numéro 2.

291
00:13:43,149 --> 00:13:44,798
Même chose quand on part

292
00:13:44,798 --> 00:13:46,489
du bord droit de la grille

293
00:13:46,489 --> 00:13:48,930
et qu'on compte le nombre de pions 
vers la droite

294
00:13:48,929 --> 00:13:51,429
ou quand on part du bas de la grille

295
00:13:51,429 --> 00:13:54,189
et qu'on compte 
le nombre de pions vers le bas.

296
00:13:54,189 --> 00:13:57,329
Donc la fonction « est_ce_gagne » fait
plus d'opérations que nécessaire

297
00:13:57,330 --> 00:13:59,990
et je vais ajouter des conditions 
pour éviter de compter les pions

298
00:13:59,990 --> 00:14:03,949
quand on est sûr qu'il n'y aura pas 
au moins quatre pions alignés.

299
00:14:03,949 --> 00:14:06,409
Alors, ça va s'écrire 
de la façon suivante :

300
00:14:06,409 --> 00:14:10,869
donc on considère la direction en
diagonale vers le haut et la droite

301
00:14:10,869 --> 00:14:15,079
et pour qu'il y ait une chance
d'avoir au moins quatre pions alignés,

302
00:14:15,079 --> 00:14:16,750
il faut donc que la ligne

303
00:14:16,750 --> 00:14:18,940
soit supérieure ou égale à 3

304
00:14:18,940 --> 00:14:21,690
et que la colonne ne soit pas trop grande

305
00:14:21,690 --> 00:14:23,708
et vous pourrez vérifier qu'en fait

306
00:14:23,708 --> 00:14:25,769
la colonne doit être inférieure

307
00:14:25,769 --> 00:14:27,960
au nombre de colonnes moins 4,

308
00:14:27,960 --> 00:14:29,250
ça va s'écrire

309
00:14:29,250 --> 00:14:30,389
de la façon suivante.

310
00:14:30,389 --> 00:14:34,780
Dans le cas où on cherche
les pions alignés horizontalement

311
00:14:34,780 --> 00:14:38,030
il suffit d'avoir un test sur la colonne,

312
00:14:38,030 --> 00:14:41,039
il sera le même que précédemment.

313
00:14:41,039 --> 00:14:43,740
Le test pour la direction en diagonale

314
00:14:43,740 --> 00:14:45,330
vers le bas à la droite

315
00:14:45,330 --> 00:14:48,190
va s'écrire de cette façon-ci.

316
00:14:48,190 --> 00:14:52,150
Cette fois-ci je vérifie que la ligne
n'est pas trop grande

317
00:14:52,150 --> 00:14:54,129
et que la colonne non plus.

318
00:14:54,129 --> 00:14:56,820
Dans le cas où on compte 
les pions vers le bas,

319
00:14:56,820 --> 00:15:00,168
il suffit de vérifier que la ligne 
n'est pas trop grande.

320
00:15:02,008 --> 00:15:05,629
Maintenant vous pouvez remarquer que 
j'ai introduit plusieurs répétitions

321
00:15:05,629 --> 00:15:09,779
puisque cette expression apparaît
ici, ici et ici.

322
00:15:09,799 --> 00:15:13,079
Et celle-ci apparaît également ici.

323
00:15:13,080 --> 00:15:16,430
Alors, pour éviter ça, je vais introduire
deux constantes

324
00:15:16,430 --> 00:15:19,388
qui vont contenir les valeurs 
de ces expressions.

325
00:15:19,388 --> 00:15:21,370
Ça va s'écrire de cette façon

326
00:15:21,370 --> 00:15:24,159
je vais appeler mes constantes
« ligne_max »

327
00:15:24,159 --> 00:15:26,019
et « colonne_max »

328
00:15:26,019 --> 00:15:27,559
et je vais les utiliser

329
00:15:27,559 --> 00:15:30,799
là où j'ai utilisé 
mes expressions précédentes.

330
00:15:36,129 --> 00:15:39,539
Voilà ! Cette fois-ci c'était vraiment la
version finale de nos fonctions

331
00:15:39,539 --> 00:15:41,362
« est_ce_gagne » et « compte ».

332
00:15:41,362 --> 00:15:44,649
Il nous reste à gérer le cas où la
grille devient pleine

333
00:15:44,649 --> 00:15:47,199
sans qu'aucun des deux joueurs
n'ait gagné.

334
00:15:47,199 --> 00:15:49,429
Et c'est ce que nous allons voir 
dans la dernière vidéo.
