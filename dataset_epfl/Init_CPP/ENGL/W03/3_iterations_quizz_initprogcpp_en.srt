1
00:00:00,000 --> 00:00:04,095
Now we will take two quizzes 
regarding

2
00:00:04,095 --> 00:00:08,370
nested loops and conditional statements.

3
00:00:08,370 --> 00:00:11,700
In your opinion, what will this first
code print upon execution ?

4
00:00:11,700 --> 00:00:17,320
The correct answer is D.
Let us see why.

5
00:00:17,320 --> 00:00:25,054
The code's first "for" instruction
declares a variable

6
00:00:25,054 --> 00:00:26,822
i intialized to 0.

7
00:00:26,822 --> 00:00:31,082
The condition is "i strictly less than 3".

8
00:00:31,082 --> 00:00:34,273
And the increment statement is
plus plus i.

9
00:00:34,273 --> 00:00:36,751
i will thus take the values 0, 1 and 2.

10
00:00:36,751 --> 00:00:42,860
The first time we enter the loop,
i is 0.

11
00:00:42,860 --> 00:00:46,460
Now we move on to this
second "for" instruction,

12
00:00:46,460 --> 00:00:50,835
within the first one.
This second "for" instruction

13
00:00:50,835 --> 00:00:56,940
declares a variable j, intialized to 0.
The condition is

14
00:00:56,940 --> 00:01:00,905
"j strictly less than 4". The increment
 statement is plus plus j.

15
00:01:00,905 --> 00:01:04,195
j will thus take the values 
0, 1, 2, and 3.

16
00:01:04,195 --> 00:01:10,774
The first time we enter the
"for j" loop, this one,

17
00:01:10,774 --> 00:01:15,935
j will have the value 0.
Now we execute the instructions

18
00:01:15,935 --> 00:01:21,692
within this "for j" loop,
starting with this

19
00:01:21,692 --> 00:01:27,740
conditional statement and testing
the condition "i equal to j".

20
00:01:27,740 --> 00:01:28,900
i is 0.

21
00:01:28,900 --> 00:01:30,610
j is 0 aswell.

22
00:01:30,610 --> 00:01:36,349
The condition is therefore true
and we proceed to execute this instruction here,

23
00:01:36,349 --> 00:01:41,174
which prints an asterisk.
By the way, there is no

24
00:01:41,174 --> 00:01:45,534
double less-than sign-endl at
the end of this line.

25
00:01:45,534 --> 00:01:52,080
Thus, the next print will be
 displayed here, right after the asterisk.

26
00:01:52,080 --> 00:01:56,795
We skip the "else" part of
the conditional statement.

27
00:01:56,795 --> 00:02:03,688
We reach the end of the
"for j" loop which iterates on j and jump back here.

28
00:02:07,720 --> 00:02:15,138
j takes the value 1 and we continue
within the "for j" loop.

29
00:02:15,138 --> 00:02:19,267
First executing the 
conditional statement

30
00:02:19,267 --> 00:02:22,158
and testing the condition
"i equal to j". i is 0.

31
00:02:22,158 --> 00:02:26,560
This time, j is 1.
The condition is thus false.

32
00:02:26,560 --> 00:02:31,858
We execute this part of the 
conditional statement,

33
00:02:31,858 --> 00:02:34,772
thus printing j's value.

34
00:02:34,772 --> 00:02:37,020
So, we print 1 here.

35
00:02:37,020 --> 00:02:42,596
We reach the end of the 
"for j" loop and, again,

36
00:02:42,596 --> 00:02:47,479
jump back here.

37
00:02:47,479 --> 00:02:52,850
j will now take the value 2.

38
00:02:52,850 --> 00:02:57,404
We will print 2.

39
00:02:57,404 --> 00:03:03,620
Then j will take the value 3
and we will print this 3.

40
00:03:03,620 --> 00:03:09,382
Finally, we exit de "for loop" which iterates on j and

41
00:03:09,382 --> 00:03:14,976
reach this instruction here,

42
00:03:14,976 --> 00:03:21,552
triggering a line break.

43
00:03:21,552 --> 00:03:26,420
Therefore, the next printing
will occur here.

44
00:03:26,420 --> 00:03:31,859
We reach the end of the "for i" loop

45
00:03:31,859 --> 00:03:37,260
and jump back here.

46
00:03:37,260 --> 00:03:42,780
i will take the value  1.

47
00:03:42,780 --> 00:03:47,130
Now we execute these instructions again,

48
00:03:47,130 --> 00:03:51,023
within this here "for loop".

49
00:03:51,023 --> 00:03:56,250
We restart here and j will be
 initialized to 0 again.

50
00:03:56,250 --> 00:04:00,530
We execute the instructions within the

51
00:04:00,530 --> 00:04:07,040
"for  j" loop and we
test this condition :

52
00:04:07,040 --> 00:04:10,445
"i equal to j".
i has the value 1.

53
00:04:10,445 --> 00:04:12,225
j has the value 0.
The condition

54
00:04:12,225 --> 00:04:15,429
is false and we
thus print j's value,

55
00:04:15,429 --> 00:04:17,574
that is, 0.

56
00:04:17,574 --> 00:04:25,750
At this point, we jump back here
and j will take the value 1.

57
00:04:25,750 --> 00:04:31,120
We resume within the "for j" loop

58
00:04:31,120 --> 00:04:36,490
and execute this conditional statement,
namely the condition "i equal to j".

59
00:04:36,490 --> 00:04:37,750
This time,

60
00:04:37,750 --> 00:04:42,810
i has the value 1 and so does j. 
The condition is thus true.

61
00:04:42,810 --> 00:04:47,739
And we can execute this part 
of the conditional statement :

62
00:04:47,739 --> 00:04:52,159
printing an asterisk.
We jump back here,

63
00:04:52,159 --> 00:04:57,577
and continue within the
"for j" loop. You should

64
00:04:57,577 --> 00:05:02,900
now be convinced that this

65
00:05:02,900 --> 00:05:08,922
will eventually be printed.
The second quiz is

66
00:05:08,922 --> 00:05:15,295
a little bit harder.
Please note that, here, we're using

67
00:05:15,295 --> 00:05:21,320
the value of the variable i,
declared within the first "for loop".

68
00:05:21,320 --> 00:05:24,230
In your opinion, what is
the correct answer ?

69
00:05:24,230 --> 00:05:28,058
The correct answer is A.
Let us

70
00:05:28,058 --> 00:05:32,514
explain why.
As before,

71
00:05:32,514 --> 00:05:38,139
the first "for loop" initializes
a variable i to zero.

72
00:05:38,139 --> 00:05:42,230
The condition is "i strictly
less than 3".

73
00:05:42,230 --> 00:05:45,154
And the increment statement
is plus plus i.

74
00:05:45,154 --> 00:05:50,640
Just as before, i will take
the values 0, 1 and 2.

75
00:05:50,640 --> 00:05:53,175
We begin by

76
00:05:53,175 --> 00:05:57,457
entering the  "for i" loop,

77
00:05:57,457 --> 00:06:01,847
with i being 0.
We execute this instruction here,

78
00:06:01,847 --> 00:06:08,735
which is another "for loop"
initializing a variable j to 0.

79
00:06:08,735 --> 00:06:13,690
The condition is
"j strictly less than i".

80
00:06:13,690 --> 00:06:16,768
i is 0.
j is 0 as well.

81
00:06:16,768 --> 00:06:18,840
Thus this condition

82
00:06:18,840 --> 00:06:23,230
is false.
Thus we exit this loop

83
00:06:23,230 --> 00:06:27,630
immediately and
end up here.

84
00:06:27,630 --> 00:06:32,045
In other words, we simply

85
00:06:32,045 --> 00:06:36,460
generate a line break, which
we will represent this way.

86
00:06:36,460 --> 00:06:44,035
Now we jump back here. i will

87
00:06:44,035 --> 00:06:49,328
take the value 1, j is 

88
00:06:49,328 --> 00:06:54,476
initialized to 0.
The condition is

89
00:06:54,476 --> 00:07:00,260
now "j strictly less than i"
while i is 1.

90
00:07:00,260 --> 00:07:05,706
Thus, j will take the value 0.

91
00:07:05,706 --> 00:07:09,470
We will then exit the loop immediately.

92
00:07:09,470 --> 00:07:15,622
For now, j is 0.
We'll execute this instruction here.

93
00:07:15,622 --> 00:07:22,410
That is, printing j's value : 0.

94
00:07:22,410 --> 00:07:25,413
We exit the loop and reach

95
00:07:25,413 --> 00:07:30,040
this instruction causing
a line break.

96
00:07:30,040 --> 00:07:35,110
We are now at the end of the "for i" loop
and come back

97
00:07:35,110 --> 00:07:41,540
here. 
i will take the value 2.

98
00:07:41,540 --> 00:07:46,732
We enter the "for i" loop
and execute this

99
00:07:46,732 --> 00:07:51,405
instruction "for" which once
again initiliazes j to 0.

100
00:07:51,405 --> 00:07:57,900
The condition is now
"j strictly less than 2".

101
00:07:57,900 --> 00:08:00,892
Thus, j will take the values

102
00:08:00,892 --> 00:08:06,048
0 and 1.
We start with j,

103
00:08:06,048 --> 00:08:11,126
having the value 0 and execute
this "cout" instruction .

104
00:08:11,126 --> 00:08:16,166
namely, we print j's value,
that is 0.

105
00:08:18,740 --> 00:08:21,848
We reach the end of the "for j" loop

106
00:08:21,848 --> 00:08:27,400
and come back here with
j now being 1.

107
00:08:27,400 --> 00:08:32,800
We will execute this instruction,
printing

108
00:08:32,800 --> 00:08:38,586
j's value, that is 1 and
exit the loop.

109
00:08:38,586 --> 00:08:44,238
Then, we'll execute this
instrution here, generating

110
00:08:44,238 --> 00:08:48,890
a line break.
We reach the end of the "for i" loop.

111
00:08:48,890 --> 00:08:50,510
i now has the value 3.

112
00:08:50,510 --> 00:08:52,380
The condition is thus false

113
00:08:52,380 --> 00:08:59,000
and we exit the loop,
reaching the end of the code.

114
00:08:59,000 --> 00:09:04,130
We clearly see that we've printed
the given result.

