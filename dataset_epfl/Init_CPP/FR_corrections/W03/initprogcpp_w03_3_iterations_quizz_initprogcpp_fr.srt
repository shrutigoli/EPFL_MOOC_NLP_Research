1
00:00:00,000 --> 00:00:04,095
Nous allons faire deux quiz, qui mettent
en

2
00:00:04,095 --> 00:00:08,370
œuvre des boucles imbriquées, et des
branchements conditionnels.

3
00:00:08,370 --> 00:00:11,700
Alors, à votre avis, qu'affiche ce premier
code, quand on l'exécute?

4
00:00:11,700 --> 00:00:17,320
Alors, la bonne réponse est la réponse D,
et nous allons voir pourquoi.

5
00:00:17,320 --> 00:00:25,054
Le code commence par une première
instruction for, qui déclare une variable

6
00:00:25,054 --> 00:00:26,822
i, initialisée à zéro.

7
00:00:26,822 --> 00:00:31,082
La condition est i, strictement inférieure
à

8
00:00:31,082 --> 00:00:34,273
trois, et l'instruction d'incrémentation
est ++i.

9
00:00:34,273 --> 00:00:36,751
i va donc prendre la valeur zéro, un et
deux.

10
00:00:36,751 --> 00:00:42,860
La première fois qu'on rentre dans la
boucle, i vaut zéro.

11
00:00:42,860 --> 00:00:46,460
On passe, ensuite, à cette deuxième
instruction for, qui est

12
00:00:46,460 --> 00:00:50,835
à l'intérieur de la première, de la
première boucle, qui déclare

13
00:00:50,835 --> 00:00:56,940
une variable j, initialisée à zéro.
La condition est j, inférieure,

14
00:00:56,940 --> 00:01:00,905
strictement à quatre, et l'instruction d'incrémentation est ++j.

15
00:01:00,905 --> 00:01:04,195
j va donc prendre la valeur zéro, un, deux
et trois.

16
00:01:04,195 --> 00:01:10,774
Et la première fois qu'on rentre dans la
boucle for, j, c'est-à-dire

17
00:01:10,774 --> 00:01:15,935
celle-ci, j vaut zéro.
Exécuter les instructions

18
00:01:15,935 --> 00:01:21,692
qui sont dans cette deuxième boucle for j,
ça veut dire commencer par exécuter ce

19
00:01:21,692 --> 00:01:27,740
branchement conditionnel, et tester la
condition i == j.

20
00:01:27,740 --> 00:01:28,900
i vaut zéro.

21
00:01:28,900 --> 00:01:30,610
j vaut zéro également.

22
00:01:30,610 --> 00:01:36,349
Cette condition est donc vraie.
Et on va exécuter cette instruction-ci,

23
00:01:36,349 --> 00:01:41,174
qui affiche une étoile.
Alors, au passage, il n'y a pas

24
00:01:41,174 --> 00:01:45,534
de double chevrons, endl, à la fin de
cette ligne.

25
00:01:45,534 --> 00:01:52,080
Ça veut dire que le prochain affichage se
fera, ici, juste après l'étoile.

26
00:01:52,080 --> 00:01:56,795
On saute la partie else du branchement
conditionnel.

27
00:01:56,795 --> 00:02:03,688
On arrive à la fin de la boucle "for j", et
on revient, ici.

28
00:02:07,720 --> 00:02:15,138
j va prendre la valeur un, et on continue
dans la boucle for j.

29
00:02:15,138 --> 00:02:19,267
C'est-à-dire exécuter ce branchement
conditionnel.

30
00:02:19,267 --> 00:02:22,158
Tester la condition i == j.
i vaut zéro.

31
00:02:22,158 --> 00:02:26,560
Cette fois-ci j vaut 1.
La condition est donc fausse.

32
00:02:26,560 --> 00:02:31,858
On va exécuter cette partie du branchement
conditionnel.

33
00:02:31,858 --> 00:02:34,772
C'est-à-dire afficher la valeur
de j.

34
00:02:34,772 --> 00:02:37,020
C'est-à-dire 1, et on va l'afficher ici.

35
00:02:37,020 --> 00:02:42,596
On finit dans la boucle "for j", et on
revient,

36
00:02:42,596 --> 00:02:47,479
encore une fois, ici.
j va

37
00:02:47,479 --> 00:02:52,850
prendre, ensuite, une valeur

38
00:02:52,850 --> 00:02:57,404
deux, et on va afficher deux.

39
00:02:57,404 --> 00:03:03,620
Ensuite, la valeur trois, et on va
afficher trois.

40
00:03:03,620 --> 00:03:09,382
On sort, ensuite, de la boucle "for j", et

41
00:03:09,382 --> 00:03:14,976
on arrive à cette instruction-ci, 

42
00:03:14,976 --> 00:03:21,552
qui fait un retour à la ligne.

43
00:03:21,552 --> 00:03:26,420
C'est-à-dire, le prochain affichage se
fera, ici.

44
00:03:26,420 --> 00:03:31,859
On arrive à la fin de la boucle "for i",

45
00:03:31,859 --> 00:03:37,260
et on revient, ici.
i prend

46
00:03:37,260 --> 00:03:42,780
donc maintenant la valeur

47
00:03:42,780 --> 00:03:47,130
1, et on réexécute les instructions

48
00:03:47,130 --> 00:03:51,023
qui sont dans cette boucle for, ici.

49
00:03:51,023 --> 00:03:56,250
C'est-à-dire qu'on va recommencer, ici,
avec j qui va être initialisé, de nouveau.

50
00:03:56,250 --> 00:04:00,530
à zéro.
On exécute les instructions qui sont dans

51
00:04:00,530 --> 00:04:07,040
cette boucle "for j", et on va tester cette
condition.

52
00:04:07,040 --> 00:04:10,445
Est-ce que i est égal à j?
i vaut un.

53
00:04:10,445 --> 00:04:12,225
j vaut zéro.
La condition

54
00:04:12,225 --> 00:04:15,429
est fausse.
On va donc afficher la valeur de j.

55
00:04:15,429 --> 00:04:17,574
C'est-à-dire zéro.

56
00:04:17,574 --> 00:04:25,750
Arriver ici, pour en revenir là, avec j
qui va prendre la valeur un.

57
00:04:25,750 --> 00:04:31,120
On continue dans la boucle for j,

58
00:04:31,120 --> 00:04:36,490
pour exécuter ce branchement conditionnel,
c, et tester la condition i == j.

59
00:04:36,490 --> 00:04:37,750
Cette fois-ci,

60
00:04:37,750 --> 00:04:42,810
i vaut 1, et j vaut 1 également.
Donc, la condition est vraie.

61
00:04:42,810 --> 00:04:47,739
Et on va exécuter cette partie-ci du
branchement conditionnel.

62
00:04:47,739 --> 00:04:52,159
C'est-à-dire, afficher une étoile.
On va revenir, ici.

63
00:04:52,159 --> 00:04:57,577
Continuer dans la boucle "for j", et je vous
laisse voir

64
00:04:57,577 --> 00:05:02,900
que, l'on aura bien affiché, au final,

65
00:05:02,900 --> 00:05:08,922
cette chose-ci.
Ce deuxième quiz est

66
00:05:08,922 --> 00:05:15,295
un petit peu plus difficile.
Notez bien, qu'on utilise,

67
00:05:15,295 --> 00:05:21,320
ici, la valeur de la variable i, qui aura
été déclarée dans la première boucle for.

68
00:05:21,320 --> 00:05:24,230
Donc, à votre avis, quelle est la bonne
réponse?

69
00:05:24,230 --> 00:05:28,058
La bonne réponse, est la réponse A, et
nous

70
00:05:28,058 --> 00:05:32,514
allons détailler pourquoi.
Comme avant, la

71
00:05:32,514 --> 00:05:38,139
première boucle for, initialise une
variable i à zéro.

72
00:05:38,139 --> 00:05:42,230
La condition est "i strictement inférieure
à 3",

73
00:05:42,230 --> 00:05:45,154
et l'instruction d'incrémentation est
++i.

74
00:05:45,154 --> 00:05:50,640
Donc, encore une fois, comme avant, i va
prendre la valeur zéro, un et deux.

75
00:05:50,640 --> 00:05:53,175
On commence par

76
00:05:53,175 --> 00:05:57,457
entrer dans la boucle for i, avec i

77
00:05:57,457 --> 00:06:01,847
qui vaut zéro.
Et on exécute, cette instruction-ci, qui

78
00:06:01,847 --> 00:06:08,735
est une deuxième boucle for, qui
initialise une variable j à zéro.

79
00:06:08,735 --> 00:06:13,690
Et la condition est j strictement
inférieure à i.

80
00:06:13,690 --> 00:06:16,768
i vaut zéro.
j vaut zéro également.

81
00:06:16,768 --> 00:06:18,840
Donc, cette condition

82
00:06:18,840 --> 00:06:23,230
est fausse.
Et l'on sort, tout de

83
00:06:23,230 --> 00:06:27,630
suite  de cette boucle for pour
arriver ici

84
00:06:27,630 --> 00:06:32,045
Et arriver ici, ça veut simplement dire,

85
00:06:32,045 --> 00:06:36,460
qu'on fait un retour à la ligne, que je
vais représenter, de cette façon-ci.

86
00:06:36,460 --> 00:06:44,035
Et on revient à cette instruction-ci, i va

87
00:06:44,035 --> 00:06:49,328
donc maintenant, prendre la valeur un.
j va

88
00:06:49,328 --> 00:06:54,476
être initiliasé à zéro.
La condition est

89
00:06:54,476 --> 00:07:00,260
maintenant j strictement inférieur à i qui
vaut un.

90
00:07:00,260 --> 00:07:05,706
Donc, j va prendre les valeurs, ou plus
exactement, la valeur zéro.

91
00:07:05,706 --> 00:07:09,470
Et on va s'arrêter, tout de suite, dans la
boucle.

92
00:07:09,470 --> 00:07:15,622
Donc, pour l'instant, j à la valeur zéro.
On va exécuter cette instruction-ci.

93
00:07:15,622 --> 00:07:22,410
C'est-à-dire, afficher la valeur de j qui
est zéro.

94
00:07:22,410 --> 00:07:25,413
On sort de la boucle, pour arriver à cette

95
00:07:25,413 --> 00:07:30,040
instruction, ici, qui fait un retour à la
ligne.

96
00:07:30,040 --> 00:07:35,110
Et, on arrive à la fin de la boucle for i,
et on va revenir,

97
00:07:35,110 --> 00:07:41,540
donc, ici.
i va donc prendre la valeur deux.

98
00:07:41,540 --> 00:07:46,732
On rentre dans cette boucle for i, pour
exécuter cette

99
00:07:46,732 --> 00:07:51,405
instruction for, qui encore une fois,
initialise j à zéro.

100
00:07:51,405 --> 00:07:57,900
La condition est maintenant "j strictement
inférieur à deux".

101
00:07:57,900 --> 00:08:00,892
Donc, j va prendre la valeur

102
00:08:00,892 --> 00:08:06,048
zéro et un.
On commence avec la valeur

103
00:08:06,048 --> 00:08:11,126
zéro dans j, et on exécute cette
instruction cout.

104
00:08:11,126 --> 00:08:16,166
C'est-à-dire qu'on va afficher
la valeur de j qui est zéro.

105
00:08:18,740 --> 00:08:21,848
On arrive à la fin de la boucle "for j",

106
00:08:21,848 --> 00:08:27,400
et on revient, ici, avec j qui va
maintenant valoir un.

107
00:08:27,400 --> 00:08:32,800
On va donc exécuter cette instruction qui
affiche la

108
00:08:32,800 --> 00:08:38,586
valeur de j, c'est-à-dire un, et on va
sortir de la boucle.

109
00:08:38,586 --> 00:08:44,238
C'est-à-dire, exécuter cette
instruction-ci, qui fait un retour

110
00:08:44,238 --> 00:08:48,890
à la ligne.
On arrive à la fin de la boucle "for i".

111
00:08:48,890 --> 00:08:50,510
i vaut maintenant 3.

112
00:08:50,510 --> 00:08:52,380
Cette condition est fausse.

113
00:08:52,380 --> 00:08:59,000
Et on va sortir de la boucle pour arriver
à la fin du code.

114
00:08:59,000 --> 00:09:04,130
Et on va donc bien afficher, le résultat
qui était donné.

