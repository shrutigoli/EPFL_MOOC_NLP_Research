1
00:00:03,660 --> 00:00:05,389
Dans une séquence vidéo précédente,

2
00:00:05,389 --> 00:00:07,946
nous avons vu les tableaux dynamiques 
à une dimension,

3
00:00:07,946 --> 00:00:09,849
c'est-à-dire des tableaux 
dynamiques de valeurs,

4
00:00:09,849 --> 00:00:13,551
par exemple, les différents âges 
des étudiants de ce cours.

5
00:00:13,801 --> 00:00:15,446
Comment faire si l'on veut représenter

6
00:00:15,446 --> 00:00:17,038
les tableaux à plusieurs dimensions ?

7
00:00:17,038 --> 00:00:19,416
Comme par exemple,
le tableau de toutes les notes

8
00:00:19,416 --> 00:00:21,924
de tous les étudiants
à tous les devoirs.

9
00:00:22,194 --> 00:00:26,067
Ce que je pourrais faire,
c'est faire un tableau pour un étudiant

10
00:00:26,078 --> 00:00:29,783
qui contiendrait les différentes notes
aux différents devoirs,

11
00:00:29,783 --> 00:00:33,080
puis faire un deuxième tableau
pour un autre étudiant,

12
00:00:33,080 --> 00:00:36,761
qui contiendrait les notes aussi
à ses devoirs, etc...

13
00:00:36,761 --> 00:00:38,555
faire un troisième tableau,

14
00:00:38,555 --> 00:00:41,379
et on aurait donc ainsi, globalement

15
00:00:41,379 --> 00:00:44,369
un tableau... 
de tableaux.

16
00:00:44,679 --> 00:00:50,759
Chaque élément du tableau étant lui-même
un tableau de notes.

17
00:00:53,952 --> 00:00:55,255
Supposons donc par exemple

18
00:00:55,255 --> 00:00:58,111
que l'on veuille faire
un tableau pour 5 étudiants

19
00:00:59,051 --> 00:01:00,193
et que par exemple,

20
00:01:00,193 --> 00:01:03,894
chacun des étudiants ait eu
à remplir 6 épreuves

21
00:01:03,894 --> 00:01:05,428
et donc six notes au final.

22
00:01:05,428 --> 00:01:10,442
On aura donc un tableau dynamique
de 5 tableaux de 6 notes.

23
00:01:10,442 --> 00:01:13,519
Donc, on va déclarer un tableau dynamique

24
00:01:13,519 --> 00:01:15,474
qu'on va appeler <i>tab</i>.

25
00:01:15,474 --> 00:01:17,753
Ce tableau dynamique contiendra lui-même

26
00:01:17,753 --> 00:01:20,913
des tableaux dynamiques d'entiers.

27
00:01:20,913 --> 00:01:23,498
Les entiers, ce sont les notes.

28
00:01:23,498 --> 00:01:26,240
Le tableau dynamique d'entiers,

29
00:01:26,240 --> 00:01:28,469
c'est le tableau des notes d'un élève,

30
00:01:28,469 --> 00:01:31,136
et le tableau dynamique 
des tableaux dynamiques d'entiers

31
00:01:31,136 --> 00:01:33,730
c'est le tableau
des tableaux de tous les élèves.

32
00:01:33,880 --> 00:01:36,129
On va l'initialiser au nombre d'élèves

33
00:01:36,129 --> 00:01:38,363
donc ici on a 5 élèves,

34
00:01:38,713 --> 00:01:42,787
et chacun de ces 5 éléments
est lui-même quoi ?

35
00:01:42,787 --> 00:01:45,999
Lui-même, un tableau
dynamique d'entiers,

36
00:01:45,999 --> 00:01:47,529
pour représenter les notes,

37
00:01:47,529 --> 00:01:49,736
qui contient 6 notes.

38
00:01:49,736 --> 00:01:51,951
On a donc au final un tableau dynamique

39
00:01:51,951 --> 00:01:58,783
qui contient 5 tableaux 
dynamiques de 6 notes.

40
00:02:04,227 --> 00:02:08,254
La syntaxe utilisée ici
pour donner une valeur initiale

41
00:02:08,254 --> 00:02:11,292
à chacun des tableaux de notes
de chacun des élèves

42
00:02:11,292 --> 00:02:12,975
à chacun des sous-tableaux,

43
00:02:12,975 --> 00:02:15,500
est la même que 
nous avions déjà rencontrée

44
00:02:15,500 --> 00:02:18,039
lors de la copie 
d'un tableau précédemment.

45
00:02:18,039 --> 00:02:20,530
C'est un tableau anonyme.

46
00:02:20,530 --> 00:02:26,762
C'est comme si vous écriviez
<i>vector <int></i><i>tab2</i>

47
00:02:26,762 --> 00:02:31,505
initialisé avec 6 <i>int</i> au départ
tous à la valeur nulle,

48
00:02:32,431 --> 00:02:35,277
et que vous ayez supprimé le nom.

49
00:02:35,277 --> 00:02:38,843
Vous vous retrouvez donc
avec un tableau anonyme.

50
00:02:38,843 --> 00:02:42,185
Ici, on n'a pas donné de nom,

51
00:02:43,045 --> 00:02:46,027
tableau anonyme de 6 entiers tous nuls.

52
00:02:48,257 --> 00:02:50,529
Si je regarde maintenant 
le tableau dynamique

53
00:02:50,529 --> 00:02:51,993
de tableaux dynamiques d'entiers,

54
00:02:51,993 --> 00:02:56,868
que l'on a déclaré ici,
qu'on a appelé <i>tab</i>,

55
00:02:56,868 --> 00:03:03,217
<i>tab [i]</i> (<i>tab</i> de i) est donc un élément 
de ce tableau dynamique

56
00:03:03,217 --> 00:03:09,009
qui correspond à un tableau de notes.

57
00:03:09,460 --> 00:03:13,620
<i>tab [i]</i> est donc lui-même
un tableau dynamique d'entiers,

58
00:03:13,620 --> 00:03:16,211
qui correspond bien
au type que l'on a donné ici,

59
00:03:16,211 --> 00:03:17,785
tableau dynamique d'entiers,

60
00:03:17,785 --> 00:03:22,162
et à la valeur initiale 
qu'on a donnée ici.

61
00:03:22,552 --> 00:03:26,258
<i>tab [i]</i>, <i>tab [0]</i> par exemple,

62
00:03:26,258 --> 00:03:31,174
c'est ce tableau ici de 6 entiers.

63
00:03:32,224 --> 00:03:36,283
<i>tab [i] [j]</i>, 
c'est l'élément à la position <i>j</i>

64
00:03:36,283 --> 00:03:41,638
c'est-à-dire
le (j+1)e élément du tableau <i>tab[i]</i>.

65
00:03:41,978 --> 00:03:44,631
Donc si je prends le tableau,

66
00:03:45,211 --> 00:03:49,182
ici, tableau dynamique 
de tableaux dynamiques d'entiers,

67
00:03:50,002 --> 00:03:54,071
que je prends <i>tab [i]</i>

68
00:03:54,071 --> 00:03:58,779
<i>tab[i]</i> est lui-même
un tableau dynamique d'entiers,

69
00:04:01,369 --> 00:04:04,566
dont je cherche le (j+1)e élément,

70
00:04:04,566 --> 00:04:06,898
l'élément à la position <i>j</i>.

71
00:04:08,968 --> 00:04:11,694
On a donc l'habitude
de représenter <i>tab [i] [j]</i>

72
00:04:11,694 --> 00:04:16,185
comme étant l'élément
à la (i+1)e ligne et (j+1e) colonne.

73
00:04:16,505 --> 00:04:18,511
Mais il ne faut pas oublier qu'on a ici

74
00:04:18,511 --> 00:04:20,994
un tableau dynamique
de tableaux dynamiques d'entiers.

75
00:04:20,994 --> 00:04:23,989
L'aspect tableau dynamique des lignes
est toujours présent

76
00:04:23,989 --> 00:04:26,595
ça veut dire que
chacune des lignes peut elle-même

77
00:04:26,595 --> 00:04:29,977
avoir des éléments qui se rajoutent
ou qui s'enlèvent,

78
00:04:29,977 --> 00:04:32,217
et donc au final,

79
00:04:32,217 --> 00:04:34,276
le tableau dynamique
de tableaux dynamiques

80
00:04:34,276 --> 00:04:37,260
n'a pas nécessairement
des lignes de la même taille.

81
00:04:37,260 --> 00:04:39,731
Par exemple, on peut très bien avoir

82
00:04:39,731 --> 00:04:44,487
une première, ici, taille pour <i>tab[0]</i>

83
00:04:44,487 --> 00:04:46,973
qui est bien un tableau 
dynamique d'entiers,

84
00:04:46,973 --> 00:04:49,250
une taille différente pour <i>tab[1]</i>

85
00:04:49,250 --> 00:04:52,487
qui est un deuxième 
tableau dynamique d'entiers

86
00:04:52,487 --> 00:04:54,575
et ainsi de suite.

87
00:04:56,465 --> 00:04:58,921
Regardons maintenant
cet exemple en détails.

88
00:04:58,921 --> 00:05:00,452
Nous allons donc déclarer

89
00:05:00,452 --> 00:05:03,216
un tableau dynamique
de tableaux dynamiques d'entiers

90
00:05:03,216 --> 00:05:05,587
que l'on appelle, par exemple, tableau.

91
00:05:05,587 --> 00:05:08,232
Si on veut l'initialiser
à la valeur de l'exemple

92
00:05:08,232 --> 00:05:10,134
que j'ai redessiné ici,

93
00:05:10,134 --> 00:05:12,298
ce qu'on va faire,
c'est qu'on va donc

94
00:05:12,298 --> 00:05:16,568
donner une valeur initiale
sous forme de liste d'éléments,

95
00:05:16,568 --> 00:05:19,359
chacun des éléments étant lui-même

96
00:05:19,359 --> 00:05:21,179
un tableau dynamique d'entiers.

97
00:05:21,179 --> 00:05:23,526
On retrouve ici la première ligne.

98
00:05:23,526 --> 00:05:26,499
Ensuite, on a la deuxième ligne

99
00:05:26,499 --> 00:05:29,931
et ainsi de suite pour la troisième

100
00:05:29,931 --> 00:05:31,328
et la quatrième ligne

101
00:05:31,328 --> 00:05:34,923
de notre tableau dynamique
de tableaux dynamiques d'entiers.

102
00:05:34,923 --> 00:05:38,468
Cette initialisation correspond exactement

103
00:05:38,468 --> 00:05:42,512
au dessin qui est donné ici à droite.

104
00:05:43,712 --> 00:05:46,084
Une petite aparté concernant la syntaxe :

105
00:05:46,084 --> 00:05:49,192
Quand on déclare un tableau dynamique
de tableaux dynamiques d'entiers,

106
00:05:49,192 --> 00:05:52,068
on a ici besoin de coller
la fermeture des deux types

107
00:05:52,068 --> 00:05:54,217
sous forme de deux signes supérieurs

108
00:05:54,217 --> 00:05:55,767
qui sont collés comme ceci.

109
00:05:55,767 --> 00:05:58,006
Ceci n'est toléré qu'en C++ 2011.

110
00:05:58,006 --> 00:06:00,662
Si vous avez à écrire dans un compilateur

111
00:06:00,662 --> 00:06:02,227
qui n'est pas en C++ 2011

112
00:06:02,227 --> 00:06:05,224
alors il faudra mettre
un espace entre ces deux signes-là.

113
00:06:05,224 --> 00:06:07,557
La syntaxe avec les deux signes supérieurs

114
00:06:07,557 --> 00:06:10,590
collés comme ceci, ici,
n'étant pas supportée

115
00:06:10,590 --> 00:06:12,570
par les anciens compilateurs.

116
00:06:12,849 --> 00:06:15,255
Regardons maintenant
comment on peut parcourir ce tableau.

117
00:06:15,255 --> 00:06:18,392
Pour cela, on va utiliser
une boucle à la C++ 2011

118
00:06:18,392 --> 00:06:20,736
avec donc les deux points,

119
00:06:20,736 --> 00:06:22,248
le tableau que l'on veut parcourir,

120
00:06:22,248 --> 00:06:23,653
ici qu'est <i>tableau</i>,

121
00:06:23,653 --> 00:06:27,565
et la déclaration de la variable
qui va parcourir les lignes.

122
00:06:27,565 --> 00:06:29,814
On va l'appeler ici naturellement <i>ligne</i>,

123
00:06:29,814 --> 00:06:33,874
ce qui va nous permettre 
de parcourir ligne à ligne.

124
00:06:34,823 --> 00:06:37,844
Puis ensuite dans le parcours d'une ligne,

125
00:06:37,844 --> 00:06:40,500
on va parcourir tous les éléments
d'une ligne donnée.

126
00:06:40,500 --> 00:06:42,644
Par exemple, si je suis 
sur la première ligne,

127
00:06:42,644 --> 00:06:46,077
je vais ensuite parcourir 
les différents éléments de cette ligne-là

128
00:06:46,077 --> 00:06:48,492
dans une deuxième boucle <i>for</i>

129
00:06:48,492 --> 00:06:49,871
qui me parcourt cette fois-ci

130
00:06:49,871 --> 00:06:53,719
le tableau <i>ligne</i> que j'ai déclaré ici,

131
00:06:53,719 --> 00:06:55,999
qui est une ligne donnée,

132
00:06:55,999 --> 00:06:58,722
et je vais le parcourir
en donnant comme nom

133
00:06:58,722 --> 00:07:00,374
le nom <i>element</i>

134
00:07:00,374 --> 00:07:07,136
donc <i>element</i> va parcourir
les différents éléments d'une ligne.

135
00:07:07,264 --> 00:07:10,019
C'est ce que nous avons écrit ici

136
00:07:10,019 --> 00:07:13,671
et on peut donc utiliser
cette variable <i>element</i>

137
00:07:13,671 --> 00:07:17,645
pour parcourir les différents éléments

138
00:07:18,735 --> 00:07:20,144
d'une ligne.

139
00:07:22,694 --> 00:07:25,781
Pour finir, illustrons le fait
que les éléments du tableau

140
00:07:25,781 --> 00:07:27,548
sont bien des tableaux dynamiques

141
00:07:27,548 --> 00:07:29,916
en donnant la taille
des différentes lignes,

142
00:07:29,916 --> 00:07:31,483
des différents tableaux dynamiques.

143
00:07:31,483 --> 00:07:32,861
Pour cela, on va utiliser

144
00:07:32,861 --> 00:07:35,479
une boucle <i>for</i> classique.

145
00:07:35,479 --> 00:07:38,001
On va démarrer <i>i</i> comme d'habitude

146
00:07:38,001 --> 00:07:41,728
déclaré comme <i>size_t</i> à la valeur <i>0</i>.

147
00:07:41,728 --> 00:07:46,047
Tant que <i>i</i> est plus petit 
que la taille du tableau,

148
00:07:46,047 --> 00:07:47,464
le tableau dont on parle,

149
00:07:47,464 --> 00:07:49,604
le tableau, ici, de départ,

150
00:07:49,604 --> 00:07:51,049
et toujours pareil,

151
00:07:51,049 --> 00:07:53,301
<i>i</i> qui passe de 1 en 1.

152
00:07:53,301 --> 00:07:55,911
Ce qu'on va faire,
c'est qu'on va afficher

153
00:07:55,911 --> 00:07:58,082
<i>"tableau[i]"

154
00:07:58,082 --> 00:08:01,984
donc ça va afficher <i>tableau de 0</i>,
<i>tableau de 1</i>, etc...<i>]. size</i>.

155
00:08:01,984 --> 00:08:04,646
Et puis, ensuite on peut utiliser tel quel

156
00:08:04,646 --> 00:08:08,943
<i>tableau[i]</i> qui est un <i>tableau</i>,

157
00:08:08,943 --> 00:08:11,897
<i>.size</i> pour renvoyer la taille du tableau.

158
00:08:11,897 --> 00:08:14,167
Ce qui va donc nous afficher

159
00:08:14,327 --> 00:08:17,161
5 pour <i>tab [0]</i><i>. size()</i>,

160
00:08:17,481 --> 00:08:20,103
3 pour <i>tab [1] . size()</i>,

161
00:08:21,033 --> 00:08:23,756
2 pour <i>tab [2] . size()</i>,

162
00:08:25,866 --> 00:08:27,965
et enfin, à nouveau 3

163
00:08:27,965 --> 00:08:32,263
pour <i>tab [3] . size()</i>
