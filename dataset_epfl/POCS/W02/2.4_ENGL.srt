1
00:00:05,280 --> 00:00:07,992
Hello again, I'm still Ed Bugnion.
This is still POCS.

2
00:00:07,992 --> 00:00:10,857
This is still layering.
This is actually the fourth module

3
00:00:10,857 --> 00:00:13,505
on the layering section,
the final module,

4
00:00:13,505 --> 00:00:15,845
and right now we're going
to talk about networking.

5
00:00:15,845 --> 00:00:17,635
Actually we're not going
to talk about networking,

6
00:00:17,635 --> 00:00:20,294
because that
is a controversial topic of its own,

7
00:00:20,294 --> 00:00:22,347
but we're going to talk
about networking layers,

8
00:00:22,347 --> 00:00:25,341
because that itself
is a controversial topic of its own,

9
00:00:25,341 --> 00:00:27,576
and this is
about the layering principle.

10
00:00:27,876 --> 00:00:29,331
So, let's get started.

11
00:00:29,331 --> 00:00:31,268
And to get started,
we're going to first talk about

12
00:00:31,268 --> 00:00:33,645
something you're most likely
familiar with at some level,

13
00:00:33,645 --> 00:00:36,534
which is the OSI model.
So, let me give you the scoop.

14
00:00:36,534 --> 00:00:39,604
The OSI model is obsolete,
and should not be referenced,

15
00:00:39,604 --> 00:00:41,951
and yet we all do that
in our everyday language.

16
00:00:41,951 --> 00:00:46,230
As a matter of fact, I'm going to make
references to the OSI model in this module

17
00:00:46,230 --> 00:00:48,279
because it's very difficult
to talk about networking

18
00:00:48,279 --> 00:00:50,328
without referencing
some elements of that model.

19
00:00:50,328 --> 00:00:53,017
And yet, the model is obsolete,
and should not be used.

20
00:00:53,017 --> 00:00:55,943
So bear with me with the contradiction.

21
00:00:56,343 --> 00:00:59,615
So, for example, we have an intuition
as to what layer two might mean,

22
00:00:59,615 --> 00:01:02,774
what layer three might mean,
or even what layer seven might mean.

23
00:01:02,774 --> 00:01:07,475
You actually can commercially buy products
such as layer seven load balancers,

24
00:01:07,475 --> 00:01:10,556
because from a marketing perspective,
it's sexier to call something

25
00:01:10,556 --> 00:01:14,129
a layer seven load balancer
than simply an http proxy.

26
00:01:14,129 --> 00:01:18,018
In reality, they're generally often
one and the same thing.

27
00:01:18,018 --> 00:01:19,642
And if you're even luckier,

28
00:01:19,642 --> 00:01:23,321
you may have heard one day
of the layer eight model.

29
00:01:23,321 --> 00:01:25,650
Of course, if somebody talks to you
about the layer eight model,

30
00:01:25,650 --> 00:01:28,399
that person is implicitly assuming

31
00:01:28,399 --> 00:01:30,379
that you:
a. know that there are seven layers

32
00:01:30,379 --> 00:01:32,281
in the OSI model and not eight,

33
00:01:32,281 --> 00:01:35,483
and that the layer eight model
refers to the invisible political layer

34
00:01:35,483 --> 00:01:39,835
that drives all bad decisions
in a company.

35
00:01:40,486 --> 00:01:46,239
But, after this caveat, the OSI model
is not, strictly speaking, completely bad.

36
00:01:46,239 --> 00:01:49,148
It did serve a purpose,
and one purpose that it did serve

37
00:01:49,148 --> 00:01:52,439
is it helped
the networking industry organize itself

38
00:01:52,439 --> 00:01:56,014
to standardize various aspects
of the system in a modular fashion,

39
00:01:56,014 --> 00:01:58,343
in a layered fashion.

40
00:01:58,343 --> 00:02:01,052
And so, let's go through an example
that actually worked reasonably well,

41
00:02:01,052 --> 00:02:02,831
and maps reasonably well.

42
00:02:02,831 --> 00:02:05,137
And the example
I'm going to use is Ethernet.

43
00:02:05,137 --> 00:02:07,568
So, Ethernet is not a standard.

44
00:02:07,568 --> 00:02:09,999
As a matter of fact, it's the
combination of multiple standards.

45
00:02:09,999 --> 00:02:12,290
In order to have any Ethernet stack,

46
00:02:12,290 --> 00:02:15,421
you need multiple Ethernet standards
to work together.

47
00:02:15,421 --> 00:02:17,946
The most important standard is 802.1,

48
00:02:17,946 --> 00:02:21,397
which defines a frame format,
the MAC address, the namespace,

49
00:02:21,397 --> 00:02:24,003
the semantics for unicast and multicast.

50
00:02:24,003 --> 00:02:28,155
And that standard is generally mapped
with a layer two model in the OSI model.

51
00:02:29,237 --> 00:02:30,997
And as another example,

52
00:02:30,997 --> 00:02:33,319
the central standard
for Ethernet switching

53
00:02:33,319 --> 00:02:36,771
is 802.1D, and that is also
a layer two model.

54
00:02:36,771 --> 00:02:40,764
Now, the IEEE also standardized
the lower layers of the networking stack;

55
00:02:40,764 --> 00:02:43,947
that's why you need the combination
of IEEE standards to have

56
00:02:43,947 --> 00:02:46,555
an Ethernet solution that is done
by other working groups,

57
00:02:46,555 --> 00:02:50,572
such as 802.3 for wired links
or 802.11 for WiFi,

58
00:02:50,572 --> 00:02:52,228
and you combine these two things

59
00:02:52,228 --> 00:02:54,484
and you end up
having an Ethernet solution.

60
00:02:54,484 --> 00:02:57,562
So this is all pretty good, right?
In the way the model--

61
00:02:57,562 --> 00:02:59,878
I don't know to what extent
it had a direct influence,

62
00:02:59,878 --> 00:03:02,386
but certainly the model
the industry aligned and used,

63
00:03:02,386 --> 00:03:05,554
the terminology of the model
at the lower levels of the system.

64
00:03:05,554 --> 00:03:07,924
But this breaks down,

65
00:03:07,924 --> 00:03:11,949
and specifically this breaks down
at the upper layers,

66
00:03:11,949 --> 00:03:17,580
and that is largely because today,
the winning design in networking,

67
00:03:17,580 --> 00:03:21,846
at the upper layers, is the result
of a community effort,

68
00:03:21,846 --> 00:03:26,389
not the result of a competitive effort
among industry competitors.

69
00:03:26,389 --> 00:03:29,577
Of course, the winning design
I'm referring to is the Internet,

70
00:03:29,577 --> 00:03:31,491
and the community is IETF.

71
00:03:31,491 --> 00:03:33,865
And there's a very different set
of perspectives and philosophies

72
00:03:33,865 --> 00:03:36,010
if something emerges from industry

73
00:03:36,010 --> 00:03:39,033
rather, when something emerges
from a community.

74
00:03:39,033 --> 00:03:43,106
And to emphasize this, I found
this interesting quote in an RFC,

75
00:03:43,106 --> 00:03:44,895
called "Layering considered harmful."

76
00:03:44,895 --> 00:03:47,714
And this is worth just reading
so that you get a sense of what I mean.

77
00:03:48,774 --> 00:03:50,394
So this RFC states:

78
00:04:06,875 --> 00:04:10,931
They even state a corollary,
which is pretty funny to read.

79
00:04:20,930 --> 00:04:22,712
Alright, so I rest my case on this.

80
00:04:22,712 --> 00:04:26,354
But the point is 
that OSI had many strict layers,

81
00:04:26,354 --> 00:04:30,856
and IETF was about architectural elegance
and about striking a balance.

82
00:04:31,366 --> 00:04:33,143
Now in the textbook,

83
00:04:33,143 --> 00:04:35,077
we actually don't have
a seven-layer model,

84
00:04:35,077 --> 00:04:37,145
we don't have
necessarily an IETF model.

85
00:04:37,145 --> 00:04:41,515
We actually are using
a simpler, three-layer model.

86
00:04:42,295 --> 00:04:44,922
Now, the authors themselves
are sometimes questioning

87
00:04:44,922 --> 00:04:47,629
whether this is the right model,
but this actually has a lot of merit.

88
00:04:47,629 --> 00:04:51,226
It's very good to help think about
how and where things land

89
00:04:51,226 --> 00:04:55,385
in the context
of a layered networking design.

90
00:04:55,955 --> 00:04:59,048
And certainly,
three is probably the lower bound.

91
00:04:59,048 --> 00:05:01,845
Everybody will agree that three
is the minimal number of layers

92
00:05:01,845 --> 00:05:04,833
that you need in order to build
any form of a network system.

93
00:05:04,833 --> 00:05:06,432
And so what are those three layers?

94
00:05:06,432 --> 00:05:10,591
Well, the lower layer is the link layer,
and it has a single function,

95
00:05:10,591 --> 00:05:13,311
which is to carry frames on links,

96
00:05:13,311 --> 00:05:17,633
maybe between a NIC and a switch,
or between a radio and an access point,

97
00:05:17,633 --> 00:05:21,288
or potentially between links
between two switches.

98
00:05:21,288 --> 00:05:22,995
But this is only the link layer;

99
00:05:22,995 --> 00:05:26,331
it doesn't worry about
where things should go,

100
00:05:26,331 --> 00:05:28,700
it doesn't worry about
where things should be routed,

101
00:05:28,700 --> 00:05:29,962
or it doesn't worry about

102
00:05:29,962 --> 00:05:33,084
what the hosts are going to do
with the data once they receive it.

103
00:05:33,084 --> 00:05:35,726
It's only responsible to carry links.

104
00:05:35,726 --> 00:05:36,799
At the layer above,

105
00:05:36,799 --> 00:05:42,092
the network layer is only responsible
to carry packets between links.

106
00:05:42,092 --> 00:05:47,255
And the way you do that is
you route connecting links together

107
00:05:47,255 --> 00:05:51,499
according to the network's current view
of the network topology.

108
00:05:51,829 --> 00:05:53,860
This is a hard problem.

109
00:05:53,860 --> 00:05:54,901
And importantly,

110
00:05:54,901 --> 00:05:57,662
the network layer is designed to be
distributed and resilient.

111
00:05:57,662 --> 00:05:59,123
You have protocols that, basically,

112
00:05:59,123 --> 00:06:04,740
deal with the issue of reconciling
the actual current network topology

113
00:06:04,740 --> 00:06:08,663
with the network layer's view
of the networking topology.

114
00:06:08,663 --> 00:06:11,448
In particular, this is hard
when things like routers will fail

115
00:06:11,448 --> 00:06:13,319
and links would go down.

116
00:06:13,319 --> 00:06:15,340
So there's a lot of 
complexity in that layer,

117
00:06:15,340 --> 00:06:18,922
but the good news is it relies on
a simple abstraction of the lower layer.

118
00:06:18,922 --> 00:06:20,091
You can actually use

119
00:06:20,091 --> 00:06:23,025
different link layer technologies
in different parts of the network

120
00:06:23,025 --> 00:06:24,481
in a transparent fashion,

121
00:06:24,481 --> 00:06:27,207
and you expose
a simple interface or abstraction,

122
00:06:27,207 --> 00:06:29,105
to the end-to-end layer.

123
00:06:29,105 --> 00:06:30,266
And the end-to-end layer,

124
00:06:30,266 --> 00:06:34,878
which is implemented in the hosts,
is largely, at least in this model,

125
00:06:34,878 --> 00:06:38,167
a set of RPCs between hosts.
You send and receive messages

126
00:06:38,167 --> 00:06:40,371
via the network layer
without having to worry about

127
00:06:40,371 --> 00:06:41,697
the topology of the network,

128
00:06:41,697 --> 00:06:43,583
and obviously without
having to worry about

129
00:06:43,583 --> 00:06:45,689
the link level technologies
that are used below.

130
00:06:45,689 --> 00:06:49,299
So here again there's a significant amount
of complexity in the end-to-end layer,

131
00:06:49,299 --> 00:06:52,815
but it can rely on a simple abstraction
offered by the network:

132
00:06:52,815 --> 00:06:55,640
simply the ability to send a packet
to its destination by giving it

133
00:06:55,640 --> 00:07:00,043
some kind of address
associated with the destination.

134
00:07:00,503 --> 00:07:03,125
Now the three-layer model
is somewhat simplistic;

135
00:07:03,125 --> 00:07:06,646
maybe a little too simplistic to capture
the reality of the system.

136
00:07:06,646 --> 00:07:09,910
And actually, the authors themselves
describe this end-to-end layer

137
00:07:09,910 --> 00:07:13,581
as serving three different functions:
presentation, transport,

138
00:07:13,581 --> 00:07:16,520
and session management.
So these three functions

139
00:07:16,520 --> 00:07:20,484
are not different layers;
they are all part of the end-to-end layer.

140
00:07:20,484 --> 00:07:23,306
And then another note is that
they basically restrict their view

141
00:07:23,306 --> 00:07:25,931
of the networking stack
to the very basic capabilities

142
00:07:25,931 --> 00:07:28,565
that could be offered
by a networking stack,

143
00:07:28,565 --> 00:07:32,281
when in reality, the domain of networking
actually grows up

144
00:07:32,281 --> 00:07:36,700
with layers built on top
of those very basic end host capabilities.

145
00:07:36,700 --> 00:07:39,873
So I just want to make a side note
so that people don't get confused.

146
00:07:39,873 --> 00:07:42,839
When I talk here
about the end-to-end layer,

147
00:07:42,839 --> 00:07:46,729
I actually do not talk
about the end-to-end principle.

148
00:07:46,729 --> 00:07:48,790
There's a relationship between the two.

149
00:07:48,790 --> 00:07:51,641
The end-to-end principle
is applied broadly and in many areas,

150
00:07:51,641 --> 00:07:54,084
and it's about
pushing complexity to the applications

151
00:07:54,084 --> 00:07:56,795
because they know best.

152
00:07:56,795 --> 00:08:00,183
The end-to-end layer is performing
a well-defined function

153
00:08:00,183 --> 00:08:03,640
within the three-layer
networking model of the textbook,

154
00:08:03,640 --> 00:08:07,808
and it uses the end-to-end principle
specifically to simplify

155
00:08:07,808 --> 00:08:10,608
the implementation
of the networking layer.

156
00:08:10,608 --> 00:08:13,717
So in the case of the networking stack,
the network's end-to-end layer

157
00:08:13,717 --> 00:08:17,166
applies the end-to-end principle
by handling all host-specific issues

158
00:08:17,166 --> 00:08:19,383
within the host,

159
00:08:19,383 --> 00:08:22,250
and TCP is the canonical example
for an implementation of that.

160
00:08:22,400 --> 00:08:23,718
And then the transport layer

161
00:08:23,718 --> 00:08:26,384
handles both the congestion management
and the flow control,

162
00:08:26,384 --> 00:08:28,149
freeing the network and the link layer

163
00:08:28,149 --> 00:08:31,139
from having to worry
about these two considerations at all.

164
00:08:31,139 --> 00:08:33,637
And this is a simplified view

165
00:08:33,637 --> 00:08:36,137
of the core principle
behind layering and networking.

166
00:08:36,137 --> 00:08:38,544
As a matter of fact,
it's a pretty good proxy

167
00:08:38,544 --> 00:08:40,876
of deployments in networking.

168
00:08:40,876 --> 00:08:42,918
Now of course, as you would expect,

169
00:08:42,918 --> 00:08:45,541
there are nuances,
complications, and applications.

170
00:08:45,541 --> 00:08:47,840
So I'm going to first talk
about one complication,

171
00:08:47,840 --> 00:08:49,578
and then 
two interesting applications

172
00:08:49,578 --> 00:08:54,260
of this model.
The first complication is that

173
00:08:54,260 --> 00:09:00,720
there's an unfortunate difference between
the architectural beauty of standards,

174
00:09:00,720 --> 00:09:04,227
and the implementation in reality
in products that you buy.

175
00:09:04,227 --> 00:09:06,898
And this actually applies broadly,
but it actually applies

176
00:09:06,898 --> 00:09:10,603
in a pretty clear way
in the networking domain.

177
00:09:10,603 --> 00:09:14,474
Standards bodies are very good
at focusing on a particular area.

178
00:09:14,474 --> 00:09:18,285
Both IETF and IEEE have work groups
with well-defined charters.

179
00:09:18,285 --> 00:09:20,927
They solve one problem,
and then these problems

180
00:09:20,927 --> 00:09:23,184
can be layered together
from a layering perspective

181
00:09:23,184 --> 00:09:26,412
in order to form
a complete solution stack.

182
00:09:26,412 --> 00:09:29,204
But in reality, the people
that are building products

183
00:09:29,204 --> 00:09:33,121
actually tend to build products
that use different functions

184
00:09:33,121 --> 00:09:38,590
from different layers into a single set--
single-function device

185
00:09:38,590 --> 00:09:42,365
that serves multiple purposes.
And sometimes this is not a problem,

186
00:09:42,365 --> 00:09:45,005
does not create operational complexity;
if anything, simplifies

187
00:09:45,005 --> 00:09:47,862
the operational model.
And sometimes it actually can create

188
00:09:47,862 --> 00:09:50,815
some substantial complexity
by introducing a great degree

189
00:09:50,815 --> 00:09:54,177
of flexibility in the implementation.
So let me give you an example

190
00:09:54,177 --> 00:09:57,528
that actually works reasonably well,
that you probably all have at home:

191
00:09:57,528 --> 00:10:00,824
some kind of a home router,
that may look somewhat like this.

192
00:10:00,824 --> 00:10:02,738
If you actually look at it
under the covers,

193
00:10:02,738 --> 00:10:05,126
this involves a whole set
of different networking standards

194
00:10:05,126 --> 00:10:10,487
operating at different layers.
At the link layer, we have 802.11 WiFi,

195
00:10:10,487 --> 00:10:14,659
and various sub-versions of it.
We also have, since you have

196
00:10:14,659 --> 00:10:17,989
some wired ports,
you also have some 1GbE

197
00:10:17,989 --> 00:10:21,438
or 100 megabit Ethernet standards
that specify the links.

198
00:10:21,438 --> 00:10:24,917
Now, this device is also
a layer two Ethernet bridge,

199
00:10:24,917 --> 00:10:28,342
and so it basically incorporates
all of the layer two switching standards

200
00:10:28,342 --> 00:10:31,501
between the radios and the wired ports.

201
00:10:31,501 --> 00:10:34,660
And this device is also a router,

202
00:10:34,660 --> 00:10:37,819
and that is because you need to NAT
in order to connect to the Internet,

203
00:10:37,819 --> 00:10:40,490
to have a single --
since you have a single,

204
00:10:40,490 --> 00:10:42,091
externally-routable IP address.

205
00:10:42,091 --> 00:10:44,232
And so this is typically
a higher-level function

206
00:10:44,232 --> 00:10:46,314
that is implemented
within that same device,

207
00:10:46,314 --> 00:10:48,043
and then, although this one

208
00:10:48,043 --> 00:10:50,586
doesn't do it in particular,
but other devices routinely

209
00:10:50,586 --> 00:10:54,893
also incorporate DSL modem capabilities
into the same product.

210
00:10:54,893 --> 00:10:57,220
So this is a case where you have
product integration

211
00:10:57,220 --> 00:11:00,329
using different standards in a way
that is actually simplifying

212
00:11:00,329 --> 00:11:01,763
the operational model.

213
00:11:01,763 --> 00:11:03,777
But there are many counterexamples,

214
00:11:03,777 --> 00:11:06,912
and actually data center networking
is a good counterexample,

215
00:11:06,912 --> 00:11:10,659
where people have actually implemented
into a single device

216
00:11:10,659 --> 00:11:13,745
products that have
multiple different functionality

217
00:11:13,745 --> 00:11:15,866
from different standards
at different layers

218
00:11:15,866 --> 00:11:19,116
and can be configured
into arbitrary, complex ways.

219
00:11:19,116 --> 00:11:22,078
And so let me give you an example.
This picture shows a leading,

220
00:11:22,078 --> 00:11:24,962
probably the best,
highest density data center switch

221
00:11:24,962 --> 00:11:28,716
you can buy in the market today,
and these are some of the specs.

222
00:11:28,716 --> 00:11:30,821
And if you actually
read through the specs,

223
00:11:30,821 --> 00:11:34,102
what you see is these are
all Ethernet-related standards, right?

224
00:11:34,102 --> 00:11:37,309
We talk about link rates,
10 gigs, 40 gigs, 100 gigs,

225
00:11:37,309 --> 00:11:40,831
and we specifically talk about Ethernet,
and certainly "E", the capital "E"

226
00:11:40,831 --> 00:11:43,005
stands for Ethernet in this context.

227
00:11:43,005 --> 00:11:45,719
Now in reality,
this is not an Ethernet switch.

228
00:11:45,719 --> 00:11:47,803
This is a router,

229
00:11:47,803 --> 00:11:50,661
or this could be a switch,
or this could be a combination of the two.

230
00:11:50,661 --> 00:11:53,290
And as a matter of a fact
you can configure your solution

231
00:11:53,290 --> 00:11:57,229
to be some combination hybrid
between layer two switching

232
00:11:57,229 --> 00:12:00,339
and layer three routing -- and again,
I'm using the OSI terms

233
00:12:00,339 --> 00:12:03,445
that actually we should not be using
but people use them anyway --

234
00:12:03,445 --> 00:12:04,873
into a solution.

235
00:12:04,873 --> 00:12:07,645
Now, those combinations tend
to dramatically increase

236
00:12:07,645 --> 00:12:09,797
the level of complexity you have
in the network.

237
00:12:09,797 --> 00:12:11,040
It's what people call

238
00:12:11,040 --> 00:12:14,466
the god boxes of networking.
You can do many, many things with them,

239
00:12:14,466 --> 00:12:17,508
but it's extremely difficult
to reason about them into engineering,

240
00:12:17,508 --> 00:12:21,031
because we've effectively subsumed
so many different functions in it

241
00:12:21,031 --> 00:12:24,918
that is intended to be distinct,
into the same system.

242
00:12:24,918 --> 00:12:27,520
And it's very difficult for people
to reason through

243
00:12:27,520 --> 00:12:31,529
some of the possible interactions
between the different layers.

244
00:12:31,529 --> 00:12:35,359
Now that we've done
this detour in product reality,

245
00:12:35,359 --> 00:12:40,180
let's go back to the sound principles,
and specifically the sound principles

246
00:12:40,180 --> 00:12:45,464
of the Saltzer/Kaashoek textbook
and this three-layer model of networking.

247
00:12:45,464 --> 00:12:48,509
And that model actually allows
for a number of interesting use cases.

248
00:12:48,509 --> 00:12:51,545
And the first one I want to go through
is relatively simple, but very important.

249
00:12:51,545 --> 00:12:54,661
It's the concept of
what they call map composition,

250
00:12:54,661 --> 00:12:57,749
which basically is an application
of the layered model

251
00:12:57,749 --> 00:13:02,147
where rather than having
one end-to-end implementation,

252
00:13:02,147 --> 00:13:04,734
one network implementation,
and one link implementation,

253
00:13:04,734 --> 00:13:06,729
either the network
or the link implementation

254
00:13:06,729 --> 00:13:11,908
actually uses two independent layers,
one mapping directly onto the other.

255
00:13:11,908 --> 00:13:14,750
And so map composition
could either apply at the link layer,

256
00:13:14,750 --> 00:13:16,750
or it could apply at the networking layer.

257
00:13:16,750 --> 00:13:18,950
The mechanisms used
to implement them, by the way,

258
00:13:18,950 --> 00:13:21,351
are not exactly the same.

259
00:13:21,351 --> 00:13:23,701
Let me give you
just a very simple example.

260
00:13:23,701 --> 00:13:26,941
You can map one link technology
onto another link technology.

261
00:13:26,941 --> 00:13:30,082
This was done, for example,
for AppleTalk,

262
00:13:30,082 --> 00:13:32,747
which was a legacy networking technology
by Apple,

263
00:13:32,747 --> 00:13:34,192
which was then mapped

264
00:13:34,192 --> 00:13:37,240
on a link-by-link basis,
on a packet-by-packet basis,

265
00:13:37,240 --> 00:13:41,475
onto Ethernet networks.
Now this was over a decade ago.

266
00:13:41,475 --> 00:13:44,833
More recently, and
something I'm intimately familiar with,

267
00:13:44,833 --> 00:13:48,421
we were able to map Fibre Channel,
which was a proprietary,

268
00:13:48,421 --> 00:13:51,232
or at least
a specialized networking technology

269
00:13:51,232 --> 00:13:53,026
used in the storage world,
and we were able

270
00:13:53,026 --> 00:13:56,408
to map Fibre Channel frames
onto Ethernet frames.

271
00:13:56,408 --> 00:13:59,580
That is done by combining
an encapsulation mechanism,

272
00:13:59,580 --> 00:14:03,192
as well as flow control on the link,
link-level flow control,

273
00:14:03,192 --> 00:14:05,858
at the Ethernet layer,
which enabled this map composition,

274
00:14:05,858 --> 00:14:08,373
link to link.

275
00:14:08,373 --> 00:14:11,688
The other examples are
network-to-network map composition.

276
00:14:11,688 --> 00:14:13,923
So again, you have
within the networking layer

277
00:14:13,923 --> 00:14:16,794
two different layers,
one relying on the other.

278
00:14:16,794 --> 00:14:19,737
One example which is commonly used

279
00:14:19,737 --> 00:14:23,384
is the mapping of IP subnet
onto Ethernet broadcast domains.

280
00:14:23,384 --> 00:14:26,976
So even though I'm saying Ethernet here,
this is clearly a networking layer

281
00:14:26,976 --> 00:14:31,598
within the three-layer model
from the stack, from the book,

282
00:14:31,598 --> 00:14:36,375
and an IP subnet can be officially mapped
onto an Ethernet broadcast domain,

283
00:14:36,375 --> 00:14:38,603
specifically so that
you can efficiently implement

284
00:14:38,603 --> 00:14:41,818
a thing like IP multicast on top of that.

285
00:14:42,338 --> 00:14:44,643
Another example of map composition

286
00:14:44,643 --> 00:14:48,250
is the ability to compose
two different networks

287
00:14:48,250 --> 00:14:51,850
that are each autonomous,
and to have them peer with each other

288
00:14:51,850 --> 00:14:54,606
in order to allow communication,
in a transparent fashion,

289
00:14:54,606 --> 00:14:58,630
between any host
on either side of the network.

290
00:14:58,630 --> 00:15:01,808
That is what we call bridging
between autonomous systems,

291
00:15:01,808 --> 00:15:05,458
and that is the fundamental principle
behind the Internet.

292
00:15:05,458 --> 00:15:10,515
And this is a form of map composition,
because you have a--

293
00:15:10,515 --> 00:15:14,251
within the networking layer
you have an autonomous layer

294
00:15:14,251 --> 00:15:17,045
which is responsible for routing
within the autonomous system,

295
00:15:17,045 --> 00:15:20,520
and you have an external layer
which is responsible for peering

296
00:15:20,520 --> 00:15:24,367
between autonomous systems and making,
and appropriately routing the packets

297
00:15:24,367 --> 00:15:27,323
across these two layers.

298
00:15:28,083 --> 00:15:30,859
The other application, from the textbook,

299
00:15:30,859 --> 00:15:33,846
of the three-layer model is,
in my opinion,

300
00:15:33,846 --> 00:15:36,757
a little bit more interesting
and intellectually challenging,

301
00:15:36,757 --> 00:15:40,377
and it is the notion
of recursive composition.

302
00:15:40,377 --> 00:15:42,334
So let me first read the definition.

303
00:15:51,716 --> 00:15:54,253
Now obviously,
the concept itself is recursive,

304
00:15:54,253 --> 00:15:57,370
so that the link layer
of the first network,

305
00:15:57,370 --> 00:16:00,523
which rests on the end-to-end layer
of the second network.

306
00:16:00,523 --> 00:16:02,372
Now the link layer
of the second network itself

307
00:16:02,372 --> 00:16:05,149
can obviously rest
on the end-to-end layer of a third network

308
00:16:05,149 --> 00:16:09,320
and you can create your Russian dolls
as deep as you need

309
00:16:09,320 --> 00:16:11,361
for your particular application.

310
00:16:11,361 --> 00:16:14,322
So this is a way to think about
the application of that model.

311
00:16:14,322 --> 00:16:17,215
It's specific to communication systems,

312
00:16:17,215 --> 00:16:19,721
specifically specific
to this three-layer model,

313
00:16:19,721 --> 00:16:22,480
but allows for a recursive composition.

314
00:16:22,480 --> 00:16:25,999
It has many applications,
things that we use on an ongoing basis.

315
00:16:26,889 --> 00:16:29,138
Both dial-up and DSL are cases

316
00:16:29,138 --> 00:16:33,886
of recursive composition because
the link layer of the first network,

317
00:16:33,886 --> 00:16:40,118
which is what we think of our access
to our gateway device

318
00:16:40,118 --> 00:16:43,280
from our home router
to the access gateway,

319
00:16:43,280 --> 00:16:47,057
it actually rests
on an end-to-end protocol

320
00:16:47,057 --> 00:16:52,526
implemented between the two DSL modems:
the DSL modem and the DSLAM aggregator.

321
00:16:52,526 --> 00:16:54,860
And so you have a case
where one's link

322
00:16:54,860 --> 00:16:57,452
is somebody else's end-to-end network.

323
00:16:58,082 --> 00:17:00,524
This can also be used
in peer-to-peer networks,

324
00:17:00,524 --> 00:17:03,676
where the link between two nodes
in a peer-to-peer network

325
00:17:03,676 --> 00:17:05,143
actually rests on, obviously,

326
00:17:05,143 --> 00:17:07,700
the end-to-end layer
implemented by the operating system,

327
00:17:07,700 --> 00:17:10,851
typcially TCP or UDP sockets
that allow you to communicate

328
00:17:10,851 --> 00:17:13,356
between end hosts.

329
00:17:13,746 --> 00:17:14,821
That end-to-end layer

330
00:17:14,821 --> 00:17:21,127
exposes an abstraction that is used
as a link in a peer-to-peer network.

331
00:17:21,127 --> 00:17:25,371
The notion of these peer-to-peer networks
leads to the concept of overlays.

332
00:17:25,371 --> 00:17:29,376
Overlays are becoming very popular
right now with software-defined networks

333
00:17:29,376 --> 00:17:31,930
in which you can create
the abstraction of a network,

334
00:17:31,930 --> 00:17:35,286
maybe a layer two or a layer three network
that is actually implemented

335
00:17:35,286 --> 00:17:38,535
as an overlay
on top of an existing physical network.

336
00:17:38,535 --> 00:17:41,930
That has many applications,
in particular for multitenancy

337
00:17:41,930 --> 00:17:46,468
and cloud applications.
And it's also being used for Voice over IP

338
00:17:46,468 --> 00:17:48,988
and it's also being used by VPNs.

339
00:17:48,988 --> 00:17:52,858
Now this is actually such an interesting
and such an important topic

340
00:17:52,858 --> 00:17:56,660
that one of the papers
that you'll be reading next week--

341
00:17:56,660 --> 00:17:58,854
this week, sorry--

342
00:17:58,854 --> 00:18:02,147
is around an overlay network.
As a matter of fact, it's one of the first

343
00:18:02,147 --> 00:18:06,828
overlay networks that was proposed
within the systems community.

344
00:18:06,828 --> 00:18:10,335
And one of the interesting aspects
of this paper is that

345
00:18:10,335 --> 00:18:14,202
it is to be put in the context
of the scale of the Internet,

346
00:18:14,202 --> 00:18:17,028
and the number
of advertised autonomous systems

347
00:18:17,028 --> 00:18:18,048
within the Internet.

348
00:18:18,048 --> 00:18:20,988
And this is a chart that actually plots
the growth of the Internet,

349
00:18:20,988 --> 00:18:25,149
not in terms of end hosts,
but in terms of autonomous systems.

350
00:18:25,149 --> 00:18:26,748
Now, the paper that you're reading

351
00:18:26,748 --> 00:18:28,925
is pretty old because
it was the first paper

352
00:18:28,925 --> 00:18:32,971
in overlay networks,
trying to add resiliency to the Internet.

353
00:18:32,971 --> 00:18:38,256
It was published at SOSP in 2001,
so it's well over a decade old.

354
00:18:38,256 --> 00:18:40,874
At the time, the Internet was small.

355
00:18:40,874 --> 00:18:43,832
And so, when you read the paper
and as you read the paper,

356
00:18:43,832 --> 00:18:46,111
ask yourself the question:

357
00:18:46,111 --> 00:18:49,510
are the use cases
that are presented in this paper

358
00:18:49,510 --> 00:18:53,275
more applicable today,
with the rise of the number

359
00:18:53,275 --> 00:18:54,868
of autonomous systems?

360
00:18:54,868 --> 00:18:57,573
Or are they less applicable today,
and if so, why?

361
00:18:57,573 --> 00:19:01,288
So this is something to think about
as you're reading this paper.

362
00:19:01,288 --> 00:19:05,445
So, let's summarize
what we've covered in this module.

363
00:19:06,255 --> 00:19:09,677
We talked about
the importance of judicious layering.

364
00:19:09,677 --> 00:19:10,735
There are two extremes,

365
00:19:10,735 --> 00:19:14,862
and from philosophy perspective,
the OSI model and the IETF model.

366
00:19:14,862 --> 00:19:18,425
Then we actually went in-depth,
and I encourage you to read the portion

367
00:19:18,425 --> 00:19:21,288
of the texbook that covers it,
the three-layer model

368
00:19:21,288 --> 00:19:24,109
of the Saltzer/Kaashoek texbook.

369
00:19:24,109 --> 00:19:26,930
We did a detour to talk about architecture

370
00:19:26,930 --> 00:19:29,751
and the difference
between architecture and implementation.

371
00:19:29,751 --> 00:19:32,217
And then we talked about
two applications of the model,

372
00:19:32,217 --> 00:19:35,874
in particular recursive composition,
which you will be exposed to

373
00:19:35,874 --> 00:19:39,976
in the paper you're reading.
And this wraps it up for this week.

374
00:19:39,976 --> 00:19:43,228
Thank you very much.
Enjoy the papers.
