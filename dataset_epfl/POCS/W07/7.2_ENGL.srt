1
00:00:04,575 --> 00:00:08,124
Welcome back, now we're ready 
to talk about virtual machines.

2
00:00:08,347 --> 00:00:11,200
We're actually going to start to talk 
about it from a historical perspective.

3
00:00:12,642 --> 00:00:15,938
So a virtual machine is an abstraction, 
it's the abstraction of a computer.

4
00:00:16,622 --> 00:00:21,042
Think of a desktop, think of a laptop, 
think of a server, but rather than being

5
00:00:21,042 --> 00:00:23,270
implemented in hardware 
it is an abstraction

6
00:00:23,460 --> 00:00:26,032
that is implemented on 
top of that same hardware

7
00:00:26,032 --> 00:00:28,450
and can be multiplexed, multiple times.

8
00:00:29,013 --> 00:00:31,429
(Edouard) The formal definition 
of a virtual machine that is

9
00:00:31,429 --> 00:00:35,321
universally accepted today 
actually goes back to 1974.

10
00:00:35,698 --> 00:00:39,585
Virtual machines actually predate 1974 
by well over a decade

11
00:00:39,900 --> 00:00:43,850
but this definition from 1974 
is the one that we refer to today.

12
00:00:43,865 --> 00:00:45,984
And this is actually a definition 
from the paper

13
00:00:45,984 --> 00:00:47,237
that you'll be reading this week.

14
00:00:48,306 --> 00:00:51,853
And what Popek and Goldberg 
have defined is a virtual machine

15
00:00:51,853 --> 00:00:56,305
to be the efficient, isolated 
duplicate of a real machine.

16
00:00:56,585 --> 00:00:59,095
So in this diagram we have 
two virtual machines,

17
00:00:59,095 --> 00:01:03,513
each virtual machine has a CPU, 
memory, and NIC and has some disk.

18
00:01:03,861 --> 00:01:06,120
Each virtual machine is running 
an operating system,

19
00:01:06,120 --> 00:01:09,915
and each virtual machine 
is running multiple applications

20
00:01:10,168 --> 00:01:12,487
although we only show 
one application in this slide.

21
00:01:13,632 --> 00:01:16,720
And the key second part of the definition 
from Popek and Golberg

22
00:01:16,720 --> 00:01:20,671
is the definition of the piece of software
that creates the abstraction

23
00:01:20,671 --> 00:01:23,971
of the virtual machine which is called 
the virtual machine monitor.

24
00:01:23,971 --> 00:01:27,659
And the virtual machine monitor 
must have two important characteristics:

25
00:01:28,026 --> 00:01:30,981
it must be in complete 
control of the system.

26
00:01:31,733 --> 00:01:35,778
So the operating system is unable 
to actually control the system entirely,

27
00:01:35,972 --> 00:01:40,671
it can only control the virtual hardware 
of its virtual machine.

28
00:01:41,644 --> 00:01:44,401
And the second key attribute 
is that the virtual machine monitor

29
00:01:44,401 --> 00:01:48,164
must use the underlying hardware 
so that the programs running

30
00:01:48,164 --> 00:01:52,111
in the virtual machine show, at worst,
a minor decrease in speed.

31
00:01:52,675 --> 00:01:56,031
So Popek and Goldberg made that definition

32
00:01:56,031 --> 00:01:58,930
in an era where operating systems 
were already universal.

33
00:01:58,930 --> 00:02:03,274
So we assume that an application 
is running on top of an operating system

34
00:02:03,804 --> 00:02:09,170
and the performance requirement 
is that applications running on top

35
00:02:09,170 --> 00:02:11,845
of an operating system 
inside a virtual machine

36
00:02:11,845 --> 00:02:15,389
run more or less at the same speed 
as the same application running

37
00:02:15,389 --> 00:02:19,767
directly on an operating system in the 
absence of a virtual machine monitor.

38
00:02:20,316 --> 00:02:24,658
A critical definition from Popek 
and Goldberg back in 1974.

39
00:02:24,668 --> 00:02:27,784
So this definition comes from 1974.

40
00:02:27,784 --> 00:02:33,110
What's important to realize is by 1974,
virtual machines were actually already

41
00:02:33,110 --> 00:02:34,658
somewhat on their way out.

42
00:02:34,658 --> 00:02:38,770
So now let me even go back earlier 
before 1974 and give you a little bit

43
00:02:38,770 --> 00:02:41,087
of perspective as to where 
we are coming from.

44
00:02:41,808 --> 00:02:44,630
And specifically we need to go back
to the early mainframe era.

45
00:02:45,664 --> 00:02:49,335
Now in that era,
and by that I mean the 1960s.

46
00:02:49,877 --> 00:02:51,572
there were very few platforms.

47
00:02:51,572 --> 00:02:54,732
A computer was extremely expensive, 
it took a huge amount of space,

48
00:02:54,732 --> 00:02:59,876
they were extremely few of them 
and having the abstraction

49
00:02:59,876 --> 00:03:03,107
of a virtual machine was actually 
a very convenient tool

50
00:03:03,107 --> 00:03:05,052
that allowed the sharing of resources.

51
00:03:06,272 --> 00:03:10,285
If you could not afford your own computer,
at the very least you could have

52
00:03:10,285 --> 00:03:12,206
your own virtual machine part of the time.

53
00:03:12,676 --> 00:03:16,030
And that was compounded by the fact 
that the operating systems of the time

54
00:03:16,030 --> 00:03:18,411
were very limited in their capabilities.

55
00:03:19,133 --> 00:03:22,374
The concept of time sharing
of multi-users was not even available

56
00:03:22,374 --> 00:03:27,042
and so having a virtual machine 
allowed people to rapidly innovate

57
00:03:27,042 --> 00:03:30,520
within and among different forms 
of operating systems.

58
00:03:31,116 --> 00:03:32,902
You could have
different operating systems

59
00:03:32,902 --> 00:03:34,688
running in different virtual machines

60
00:03:34,688 --> 00:03:36,474
and that was a form of great efficiency.

61
00:03:37,723 --> 00:03:40,833
Now at the time, actually 
people went out of their way

62
00:03:40,852 --> 00:03:44,176
to make it efficient to create 
virtual machine monitors

63
00:03:44,500 --> 00:03:46,216
and there was hardware 
support for virtualization.

64
00:03:46,778 --> 00:03:48,817
As a matter of fact, the paper that 
you're reading this week

65
00:03:48,817 --> 00:03:51,641
from Popek and Goldberg 
actually is the formalization

66
00:03:51,641 --> 00:03:54,680
of a set of engineering principles 
that were by that point

67
00:03:54,680 --> 00:03:58,412
relatively well understood 
from an engineering perspective

68
00:03:58,412 --> 00:04:01,395
and were formalized 
and proven in their paper.

69
00:04:02,560 --> 00:04:07,356
Now what's interesting about that era 
is that very quickly we transition

70
00:04:08,267 --> 00:04:11,596
into a phase where 
virtual machines were rejected.

71
00:04:12,219 --> 00:04:16,047
And they were rejected in favor 
specifically of operating systems.

72
00:04:16,546 --> 00:04:19,273
And that is because companies realized 
that there was tremendous

73
00:04:19,273 --> 00:04:21,690
innovation potential within 
the operating system itself

74
00:04:21,971 --> 00:04:25,205
and it was actually more interesting 
to innovate within an operating system

75
00:04:25,205 --> 00:04:27,495
than add the virtual machine
monitor layer.

76
00:04:28,058 --> 00:04:32,353
And this actually gave us the rise of 
the modern operating system

77
00:04:32,353 --> 00:04:34,455
that we understand today.

78
00:04:35,555 --> 00:04:37,753
Now because virtual machines 
were less important

79
00:04:39,213 --> 00:04:41,170
as people build new 
generation of hardware,

80
00:04:41,180 --> 00:04:43,311
people start building hardware 
that actually didn't even

81
00:04:43,311 --> 00:04:45,949
have architectural support 
for virtualization.

82
00:04:47,014 --> 00:04:51,024
And by the mid 1990s virtual machines
were completely viewed

83
00:04:51,312 --> 00:04:53,410
as a relic of the past.

84
00:04:53,880 --> 00:04:57,326
There was no good reason 
to even get interested

85
00:04:57,326 --> 00:04:59,745
in virtual machines at the time.

86
00:05:00,313 --> 00:05:02,912
So I actually start to get involved, 
personally, in virtual machines

87
00:05:02,954 --> 00:05:07,224
around 1996 and at the time 
this was viewed

88
00:05:07,401 --> 00:05:10,200
an absolutely crazy research proposition.

89
00:05:11,156 --> 00:05:13,861
There had been no research done 
in the field of virtual machines

90
00:05:13,861 --> 00:05:15,405
for well over a decade.

91
00:05:15,803 --> 00:05:18,535
There were no new commercial products 
using virtual machines.

92
00:05:19,704 --> 00:05:22,527
And outside of the mainframe world 
nobody even understood

93
00:05:22,527 --> 00:05:25,312
or appreciated what you could actually do 
with virtual machines.

94
00:05:26,003 --> 00:05:29,121
Now our motivation at the time was that, 
there was actually a case

95
00:05:29,121 --> 00:05:31,554
to be made for the return of 
virtual machines

96
00:05:31,554 --> 00:05:33,873
simply when the operating system fails.

97
00:05:34,591 --> 00:05:37,559
And we were living at the time in an era 
where there was an assumption

98
00:05:37,559 --> 00:05:40,612
that the operating system 
could actually do its job properly.

99
00:05:40,635 --> 00:05:43,708
It could actually succeed in 
managing resources

100
00:05:43,708 --> 00:05:45,295
and abstracting hardware.

101
00:05:45,823 --> 00:05:48,827
And the work of my advisor 
at Stanford at the time,

102
00:05:48,827 --> 00:05:52,983
the prior work, was a system called Hive 
which was an operating system

103
00:05:52,983 --> 00:05:56,591
for a very large scale 
machine called Flash.

104
00:05:56,861 --> 00:05:59,085
And Hive was largely a negative result.

105
00:05:59,085 --> 00:06:02,384
Now of course it was a functional system, 
it actually did what it was

106
00:06:02,384 --> 00:06:04,740
supposed to do, it had some 
interesting research result.

107
00:06:05,352 --> 00:06:08,346
The real take away from the work in Hive 
was that the changes required

108
00:06:08,346 --> 00:06:10,354
to the underlying operating system,
which was UNIX,

109
00:06:10,354 --> 00:06:14,203
were way too extensive for an approach 
like Hive to make any sense

110
00:06:14,325 --> 00:06:16,914
and to be maintainable 
and to actually make it

111
00:06:16,914 --> 00:06:19,301
into a production level type of solution.

112
00:06:19,627 --> 00:06:21,622
And that is simply because 
the operating systems

113
00:06:21,622 --> 00:06:24,729
by that time already had gotten 
to be so big and so complex

114
00:06:25,138 --> 00:06:28,459
it was extremely difficult 
to innovate within the operating system.

115
00:06:28,772 --> 00:06:31,640
So there's a case for virtual machines 
to be made when

116
00:06:31,640 --> 00:06:33,749
the operating system fails because either

117
00:06:33,749 --> 00:06:35,788
it misses some appropriate functionality

118
00:06:35,788 --> 00:06:38,787
or simply because it is in practice

119
00:06:38,787 --> 00:06:41,735
too slow to innovate within an operating system.

120
00:06:42,990 --> 00:06:46,175
There's actually another reason why 
virtual machines might make sense

121
00:06:46,548 --> 00:06:50,344
and that actually rationale 
made sense in the '60s

122
00:06:50,344 --> 00:06:54,308
and it actually makes sense today 
in a very fundamental way

123
00:06:54,308 --> 00:06:56,130
in the context of cloud computing.

124
00:06:56,130 --> 00:06:58,594
And that is because the 
operating system is special.

125
00:06:59,693 --> 00:07:01,483
First, there can only be 
one operating system

126
00:07:01,483 --> 00:07:04,689
per machine and it can only be 
one administrator of that

127
00:07:04,689 --> 00:07:06,632
operating system per machine.

128
00:07:06,640 --> 00:07:09,654
Now because the operating system 
is special, there tends to be kind of

129
00:07:09,654 --> 00:07:12,533
a monolithic culture
around operating system

130
00:07:12,533 --> 00:07:15,139
and you have a lot of monopolies 
and because you have monopolies

131
00:07:15,139 --> 00:07:19,623
sometimes the operating systems 
actually fail to innovate at the speed

132
00:07:19,623 --> 00:07:21,881
in which they should if there was 
a little bit more competition.

133
00:07:22,449 --> 00:07:25,332
So two issues with respect 
to operating system being special,

134
00:07:25,332 --> 00:07:29,816
one is there can only be one leading 
to new monopolies

135
00:07:29,816 --> 00:07:33,263
and the second one is the fact that 
it is impossible to have

136
00:07:33,263 --> 00:07:38,470
two independent entities both be
administrators of an operating system.

137
00:07:38,470 --> 00:07:42,281
And so the introduction of the layering 
through the use of virtual machine

138
00:07:42,281 --> 00:07:44,321
actually solves both these problems.

139
00:07:45,824 --> 00:07:49,053
So this wraps up our module on 
a short history of virtual machines.

140
00:07:49,053 --> 00:07:51,842
Next up we'll go into the details 
of how you actually can build

141
00:07:51,842 --> 00:07:53,569
a virtual machine monitor.

142
00:07:53,569 --> 00:07:54,760
See you then.
