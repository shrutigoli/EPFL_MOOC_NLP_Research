1
00:00:00,025 --> 00:00:10,025
[AUDIO_VIDE]

2
00:00:12,410 --> 00:00:12,910
Bonjour.

3
00:00:14,230 --> 00:00:19,210
Allumer et éteindre une LED ou plusieurs
LED dans le cadre d'enseignes ou

4
00:00:19,210 --> 00:00:24,730
d'afficheurs, c'est bien ; faire varier
leur intensité, c'est encore mieux.

5
00:00:24,730 --> 00:00:25,450
C'est notre sujet.

6
00:00:26,530 --> 00:00:30,870
Nous allons découvrir le principe de
cette modulation de largeur d'impulsion.

7
00:00:30,870 --> 00:00:33,600
Nous allons regarder
quelle fréquence utiliser.

8
00:00:33,600 --> 00:00:36,240
Nous allons évidemment
apprendre à la programmer.

9
00:00:37,630 --> 00:00:41,560
Ensuite nous regarderons comment utiliser
cette modulation de largeur d'impulsion

10
00:00:41,560 --> 00:00:46,330
pour faire de la conversion numérique
analogique, et finalement nous

11
00:00:46,330 --> 00:00:51,830
regarderons comment les circuits logiques
peuvent nous aider à produire les signaux.

12
00:00:51,830 --> 00:00:55,800
Donc la question c'est : comment
faire varier l'intensité d'une LED?

13
00:00:57,080 --> 00:01:02,670
Bien entendu, nous connaissons ce montage
avec une LED et une résistance en série.

14
00:01:02,670 --> 00:01:08,550
Pour faire varier l'intensité
lumineuse avec une résistance fixe,

15
00:01:08,550 --> 00:01:11,140
on peut utiliser une tension variable.

16
00:01:12,800 --> 00:01:16,750
On peut aussi garder la tension fixe,
ce qui sera plus pratique,

17
00:01:16,750 --> 00:01:21,040
et alors faire varier la résistance,
mais ça c'est compliqué.

18
00:01:22,520 --> 00:01:26,370
Il existe des techniques plus évoluées
que les électroniciens connaissent.

19
00:01:26,370 --> 00:01:31,470
Ici on va utiliser un transistor
pour faire une source de courant

20
00:01:31,470 --> 00:01:35,580
et cette résistance va fixer le courant

21
00:01:35,580 --> 00:01:40,230
dans la charge du collecteur, quelle
que soit la charge en quelque sorte.

22
00:01:41,520 --> 00:01:45,610
Mais toutes ces solutions sont compliquées
et je vois mal comment on pourrait

23
00:01:45,610 --> 00:01:50,160
les utiliser par exemple avec un afficheur
qui a des milliers de diodes lumineuses.

24
00:01:51,360 --> 00:01:53,100
Il faut trouver une autre solution,

25
00:01:54,120 --> 00:01:57,130
et peut-être que cette solution
va tout simplement venir du

26
00:01:57,130 --> 00:02:00,575
tout premier programme que vous
avez écrit avec un microcontrôleur.

27
00:02:00,575 --> 00:02:03,210
Souvenez-vous, le programme
qui faisait clignoter une LED.

28
00:02:03,210 --> 00:02:08,375
Si nous la faisons clignoter
beaucoup plus rapidement,

29
00:02:08,375 --> 00:02:14,445
notre oeil ne verra plus le clignotement
mais percevra une baisse d'intensité.

30
00:02:15,795 --> 00:02:18,665
Essayons d'être encore un
petit peu plus astucieux.

31
00:02:18,665 --> 00:02:23,854
Nous allons bien avoir : allumé,
éteint, allumé,

32
00:02:23,854 --> 00:02:29,560
éteint de manière périodique,

33
00:02:29,560 --> 00:02:36,040
mais nous allons faire varier le temps
pendant lequel le signal est actif.

34
00:02:36,040 --> 00:02:41,550
Ici on est à peu près à 50 % du
temps actif, 50 % du temps inactif,

35
00:02:41,550 --> 00:02:46,396
ici on était à 25 %, ici à 75 %.

36
00:02:46,396 --> 00:02:54,130
On a donc bien la période qui est ici et
la largeur des impulsions qui est là.

37
00:02:55,350 --> 00:03:00,120
Alors on voit bien que la largeur
des impulsions va varier.

38
00:03:01,140 --> 00:03:07,780
Donc le principe de ce système, c'est bien
de la modulation de largeur d'impulsion,

39
00:03:07,780 --> 00:03:12,360
en anglais, Pulse Width Modulation, PWM.

40
00:03:12,360 --> 00:03:18,350
À quelle fréquence devons-nous pratiquer
cette modulation de largeur d'impulsion?

41
00:03:18,350 --> 00:03:21,410
Dans les applications électroniques,
les fréquences peuvent être extrêmement

42
00:03:21,410 --> 00:03:27,315
différentes de quelques hertz à quelques
dizaines de mégahertz, voire davantage.

43
00:03:27,315 --> 00:03:31,325
Pour les applications visuelles, l'oeil
a une fréquence limite de perception du

44
00:03:31,325 --> 00:03:34,265
clignotement qui est
approximativement à 75 hertz.

45
00:03:34,265 --> 00:03:39,305
On peut se souvenir de cette
valeur en pensant qu'un tube

46
00:03:39,305 --> 00:03:45,620
fluorescent alimenté à une tension
électrique sinusoïdale de 50 hertz

47
00:03:45,620 --> 00:03:52,130
produit un clignotement de 100 hertz,
et il n'est pas trop dérangeant.

48
00:03:52,130 --> 00:03:54,900
C'est d'ailleurs souvent
cette fréquence de 100 hertz

49
00:03:54,900 --> 00:03:58,160
qu'on va utiliser dans les
enseignes et afficheurs à LED.

50
00:03:59,640 --> 00:04:03,770
Je signale juste qu'à l'intérieur de notre
oeil, les cônes et les bâtonnets n'ont pas

51
00:04:03,770 --> 00:04:08,860
la même fréquence limite et que si on peut
monter au-delà de 100 hertz, jusqu'à 200,

52
00:04:08,860 --> 00:04:12,418
voire 300 hertz,
on a une meilleure qualité visuelle.

53
00:04:12,418 --> 00:04:17,970
Alors comment fait-on pour programmer
des signaux PWM avec un microcontrôleur?

54
00:04:17,970 --> 00:04:21,520
Eh bien fondamentalement il faut allumer,

55
00:04:21,520 --> 00:04:26,110
attendre, éteindre, attendre,
et bien entendu répéter.

56
00:04:27,240 --> 00:04:29,426
Voilà comment peut se
présenter un programme.

57
00:04:29,426 --> 00:04:33,780
On initialise la sortie,

58
00:04:33,780 --> 00:04:38,694
on va régler la valeur du PWM ici à 25 %.

59
00:04:38,694 --> 00:04:41,200
Bien sûr cette valeur

60
00:04:41,200 --> 00:04:44,900
dans un programme plus complexe
pourra changer en cours du temps.

61
00:04:44,900 --> 00:04:51,010
Et dans la boucle principale, on va
allumer la LED, attendre un certain délai,

62
00:04:51,010 --> 00:04:56,910
100 fois PWM Led, donc ici 100 fois 25.

63
00:04:56,910 --> 00:05:02,300
On va éteindre la LED,
et pendant le solde de la période,

64
00:05:02,300 --> 00:05:07,005
c'est-à-dire 100 fois 100
moins cette variable,

65
00:05:07,005 --> 00:05:12,665
on va donc éteindre la LED,
et on répète dans la boucle loop.

66
00:05:12,665 --> 00:05:15,735
Il est clair qu'il n'y a pas qu'une
seule LED dans une enseigne ou dans un

67
00:05:15,735 --> 00:05:16,635
afficheur à LED.

68
00:05:16,635 --> 00:05:21,110
Comment programmer plusieurs
signaux PWM en même temps?

69
00:05:21,110 --> 00:05:24,190
Eh bien ça peut être
extrêmement compliqué.

70
00:05:24,190 --> 00:05:28,330
Si la boucle principale dure
un période complète du PWM

71
00:05:28,330 --> 00:05:31,990
comme nous venons de le faire,
c'est quasiment impossible.

72
00:05:31,990 --> 00:05:35,920
Ce sera plus facile en tout cas si la
boucle principale dure le temps de la plus

73
00:05:35,920 --> 00:05:39,440
courte impulsion possible du PWM.

74
00:05:39,440 --> 00:05:41,100
Regardons un peu le programme suivant.

75
00:05:42,120 --> 00:05:44,450
Il est assez similaire au précédent.

76
00:05:44,450 --> 00:05:50,880
Ici nous avons fixé des valeurs non pas
en pourcents mais en 256e de la période.

77
00:05:50,880 --> 00:05:55,091
Ici j'ai mis 64 qui correspond
bien toujours à 25 %.

78
00:05:55,091 --> 00:06:01,189
On a une boucle qui dure
systématiquement un certain temps,

79
00:06:02,310 --> 00:06:10,100
ici 39 microsecondes,
et on va lorsque ce compteur est à 0,

80
00:06:10,100 --> 00:06:15,320
allumer la LED et lorsque ce même compteur

81
00:06:15,320 --> 00:06:20,850
arrive à la valeur demandée,
nos 25 %, on éteint la LED.

82
00:06:22,425 --> 00:06:27,325
Remarquez ici que notre compteur
a été seulement incrémenté parce que

83
00:06:27,325 --> 00:06:32,255
c'est un compteur 8 bits
et qu'il va automatiquement

84
00:06:32,255 --> 00:06:37,335
passer de 255 à 0 à la fin de son cycle.

85
00:06:39,045 --> 00:06:40,895
Comment utiliser ce PWM?

86
00:06:42,040 --> 00:06:45,930
Eh bien dans nos enseignes et afficheurs,
nous allons créer des séquences.

87
00:06:47,050 --> 00:06:52,240
Prenons maintenant un exemple plus
simple qui imite simplement le repos

88
00:06:52,240 --> 00:06:54,640
avec une seule diode lumineuse.

89
00:06:54,640 --> 00:06:59,120
Pour imiter le repos,
on va prendre donc la respiration.

90
00:06:59,120 --> 00:07:04,930
On inspire, on expire,
puis il y a une zone de repos.

91
00:07:04,930 --> 00:07:09,580
Remarquez ici l'échelle,
4 secondes pour la durée totale.

92
00:07:10,680 --> 00:07:14,420
Alors ne nous trompons pas,
on va bien le faire en PWM.

93
00:07:14,420 --> 00:07:20,520
Par exemple ici lorsque le PWM aura
environ 25 %, on aura ce type de signal.

94
00:07:21,530 --> 00:07:27,450
Ici on aura 75 %, ce type de signal.

95
00:07:27,450 --> 00:07:33,830
À 50 %, on voit que les deux
parties de la période sont égales.

96
00:07:33,830 --> 00:07:40,600
Lorsque l'intensité est nulle, on a 0,
lorsque l'intensité est maximale, on a 1.

97
00:07:40,600 --> 00:07:44,795
Nous allons reprendre le
programme de tout à l'heure.

98
00:07:44,795 --> 00:07:49,540
Souvenez-vous que nous avions
un délai fixe dans la boucle.

99
00:07:50,670 --> 00:07:53,710
Nous avons l'enclenchement,
le déclenchement du PWM,

100
00:07:53,710 --> 00:07:59,750
et maintenant en fonction du temps,
ce temps,

101
00:07:59,750 --> 00:08:04,130
ce sera un compteur de cycles,
le cycle étant de 10 millisecondes,

102
00:08:05,200 --> 00:08:08,720
en fonction de ce compteur,
on va calculer.

103
00:08:10,530 --> 00:08:16,540
Ici c'est une droite montante,
ici c'est une droite descendante,

104
00:08:16,540 --> 00:08:20,010
et pour le reste du cycle,
c'est une valeur nulle.

105
00:08:20,010 --> 00:08:25,240
On a donc bien comparé à la valeur 100
qui correspond à une seconde à 100 hertz,

106
00:08:25,240 --> 00:08:31,270
à la valeur 200, et la valeur
400 correspond à tout le cycle,

107
00:08:31,270 --> 00:08:34,260
et une remise à 0 à la fin des 4 secondes.

108
00:08:35,270 --> 00:08:40,650
Ce système nous a permis de transmettre
vers l'extérieur avec une seule patte

109
00:08:40,650 --> 00:08:46,320
numérique d'un microcontrôleur
une valeur analogique.

110
00:08:46,320 --> 00:08:53,460
On a en quelque sorte créé un
convertisseur numérique analogique.

111
00:08:53,460 --> 00:08:58,850
Si nous prenons l'intégrale
de ce signal PWM,

112
00:08:58,850 --> 00:09:03,950
on voit qu'on va monter ici,
descendre, on est stable.

113
00:09:09,540 --> 00:09:11,768
Si le PWM a une valeur plus faible,
on va descendre,

114
00:09:11,768 --> 00:09:13,600
si le PWM a une valeur plus élevée,
on va monter.

115
00:09:15,460 --> 00:09:19,320
Donc je rappelle, c'est bien une
intégrale ici qu'on a produite,

116
00:09:19,320 --> 00:09:23,330
qu'on peut réaliser très simplement avec
un condensateur et avec une résistance.

117
00:09:23,330 --> 00:09:29,160
On peut donc sortir une tension
variable de notre microcontrôleur

118
00:09:29,160 --> 00:09:34,030
grâce à ce PWM,
et donc un filtre dit passe-bas,

119
00:09:34,030 --> 00:09:37,960
qu'on peut réaliser par exemple avec
une résistance et un condensateur.

120
00:09:37,960 --> 00:09:41,130
Vous avez vu que c'est déjà un peu
compliqué de gérer de la modulation de

121
00:09:41,130 --> 00:09:44,360
largeur d'impulsion sur une
sortie d'un microcontrôleur.

122
00:09:44,360 --> 00:09:47,190
Comment devra-t-on le faire
si on a beaucoup de sorties?

123
00:09:48,510 --> 00:09:53,280
Il faudrait pouvoir soulager le
microcontrôleur d'une partie du travail.

124
00:09:53,280 --> 00:09:57,620
Eh bien on va pouvoir le faire avec
des circuits logiques spécialisés.

125
00:09:58,620 --> 00:09:59,800
Regardons ce shéma.

126
00:09:59,800 --> 00:10:04,940
À son centre, nous avons un compteur,
ici un compteur 8 bits.

127
00:10:06,740 --> 00:10:11,780
S'il est piloté par un oscillateur,
il va donc prendre au cours

128
00:10:11,780 --> 00:10:17,800
du temps les valeurs successives 0,
1, 2, 3 jusqu'à 255.

129
00:10:17,800 --> 00:10:22,690
Ici nous avons un élément qui
est un détecteur de zéros.

130
00:10:22,690 --> 00:10:28,570
On va activer la sortie lorsque le
compteur sera à 0, et on va justement

131
00:10:28,570 --> 00:10:35,020
d'ailleurs mettre à 1 une bascule à cet
instant, c'est-à-dire au début du cycle.

132
00:10:35,020 --> 00:10:38,230
Ici nous avons un montage un petit peu
plus compliqué avec un comparateur

133
00:10:38,230 --> 00:10:43,030
d'égalité entre la valeur d'en
haut et la valeur d'en bas.

134
00:10:43,030 --> 00:10:48,730
Cette valeur d'en bas étant mise dans un
registre, ce sera notre valeur du PWM,

135
00:10:48,730 --> 00:10:52,905
par exemple les fameux 64
qui représentaient le 25 %,

136
00:10:52,905 --> 00:10:57,520
et quand on sera donc égal à 64,
on aura un reset.

137
00:10:57,520 --> 00:11:01,635
Vous voyez bien qu'on
a créé du PWM par ce moyen.

138
00:11:01,635 --> 00:11:05,050
Peut-être que ce diagramme
des temps va vous aider.

139
00:11:05,050 --> 00:11:11,230
Notre compteur compte de 0 à 255,
puis revient à 0 et continue.

140
00:11:11,230 --> 00:11:16,780
À 0, on met la sortie à 1.

141
00:11:16,780 --> 00:11:22,290
À 25 % ou plus exactement à la valeur
du PWM, on remet la sortie à 0,

142
00:11:22,290 --> 00:11:27,310
et on voit bien qu'on a généré
un signal du type PWM.

143
00:11:29,555 --> 00:11:33,510
Pensez-vous que je sois sérieux en vous
disant qu'on va commencer à prendre un

144
00:11:33,510 --> 00:11:37,860
compteur, un comparateur, un oscillateur
et tout ça pour réaliser ce PWM?

145
00:11:39,030 --> 00:11:44,280
En fait, ces circuits se trouvent à
l'intérieur des microcontrôleurs.

146
00:11:44,280 --> 00:11:45,900
On les appelle des timers,

147
00:11:45,900 --> 00:11:49,059
et c'est un sujet que nous allons
étudier plus tard dans ce cours.

148
00:11:50,120 --> 00:11:55,380
Nous avons donc vu le principe du PWM,
nous avons vu que

149
00:11:55,380 --> 00:11:59,780
pour les applications visuelles il fallait
une fréquence supérieure à 100 hertz,

150
00:11:59,780 --> 00:12:03,620
nous avons regardé comment
programmer ce PWM,

151
00:12:03,620 --> 00:12:08,830
et nous avons vu que c'était un peu
compliqué, nous avons vu comment appliquer

152
00:12:08,830 --> 00:12:13,145
ce PWM à des convertisseurs
numériques analogiques

153
00:12:13,145 --> 00:12:17,285
et finalement nous avons vu qu'il est
possible d'avoir des circuits spécialisés

154
00:12:17,285 --> 00:12:21,985
qui sont aujourd'hui inclus dans les
microcontrôleurs pour produire du PWM.