1
00:00:00,025 --> 00:00:10,025
[AUDIO_VIDE]

2
00:00:12,880 --> 00:00:14,900
Bonjour.
Les LED permettent de réaliser de

3
00:00:14,900 --> 00:00:19,500
très jolies enseignes à motifs
fixes de manière très simple

4
00:00:19,500 --> 00:00:21,070
que nous pouvons ensuite animer.

5
00:00:22,110 --> 00:00:25,600
Je vais vous expliquer le principe
de ces enseignes à motifs fixes

6
00:00:25,600 --> 00:00:28,010
et le découpage en segments.

7
00:00:28,010 --> 00:00:32,370
Nous verrons ensuite des schémas de
commandes basés sur des transistors

8
00:00:32,370 --> 00:00:36,060
et comment relier des LED
en série et en parallèle,

9
00:00:36,060 --> 00:00:40,340
et finalement nous parlerons de
programmation de ces animations.

10
00:00:40,340 --> 00:00:45,110
Prenons par exemple un morceau
de plexiglas, faisons des trous

11
00:00:47,090 --> 00:00:50,420
selon les motifs que nous voyons ici

12
00:00:51,630 --> 00:00:56,560
et nous réalisons une enseigne
lumineuse qui annonce un hôtel.

13
00:00:56,560 --> 00:01:01,720
Voici un autre exemple qui pourra
être mis devant une pharmacie.

14
00:01:01,720 --> 00:01:07,140
L'idée va consister à
regrouper les LED en motifs.

15
00:01:07,140 --> 00:01:12,150
On pourrait par exemple avoir un premier
groupe de LED qui serait le cadre,

16
00:01:13,240 --> 00:01:16,770
un groupe de LED par caractères.

17
00:01:16,770 --> 00:01:18,320
Pour cette enseigne,

18
00:01:18,320 --> 00:01:23,510
voici un exemple de la manière dont
nous pourrions regrouper les LED.

19
00:01:23,510 --> 00:01:28,570
On se souvient qu'une LED normale consomme
approximativement 10 milliampères.

20
00:01:28,570 --> 00:01:30,600
Le microcontrôleur, lui,

21
00:01:30,600 --> 00:01:36,270
peut fournir 10 à 20 milliampères
sur chacune de ses sorties.

22
00:01:36,270 --> 00:01:42,400
Et encore il y a des limites pour un total
de courant pour tout le microcontrôleur.

23
00:01:42,400 --> 00:01:48,270
On voit donc qu'il va falloir
utiliser un élément d'amplification,

24
00:01:48,270 --> 00:01:51,319
et ici on utilisera tout
naturellement le transistor.

25
00:01:52,390 --> 00:01:59,120
Voilà ici le transistor, avec son émetteur
connecté à la masse, un transistor N P N.

26
00:01:59,120 --> 00:02:01,620
Dans le circuit de collecteurs,

27
00:02:01,620 --> 00:02:06,610
on place plusieurs diodes lumineuses avec
chacune sa résistance de limitation,

28
00:02:07,670 --> 00:02:12,535
et on va pouvoir allumer ou éteindre
l'ensemble des diodes lumineuses en

29
00:02:12,535 --> 00:02:18,035
faisant passer du courant dans la
base du transistor, et pour cela on

30
00:02:18,035 --> 00:02:23,245
utilise une broche du microcontrôleur et
une résistance de limitation de la base.

31
00:02:23,245 --> 00:02:27,395
Il suffira d'avoir suffisamment de
courant pour saturer le transistor.

32
00:02:28,445 --> 00:02:34,230
Pour éviter d'utiliser une résistance
de limitation par diode lumineuse,

33
00:02:34,230 --> 00:02:38,060
et je rappelle que c'est aussi
de l'énergie qui est gaspillée,

34
00:02:38,060 --> 00:02:41,380
on va pouvoir utiliser ce
montage avec une seule

35
00:02:42,640 --> 00:02:45,830
résistance pour plusieurs
diodes lumineuses.

36
00:02:45,830 --> 00:02:49,660
Alors bien entendu,
il faudra une tension suffisante.

37
00:02:49,660 --> 00:02:55,715
Si je mets par exemple ici 12 volts,
je vais pouvoir mettre cinq LED de

38
00:02:55,715 --> 00:03:00,545
couleur rouge dont on se souvient que la
tension directe est d'environ deux volts.

39
00:03:01,975 --> 00:03:06,645
Même avec un transistor entrée de
gamme comme le B C 337 qui est

40
00:03:06,645 --> 00:03:10,880
capable d'avoir un courant de collecteur
de l'ordre de 500 milliampères,

41
00:03:10,880 --> 00:03:16,700
il est possible d'avoir un nombre
de branches qui est jusqu'à 50,

42
00:03:16,700 --> 00:03:23,440
et s'il y a cinq LED par branche
ça fait un joli total de 250 LED

43
00:03:23,440 --> 00:03:27,940
commandées par un seul transistor
et une broche de microcontrôleur.

44
00:03:29,570 --> 00:03:35,195
Pour calculer cette résistance,
il va falloir utiliser la loi d'Ohm.

45
00:03:35,195 --> 00:03:38,325
On peut estimer la tension qui est là.

46
00:03:38,325 --> 00:03:45,785
Si j'ai 12 volts ici, si j'ai cinq fois
deux volts, il va me rester deux volts.

47
00:03:45,785 --> 00:03:50,445
Deux volts, 10 milliampères, je peux
calculer la résistance correspondante.

48
00:03:51,550 --> 00:03:56,970
Comme en fait je ne sais pas exactement
la tension directe, ce que je vais

49
00:03:56,970 --> 00:04:03,100
faire c'est que je vais mettre la valeur
calculée, je vais mesurer la tension

50
00:04:03,100 --> 00:04:09,100
donc calculer le courant et éventuellement
ajuster la valeur en conséquence.

51
00:04:09,100 --> 00:04:10,360
Selon les couleurs,

52
00:04:10,360 --> 00:04:16,350
il sera peut-être nécessaire de faire
varier le nombre de LED par branche

53
00:04:16,350 --> 00:04:21,590
et évidemment d'adapter également les
résistances de limitation de courant.

54
00:04:21,590 --> 00:04:24,540
J'aimerais juste signaler
que la question du

55
00:04:24,540 --> 00:04:27,660
câblage peut devenir
relativement importante.

56
00:04:27,660 --> 00:04:31,790
Chaque groupe de LED, ici c'est un petit
groupe mais on peut avoir des groupes

57
00:04:31,790 --> 00:04:35,170
évidemment beaucoup plus importants,
consomme un certain courant,

58
00:04:35,170 --> 00:04:39,970
donc il y aurait en principe le
même courant ici, ici et là,

59
00:04:39,970 --> 00:04:45,000
et bien entendu aussi à travers
chacun de ces transistors, mais selon

60
00:04:45,000 --> 00:04:51,900
le câblage on va totaliser des courants,
soit du côté moins, soit du côté plus.

61
00:04:51,900 --> 00:04:58,110
Il faudra donc soigner le câblage, tant
dans cette partie que dans cette partie,

62
00:04:58,110 --> 00:05:03,420
là où le courant est le plus important,
pour éviter des chutes de tension.

63
00:05:03,420 --> 00:05:08,540
La programmation des animations
semble a priori extrêmement simple.

64
00:05:08,540 --> 00:05:12,520
C'est presque aussi simple que le tout
premier programme que nous avons écrit

65
00:05:12,520 --> 00:05:14,370
qui faisait clignoter une LED.

66
00:05:14,370 --> 00:05:19,420
On va faire alterner la mise
d'une ou de plusieurs LED

67
00:05:19,420 --> 00:05:24,440
dans un certain état et des délais,
des attentes.

68
00:05:24,440 --> 00:05:29,440
Ici on voit qu'on va allumer la première,
la deuxième et cetera,

69
00:05:29,440 --> 00:05:33,400
donc les huit LED pour
former un petit chenillard.

70
00:05:33,400 --> 00:05:38,490
C'est une animation très classique
sur des enseignes lumineuses.

71
00:05:39,720 --> 00:05:44,090
Ici, on attend un moment que
toutes les LED soient allumées,

72
00:05:44,090 --> 00:05:49,600
puis on fait clignoter l'ensemble du
mot pour le mettre bien en évidence,

73
00:05:49,600 --> 00:05:52,790
puis une petite pause avant
la reprise de l'animation.

74
00:05:54,200 --> 00:05:58,520
Mais cette apparente
simplicité cache en fait

75
00:05:58,520 --> 00:06:03,300
le fait qu'il est souvent assez
difficile de programmer des animations.

76
00:06:03,300 --> 00:06:06,460
Les programmes deviennent
souvent extrêmement longs.

77
00:06:06,460 --> 00:06:11,360
Si on avait utilisé des digital write
au lieu d'utiliser cette instruction,

78
00:06:11,360 --> 00:06:18,380
eh bien un nombre important de mémoire,
d'octets, serait utilisé à chaque appel et

79
00:06:18,380 --> 00:06:23,780
on serait limité pour un microcontrôleur
donné à des animations limitées.

80
00:06:23,780 --> 00:06:27,630
Lorsqu'on a beaucoup de sorties,
on cherche souvent à faire des animations

81
00:06:27,630 --> 00:06:32,340
relativement complexes, qui risquent donc
de prendre beaucoup de place en mémoire.

82
00:06:32,340 --> 00:06:37,930
Ici, on a fait un petit peu mieux
en utilisant les appels directs

83
00:06:37,930 --> 00:06:42,440
sur les registres du microcontrôleur,
mais malgré tout on va gaspiller beaucoup

84
00:06:42,440 --> 00:06:46,856
de place et surtout les programmes vont
très rapidement devenir illisibles.

85
00:06:46,856 --> 00:06:52,840
Bien entendu on peut créer
des procédures spécifiques.

86
00:06:52,840 --> 00:06:58,070
Ici, par exemple, j'aurais pu utiliser
la procédure chenillard ajoute

87
00:06:58,070 --> 00:07:04,130
avec un paramètre 200 qui est donc le
cinquième de seconde, 200 millisecondes,

88
00:07:04,130 --> 00:07:10,050
avec ici une boucle for qui,
successivement, va ajouter donc va allumer

89
00:07:10,050 --> 00:07:16,790
une LED supplémentaire sur le i-ième
rang pour i qui va de zéro jusqu'à sept

90
00:07:16,790 --> 00:07:22,200
avec un délai entre deux qui est égal
au paramètre d'entrée de l'attente.

91
00:07:22,200 --> 00:07:25,490
On peut donc ainsi écrire des animations

92
00:07:25,490 --> 00:07:29,090
par des procédures et c'est une
voie qui peut être explorée.

93
00:07:30,470 --> 00:07:35,340
Donc les programmes peuvent devenir
rapidement longs, peu lisibles,

94
00:07:35,340 --> 00:07:40,330
dépasser même la taille mémoire du
microcontrôleur, et on explorera d'autres

95
00:07:40,330 --> 00:07:45,270
possibilités comme par exemple la
création d'un langage spécifique pour

96
00:07:45,270 --> 00:07:50,100
une application donnée qui permettra
d'avoir des sortes de tableaux qui

97
00:07:50,100 --> 00:07:54,550
correspondent à des instructions, un petit
peu comme les instructions assembleur d'un

98
00:07:54,550 --> 00:08:00,650
microcontrôleur, et ça permettra
d'économiser beaucoup de place mémoire.

99
00:08:00,650 --> 00:08:05,090
Je signale aussi qu'on va souvent
être intéressé à avoir des LED

100
00:08:05,090 --> 00:08:07,170
d'intensité variable.

101
00:08:07,170 --> 00:08:13,030
Pour cela,
on utilisera le P W M ou encore le B C M.

102
00:08:13,030 --> 00:08:17,820
Tous ces sujets,
langage interprété, P W M, B C M,

103
00:08:17,820 --> 00:08:19,870
seront vus plus tard dans ce cours.

104
00:08:21,400 --> 00:08:25,470
Nous avons vu le principe de ces
enseignes à motifs fixes et le découpage

105
00:08:25,470 --> 00:08:30,120
en segments, nous avons vu les schémas
électroniques avec des transistors

106
00:08:30,120 --> 00:08:33,000
en mettant les diodes en
série et en parallèle,

107
00:08:33,000 --> 00:08:36,330
nous avons abordé la
programmation des animations.

108
00:08:37,470 --> 00:08:41,410
J'aimerais ajouter que
ce sujet est intéressant

109
00:08:41,410 --> 00:08:45,970
par exemple pour des jeunes
intéressés à créer une entreprise.

110
00:08:45,970 --> 00:08:49,900
Je connais beaucoup de jeunes,
en particulier en Afrique, qui,

111
00:08:49,900 --> 00:08:55,270
avec très peu de moyens, ont commencé
à réaliser des enseignes un peu basées

112
00:08:55,270 --> 00:09:00,950
sur cette technologie, qui sont, qui
ont pu vendre ces enseignes, qui ont pu

113
00:09:00,950 --> 00:09:06,460
engager des collaborateurs, et qui ont
pu ainsi développer l'économie locale.

114
00:09:06,460 --> 00:09:09,160
Plutôt que d'acheter des
produits à l'étranger,

115
00:09:09,160 --> 00:09:12,060
ils les ont fabriqués
dans leur propre pays.

116
00:09:12,060 --> 00:09:15,410
J'aimerais que ce MOOC
soit aussi une occasion

117
00:09:15,410 --> 00:09:19,830
d'encourager l'entrepreneuriat et en
particulier l'entrepreneuriat des jeunes.