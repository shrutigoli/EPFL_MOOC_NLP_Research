1
00:00:00,012 --> 00:00:06,821
[AUDIO_VIDE]

2
00:00:06,821 --> 00:00:14,020
[AUDIO_VIDE] Bonjour,

3
00:00:14,020 --> 00:00:19,660
on trouve toutes sortes de rubans de LED à
l'heure actuelle, en anglais, LED strips.

4
00:00:19,660 --> 00:00:24,770
Nous allons voir quels sont les différents
types de rubans qui sont disponibles.

5
00:00:24,770 --> 00:00:28,750
Nous allons voir comment ils
s'organisent à l'intérieur,

6
00:00:28,750 --> 00:00:34,260
comment leur envoyer les bons signaux
de commande, et comment les programmer.

7
00:00:35,520 --> 00:00:38,330
Regardons d'abord les rubans uniformes.

8
00:00:38,330 --> 00:00:39,928
Ils peuvent être monochromes.

9
00:00:39,928 --> 00:00:44,640
Dans ce cas-là,
on a approximativement ce schéma.

10
00:00:44,640 --> 00:00:50,270
Généralement l'alimentation est
en 12 volts, et plusieurs LED

11
00:00:50,270 --> 00:00:55,350
sont reliées en séries, avec naturellement
une résistance de limitation.

12
00:00:55,350 --> 00:01:02,200
Donc il faut amener la tension positive,
et la masse tout au long du ruban.

13
00:01:03,310 --> 00:01:07,360
De manière assez similaire,
on a des écrans,

14
00:01:07,360 --> 00:01:11,480
RGB, toujours uniformes.

15
00:01:12,680 --> 00:01:19,040
On a ici, par exemple, une anode commune,
et des cathodes séparées.

16
00:01:20,910 --> 00:01:24,760
Une cathode pour le rouge,
une pour le vert, une pour le bleu.

17
00:01:25,860 --> 00:01:30,900
Dans tous les cas on a des
signaux du type, P W M,

18
00:01:30,900 --> 00:01:35,550
qui vont nous permettre de
varier l'intensité, mais,

19
00:01:35,550 --> 00:01:39,090
donc l'intensité de
toutes les LED à la fois.

20
00:01:39,090 --> 00:01:42,930
Le circuit de commande
pourra ressembler à ceci.

21
00:01:42,930 --> 00:01:46,830
Dans le cas d'une anode commune,

22
00:01:46,830 --> 00:01:51,620
on a des transistors du type N,
ici j'ai mis des transistors N-MOS.

23
00:01:51,620 --> 00:01:54,380
On sait que ces transistors
N-MOS ont l'avantage,

24
00:01:54,380 --> 00:01:59,588
sur les transistors bipolaires,
d'avoir une résistance plus faible,

25
00:01:59,588 --> 00:02:02,900
donc de dissiper moins de puissance.

26
00:02:02,900 --> 00:02:07,240
La résistance est optionnelle puisque une
grille de transistors MOS est commandée

27
00:02:07,240 --> 00:02:12,950
par une tension, et on peut relier
ces points à un micro-contrôleur.

28
00:02:12,950 --> 00:02:16,170
C'est très différent dans le
cas des rubans adressables.

29
00:02:17,310 --> 00:02:22,580
Chaque LED peut recevoir une
couleur et une intensité

30
00:02:22,580 --> 00:02:25,070
de manière indépendante des autres LED.

31
00:02:26,080 --> 00:02:32,270
C'est donc ce qu'on appelle des rubans
adressables, Addressable strips.

32
00:02:32,270 --> 00:02:36,205
La technique des rubans adressables
est extrêmement différente.

33
00:02:36,205 --> 00:02:40,920
Dans ce cas-là,
chaque LED va recevoir une couleur

34
00:02:40,920 --> 00:02:44,560
et une intensité indépendamment
des LED voisines.

35
00:02:46,080 --> 00:02:51,100
Alors, comment réussir à connecter
ensemble ces LED indépendantes?

36
00:02:51,100 --> 00:02:57,350
Eh bien la technique la plus
souvent utilisée consiste à

37
00:02:57,350 --> 00:03:05,570
envoyer sur chaque pixel,
de manière commune, le GND et le plus.

38
00:03:05,570 --> 00:03:11,120
Donc l'alimentation arrive à chaque
module, Par contre, le signal de commande

39
00:03:11,120 --> 00:03:17,960
arrive sur un premier module, puis part
vers le suivant, et ainsi de suite.

40
00:03:17,960 --> 00:03:20,870
Et vous devinez certainement
que nous allons utiliser pour

41
00:03:20,870 --> 00:03:24,200
ça des registres séries parallèles.

42
00:03:24,200 --> 00:03:29,120
Mais pour éviter d'avoir
plusieurs signaux qui vont

43
00:03:29,120 --> 00:03:33,790
d'un pixel à l'autre,
on utilise généralement une horloge

44
00:03:33,790 --> 00:03:39,045
asymétrique qui va à la fois
transmettre l'information de l'horloge,

45
00:03:39,045 --> 00:03:44,545
mais également la valeur,
la donnée correspondante.

46
00:03:44,545 --> 00:03:49,425
Par exemple, ce système,
avec une impulsion longue,

47
00:03:49,425 --> 00:03:55,365
suivi d'un temps court, ou une impulsion
courte, suivie d'un temps long,

48
00:03:56,660 --> 00:04:01,230
va permettre de coder ici un zéro,
ici un 1.

49
00:04:01,230 --> 00:04:05,950
C'est ce que les circuits de la
société chinoise, Worldsemi,

50
00:04:07,070 --> 00:04:14,280
utilisent, ils ont tous la dénomination,
WS28, suivie de deux chiffres.

51
00:04:14,280 --> 00:04:19,950
Dans cette famille de circuits, trois LED
peuvent être commandées en même temps,

52
00:04:19,950 --> 00:04:26,360
généralement, rouge, vert et bleu,
avec chacune une intensité de huit bits,

53
00:04:26,360 --> 00:04:33,130
donc des valeurs de 0 à 255, et
l'intensité est donc générée par du PWM.

54
00:04:34,510 --> 00:04:36,920
Regardons plus en détail
comment les choses se passent.

55
00:04:36,920 --> 00:04:42,180
Le signal arrive sur le
premier circuit il arrive avec

56
00:04:42,180 --> 00:04:46,610
l'ensemble des données pour les
quatre pixels, dans notre cas.

57
00:04:48,190 --> 00:04:53,470
Mais le premier module va garder pour lui,
sans transmettre au suivant,

58
00:04:54,480 --> 00:04:59,140
les 24 Bits qui le concerne,
puis il va transférer tout le reste.

59
00:04:59,140 --> 00:05:03,630
De même, le deuxième va récupérer
les 24 Bits qui l'intéressent,

60
00:05:03,630 --> 00:05:08,880
puis transmettre au suivant ce qui reste,
c'est la même chose pour le dernier.

61
00:05:08,880 --> 00:05:14,250
À la fin,
tous les pixels ont reçu leur valeur.

62
00:05:15,340 --> 00:05:22,600
Et alors une zone inactive du signal
va pouvoir donner le signal de reset

63
00:05:22,600 --> 00:05:28,140
à chaque circuit intégré, pour pouvoir
reprendre une nouvelle transmission.

64
00:05:28,140 --> 00:05:33,060
Donc, le principe chaque registre
conserve la première donnée,

65
00:05:33,060 --> 00:05:38,690
qui le concerne, transmet les
suivantes aux circuits qui le suivent.

66
00:05:38,690 --> 00:05:43,270
Ça n'est pas toujours facile de lire la
documentation de ces fabricants chinois.

67
00:05:44,290 --> 00:05:50,060
Pour différents modèles du circuit WS28,
suivi de deux chiffres,

68
00:05:50,060 --> 00:05:53,650
il y a des valeurs qui semblent assez
différentes, mais on ne sait pas si ça

69
00:05:53,650 --> 00:05:56,725
correspond vraiment à une différence,
à l'intérieur du circuit intégré.

70
00:05:56,725 --> 00:06:04,410
Par exemple, le WS2811 donne
principalement deux critères.

71
00:06:04,410 --> 00:06:10,190
La partie haute du
signal à zéro doit durer

72
00:06:10,190 --> 00:06:15,420
deux micro secondes, et la partie
basse une demie micro seconde.

73
00:06:15,420 --> 00:06:19,440
Et c'est l'inverse pour
la transmission d'un 1.

74
00:06:19,440 --> 00:06:27,040
Le reset, lui,
doit être supérieur à 50 micro secondes.

75
00:06:29,280 --> 00:06:33,830
Il n'est pas facile de tenir les
spécifications données par le fabricant,

76
00:06:33,830 --> 00:06:38,002
en utilisant des processeurs dont
l'horloge est de l'ordre de 16 mégahertz,

77
00:06:38,002 --> 00:06:41,594
[INAUDIBLE], par exemple sur
un AVR ou sur un MSP430.

78
00:06:41,594 --> 00:06:45,610
Je ne dis pas que c'est impossible,
certains l'ont fait, généralement en

79
00:06:45,610 --> 00:06:50,730
utilisant directement les instructions
en assembleur, pour maîtriser le timing,

80
00:06:50,730 --> 00:06:55,820
ou alors, en utilisant de manière
astucieuse, les ports séries.

81
00:06:56,830 --> 00:07:02,800
Nous allons ici utiliser un processeur
avec une fréquence d'horloge plus élevée,

82
00:07:02,800 --> 00:07:06,780
de 48 mégahertz,
en l'occurrence un processeur ARM,

83
00:07:06,780 --> 00:07:11,150
un STM32 de la société STMicroelectronic.

84
00:07:12,320 --> 00:07:16,900
Nous avons vu que les rubans uniformes
sont très simples mais néanmoins

85
00:07:16,900 --> 00:07:22,280
intéressants ; que les rubans adressables
sont beaucoup plus complexes,

86
00:07:22,280 --> 00:07:25,310
et permettent vraiment de
très jolies applications ;

87
00:07:25,310 --> 00:07:27,720
qu'il n'est pas si facile
que ça de les programmer,

88
00:07:27,720 --> 00:07:31,760
à cause des contraintes de timing,
mais que c'est possible de le faire.