1
00:00:00,025 --> 00:00:10,025
[AUDIO_VIDE]

2
00:00:12,010 --> 00:00:16,190
Bonjour, nous allons parler
des horloges temps réel.

3
00:00:16,190 --> 00:00:19,510
C'est en effet très pratique
d'avoir une horloge,

4
00:00:19,510 --> 00:00:23,579
d'avoir l'heure qui s'affiche sur une
enseigne, ou un afficheur, à LED.

5
00:00:24,890 --> 00:00:28,320
Nous allons parler du principe
des horloges électroniques,

6
00:00:28,320 --> 00:00:31,830
et parler de leur alimentation,
qui doit être permanente.

7
00:00:31,830 --> 00:00:35,850
Nous allons voir comment programmer une
horloge, avec un micro contrôleur ;

8
00:00:35,850 --> 00:00:40,360
voir comment utiliser un circuit
spécialisé, et voir aussi que

9
00:00:40,360 --> 00:00:44,894
certains micro contrôleurs contiennent
une horloge temps réel, à l'intérieur.

10
00:00:45,920 --> 00:00:49,500
Vous savez certainement que les montres
mécaniques utilisent un mouvement

11
00:00:49,500 --> 00:00:53,920
oscillant, aussi stable que possible, qui
va permettre de donner une base de temps,

12
00:00:55,430 --> 00:00:59,340
et qu'ensuite des engrenages permettent
d'obtenir les secondes, les minutes,

13
00:00:59,340 --> 00:01:00,120
les heures etc.

14
00:01:01,550 --> 00:01:06,310
Dans une horloge électronique on
utilise un oscillateur à quartz.

15
00:01:06,310 --> 00:01:10,370
En effet, ces petits cristaux
de quartz ont la particularité

16
00:01:10,370 --> 00:01:15,980
de pouvoir être stimulés et d'osciller
à une fréquence très précise.

17
00:01:15,980 --> 00:01:20,640
Cette fréquence est généralement égale à,
32 768 hertz.

18
00:01:20,640 --> 00:01:25,590
Vous comprenez qu'il s'agit
d'une puissance de 2, il s'agit,

19
00:01:25,590 --> 00:01:28,260
dans ce cas-là, de,
2 à la puissance 15, hertz.

20
00:01:30,470 --> 00:01:34,880
Voilà un exemple de petit boîtier
qui contient un quartz horloger,

21
00:01:34,880 --> 00:01:36,400
c'est comme ça qu'on les appelle.

22
00:01:36,400 --> 00:01:41,000
Nous allons utiliser 15 diviseurs
par deux, successivement,

23
00:01:41,000 --> 00:01:45,940
qui vont diminuer la fréquence,
à partir de, 32 768 pour arriver,

24
00:01:45,940 --> 00:01:51,110
finalement, à un signal de un hertz,
c'est-à-dire à la seconde.

25
00:01:51,110 --> 00:01:55,760
Pour réaliser un diviseur par deux, nous
allons par exemple utiliser une bascule D,

26
00:01:55,760 --> 00:02:00,310
relier la sortie inversée à l'entrée D,

27
00:02:00,310 --> 00:02:06,100
l'horloge va arriver par l'entrée
d'horloge, et, par la propriété

28
00:02:06,100 --> 00:02:12,450
qui dit que l'état futur, c'est-à-dire
l'état après le coup d'horloge,

29
00:02:12,450 --> 00:02:17,720
est égal à D, dans une bascule D,
et grâce à cette propriété,

30
00:02:17,720 --> 00:02:21,810
qui vient directement du fil
que j'ai mis là, D est égal à,

31
00:02:21,810 --> 00:02:26,460
Q barre, on peut en déduire que,
Q plus, est égal à, Q barre.

32
00:02:26,460 --> 00:02:32,270
Et on voit bien, en effet, que, à chaque
front montant de l'horloge, ici, là, etc.

33
00:02:32,270 --> 00:02:37,520
on a un changement de la valeur
du signal de sortie ; et ensuite,

34
00:02:37,520 --> 00:02:40,780
en observant ces signaux,
on voit bien que,

35
00:02:40,780 --> 00:02:44,180
cette fréquence là est la
moitié de cette fréquence là.

36
00:02:45,180 --> 00:02:50,890
On va donc prendre notre oscillateur à
quartz, brancher 15 diviseurs par deux,

37
00:02:50,890 --> 00:02:54,310
on obtient, ici, un signal de,
un hertz ; il suffira, ensuite,

38
00:02:54,310 --> 00:02:58,160
de le diviser par soixante,
pour obtenir la valeur des secondes,

39
00:02:58,160 --> 00:03:01,670
de reprendre la sortie et de
diviser de nouveau par soixante,

40
00:03:01,670 --> 00:03:05,370
pour obtenir la valeur des minutes,
et ainsi de suite, ici,

41
00:03:05,370 --> 00:03:10,990
par 24 pour les heures, et on pourrait
continuer, pour les jours, les mois, etc.

42
00:03:12,410 --> 00:03:16,670
Bien évidemment, il n'y a rien d'aussi
désagréable qu'une heure qui n'est

43
00:03:16,670 --> 00:03:20,050
pas indiquée correctement,
qu'une horloge qui n'est pas à l'heure.

44
00:03:21,130 --> 00:03:25,280
Il faut donc prévoir une alimentation,
parce que nos enseignes,

45
00:03:25,280 --> 00:03:28,680
ou nos afficheurs, peuvent ne pas être,
toujours sous tension.

46
00:03:29,730 --> 00:03:32,870
Alors on utilise souvent
des piles au Lithium,

47
00:03:32,870 --> 00:03:38,030
et on comprend bien qu'on ne va les
utiliser que pour alimenter cette partie,

48
00:03:38,030 --> 00:03:39,860
que nous venons de voir,
avec les diviseurs,

49
00:03:39,860 --> 00:03:44,090
et l'oscillateur à quartz, de telle
manière que l'heure puisse être maintenue.

50
00:03:44,090 --> 00:03:48,840
Nous connaissons tous ces piles
au Lithium, qu'on trouve,

51
00:03:48,840 --> 00:03:50,620
par exemple, dans un ordinateur.

52
00:03:50,620 --> 00:03:52,390
Et dans un ordinateur son rôle est,

53
00:03:52,390 --> 00:03:56,920
aussi, entre autres,
de maintenir l'heure de l'ordinateur.

54
00:03:56,920 --> 00:04:01,100
Généralement on place ces piles
dans de petits supports, adéquats.

55
00:04:02,300 --> 00:04:06,150
On peut aussi utiliser ce qu'on appelle
des, supercondensteurs, ou Supercap.

56
00:04:07,330 --> 00:04:12,000
Leur particularité, c'est des
condensateurs de très grande valeur.

57
00:04:12,000 --> 00:04:13,790
Voilà comme ils se présentent.

58
00:04:13,790 --> 00:04:17,895
La technologie est basée sur
l'utilisation d'une double couche,

59
00:04:17,895 --> 00:04:20,325
c'est un peu similaire à un
condensateur électrolytique,

60
00:04:20,325 --> 00:04:24,445
mais avec une double couche,
et ça permet d'obtenir des capacités

61
00:04:24,445 --> 00:04:26,635
allant facilement jusqu'à
plusieurs farads.

62
00:04:27,655 --> 00:04:31,905
Et donc, si on les recharge régulièrement,
ils peuvent permettre

63
00:04:31,905 --> 00:04:35,605
d'alimenter une horloge pendant
un moment relativement long.

64
00:04:35,605 --> 00:04:38,900
Est-il possible d'utiliser
un micro contrôleur,

65
00:04:38,900 --> 00:04:40,680
pour faire une horloge temps réel?

66
00:04:40,680 --> 00:04:45,350
Eh bien, beaucoup de micro contrôleurs
prévoient l'usage d'un quartz à

67
00:04:45,350 --> 00:04:49,760
32 kilohertz, donc facilitent la
réalisation d'une horloge temps réel.

68
00:04:50,920 --> 00:04:54,370
Mais, évidemment, il faudra faire
extrêmement attention, d'une part,

69
00:04:54,370 --> 00:05:00,040
d'alimenter en permanence le micro
contrôleur, et de le mettre en veille

70
00:05:00,040 --> 00:05:03,650
lorsqu'on est alimenté par
la batterie de secours,

71
00:05:03,650 --> 00:05:08,090
donc lorsque l'afficheur,
ou l'enseigne, n'est pas alimenté.

72
00:05:08,090 --> 00:05:12,950
Le programme que nous aurons à écrire
va fortement dépendre de la famille

73
00:05:12,950 --> 00:05:14,490
du micro contrôleur, utilisé.

74
00:05:15,590 --> 00:05:20,320
Généralement, on va utiliser des
interruptions des timers, et,

75
00:05:20,320 --> 00:05:23,970
naturellement, le mode
d'endormissement du micro contrôleur,

76
00:05:23,970 --> 00:05:28,860
pour diminuer au maximum sa consommation
tout en laissant alimentés,

77
00:05:28,860 --> 00:05:32,654
l'oscillateur à quartz, et,
au moins, une partie des diviseurs.

78
00:05:33,895 --> 00:05:36,615
Regardons comment nous pouvons le
faire avec la famille des, AVR,

79
00:05:36,615 --> 00:05:39,345
que nous trouvons donc sur les Arduino.

80
00:05:39,345 --> 00:05:45,955
Dans ce programme, nous voyons la partie
principale et une routine d'interruption.

81
00:05:48,445 --> 00:05:55,340
Nous commençons par mettre en marche
l'oscillateur à quartz 32 kilohertz.

82
00:05:55,340 --> 00:05:59,910
Nous allons demander, pour lui,
une prédivision par 128.

83
00:05:59,910 --> 00:06:05,660
Ce qui signifie qu'on a divisé par,
2 à la puissance 7.

84
00:06:05,660 --> 00:06:12,360
Nous allons ensuite utiliser le timer
numéro 2, avec son interruption

85
00:06:12,360 --> 00:06:17,920
pour le dépassement de capacité ; or,
ce timer est un timer 8 bits,

86
00:06:17,920 --> 00:06:22,750
donc il va diviser par, 256,
c'est-à-dire, 2 à la puissance 8.

87
00:06:22,750 --> 00:06:29,110
Donc, nous aurons bien, 2 à la puissance
7, et 2 à la puisance 8, avec le timer.

88
00:06:29,110 --> 00:06:33,500
Donc, à chaque dépassement de capacité,
Overflow,

89
00:06:33,500 --> 00:06:38,320
du timer numéro 2, voici la routine
d'interruption correspondante,

90
00:06:38,320 --> 00:06:41,020
nous pouvons incrémenter les secondes.

91
00:06:42,990 --> 00:06:45,640
Ensuite, ce qu'il sera nécessaire
de faire, et que nous faisons,

92
00:06:45,640 --> 00:06:47,830
dans ce cas-là, dans la boucle principale,

93
00:06:47,830 --> 00:06:52,926
il faudra mettre en veille
le micro contrôleur,

94
00:06:52,926 --> 00:06:58,390
puis, ensuite, après le réveil,
il faudra le rallumer.

95
00:06:59,840 --> 00:07:04,680
Il faut préciser que les interruptions
rallument le micro contrôleur.

96
00:07:04,680 --> 00:07:10,830
Chaque seconde,
on aura le timer qui va passer

97
00:07:10,830 --> 00:07:14,545
de sa valeur maximale à zéro, c'est-à-dire
faire un dépassement de capacité,

98
00:07:14,545 --> 00:07:18,975
la routine d'interruption va s'exécuter,
la seconde sera incrémentée,

99
00:07:18,975 --> 00:07:23,635
puis le micro contrôleur se
remettra en mode d'endormissement.

100
00:07:24,995 --> 00:07:27,865
Ce qui signifie que la consommation
sera extrêmement faible,

101
00:07:27,865 --> 00:07:33,015
puisque, sur une seconde, il ne
fonctionnera que quelques micro secondes,

102
00:07:33,015 --> 00:07:34,745
ou quelques dizaines de micro secondes.

103
00:07:34,745 --> 00:07:36,705
Bien entendu,
dans la routine d'interruption,

104
00:07:36,705 --> 00:07:41,795
nous n'aurons pas seulement qu'à
incrémenter les secondes, nous devrons

105
00:07:41,795 --> 00:07:46,375
aussi incrémenter les minutes,
lorsque la seconde aura passé à 60,

106
00:07:46,375 --> 00:07:49,635
les heures lorsque les minutes
auront passé à 60, etc.

107
00:07:49,635 --> 00:07:52,280
On trouve sur le marché

108
00:07:52,280 --> 00:07:56,270
de nombreux circuits intégrés qui
réalisent une horloge temps réel.

109
00:07:57,290 --> 00:08:01,580
Il y a par exemple le circuit très
connu de Maximsemiconductor, DS1307.

110
00:08:01,580 --> 00:08:05,900
Nous allons prendre, ici,
un petit peu plus en détail,

111
00:08:05,900 --> 00:08:08,190
un autre circuit,
celui de Texas Instruments.

112
00:08:09,220 --> 00:08:14,400
On voit que ce circuit est
alimenté par une batterie.

113
00:08:14,400 --> 00:08:16,430
Voilà ici la masse.

114
00:08:16,430 --> 00:08:19,580
Qu'il dispose de deux
pattes pour le quartz,

115
00:08:19,580 --> 00:08:21,930
on a donc à l'intérieur
un oscillateur à quartz.

116
00:08:24,300 --> 00:08:30,755
On voit également qu'il y a deux
lignes qui permettent de faire de

117
00:08:30,755 --> 00:08:36,525
l'I carré C, donc le système de
liaison série, basé sur deux fils.

118
00:08:36,525 --> 00:08:40,905
Ici, lorsque le circuit
principal est alimenté, ce

119
00:08:41,955 --> 00:08:47,575
circuit est alimenté par cette entrée-là,
pour économiser l'énergie de la pile,

120
00:08:47,575 --> 00:08:53,250
et alors, le micro contrôleur va pouvoir
dialoguer à travers ces deux lignes ; et

121
00:08:53,250 --> 00:08:58,940
on se souvient que, l'I carré C, nécessite
deux résistances de tirage vers le haut.

122
00:08:58,940 --> 00:09:02,440
Ce qui est encore plus intéressant,
pour réaliser des horloges,

123
00:09:02,440 --> 00:09:08,250
c'est de prendre des micro contrôleurs
qui intègrent une zone séparée,

124
00:09:08,250 --> 00:09:10,270
prévue pour l'horloge en temps réel.

125
00:09:11,720 --> 00:09:15,000
On voit ici que,
ça c'est donc le bord du circuit intégré,

126
00:09:15,000 --> 00:09:19,560
j'ai extrait une partie de la
documentation de ce circuit,

127
00:09:19,560 --> 00:09:25,480
ici c'est un STM32, de STMicroelectronics,
on voit qu'il y a une partie,

128
00:09:25,480 --> 00:09:30,060
ici, entourée en rouge,
qui est totalement autonome.

129
00:09:30,060 --> 00:09:35,105
Certes, elle communique avec le
Bus principal du micro contrôleur,

130
00:09:35,105 --> 00:09:40,185
mais elle est alimentée séparément,
on a les deux pattes pour l'oscillateur

131
00:09:40,185 --> 00:09:45,265
à quartz, et on trouve donc cette,
RTC, Real Time Clock, et

132
00:09:45,265 --> 00:09:50,295
il y a également des registres, qui sont
alimentés en permanence par la batterie.

133
00:09:50,295 --> 00:09:55,050
Donc, dans ce cas-là, on peut, simplement,
éteindre le micro contrôleur lorsque

134
00:09:55,050 --> 00:10:00,230
l'enseigne, ou l'afficheur, ne marche
plus, mais cette partie là reste allumée,

135
00:10:00,230 --> 00:10:04,460
le comptage du temps se fait, et ensuite,
lorsque le système fonctionne à nouveau,

136
00:10:04,460 --> 00:10:08,680
il est possible d'aller interroger les
registres pour connaître les heures,

137
00:10:08,680 --> 00:10:09,430
les minutes etc.

138
00:10:10,960 --> 00:10:15,030
Nous avons donc vu le principe
des horloges électroniques

139
00:10:15,030 --> 00:10:20,000
et la nécessité qu'elles soient alimentées
par une alimentation permanente,

140
00:10:20,000 --> 00:10:24,330
nous avons vu comment programmer une
horloge avec un micro contrôleur,

141
00:10:24,330 --> 00:10:27,970
nous avons vu les circuits spécialisés,
qui, dans certains cas,

142
00:10:27,970 --> 00:10:30,450
se trouvent même à l'intérieur
d'un micro contrôleur.

143
00:10:31,450 --> 00:10:36,440
Une horloge est quelque chose de très
pratique, ajouter à une enseigne ou

144
00:10:36,440 --> 00:10:41,390
mettre dans un journal lumineux l'horloge
qui s'affiche à certains moments,

145
00:10:41,390 --> 00:10:43,550
c'est un plus, tout à fait intéressant.