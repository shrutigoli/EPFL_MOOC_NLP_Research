1
00:00:03,621 --> 00:00:07,081
We'll now check the 
central finite difference formula

2
00:00:07,081 --> 00:00:10,071
is indeed of order 2 in h

3
00:00:10,071 --> 00:00:14,381
So the error between f'(x0) 
and its approximation by a

4
00:00:14,383 --> 00:00:17,103
central finite difference formula
is in h squared

5
00:00:17,103 --> 00:00:20,483
So choose a function f, 
for example sin(x)

6
00:00:20,483 --> 00:00:23,923
Choose a point x0, 
for example x0=1

7
00:00:23,923 --> 00:00:27,623
And we can use a program that
computes the error for a given h

8
00:00:27,623 --> 00:00:31,313
that is the difference between
f'(x0) and its approximation

9
00:00:31,313 --> 00:00:33,563
by the central finite difference 
formula

10
00:00:33,563 --> 00:00:38,503
So for h = 10^(-1), observe 
an error of 2.2*10^(-4) 

11
00:00:38,503 --> 00:00:44,673
So the formula is a lot more precise
than the forward and backward

12
00:00:44,673 --> 00:00:46,053
 finite difference formulaes

13
00:00:46,053 --> 00:00:49,373
We expected it, because the error
is in hÂ² instead of h

14
00:00:49,373 --> 00:00:52,153
For h=10^(-2) 
so when h

15
00:00:52,153 --> 00:00:53,323
is divided by 10

16
00:00:53,323 --> 00:00:55,943
then the error is approximatively

17
00:00:55,943 --> 00:00:57,473
divided by 100.

18
00:00:57,473 --> 00:00:59,823
For h=10^(-3) the error
is divided by 100 again

19
00:00:59,823 --> 00:01:01,473
Likewise for 10^(-4).

20
00:01:01,473 --> 00:01:05,003
For 10^(-5), the error isn't
divided by 100 but less

21
00:01:05,003 --> 00:01:07,133
and for 10^(-6) 
the error increases

22
00:01:07,133 --> 00:01:13,183
what we observe here is that 
the truncation error

23
00:01:13,183 --> 00:01:16,523
takes over when 
h is relatively small

24
00:01:16,523 --> 00:01:18,653
this is still the truncation 
in Taylor's formula.

25
00:01:18,653 --> 00:01:23,703
And if h is very small, 
the rounding error takes over.

26
00:01:23,703 --> 00:01:31,733
So if h is less than 10^(-5)
observe  the effect

27
00:01:31,733 --> 00:01:33,783
or rounding errors.

28
00:01:39,567 --> 00:01:42,217
We'll now try to explain where

29
00:01:42,217 --> 00:01:44,587
those rounding errors come from.
