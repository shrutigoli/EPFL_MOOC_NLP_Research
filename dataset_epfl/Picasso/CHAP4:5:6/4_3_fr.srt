1
00:00:00,855 --> 00:00:04,266
Nous allons étudier l'algorithme 
d'élimination de Gauss sur un exemple.

2
00:00:04,685 --> 00:00:08,986
Je veux résoudre 
le système linéaire <i>Ax = b</i>.

3
00:00:10,000 --> 00:00:13,266
<i>x</i> est le vecteur des inconnues, 
<i>x1</i>, <i>x2</i> jusqu'à <i>xN</i>.

4
00:00:15,271 --> 00:00:19,584
<i>b</i> c'est le second membre du problème, 
<i>b1</i>, <i>b2</i> jusqu'à <i>bN</i>,

5
00:00:21,102 --> 00:00:25,076
et la matrice <i>A</i>
a une structure particulière

6
00:00:25,119 --> 00:00:26,716
c'est une matrice tridiagonale.

7
00:00:26,850 --> 00:00:30,747
Donc il y a une diagonale ici, 
ce sont des 3,

8
00:00:31,965 --> 00:00:35,302
une sous-diagonale de -1,

9
00:00:35,483 --> 00:00:36,956
<i>(écrit)</i>

10
00:00:38,592 --> 00:00:40,936
et une sur-diagonale de -2.

11
00:00:41,019 --> 00:00:42,612
<i>(écrit)</i>

12
00:00:45,069 --> 00:00:48,811
Tous les autres coefficients 
de la matrice sont nuls.

13
00:00:49,270 --> 00:00:53,576
Voilà la matrice <i>A</i> du système linéaire 
<i>Ax</i> = <i>b</i> que je dois résoudre.

14
00:00:53,903 --> 00:00:56,139
Nous verrons que,
dans les chapitres 10 à 14,

15
00:00:56,159 --> 00:00:58,956
lorsqu'on discrétise 
des équations dérivées partielles

16
00:00:58,976 --> 00:01:00,750
à une dimension de l'espace,

17
00:01:00,784 --> 00:01:03,569
on aboutit généralement 
à des matrices tridiagonales.

18
00:01:04,001 --> 00:01:07,301
Donc, le but est de transformer 
ce système linéaire <i>Ax</i> = <i>b</i>

19
00:01:07,401 --> 00:01:10,292
en un système linéaire 
équivalent <i>ux</i> = <i>d</i>.

20
00:01:11,717 --> 00:01:14,813
<i>u</i> est une matrice triangulaire supérieure,

21
00:01:16,633 --> 00:01:21,767
donc j'ai des 1 sur la diagonale 
de cette matrice,

22
00:01:22,574 --> 00:01:26,541
la partie triangulaire inférieure est zéro,

23
00:01:26,606 --> 00:01:29,913
puisque j'ai décidé que <i>u</i>
était une matrice triangulaire supérieure,

24
00:01:30,007 --> 00:01:34,121
et, en fait, à cause du fait 
que la matrice ici est tridiagonale

25
00:01:35,555 --> 00:01:38,557
et bien je vais avoir 
une partie triangulaire supérieure

26
00:01:38,993 --> 00:01:46,417
qui est réduite à une sur-diagonale
de coefficients <i>u1</i>, <i>u2</i> jusqu'à <i>uN-1</i>.

27
00:01:51,139 --> 00:01:54,783
Voila le vecteur <i>x</i> des inconnues, 
c'est toujours le même,

28
00:01:55,053 --> 00:01:58,321
et puis le second membre, lui aura changé,

29
00:01:58,756 --> 00:02:06,069
donc c'est le vecteur <i>d</i>
de coefficient <i>d1</i>, <i>d2</i> jusqu'à <i>dn</i>.

30
00:02:08,939 --> 00:02:12,194
Alors quelles sont 
les étapes de l'algorithme ?

31
00:02:12,534 --> 00:02:16,412
Première étape, j'ai dit 
je veux avoir 1 ici,

32
00:02:17,134 --> 00:02:18,328
zéro ici.

33
00:02:18,639 --> 00:02:20,323
Il y a déjà des zéros en-dessous,

34
00:02:20,510 --> 00:02:23,157
donc je dois transformer 
ce 3 en 1 et ce 1 en 0.

35
00:02:23,423 --> 00:02:25,013
Donc pour transformer ce 3 en 1,

36
00:02:25,183 --> 00:02:31,076
je prend la première ligne 
qui est <i>3 x1</i> - <i>2 x2</i> = <i>b1</i>,

37
00:02:31,419 --> 00:02:34,120
je prends cette première ligne 
et je la divise par 3,

38
00:02:34,180 --> 00:02:36,511
le coefficient diagonal.

39
00:02:37,041 --> 00:02:39,119
Donc j'obtiens...

40
00:02:40,099 --> 00:02:44,057
1 (une fois <i>x1</i>) - 2/3 (de <i>x2</i>),

41
00:02:45,107 --> 00:02:48,805
égal <i>b1</i> que je dois diviser par 3,

42
00:02:48,904 --> 00:02:52,440
donc dans l'algorithme je vais appeler <i>u1</i>,

43
00:02:54,723 --> 00:02:57,170
j'ai déjà trouvé <i>u1</i> ici,

44
00:02:57,230 --> 00:02:59,086
ce coefficient,

45
00:02:59,246 --> 00:03:01,682
et puis je dois diviser <i>b1</i> par 3.

46
00:03:01,842 --> 00:03:05,390
Donc je dessine ici uniquement 
les deux premières lignes

47
00:03:05,424 --> 00:03:07,820
du système linéaire que j'obtiens.

48
00:03:08,092 --> 00:03:11,539
Ici sur la deuxième ligne 
j'ai toujours -1, 3, -2.

49
00:03:13,302 --> 00:03:16,707
Voila le début des premières lignes 
du système linéaire.

50
00:03:17,281 --> 00:03:20,867
Ici j'ai toujours <i>b2</i>, 
qui continue jusqu'en bas.

51
00:03:21,508 --> 00:03:25,310
Ensuite, je vais transformer ce -1 en 0,

52
00:03:25,728 --> 00:03:29,603
donc je fais la somme de la première 
et de la deuxième ligne.

53
00:03:29,966 --> 00:03:33,599
Lorsque je somme la première 
et la deuxième ligne,

54
00:03:33,793 --> 00:03:35,995
je vais avoir ici un zéro.

55
00:03:36,256 --> 00:03:39,497
Donc j'aurais 1, <i>u1</i>, toujours <i>x1</i>, <i>x2</i>,

56
00:03:41,097 --> 00:03:45,348
ensuite j'aurais 0 ici, (3 + <i>u1</i>),

57
00:03:45,594 --> 00:03:48,410
j'ai fait la somme de la première 
et de la deuxième ligne,

58
00:03:49,010 --> 00:03:52,720
et -2 + 0 au-dessus.

59
00:03:52,937 --> 00:03:57,008
Au second membre, je ne l'ai pas dit 
mais ceci, je vais aussi l'appeler <i>b1</i>,

60
00:03:58,333 --> 00:04:04,231
donc ici j'ai <i>b1</i>
et à la deuxième ligne, j'ai <i>b1</i> + <i>b2</i>.

61
00:04:04,769 --> 00:04:07,718
Je fais la somme de la première 
et de la deuxième ligne.

62
00:04:07,815 --> 00:04:10,217
Voila mon système linéaire.

63
00:04:10,287 --> 00:04:11,748
<i>(écrit)</i>

64
00:04:11,788 --> 00:04:12,819
Ici.

65
00:04:12,949 --> 00:04:15,312
Ce que je veux pour arriver à mes fins,

66
00:04:15,365 --> 00:04:17,238
je veux un 1 ici,

67
00:04:17,238 --> 00:04:19,361
donc je dois transformer ce (3 + <i>u1</i>) en 1,

68
00:04:19,701 --> 00:04:22,586
je dois donc diviser 
cette deuxième ligne par (3 + <i>u1</i>).

69
00:04:23,457 --> 00:04:27,329
J'ai 1 <i>u1</i> sur la première ligne,

70
00:04:28,189 --> 00:04:30,051
ici <i>x1</i>, <i>x2</i>.

71
00:04:31,021 --> 00:04:32,930
Ici, j'ai <i>b1</i>,

72
00:04:34,670 --> 00:04:38,319
lorsque je divise 
cette deuxième ligne par (3 + <i>u1</i>)

73
00:04:38,319 --> 00:04:41,468
j'obtiens bien un 1 
à la place de (3 + <i>u1</i>),

74
00:04:41,509 --> 00:04:44,555
j'ai ici -2 / (3+<i>u1</i>).

75
00:04:45,987 --> 00:04:51,035
Vous voyez je vais appeler ceci <i>u2</i>, 
voilà le <i>u2</i> que je cherche.

76
00:04:55,229 --> 00:04:59,231
Je dois aussi prendre 
le second membre <i>b1</i> + <i>b2</i>

77
00:04:59,314 --> 00:05:01,895
et le diviser par (3 + <i>u1</i>).

78
00:05:04,345 --> 00:05:06,681
Donc j'ai déjà obtenu,

79
00:05:07,171 --> 00:05:09,715
dans mon système linéaire,

80
00:05:10,415 --> 00:05:13,778
j'ai déjà obtenu ici, <i>u1</i>, <i>u2</i>

81
00:05:15,208 --> 00:05:17,571
et aussi <i>d1</i> et <i>d2</i>.

82
00:05:18,181 --> 00:05:22,534
Je peux maintenant écrire 
un algorithme d'élimination de Gauss.

83
00:05:26,563 --> 00:05:29,012
Nous sommes partis de <i>b</i>...

84
00:05:32,573 --> 00:05:38,724
<i>N</i> vecteur de coefficient <i>bj</i>,
<i>j</i> allant de 1 à <i>N</i>,

85
00:05:38,995 --> 00:05:44,447
et puis nous avons besoin du vecteur <i>u</i>
qui est la sur-diagonale de la matrice <i>u</i>,

86
00:05:46,164 --> 00:05:51,603
qui a, comme c'est un vecteur, 
<i>N-1</i> vecteur de coefficient <i>uj</i>.

87
00:05:53,120 --> 00:05:55,252
Alors, allons-y, qu'est-ce qu'on a fait ?

88
00:05:55,302 --> 00:05:58,590
La première étape, 
c'était de poser <i>u1</i> = -2/3

89
00:05:59,624 --> 00:06:03,391
et aussi <i>b1</i> = (<i>b1</i>) / 3, 
j'avais divisé la première ligne par 3.

90
00:06:04,454 --> 00:06:06,579
C'est l'étape d'initialisation.

91
00:06:06,767 --> 00:06:11,737
<i>u1</i> = -2/3 et <i>b1</i> = (<i>b1</i>) / 3.

92
00:06:12,590 --> 00:06:14,555
Ensuite, je vais faire une boucle,

93
00:06:14,675 --> 00:06:18,397
là j'ai fait que la première étape, 
j'ai fait que la deuxième ligne,

94
00:06:19,137 --> 00:06:21,103
mais il faut imaginer que l'on va aller

95
00:06:21,123 --> 00:06:23,761
jusqu'à la dernière ligne, 
ou l’avant-dernière.

96
00:06:24,061 --> 00:06:28,497
Je fais une boucle pour <i>i</i>
allant de 2 jusqu'à <i>N-1</i>,

97
00:06:28,766 --> 00:06:30,912
jusqu'à l'avant-dernière ligne.

98
00:06:34,800 --> 00:06:42,206
Je pose ici, vous voyez, 
j'ai <i>u2</i> = -2 / (3+<i>u1</i>),

99
00:06:43,536 --> 00:06:52,282
donc <i>ui</i> sera égal à -2 / (3 + <i>u(i-1)</i>),

100
00:06:52,901 --> 00:06:55,397
donc pour <i>i</i> = 2...

101
00:06:57,007 --> 00:07:00,413
j'ai déjà calculé <i>u1</i>, qui apparait ici.

102
00:07:00,653 --> 00:07:04,231
Ensuite, je dois faire le travail 
sur le second membre,

103
00:07:04,441 --> 00:07:09,381
<i>bi</i> = (<i>bi + (bi-1)</i>),

104
00:07:11,291 --> 00:07:14,081
divisé par (3 + (<i>ui-1</i>)).

105
00:07:15,951 --> 00:07:21,731
Ce coefficient-là, <i>b2</i>, 
ce serait (<i>b1</i> + <i>b2</i>) / (3 + <i>u1</i>).

106
00:07:22,663 --> 00:07:26,495
Lorsque j'ai fini cette boucle, 
qui va de 2 à <i>N-1</i>,

107
00:07:26,549 --> 00:07:31,606
j'ai calculé <i>uN-1</i>, ici, 
et j'ai calculé <i>bN-1</i>.

108
00:07:32,167 --> 00:07:36,303
Ce qu'il me manque, c'est encore calculer 
la dernière composante du vecteur <i>d</i>.

109
00:07:36,860 --> 00:07:42,369
Ce que je n'ai pas dit ici, c'est que
les vecteurs <i>b</i> et <i>d</i> seront stockés

110
00:07:42,409 --> 00:07:44,420
dans le vecteur <i>b</i> ici.

111
00:07:45,553 --> 00:07:48,766
Donc il me faut simplement faire 
la dernière opération

112
00:07:48,933 --> 00:07:52,620
sur le coefficient <i>bN</i>,

113
00:07:53,960 --> 00:08:01,687
<i>bN</i> = (<i>bN</i> + (<i>bN-1</i>)) / (3 + <i>u(N-1)</i>).

114
00:08:02,497 --> 00:08:08,868
J'ai obtenu tous les coefficients
<i>u1</i>, <i>u2</i> jusqu'à <i>uN-1</i>

115
00:08:08,919 --> 00:08:12,232
de la matrice <i>u</i>, triangulaire supérieure,

116
00:08:12,696 --> 00:08:15,355
et les coefficients <i>d1</i>, <i>d2</i> jusqu'à <i>dN-1</i>

117
00:08:15,520 --> 00:08:18,092
du second membre, 
que j'ai mis dans le vecteur <i>b</i>.

118
00:08:19,665 --> 00:08:22,810
Maintenant, il me reste plus 
qu'à résoudre le système linéaire,

119
00:08:25,506 --> 00:08:28,900
ici, <i>ux</i> = <i>d</i>, en commençant par le bas.

120
00:08:29,266 --> 00:08:35,978
<i>xN</i> = <i>dN</i>, <i>xN-1</i> = <i>d(N-1)</i> - <i>u(N-1) xN</i>,
qu'on a déjà calculé,

121
00:08:36,017 --> 00:08:39,081
et ainsi de suite jusqu'à avoir <i>x1</i>.

122
00:08:39,884 --> 00:08:43,539
Alors on peut se poser deux questions 
en ce qui concerne cet algorithme,

123
00:08:44,277 --> 00:08:46,273
la première question est :

124
00:08:46,336 --> 00:08:51,323
combien d'opérations sont nécessaires
pour mettre en œuvre cet algorithme ?

125
00:08:51,383 --> 00:08:53,680
La réponse est simple, 
le nombre d'opérations...

126
00:08:53,750 --> 00:08:57,635
vous voyez ici, il y a une boucle 
qui va de 2 à <i>N-1</i>,

127
00:08:57,765 --> 00:09:00,880
donc le nombre d’opérations 
de cet algorithme,

128
00:09:01,450 --> 00:09:03,317
nombre d'opérations...

129
00:09:03,447 --> 00:09:05,004
<i>(écrit)</i>

130
00:09:07,064 --> 00:09:09,981
on parle de complexité de l'algorithme,
c'est <i>O(N)</i>,

131
00:09:10,224 --> 00:09:16,030
au sens où, si vous doublez <i>N</i>,

132
00:09:16,080 --> 00:09:19,046
vous doublez le nombre d'opérations.

133
00:09:21,646 --> 00:09:24,144
La deuxième question 
que l'on se pose c'est :

134
00:09:24,934 --> 00:09:26,866
est-ce qu'il peut dans cet algorithme...

135
00:09:26,983 --> 00:09:33,778
vous voyez il y a des divisions
par 3 + (<i>ui-1</i>), 3+ (<i>uN-1</i>)...

136
00:09:33,863 --> 00:09:36,299
peut-il y avoir une division par 0 ?

137
00:09:36,431 --> 00:09:41,545
Donc, est-ce qu'on a une division par 0 ?

138
00:09:41,595 --> 00:09:43,309
<i>(écrit)</i>

139
00:09:43,519 --> 00:09:47,064
On peut affirmer le résultat 
suivant sans démonstration :

140
00:09:47,309 --> 00:09:50,842
si toutes les sous-matrices principales 
de <i>A</i> sont régulières,

141
00:09:51,292 --> 00:09:53,591
<i>(écrit)</i>

142
00:10:03,809 --> 00:10:06,066
au sens inversibles,

143
00:10:07,136 --> 00:10:09,563
alors il n'y a pas de division par zéro.

144
00:10:10,023 --> 00:10:11,500
<i>(écrit)</i>

145
00:10:15,201 --> 00:10:20,694
Donc je peux mettre en œuvre 
cet algorithme, sans avoir de soucis.

146
00:10:21,256 --> 00:10:25,234
Alors maintenant, que sont 
les sous-matrices principales de <i>A</i> ?

147
00:10:25,668 --> 00:10:29,334
La première sous-matrice principale de <i>A</i>,
c'est le coefficient <i>A1</i>.

148
00:10:30,206 --> 00:10:33,120
La deuxième sous-matrice principale de <i>A</i>,

149
00:10:33,230 --> 00:10:34,934
ce sont les deux premières lignes,

150
00:10:34,934 --> 00:10:38,686
restriction des deux premières lignes
et des deux premières colonnes.

151
00:10:38,998 --> 00:10:41,787
La première sous-matrice principale de <i>A</i>,

152
00:10:41,787 --> 00:10:45,206
c'est ici la matrice 3 3 des coefficients,

153
00:10:45,726 --> 00:10:49,157
disons, <i>Aij</i>, <i>ij</i> compris entre 1 et 3, 
et ainsi de suite.

154
00:10:49,467 --> 00:10:53,939
Vous voyez bien que cette matrice, 
la première c'est 3, elle est régulière,

155
00:10:54,009 --> 00:10:56,228
la deuxième, si vous calculez 
le déterminant,

156
00:10:56,258 --> 00:10:59,583
vous trouvez quelque chose qui est 
différent de zéro, et ainsi de suite,

157
00:10:59,593 --> 00:11:00,867
il s'agit de démontrer

158
00:11:00,885 --> 00:11:03,317
que toutes les sous-matrices principales 
de <i>A</i> sont régulières

159
00:11:03,317 --> 00:11:06,052
et à ce moment là vous avez aucun soucis.

160
00:11:06,053 --> 00:11:08,525
Donc la première chose à dire
que je n'ai pas dite,

161
00:11:08,545 --> 00:11:10,417
c'est que cette matrice <i>A</i>

162
00:11:10,469 --> 00:11:12,671
est régulière au sens inversible

163
00:11:12,711 --> 00:11:16,475
et toutes les sous-matrices principales 
de cette matrice sont aussi régulières,

164
00:11:16,665 --> 00:11:19,509
au sens inversibles, 
vous verrez ça par vous-mêmes.
