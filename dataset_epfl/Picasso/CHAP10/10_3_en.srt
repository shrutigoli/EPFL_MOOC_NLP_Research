1
00:00:04,594 --> 00:00:06,665
I will now present a
finite difference method

2
00:00:06,665 --> 00:00:09,492
which allow us to compute an approximation
of the solution u of our toy problem,

3
00:00:09,492 --> 00:00:12,360
the elastic rope problem.

4
00:00:12,360 --> 00:00:15,436
Firstly, I will subdivide

5
00:00:15,436 --> 00:00:21,114
the interval [0,1] which models
the rope into sub-intervals.

6
00:00:21,114 --> 00:00:26,145
So I cut the rope into 2, then 4, then 8.

7
00:00:26,145 --> 00:00:31,472
I can write x_1 the first point and
x_N the last point inside the rope.

8
00:00:31,472 --> 00:00:36,859
Here N is a positive integer
which should be large, 

9
00:00:38,469 --> 00:00:43,819
and I write h = 1 over
N plus 1 the step size,

10
00:00:44,589 --> 00:00:48,533
which should be small if N is large.

11
00:00:49,593 --> 00:00:52,277
N will approach infinity,
and h will approach 0.

12
00:00:53,287 --> 00:00:58,748
Therefore, in the middle I have a point x_i,
to its left x_i minus h, that is x_i-1

13
00:00:58,748 --> 00:01:03,095
and to its right x_i plus h,
that is x_i+1.

14
00:01:03,095 --> 00:01:08,791
x_0 coincides with
0 and x_N+1 with 1,

15
00:01:08,791 --> 00:01:17,121
hence I have x_i equal to h times i
for i starting at 0 up to N+1.

16
00:01:18,671 --> 00:01:20,745
The goal of the method
is the following:

17
00:01:20,745 --> 00:01:28,394
the goal of the numerical method
is to present a scheme

18
00:01:28,394 --> 00:01:36,417
which will allow us to compute
values u_i,

19
00:01:36,417 --> 00:01:44,707
approximations of u at point x_i,
which I do not know.

20
00:01:44,707 --> 00:01:50,845
I recall that u(x) is the
displacement of the elastic rope

21
00:01:50,845 --> 00:01:52,317
I don't know u(x),

22
00:01:52,317 --> 00:01:57,378
I will approximate u(x_i) by u_i,

23
00:01:57,378 --> 00:01:59,782
for all i from 1 up to N.

24
00:01:59,782 --> 00:02:04,878
Here I can draw a picture,
when the x_i are equidistant

25
00:02:04,878 --> 00:02:09,927
separated by h, the
distance between two consecutive points.

26
00:02:10,797 --> 00:02:14,187
I now want to present the numerical scheme.

27
00:02:14,187 --> 00:02:17,768
The differential equation is the following:

28
00:02:17,768 --> 00:02:21,535
minus the second derivative of u
with respect to x equal to f (x):

29
00:02:21,535 --> 00:02:26,442
here I write it down: -u''(x) = f(x).
Which is satisfied for all x

30
00:02:26,442 --> 00:02:30,412
in the interval [0,1].
I can write it at points x_i

31
00:02:30,412 --> 00:02:33,638
-u''(x_i) = f(x_i) and this

32
00:02:33,638 --> 00:02:37,921
is true for all interior
nodes with i from 1 up to N.

33
00:02:37,921 --> 00:02:46,274
 I use a centered
finite difference formula 

34
00:02:49,224 --> 00:02:53,005
to approximate the second derivative.

35
00:02:53,005 --> 00:02:57,642
We saw it in chapter 2.

36
00:02:58,702 --> 00:03:04,151
The second derivative in node
x_i can be approximated by 

37
00:03:04,151 --> 00:03:06,800
minus 2 times the
value in x_i of u,

38
00:03:06,800 --> 00:03:13,745
with u evaluated in x_i minus h,
but x_i minus h is x_i-1;

39
00:03:13,745 --> 00:03:19,059
and the value if u in x_i plus h that is x_i+1.

40
00:03:19,059 --> 00:03:21,692
All this divided by h squared. 

41
00:03:21,692 --> 00:03:24,116
There is a minus sign in front
of the second derivative

42
00:03:24,116 --> 00:03:26,975
and this term is equal to f evaluated in x_i. 

43
00:03:26,975 --> 00:03:30,244
Of course, as I approximated
the second derivative

44
00:03:30,244 --> 00:03:32,160
with this finite difference formula 

45
00:03:32,160 --> 00:03:36,940
I have a remainder  which is a term of order h^2,

46
00:03:36,940 --> 00:03:40,898
this remainder term
will be divided by 4

47
00:03:40,898 --> 00:03:43,135
 each time h is divided by 2,

48
00:03:43,135 --> 00:03:48,111
assuming that u is 4 times
continuously differentiable. 

49
00:03:48,111 --> 00:03:50,770
We know that this O(h^2) term

50
00:03:50,770 --> 00:03:54,555
involves the fourth derivatives
of u in the interval [0,1].

51
00:03:54,555 --> 00:03:57,195
This was discussed in chapter 2.

52
00:03:57,195 --> 00:03:59,603
Now I can write a scheme:

53
00:03:59,603 --> 00:04:02,508
A numerical scheme is something
I will be able to implement

54
00:04:02,508 --> 00:04:05,500
on a computer, which will allow me

55
00:04:05,500 --> 00:04:09,313
to compute the approximations u_i.

56
00:04:09,313 --> 00:04:13,889
So to obtain this scheme,
I replace u at node x_i,

57
00:04:13,889 --> 00:04:16,780
which is unknown,
by its approximation u_i,

58
00:04:16,780 --> 00:04:18,796
which will be computed
thanks to a computer. 

59
00:04:18,796 --> 00:04:22,304
The same thing for u 
evaluated in x_i-1 by u_i-1

60
00:04:22,304 --> 00:04:24,855
and u in x_i+1 by u_i+1.

61
00:04:24,855 --> 00:04:26,859
Therefore I have the following scheme:

62
00:04:26,859 --> 00:04:29,843
I have two times u_i,

63
00:04:29,843 --> 00:04:36,467
on the left minus u_i-1 and
u_i+1 on the right,

64
00:04:36,467 --> 00:04:38,383
all this divided by
the square of h,

65
00:04:38,383 --> 00:04:41,403
this must be equal
to f evaluated in x_i,

66
00:04:41,403 --> 00:04:45,183
and I discard the O(h^2) term,

67
00:04:45,183 --> 00:04:48,709
since it don't know how to
implement it.

68
00:04:48,709 --> 00:04:51,638
these relations must be satisfied

69
00:04:51,638 --> 00:04:54,692
for all i from 1 to N,

70
00:04:54,692 --> 00:04:58,596
for i=1 to N.

71
00:04:58,596 --> 00:05:00,897
Et vous voyez ici dans cette expression

72
00:05:00,897 --> 00:05:03,296
When choosing the index i = 1

73
00:05:03,296 --> 00:05:07,630
I have u_1, here u_2 and here u_0,

74
00:05:07,630 --> 00:05:13,016
so what is u_0 worth?
u_0 is the displacement of the rope in x_0,

75
00:05:13,016 --> 00:05:15,206
which is zero.

76
00:05:15,206 --> 00:05:19,305
Hence I write that u_0 = 0.

77
00:05:19,305 --> 00:05:25,171
The same on the right end, the displacement
of the rope in x_n+1 is zero

78
00:05:25,171 --> 00:05:30,380
which allows me to write u_n+1 = 0.

79
00:05:30,380 --> 00:05:34,622
Now I have my numerical
scheme which allows me to

80
00:05:34,622 --> 00:05:40,292
approximate u in x_i with u_i,
for all i from 1 to N.

81
00:05:40,292 --> 00:05:48,410
This scheme is equivalent
to solving a linear system.

82
00:05:53,820 --> 00:05:56,577
This system can be
written the following way:

83
00:05:56,577 --> 00:06:01,984
a matrix which I call A

84
00:06:01,984 --> 00:06:06,855
and the vector of
unknowns named u.

85
00:06:06,855 --> 00:06:13,464
So the vector of unknowns is
simply u_1, u_2, up to u_N.

86
00:06:13,464 --> 00:06:18,196
Donc ici U1 U2 ... jusqu’à U N

87
00:06:18,196 --> 00:06:24,463
and on the right hand side, the vector,
which is known, contains the forces 

88
00:06:24,463 --> 00:06:30,126
applied in x_1, x_2 up to x_N.

89
00:06:30,126 --> 00:06:32,933
I call this vector f. 

90
00:06:32,933 --> 00:06:38,788
I state that this scheme corresponds
to solving a linear system. 

91
00:06:38,788 --> 00:06:41,148
So, I still need to define
what this matrix A contains.

92
00:06:41,148 --> 00:06:45,508
You see here that on each
line, there is 1 / h^2,

93
00:06:45,508 --> 00:06:48,757
so this can be a factor in front,

94
00:06:48,757 --> 00:06:51,905
I look at the first
line for the index i = 1:

95
00:06:51,905 --> 00:06:59,668
u_0 = 0, I have 2 u_1 minus u_2
divided by h squared, which equals f (x_1),

96
00:06:59,668 --> 00:07:03,749
so, the first line is 2 and -1.

97
00:07:03,749 --> 00:07:13,840
The second line is (- u_1 + 2u_2 - u_3)/h^2 = f(x_2).

98
00:07:13,840 --> 00:07:18,960
Therefore on the second line I will write -1, 2 and -1,

99
00:07:18,960 --> 00:07:21,974
and so on up to the line one before last:

100
00:07:21,974 --> 00:07:27,353
-1, 2 and -1 again and then -1 and 2 on the last line.

101
00:07:27,353 --> 00:07:30,238
I obtain a tridiagonal matrix,

102
00:07:30,238 --> 00:07:33,749
on the diagonal we have 2s, 

103
00:07:33,749 --> 00:07:36,964
and on the off diagonals we have -1s.

104
00:07:36,964 --> 00:07:40,199
et sur la sur-diagonale 
vous avez aussi un -1

105
00:07:40,199 --> 00:07:46,333
So now I can compute approximations
of u_1, u_2 up to u_N

106
00:07:46,333 --> 00:07:49,705
of u at the nodes x_1, x_2, up to x_N,

107
00:07:49,705 --> 00:07:51,553
provided I solve this linear system.

108
00:07:51,553 --> 00:07:54,702
et je prétends que la matrice A

109
00:07:54,702 --> 00:07:57,007
cette matrice qui contient 1 sur h²

110
00:07:57,007 --> 00:08:01,026
2 sur la diagonale et - 1 
sur la sur et la sous-diagonales

111
00:08:01,026 --> 00:08:04,980
The matrix A is tridiagonal,

112
00:08:04,980 --> 00:08:09,650
symmetric
and positive definite,

113
00:08:09,650 --> 00:08:14,465
so I can use a cholesky factorization
A = L times the transpose of L

114
00:08:14,465 --> 00:08:18,281
to solve this system A u = f.
