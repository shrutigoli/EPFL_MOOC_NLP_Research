The Simpson quadrature rule is a formula with three points.
Remeber that we want to approach the integral of the function g on the interval [-1,1].
Here we use three nodes, thus M=3 and t_1 the first node is -1, the second node t_2 = 0 and the last one t_3 is equal to 1.
So J(g), the quadrature formula, is omega_1 times g(-1) plus omega_2 times g(0) plus omega_3 times g(1).
I am using theorem 3.2, thus the weights omega_j are equal to the integral between
-1 and 1 of phi_j( t ) dt, here j is equal to 1, 2 and 3.
Remember that phi_1, phi_2 and phi_3 are the
Lagrange basis of polynomials of degree 2 associated to the nodes t_1, t_2 and t_3. 
So phi_1( t ) is the polynomial of degree 2 which cancels in t_2 and t_3, and is worth 1 in t_1.
Here I divide by t_1 minus t_2 and t_1 minus t_3.
Therefore phi_1(t) is t times t-1 divided by 1 minus 0 times -1 plus  -1, thus phi_1(t) is equal to t times (t-1) divided by 2, and I must integrate this function over the interval [-1, 1].
We must Integrate between -1 and 1, t squared minus t over 2.
Since the function t is odd, the integral over -1 and 1 of the t is 0.
This leaves t squared over 2 dt to integrate between -1 and 1, and we get one third. 
So omega_1 is worth 1 / 3.
By symmetry, omega_3 is also equal to 1 / 3. 
You can check this by yourself.
Now by using the fact that the sum of all the weights is equal to 2, this is the length of the interval [-1,1], we can deduce that phi_2 is equal to 4 / 3.
Thus, the quadrature formula
J(g) is equal to
1 / 3 times g( -1) plus 4 / 3 times g(  ) plus 1 / 3 times g(1).
The formula L_h( f ) to approximate numerically the integral between [a,b] of f(x) dx is now worth h divided by
2 times 3 over 6 times the sum over all the sub-intervals, i from 0 to N-1, of f( x_i ) plus 4 times f( x_i + h / 2 ), plus f( x_i+1 ).
The quadrature formula I have used is exact for polynomials of degree 2,
I know this from theorem 3.2, the quadrature formula is exact for polynomials of degree 2, in other words the integral over -1 to 1 of p(t) dt is equal to J(p), where J(p) is 1 / 3 p( -1 ) plus 4 / 3 times p( 0 ) plus
1 / 3  times p( 1 ), for all polynomials of degree 2, again, this is true from theorem 3.2.
I have three nodes t_1, t_2, t_3 and the formula is exact for polynomials of degree 2.
Now could this quadrature formula be exact for polynomials of degree 3?
I already know that the quadrature formula is exact for polynomials of degree 2, thus, to check whether it is also exact for polynomials of degree 3, it is sufficient to try with p( t ) equal to t to the power 3.
So I calculate the integral over -1 and 1 of t to the power 3, since t to the power 3 is an odd function, and by integrating over -1 to 1
I get 0, and J(p) with p(t) equal to p to the power 3,
J(p) is equal to
 1 / 3 times -1 power 3 plus 
4 / 3 times 0 power 3 plus 1 / 3 times 1 to the power 3, and I get also 0. 
So this quadrature formula is exact for all polynomials of degree 3.
Now I could try with p( t ) equal to t to the power 4 and could check that the quadrature formula is not exact for polynomials of degree 4. 
Therefore, the formula is exact for polynomials of degree 3, not more.
It is exact for polynomials of degree 2, by construction, since I used the formula of theorem 3.2, and it happens that, from symmetry reasons, it is also exact for polynomials of degree 3. now I can apply theorem 3.1 which tells me the following: if the function f is four times differentiable on [a,b], well the error between the integral between a and b of f(x) dx and the approximation L_h( f ), which is here, well this error is of order h top the power 4.
This means that the error is divided by
2 to the power 4, i.e. 16, each time h is divided by 2.
