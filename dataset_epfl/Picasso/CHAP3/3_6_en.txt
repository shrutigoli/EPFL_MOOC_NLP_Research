Let us now consider the calculation of the quadrature weights.
Let J(g) be the sum over from 1 to M of omega_j times g( t_j ) be a quadrature formula. such a quadrature formula is used to numerically approximate the integral between -1 and 1 of g( t ) dt.
Choosing a quadrature formula comes down to specifying integration nodes t_1, t_2,...,t_M, and quadrature weights omega_1, omega_2,...,omega_M.
By doing the linear combination of these values
I seek to approximate the integral between -1 and 1 of g( t ) dt.
The question is now the following: given the nodes t_1, t_2 up to t_M, how to calculate the weights omega_1, omega_2 up to omega_M?
The idea is the following.
Let p a polynomial of degree lower or equal to m-1.
From chapter one: interpolation,
I claim that p( t ) can be written as a linear combination of the functions phi_1( t ), phi_2( t ) up to phi_M( t ) where phi_1, phi_2 and so on up to phi_M is the Lagrange basis of polynomials of degree smaller or equal to M-1 associated to the quadrature nodes t_1, t_2 up to t_M. jusqu'Ã  tm.
Thus p( t ) is a linear combination of the functions phi_1, phi_2 and do on up to phi_M with phi_1, phi_2 up to phi_M the Lagrange basis associated to the nodes t_1, t_2 up to t_M. 
I recall, for example that phi_1( t ) was the polynomial of degree M-1 which is worth 0 in the nodes t_2, t_3 up to t_M, and is worth 1 in t_1.
Hence I divide by (t_1-t_2)
(t_1-t_3) ...(t_1-t_M), this polynomial phi_1 (t) is indeed a polynomial of degree M-1, it is the product of monomials,
M-1 monomials in total and it is a polynomial equal to 0 in the points t_2, t_3 .. t_M and equal to 1 in t_1. 
Sine we have proven that these functions form a basis of polynomials of degree M-1, thus I can write any polynomial of degree M-1 as a linear combination of these basis functions.
Moreover, the coefficients of the linear combination are given by p( t_1 ), p( t_2 ) up to p( t_M ). de p de t.
Now if we use this representation formula of p(t) and integrate between -1 and 1 on both sides we obtain the following: the integral between -1 and 1 of p( t ) dt is equal to the sum over j=1 to M of p( t_j ) times the integral between -1 and 1 of phi_j( t ) dt.
Let us denote omega_j this quantity,
I have obtained a quadrature formula and this formula is exact for polynomials of degree M-1.
If omega_j is equal to the integral over -1 and 1 of phi_j( t ) dt,
I have built a quadrature formula such that the integral over -1 to 1 of p( t ) is equal to J(p) for all polynomial p of degree M-1.
I have therefore built a quadrature formula which is excat for polynomials of degree M-1. 
I can now state a theorem which allows us to compute the weights given the nodes of a quadrature formula.
Theorem 3.2 of the book.
Let J(.) be a quadrature formula that is a positive integer M, t_1, t_2 up to t_M some quadrature nodes, omega_1, omega_2 up to omega_M the weights, thus J(g) is equal to the sum over j from 1 to M of g( t_j ) times omega_j,
J(g) being here to numerically approximate the integral over -1 and 1 of g( t ) dt. 
I state the following: the quadrature formula is exact for all polynomials of degree M-1, that is ti say the integral between -1 and 1 of p( t ) dt,
Ihere p is any polynomial of degree M-1, the integral over -1 to 1 of p( t )dt is equal to J(p) for all p, polynomial of degree M-1 if and only if the weights omega_j are equal to the integral between -1 and 1 of phi_j( t ) dt, for all j from 1 to M.
Here the functions phi_j( t ) are the basis function of P_M associated to the nodes t_1, t_2,...,t_M.
We now have a formula for the weights.
Donc, qu'est-ce qu'on va faire maintenant ?
The interpretation of theorem 3.2 is the following.
We choose quadrature nodes t_1, t_2 up to t_M in the interval -1 to 1,
We compute the weights omega_j: integratal from -1 to 1 of phi_j( t ) dt for j from 1 to M.
Let us go back to theorem 3.1.
I claim that the integral between a and b of f(x) dx minus the corresponding approximation L_h( f ), well this error is of order h to the power M, iprovided f is M times differentiable in the interval [a,b].
This means that the error is divided by 2 to the power M each time h is divided by two.
Now we will build, thanks to this formula of the weights the Simpson quadrature rule using three points.
Then we shall ask ourselves:
Does there exist a good choice of the quadrature nodes t_1, t_2 up to t_M?
First, the Simpson quadrature rule.
