1
00:00:03,183 --> 00:00:05,774
In the last part of the course, 
we'll solve

2
00:00:05,774 --> 00:00:08,614
first order systems of 
differential equations.

3
00:00:08,618 --> 00:00:11,508
So, the problem I want to solve
is as follows.

4
00:00:11,508 --> 00:00:14,869
I am looking for some vector u(t),

5
00:00:14,869 --> 00:00:18,549
the vector u(t) is the vector
with entries u1(t),

6
00:00:18,892 --> 00:00:23,212
u2(t), 
until uM(t),

7
00:00:25,094 --> 00:00:27,235
which satisfies the differential equation

8
00:00:27,235 --> 00:00:28,755
qui s'écrit toujours :

9
00:00:29,272 --> 00:00:32,302
u'(t), but this time with a vector
on the u'

10
00:00:32,886 --> 00:00:37,766
equals to f(u(t),t), with a vector on f,

11
00:00:37,766 --> 00:00:39,756
et de <i>t</i>, pour <i>t</i> positif,

12
00:00:39,756 --> 00:00:44,536
with an initial value which is the
vector u evaluated at the time 0

13
00:00:44,719 --> 00:00:48,333
equal to some given 
vector u0.

14
00:00:48,333 --> 00:00:51,519
So each of the components of this
vector u0 is given.

15
00:00:51,519 --> 00:00:53,759
The notations are as follows: 

16
00:00:55,338 --> 00:00:59,248
here is the function f, 
a vector function,

17
00:00:59,724 --> 00:01:02,524
so here f is a given function.

18
00:01:03,426 --> 00:01:08,066
so it maps a vector x, 
and a time t to

19
00:01:08,510 --> 00:01:12,604
f(vector)(x (vector), t).

20
00:01:12,604 --> 00:01:16,284
so x is a vector with M components,

21
00:01:16,286 --> 00:01:19,016
autant de composantes
que le vecteur <i>u</i>.

22
00:01:20,051 --> 00:01:22,148
x is in ℝ^M,

23
00:01:22,148 --> 00:01:24,105
t is nonnegative, in ℝ+,

24
00:01:24,105 --> 00:01:26,245
then, f(x,t),

25
00:01:26,470 --> 00:01:29,260
f with as many entries as u,

26
00:01:29,443 --> 00:01:32,959
so here, u'(t), point vector,

27
00:01:32,959 --> 00:01:36,382
is simply the vector u that 
we differentiate at each entry,

28
00:01:36,382 --> 00:01:39,399
so u1'(t), 
u2'(t), 

29
00:01:39,399 --> 00:01:40,909
...
uM'(t).

30
00:01:41,493 --> 00:01:46,677
So f has as many 
entries as 

31
00:01:46,677 --> 00:01:49,297
the vector u, 
or the vector u'.

32
00:01:49,491 --> 00:01:51,521
So here, for example, I note :

33
00:01:52,450 --> 00:01:56,530
x, the vector of entries 
x1,x2,..., xM,

34
00:01:56,782 --> 00:01:59,782
so f(x,t),

35
00:02:00,845 --> 00:02:03,265
would be the vector function,

36
00:02:04,009 --> 00:02:05,857
its first component is f1,

37
00:02:05,857 --> 00:02:08,627
which depends on the entries of x,

38
00:02:08,906 --> 00:02:13,186
x1, x2, ... ,xM, and of time, 

39
00:02:13,594 --> 00:02:19,464
f2 depends of x1, x2, ..., xM and time,

40
00:02:19,970 --> 00:02:24,730
until fM that also depends o
x1, x2, ...

41
00:02:26,888 --> 00:02:29,098
until xM, and time.

42
00:02:30,795 --> 00:02:31,765
Voilà.

43
00:02:32,513 --> 00:02:35,233
Let's give an example in 
the case M=2.

44
00:02:36,354 --> 00:02:38,784
We look for u(t)

45
00:02:40,111 --> 00:02:44,521
the vector of entries
u1(t), u2(t),

46
00:02:45,868 --> 00:02:49,938
such that u1'(t),

47
00:02:50,167 --> 00:02:53,100
the first component of the vector u',

48
00:02:53,100 --> 00:02:57,660
u2'(t), 
the second entry of the vector u',

49
00:02:58,328 --> 00:03:01,690
equals
-so here let's give an example of a function f-.

50
00:03:01,690 --> 00:03:04,362
for example, take

51
00:03:04,362 --> 00:03:07,022
-u1(t)+u2(t)-exp(-u1(t)),

52
00:03:08,860 --> 00:03:10,610
plus <i>u2(t)</i>

53
00:03:11,689 --> 00:03:15,689
moins <i>exponentielle moins u1(t)</i>.

54
00:03:15,691 --> 00:03:17,131
this example

55
00:03:17,281 --> 00:03:22,261
corresponds in fact to the discretization
of a nonlinear heat problem,

56
00:03:23,290 --> 00:03:25,090
chapter 12 in the book,

57
00:03:25,342 --> 00:03:31,712
and u2'(t) is u1(t)-2u2(t)

58
00:03:32,738 --> 00:03:35,588
-exp(-u2(t)),

59
00:03:36,478 --> 00:03:38,537
with 2 initial values

60
00:03:38,537 --> 00:03:41,772
u1 at the time 0 is known,

61
00:03:41,772 --> 00:03:44,017
and u2 at the time 0
is also known,

62
00:03:44,017 --> 00:03:45,757
for example 1.

63
00:03:47,715 --> 00:03:51,945
Alors, écrivons dans le cas général :

64
00:03:51,950 --> 00:03:56,745
<i>u point</i> égal <i>f</i> avec un vecteur
sur le <i>u point</i> et un vecteur sur le <i>f</i>,

65
00:03:56,745 --> 00:04:00,505
Let's write the progressive Euler's scheme,

66
00:04:01,250 --> 00:04:03,284
and the backward Euler's scheme.

67
00:04:03,284 --> 00:04:04,811
The forward Euler's scheme,

68
00:04:04,811 --> 00:04:08,561
was (u_(n+1)-u_n)/h,

69
00:04:09,423 --> 00:04:13,423
equals f(u_n,tn).

70
00:04:14,623 --> 00:04:18,110
So here I must simply add a vector on u_(n+1),

71
00:04:18,110 --> 00:04:20,820
a vector on u_n, 
a vector on f, 

72
00:04:21,451 --> 00:04:26,111
and here a vector on u_n.

73
00:04:26,553 --> 00:04:31,273
So u^n denotes
the vector with components

74
00:04:31,800 --> 00:04:35,620
u_1^nn, u_2^n, ...

75
00:04:36,172 --> 00:04:41,172
until u_M^n, 

76
00:04:42,021 --> 00:04:46,721
which is an approximation of the
exact solution u

77
00:04:47,867 --> 00:04:49,263
evaluated at tn.

78
00:04:49,263 --> 00:04:54,993
So recall that tn is 
n*h, n=0,1,2,....

79
00:04:56,238 --> 00:05:02,048
Donc on approche la solution 
aux temps <i>t0</i>, <i>t1</i>, <i>t2</i>, etc.

80
00:05:02,748 --> 00:05:04,228
Donc <i>u</i> au temps <i>tn</i>,

81
00:05:05,499 --> 00:05:08,759
c'est simplement le vecteur <i>u</i>
évalué au temps <i>tn</i>.

82
00:05:09,726 --> 00:05:12,296
I write u_1(tn),

83
00:05:13,019 --> 00:05:15,029
u2(tn) ...

84
00:05:16,484 --> 00:05:20,154
until uM evaluated at the time tn.

85
00:05:20,297 --> 00:05:22,297
Here we have 2 indices

86
00:05:22,503 --> 00:05:24,524
the component index, a subscript

87
00:05:24,524 --> 00:05:27,304
and the index corresponding to time, a superscript.

88
00:05:28,584 --> 00:05:30,484
That's Euler's forward method.

89
00:05:30,484 --> 00:05:33,271
This scheme is explicit

90
00:05:33,271 --> 00:05:37,015
in the sense where we can 
write u^(n+1) as a function of u^n.

91
00:05:37,015 --> 00:05:39,030
Donc c'est un schéma explicite,

92
00:05:39,030 --> 00:05:40,560
comme tout à l'heure.

93
00:05:41,501 --> 00:05:43,269
So the vector u^(n+1),

94
00:05:43,269 --> 00:05:46,493
this is an equality between two vectors,
that is all the components

95
00:05:46,493 --> 00:05:50,003
of the vector on the left hand side are equal 
to the components of the vector on the right hand side,

96
00:05:50,247 --> 00:05:54,401
equals u^n+h

97
00:05:54,401 --> 00:05:58,831
times f(u_n,tn).

98
00:06:03,109 --> 00:06:06,889
This is the
backward Euler's scheme:

99
00:06:14,712 --> 00:06:15,778
qui est que,

100
00:06:15,778 --> 00:06:19,868
(u^(n+1)-u^n)/h

101
00:06:20,633 --> 00:06:25,573
equals f(u^(n+1),t(n+1)).

102
00:06:26,619 --> 00:06:29,250
So this is an implicit scheme,

103
00:06:29,250 --> 00:06:33,540
which means we have an 
implicit relation for u^(n+1),

104
00:06:33,544 --> 00:06:36,434
u^(n+1)-u^n

105
00:06:37,258 --> 00:06:43,258
-h f(u^(n+1),t(n+1))

106
00:06:44,301 --> 00:06:45,701
equals 0,

107
00:06:46,180 --> 00:06:48,170
the vector 0.

108
00:06:49,308 --> 00:06:53,118
So we are looking for 

109
00:06:53,492 --> 00:06:59,012
u^(n+1) such that g(u^(n+1))=0.

110
00:06:59,606 --> 00:07:03,697
So at each time step,

111
00:07:03,697 --> 00:07:08,387
we must solve a nonlinear system

112
00:07:10,252 --> 00:07:16,282
with M equations and M unkowns.

113
00:07:18,495 --> 00:07:22,495
The M unknowns are written here, 
in vector form,

114
00:07:23,282 --> 00:07:24,857
and the M unknowns,

115
00:07:24,857 --> 00:07:28,277
are u1^(n+1),

116
00:07:28,280 --> 00:07:32,560
u2^(n+1), 
until u_M^(n+1).

117
00:07:32,976 --> 00:07:36,530
We'll use Newton's method

118
00:07:36,530 --> 00:07:39,530
to solve this linear system

119
00:07:39,723 --> 00:07:44,073
You'll do that in exercise class, 
and write the corresponding program.

120
00:07:45,483 --> 00:07:48,763
For example, let's go back to the example

121
00:07:48,769 --> 00:07:50,750
from before.

122
00:07:50,750 --> 00:07:53,722
Euler's forward scheme, 

123
00:07:53,722 --> 00:07:56,197
in the case where this 
differential equation here,

124
00:07:56,197 --> 00:07:58,447
would be written as follows :

125
00:07:58,447 --> 00:08:00,807
So, forward Euler,

126
00:08:03,827 --> 00:08:05,277
would be written here :

127
00:08:05,277 --> 00:08:09,607
(u1^(n+1)-u1^n)/h,

128
00:08:10,252 --> 00:08:14,522
so it's the approximation of u1' at the time tn.

129
00:08:15,446 --> 00:08:18,284
And on the right hand side we would have

130
00:08:18,284 --> 00:08:25,764
-2*u1^n+u2^n

131
00:08:26,720 --> 00:08:30,720
 minus exp(-u1^n).

132
00:08:35,375 --> 00:08:41,545
The second equation would become here :

133
00:08:41,545 --> 00:08:46,989
(u2^(n+1)-u2^n)/h

134
00:08:47,736 --> 00:08:52,956
equals u1^n-2*u2^n

135
00:08:53,707 --> 00:08:57,967
minus exp (-u2^n).

136
00:08:59,738 --> 00:09:03,999
Therefore we can write

137
00:09:03,999 --> 00:09:09,208
u1^(n+1) as a function previously computed values,

138
00:09:09,208 --> 00:09:11,675
so as u2^(n+1).

139
00:09:11,675 --> 00:09:14,285
de toutes ces grandeurs
qui ont déjà été calculées.

140
00:09:14,285 --> 00:09:19,819
But in the case of Euler's backward
scheme, 

141
00:09:20,349 --> 00:09:23,216
it's written the following way :

142
00:09:23,216 --> 00:09:27,494
you still have (u1_(n+1)-u1_n)/h,

143
00:09:27,494 --> 00:09:32,514
donc l'approximation, ici, de <i>u1 point</i>
au temps, cette fois-ci, <i>tn+1</i>,

144
00:09:33,922 --> 00:09:38,762
equals -2u1^n+1

145
00:09:39,396 --> 00:09:41,906
+u2^(n+1),

146
00:09:42,345 --> 00:09:46,345
-exp(u1^(n+1)).

147
00:09:47,358 --> 00:09:49,870
And for the second equation 
you would have:

148
00:09:49,870 --> 00:09:54,570
(u2^(n+1)-u2^n)/h

149
00:09:55,839 --> 00:10:00,019
equals u1^(n+1)

150
00:10:00,694 --> 00:10:03,284
-2u2^(n+1)

151
00:10:03,929 --> 00:10:07,539
-exp(u2^(n+1)).

152
00:10:07,767 --> 00:10:10,088
So, we obtain

153
00:10:10,359 --> 00:10:14,231
a nonlinear system with unknowns

154
00:10:14,231 --> 00:10:17,850
u1^(n+1) and u2^(n+1)

155
00:10:17,850 --> 00:10:21,416
that satisfies those 2 nonlinear equations.

156
00:10:21,416 --> 00:10:22,822
Donc vous avez ici :

157
00:10:22,822 --> 00:10:27,012
<i>u1n+1</i>, <i>u1n+1</i>,
<i>u2n+1</i>, <i>u1n+1</i>.

158
00:10:28,008 --> 00:10:31,168
So at each time step,

159
00:10:31,366 --> 00:10:34,479
a nonlinear system of 
two equations has to be solved.

160
00:10:34,479 --> 00:10:37,569
The unknowns are u1^(n+1), u2^(n+1),

161
00:10:37,569 --> 00:10:39,743
and here are both equations.

162
00:10:39,743 --> 00:10:43,143
So, we use Newton's method

163
00:10:43,592 --> 00:10:45,507
to solve this nonlinear system

164
00:10:45,507 --> 00:10:48,575
of 2 equations  with 2 unknowns.

165
00:10:48,575 --> 00:10:50,605
In the general case,

166
00:10:50,606 --> 00:10:54,308
in the case where we have a differential system
of M equations

167
00:10:54,308 --> 00:10:56,386
you need to solve, 
at each time step,

168
00:10:56,386 --> 00:10:58,535
a nonlinear system

169
00:10:58,535 --> 00:11:01,315
of M equations and M unknowns.
