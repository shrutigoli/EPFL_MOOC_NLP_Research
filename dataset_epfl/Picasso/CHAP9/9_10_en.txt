In chapter 9, 
Differential Equations, we addressed the following points.
First we considered the case of a first order differential equation, u'(t)=f(u(t),t).
We have presented several examples, unique solution, several solutions, unique solution and then blow-up.
We stated a theorem: under some condition of u, the problem has a unique solution for all t.
For example, if the derivative of f with respect to the first variable is bounded, then the problem admits a unique solution.
We first presented the forward Euler scheme.
Let u_n be an approximation of u(t_n) t_n is n*h, h the time step.
The scheme is (u_(n+1)-u_n)/h=f(u_n,t_n), it is explicit in the sense that we can write u_(n+1) as a function of u_n u_(n+1)=u_n+h*f(u_n,tn).
Then we introduced the backward Euler scheme
(u_(n+1)-u_n)/h=f(u_(n+1),t(n+1)).
This relation between u_n and u_(n+1) is now implicit, donc on ne peut pas expliciter u^(n+1) en fonction de u^n finding u_(n+1) corresponds to solving a nonlinear equation,
Newton's method can be used. to find the 0 of the function.
Then we discussed about the stability of the Euler schemes, when the differential equation is u'(t)=-Î²u(t) for some nonnegative Î², the solution of this equation being u(0)-exp(-Î²*t).
We defined the method to be stable, if the limit when n goes to the infinity of u_n is equal to 0. 
The forward Euler scheme is stable under the condition h less than 2/Î².
This condition may be restrictive since it may require the use of small time steps.
On the other hand, the backward Euler scheme is stable for all h>0.
Both methods convergence with order 1 in h, for example, for this differential equation, it can be shown that the error at final time is of order 1 in h, meaning that the error is divided by 2 every time h is divided by 2, and the number of time steps is multiplied by 2.
This is also true when the function f(x,t) is Lipschitz continuous with respect to x. qui serait lipschitzienne par rapport Ã  la 1Ã¨re variable.
We adressed briefly the question of higher order schemes, the order 2 Crank-Nicolson scheme, une grosse littÃ©rature sur des schÃ©mas d'ordre plus Ã©levÃ© que l'ordre 1.
Then we extended the Euler schemes to differential systems of first order.
Consider for instance the Euler forward scheme, il suffit de mettre un vecteur sur u^(n+1)
(u^(n+1)-u^n)/h = f(u^n,t) now all the u^n's are vectors.
It is an explicit method, we can write the vector u^(n+1) as  u^n+h*f(u^n,tn), an equality between vectors.
For the backward Euler method, to find u^(n+1), we have to solve a nonlinear system of equations at each time step. u^(n+1) en fonction de u^n
Newton's method can be used to solve this nonlinear system. ce systÃ¨me d'Ã©quation non-linÃ©aire.
