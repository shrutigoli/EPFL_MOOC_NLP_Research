1
00:00:03,460 --> 00:00:06,750
Bienvenue: Nature, dans le code.
Nous sommes dans le chapitre 7, leçon 2.

2
00:00:06,750 --> 00:00:11,310
Donc, notre tâche consiste à mettre en œuvre
la propagation spatiale d'une maladie infectieuse

3
00:00:11,310 --> 00:00:13,756
en JavaScript, donc
nous allons continuer et le faire.

4
00:00:13,756 --> 00:00:19,320
Bon, nous sommes ici avec
notre ami le document vide,

5
00:00:19,320 --> 00:00:22,030
et nous allons juste continuer
et commencer,

6
00:00:22,030 --> 00:00:26,490
donc je vais commencer à nouveau avec
le type de doc HTML, comme toujours,

7
00:00:26,490 --> 00:00:31,950
et je vais créer mon modèle HTML,

8
00:00:31,950 --> 00:00:34,630
donc <i> & lt; html & gt; & Lt; / html & gt; </ i>

9
00:00:34,630 --> 00:00:38,900
puis la balise de tête,
qui finalement va contenir

10
00:00:38,900 --> 00:00:42,006
la bibliothèque de d3, et la balise corps,

11
00:00:42,006 --> 00:00:45,756
qui va contenir le reste du code.

12
00:00:46,580 --> 00:00:49,780
D'accord, je vais continuer
et enregistrer ceci maintenant,

13
00:00:49,780 --> 00:00:53,710
de sorte que j'ai la syntaxe appropriée
mettant en évidence;

14
00:00:53,710 --> 00:00:58,559
Je suis ici dans les exemples de code.
Je vais l'appeler <i> epidemics.html </ i>

15
00:00:59,890 --> 00:01:04,599
Bon, alors faisons-le comme
nous l'avons toujours fait dans le passé.

16
00:01:04,599 --> 00:01:07,412
Nous allons juste mettre en place
quelques variables globales,

17
00:01:07,412 --> 00:01:11,960
et puis nous allons juste pour définir
la première fonction que nous devons appeler.

18
00:01:11,960 --> 00:01:16,220
Ainsi, les variables globales
sont: <i> grid_length </ i>,

19
00:01:16,220 --> 00:01:20,919
et ici je suis maintenant inspiré,
essentiellement, par ce que nous,

20
00:01:20,919 --> 00:01:21,785
Whoops! Pardon.

21
00:01:21,785 --> 00:01:25,210
Voici tout d'abord, bien sûr,
nous avons besoin de la balise de script.

22
00:01:25,210 --> 00:01:28,046
Voilà pourquoi on n'a pas eu
la coloration syntaxique.

23
00:01:28,046 --> 00:01:32,766
Nous sommes donc inspirés par ce que
nous avons fait dans le chapitre 5,

24
00:01:32,766 --> 00:01:35,920
et dans le chapitre 5, nous avons
également eu une simulation spatiale,

25
00:01:35,920 --> 00:01:40,100
et que vous vous souvenez, nous devions
d'abord définir la longueur de la grille ici,

26
00:01:40,100 --> 00:01:44,820
qui était de 100, ce qui consiste à couvrir
essentiellement la taille de la grille.

27
00:01:44,820 --> 00:01:46,650
Nous allons avoir une grille carrée.

28
00:01:46,650 --> 00:01:49,670
Et puis, bien sûr, nous avons besoin
de cette grille variable elle-même,

29
00:01:49,670 --> 00:01:52,240
qui va tenir la grille à deux dimensions

30
00:01:52,240 --> 00:01:55,558
Je vais juste initialiser cela comme
un tableau vide ici

31
00:01:55,558 --> 00:01:59,000
puis nous avons ce concept
d'une grille de temp,

32
00:01:59,000 --> 00:02:03,590
où l'on pouvait stocker des valeurs comme
nous allons à travers chaque individu,

33
00:02:03,590 --> 00:02:05,851
et comme nous essayons de comprendre

34
00:02:05,851 --> 00:02:09,930
que sera l'état de la grille dans
la prochaine génération.

35
00:02:09,930 --> 00:02:13,470
Et afin d'éviter toute complication
entre cette étape de temps

36
00:02:13,470 --> 00:02:16,704
et l'étape prochaine,
nous utilisons cette grille temporaire.

37
00:02:16,704 --> 00:02:18,600
Si cela semble complètement étrange à vous,

38
00:02:18,600 --> 00:02:22,757
s'il vous plaît revenir au chapitre 5,
où nous en avons discuté en détail.

39
00:02:22,757 --> 00:02:26,030
Et puis je dois avoir deux variables ici
pour cette simulation particulière,

40
00:02:26,030 --> 00:02:28,190
qui est <i> beta </ ​​i> et <i> gamma </ i>.

41
00:02:28,190 --> 00:02:30,090
Ce sont donc les probabilités de transmission,

42
00:02:30,090 --> 00:02:35,220
et les probabilités de récupération,
et je vais mettre cela ici à 0,05,

43
00:02:35,220 --> 00:02:39,848
<i> beta </ ​​i> et <i> gamma </ i> à 0,1.

44
00:02:40,340 --> 00:02:42,900
Donc, encore une fois, comme un rappel,

45
00:02:42,900 --> 00:02:49,012
<I> beta </ ​​i> est l'unité par unité de temps
et par contact avec la probabilité de transmission.

46
00:02:49,012 --> 00:02:53,660
Par conséquent, si un individu infecté
est connecté à un individu sensible,

47
00:02:53,660 --> 00:02:58,121
par fois la probabilité d'infecté d'infecter

48
00:02:58,121 --> 00:03:02,583
l'individu sensible est ici maintenant
5%, qui est <i> beta </ ​​i>,

49
00:03:02,583 --> 00:03:05,394
et <i> gamma </ i> est
la probabilité de temps par pas

50
00:03:05,394 --> 00:03:07,941
qu'un individu infecté récupère.

51
00:03:08,390 --> 00:03:11,294
Bien. Alors, quoi d'autre avons-nous besoin?

52
00:03:11,294 --> 00:03:14,932
Eh bien, je pense que c'est tout
en termes de variables globales.

53
00:03:15,640 --> 00:03:19,420
Donc, la première chose que nous devons faire,
comme nous l'avions besoin de faire au chapitre 5,

54
00:03:19,420 --> 00:03:22,400
est <i> init </ i>,
ou pour initialiser cette grille.

55
00:03:22,400 --> 00:03:24,760
Donc, je vais appeler à nouveau
cette fonction <i> init_grid () </ i>,

56
00:03:24,760 --> 00:03:28,336
et maintenant je dois le définir:
<i> init_grid </ i>

57
00:03:31,130 --> 00:03:33,869
Et, comme dans le chapitre 5,

58
00:03:33,869 --> 00:03:37,200
Je vais maintenant à mettre en place
cette boucle imbriquée,

59
00:03:37,200 --> 00:03:42,997
donc
<i> for (var i = 0; i & lt; grid_length; </ i>

60
00:03:46,300 --> 00:03:50,431
et puis bien sûr <i> i = i + 1) </ i>

61
00:03:52,390 --> 00:03:55,280
Donc la première chose que
je fais ici est d'assurer effectivement

62
00:03:55,280 --> 00:03:59,780
que cette grille est en effet
une matrice bidimensionnelle,

63
00:03:59,780 --> 00:04:03,780
en réglant le <i> i </ i> ième élément
de la grille à un tableau vide.

64
00:04:03,780 --> 00:04:05,519
Nous avons donc maintenant
ce tableau à deux dimensions,

65
00:04:05,519 --> 00:04:10,647
alors maintenant je peux aller
sur <i> grid_length </ i> à nouveau.

66
00:04:11,385 --> 00:04:15,328
D'accord, permettez-moi de copier cela,
et utilise <i> ii </ i> ici, comme toujours.

67
00:04:17,910 --> 00:04:22,690
Et maintenant, je suis dans une position
où je peux définir les valeurs de cellules,

68
00:04:22,690 --> 00:04:25,900
à grille <i> iii </ i>.

69
00:04:25,900 --> 00:04:29,270
Alors qu'auparavant nous fixons
les trois génotypes possibles,

70
00:04:29,270 --> 00:04:32,842
A1A1, A1A2 et A2A2.

71
00:04:32,842 --> 00:04:35,810
Ici, les trois états différents
états ne sont pas génétiques,

72
00:04:35,810 --> 00:04:40,560
mais ils sont <i> S </ i>, <i> I </ i> et <i> R </ i>,
si sensible, infecté, ou rétabli.

73
00:04:40,560 --> 00:04:43,662
Je vais donc d'initialiser ces valeurs
ici simplement pour <i> S </ i>.

74
00:04:44,130 --> 00:04:45,911
Très bien, puis, je dois vous assurer

75
00:04:45,911 --> 00:04:50,377
Je vais fermer la accolade ici.

76
00:04:50,719 --> 00:04:53,610
Alors maintenant, chacun des individus,

77
00:04:53,610 --> 00:04:56,510
10.000 personnes ici, sont sensibles.

78
00:04:56,510 --> 00:04:59,870
Maintenant, ce serait un monde ennuyeux.
Eh bien, ce serait un monde sain,

79
00:04:59,870 --> 00:05:02,220
mais il serait ennuyeux pour la perspective

80
00:05:02,220 --> 00:05:04,970
de notre exemple ici, parce que
nous n'obtiendrai pas une épidémie,

81
00:05:04,970 --> 00:05:08,291
parce qu'il n'y a pas d'individus
infectieux pour le moment.

82
00:05:08,750 --> 00:05:12,830
Donc, ce que nous voulons faire est que nous voulons
prendre maintenant un individu au hasard

83
00:05:12,830 --> 00:05:17,979
ou un emplacement aléatoire sur cette grille,
et définissez sa valeur à <i> i </ i>

84
00:05:17,979 --> 00:05:21,540
de sorte que cette personne sera contagieuse.

85
00:05:21,540 --> 00:05:23,225
Comment y arrivons-nous?

86
00:05:23,700 --> 00:05:28,680
Eh bien en fait, nous allons chercher
un individu ici,

87
00:05:28,680 --> 00:05:33,195
et nous devons choisir les coordonnées
correspondantes ici,

88
00:05:33,195 --> 00:05:37,800
puis nous allons définir
ce pauvre individu à <i> I </ i>.

89
00:05:37,800 --> 00:05:40,439
Donc, cet individu est maintenant infecté.

90
00:05:40,439 --> 00:05:42,274
D'accord, quelles valeurs faut-il ici?

91
00:05:42,240 --> 00:05:44,900
Eh bien, nous avons besoin
des valeurs choisi au hasard

92
00:05:44,900 --> 00:05:48,420
entre zero qui est l'indice
minimum bien sûr,

93
00:05:48,420 --> 00:05:52,210
et l'indice maximum de ce tableau
est <i> grid_length </ i> moins un,

94
00:05:52,210 --> 00:05:58,885
et il est moins un, comme vous le savez,
parce que l'indice dans un tableau commence à 0.

95
00:06:00,420 --> 00:06:05,740
Alors, comment pouvons-nous obtenir une valeur
entière entre un minimum et une valeur maximale?

96
00:06:05,740 --> 00:06:08,210
Hm, qui devrait sonner une cloche.

97
00:06:08,210 --> 00:06:11,189
Ceci est quelque chose que
nous avons utilisé dans le chapitre 5,

98
00:06:11,189 --> 00:06:14,485
où nous avons développé
cette fonction <i> get_random_int </ i>

99
00:06:14,485 --> 00:06:17,850
avec un min et une valeur max.
Ainsi, vous pouvez soit copier cette fonction

100
00:06:17,850 --> 00:06:21,783
à partir de là, ou je vais juste
le développer ici une fois de plus:

101
00:06:22,260 --> 00:06:27,847
<I> get_random_int (min, max) </ i>

102
00:06:29,520 --> 00:06:32,070
Ainsi, tout comme un rappel,
comment faisons-nous cela?

103
00:06:32,070 --> 00:06:36,630
Eh bien, tout aléas, nous aurons besoin,
par la suite,

104
00:06:36,630 --> 00:06:38,035
appeler <i> Math.random () </ i>

105
00:06:38,035 --> 00:06:41,019
Maintenant, <i> Math.random () </ i>
seul ici, bien sûr, est loin d'être suffisante,

106
00:06:41,019 --> 00:06:42,950
parce qu'il a trois problèmes.

107
00:06:42,950 --> 00:06:47,010
Tout d'abord, il ne retourne pas un nombre
entier, mais un nombre à virgule flottante.

108
00:06:47,010 --> 00:06:52,740
En second lieu, elle ne couvre entre 0 et 1,
de sorte qu'il a seulement une gamme de 1,

109
00:06:52,740 --> 00:06:55,640
mais ici notre gamme pourrait
être beaucoup plus grande.

110
00:06:55,640 --> 00:07:00,910
Et puis, enfin, il est également
mal placé,il commence à zéro,

111
00:07:00,910 --> 00:07:03,820
mais notre gamme commence
réellement à <i> min </ i> ici,

112
00:07:03,820 --> 00:07:06,150
nous avons donc besoin
de fixer ces trois choses.

113
00:07:06,150 --> 00:07:08,090
Comment avons-nous fait cela?

114
00:07:08,090 --> 00:07:11,650
Eh bien, le premier élément
d'action ici, pour ainsi dire,

115
00:07:11,650 --> 00:07:18,475
est de multiplier ce <i> Math.random </ i>
avec <i> (max - min + 1) </ i>

116
00:07:18,475 --> 00:07:20,080
pour obtenir la plage correcte.

117
00:07:20,080 --> 00:07:24,030
Pourquoi? Parce que <i> max - min </ i>
nous donne exactement la gamme,

118
00:07:24,030 --> 00:07:28,875
donc par exemple si <i> max </ i> est 8
et <i> min </ i> est 3 puis <i> max - min </ i> est 5,

119
00:07:28,875 --> 00:07:30,400
qui est la plage correcte,

120
00:07:30,400 --> 00:07:33,657
mais nous voulons, bien sûr, inclure 5,

121
00:07:33,657 --> 00:07:36,870
et afin de ne pas perdre cette valeur max,

122
00:07:36,870 --> 00:07:39,690
il faut ajouter 1, en particulier,

123
00:07:39,690 --> 00:07:45,163
comme nous allons maintenant
<i> étage </ i> tout ce terme ici,

124
00:07:45,163 --> 00:07:48,280
parce que cela va nous donner l'entier.

125
00:07:48,280 --> 00:07:51,280
Et maintenant, nous devons
résoudre deux problèmes.

126
00:07:51,280 --> 00:07:53,550
Nous avons un nombre entier;
il a la plage correcte,

127
00:07:53,550 --> 00:07:57,660
mais il est au mauvais endroit,
car il commence toujours à zéro,

128
00:07:57,660 --> 00:07:59,060
mais il devrait commencer à <i> min </ i>.

129
00:07:59,060 --> 00:08:02,690
Voilà pourquoi nous allons simplement
ajouter <i> min </ i> ici à la fin.

130
00:08:02,690 --> 00:08:06,194
Bon, maintenant que nous avons
cette fonction <i> random_int</ i> ,

131
00:08:06,194 --> 00:08:07,970
nous pouvons utiliser ceci ici.

132
00:08:07,970 --> 00:08:11,600
Donc, nous allons appeler cela
ici <i> get_random_int </ i>,

133
00:08:11,600 --> 00:08:15,240
et les deux arguments
que nous voulons passer ici

134
00:08:15,240 --> 00:08:17,671
est la valeur minimale qui est égale à zéro,

135
00:08:17,671 --> 00:08:22,893
et la valeur maximale
qui est <i> grid_length-1 </ i>

136
00:08:24,020 --> 00:08:28,438
Et exactement la même chose
qui se passe ici.

137
00:08:29,350 --> 00:08:32,760
D'accord, nous pouvons simplement
copier cela, déplacez-le ici.

138
00:08:32,760 --> 00:08:34,868
Et en passant, bien sûr,
vous avez peut-être remarqué

139
00:08:34,868 --> 00:08:39,000
que cela n'aurait techniquement
pas été nécessaire en ce moment,

140
00:08:39,000 --> 00:08:41,900
parce que la valeur minimale
est effectivement à zéro,

141
00:08:41,900 --> 00:08:44,650
mais néanmoins,
cela devrait être une fonction générique

142
00:08:44,650 --> 00:08:48,904
qui peut faire face à toutes sortes
de <i> min </ i> et <i> max </ i> des valeurs.

143
00:08:49,730 --> 00:08:53,350
Bon, alors maintenant nous avons cette grille,
il est initialisé, tout le monde est susceptible,

144
00:08:53,350 --> 00:08:56,685
il y a une personne pauvre qui
est fondamentalement le patient zéro,

145
00:08:56,685 --> 00:08:58,620
et qui est maintenant infecté.

146
00:08:58,620 --> 00:09:01,378
Eh bien, que diriez-vous
de continuer et visualiser cela.

147
00:09:01,378 --> 00:09:02,816
Nous avons donc besoin de deux choses.

148
00:09:02,816 --> 00:09:05,883
Tout d'abord, nous devons appeler
ce mise à jour

149
00:09:05,883 --> 00:09:09,924
Désolé, ceci <i> draw_grid () </ i> fonction,

150
00:09:13,000 --> 00:09:15,610
et nous avons besoin de passer
dans certains paramètres ici,

151
00:09:15,610 --> 00:09:17,060
que nous allons faire dans une seconde,

152
00:09:17,060 --> 00:09:20,152
mais nous devons aussi définir
cette <i> draw_grid </ i>,

153
00:09:20,152 --> 00:09:24,480
ou plutôt, copiez-le
de notre exemple précédent,

154
00:09:24,480 --> 00:09:27,480
et puis, bien sûr, nous avons
aussi besoin de charger <i> d3 </ i>.

155
00:09:27,480 --> 00:09:29,740
Donc, nous allons tout
simplement continuer et le faire.

156
00:09:29,740 --> 00:09:34,212
Laissez-moi passer ici à un navigateur
et si je recherche pour <i> d3 </ i>,

157
00:09:34,212 --> 00:09:38,440
généralement la première page
qui devrait arriver est <i> d3.js </ i>,

158
00:09:38,440 --> 00:09:39,770
qui est la maison de <i> d3 </ i>.

159
00:09:39,770 --> 00:09:41,190
Et encore une fois,
comme nous l'avons fait auparavant,

160
00:09:41,190 --> 00:09:46,920
nous pouvons simplement copier l'extrait ici
pour accéder directement à la dernière version,

161
00:09:46,920 --> 00:09:49,940
Je vais copier cela et aller à mon code,

162
00:09:49,940 --> 00:09:53,727
et je vais mettre ceci dans la tête,
comme nous l'avons fait auparavant,

163
00:09:54,970 --> 00:09:57,100
puis je besoin de cette
fonction <i>draw_grid </ i>,

164
00:09:57,100 --> 00:10:01,662
que nous avons utilisé auparavant dans le chapitre 5,
de sorte que vous pouvez copier à partir de là,

165
00:10:01,662 --> 00:10:06,130
ou vous pouvez à nouveau aller
à <i> natureincode.com </ i>,

166
00:10:06,130 --> 00:10:10,296
et cliquez ici pour voir le code en action.

167
00:10:10,296 --> 00:10:12,850
Et puis, par exemple, ici dans
les modèles spatiaux.

168
00:10:12,850 --> 00:10:16,735
Voici le code pour la simulation,

169
00:10:16,735 --> 00:10:19,493
et ici il dit, "noter les <i> draw_grid </ i>
et <i> update_grid </ i> Fonctions

170
00:10:19,493 --> 00:10:22,280
sont construits avec <i> d3 </ i>,
et peut être trouvé ici. "

171
00:10:22,280 --> 00:10:25,365
Donc, je vais simplement copier ce code ici,

172
00:10:25,365 --> 00:10:28,210
la fonction <i> draw_grid</ i>,
et fonction<i>update_grid</ i> .

173
00:10:28,210 --> 00:10:30,820
Mais encore une fois, nous avons
déjà utilisé ceci chapitre 5,

174
00:10:30,820 --> 00:10:33,170
donc si vous voulez,
vous pouvez aller et copier cela

175
00:10:33,170 --> 00:10:36,990
à partir de vos fichiers HTML
que vous avez développé

176
00:10:36,990 --> 00:10:40,484
dans le cadre du chapitre 5,
la simulation spatiale.

177
00:10:40,484 --> 00:10:41,968
D'accord, je vais copier cela ici

178
00:10:41,968 --> 00:10:45,146
dans le corps au sommet
de mon code de simulation ici,

179
00:10:45,146 --> 00:10:49,739
et ce que je vais faire, encore une fois, est que
je vais mettre en retrait ceci correctement,

180
00:10:49,739 --> 00:10:54,204
et vous pouvez ou ne voulez
pas faire cela, vraiment à vous.

181
00:10:54,204 --> 00:10:56,310
C'est juste que je tiens à le faire.

182
00:10:56,310 --> 00:11:03,100
Bon, observer ici que <i> draw_grid </ i>
a deux paramètres:

183
00:11:03,100 --> 00:11:08,080
<I> Données </ i>, qui sont les données à visualiser,
et ceci est notre grille, et <i> couleurs </ i>.

184
00:11:08,080 --> 00:11:11,950
Et <i> couleurs </ i> n'est pas nécessaire.
Il y a une valeur par défaut,

185
00:11:11,950 --> 00:11:14,800
et nous avons utilisé
ces valeurs par défaut avant.

186
00:11:14,800 --> 00:11:18,640
Cela se produit lorsque vous ne
passez pas un second argument.

187
00:11:18,640 --> 00:11:23,737
Et cela va alors générer
ce modèle de couleur bleu-noir-blanc.

188
00:11:24,300 --> 00:11:26,310
Ici, je veux utiliser des
couleurs légèrement différentes.

189
00:11:26,310 --> 00:11:29,880
Je veux utiliser gris pour
les personnes infectées. Je veux utiliser,

190
00:11:29,880 --> 00:11:32,880
Non, désolé gris pour le sensible, en effet,

191
00:11:32,880 --> 00:11:37,240
rouge pour les personnes infectées,
puis vert pour le récupérer.

192
00:11:37,240 --> 00:11:40,975
Et donc je vais passer ces valeurs
de couleur ici comme un tableau.

193
00:11:41,467 --> 00:11:43,360
Et comment cela fonctionne est la suivante.

194
00:11:43,360 --> 00:11:47,990
Donc, <i> draw_grid </ i> a besoin
d'abord la grille, nos données,

195
00:11:48,570 --> 00:11:50,223
puis ce tableau.

196
00:11:50,510 --> 00:11:53,622
Et ici, ce tableau doit être structuré
de la façon suivante.

197
00:11:54,390 --> 00:11:59,923
Elle a besoin d'être essentiellement
une séquence de ce qui est du contenu de la grille.

198
00:12:00,870 --> 00:12:06,980
Ainsi, par exemple, nous avons trois types
de valeurs ici dans notre grille, <i> S </ i>, <i> I </ i> et <i> R </ i>.

199
00:12:06,980 --> 00:12:09,810
Alors d'abord <i> "S" </ i>, puis virgule.

200
00:12:09,810 --> 00:12:14,197
Maintenant, quel est le code couleur ici
pour <i> S </ i>?

201
00:12:14,197 --> 00:12:18,470
Donc, je vais utiliser la notation
de couleur hexadécimal,

202
00:12:18,470 --> 00:12:20,940
qui est essentiellement le suivant.

203
00:12:20,940 --> 00:12:23,230
Vous utilisez le symbole de hachage,

204
00:12:23,230 --> 00:12:27,179
et puis vous avez ces six valeurs,

205
00:12:27,179 --> 00:12:31,320
et parce qu'il est hexadécimal,
il va de 0 à 9,

206
00:12:31,320 --> 00:12:35,187
puis <i> a, b, c, d, e ou f. </ i>

207
00:12:35,940 --> 00:12:40,002
Nous avons donc <i> dcdcdc </ i>.

208
00:12:45,900 --> 00:12:48,083
Ensuite, nous avons <i> I </ i>.

209
00:12:48,083 --> 00:12:53,591
Pour <i> I </ i> nous allons
utiliser <i> c82605 </ i>.

210
00:12:56,850 --> 00:12:59,830
Pourquoi? Eh bien, tout simplement parce que
c'est une valeur que j'ai choisi,

211
00:12:59,830 --> 00:13:02,759
et nous ne devons pas
oublier le hashtag ici.

212
00:13:02,759 --> 00:13:06,030
Et puis, enfin, pour <i> R </ i>,

213
00:13:06,030 --> 00:13:13,046
nous allons utiliser la valeur
d'un vert, qui est 6fc401.

214
00:13:18,330 --> 00:13:23,470
Donc, encore une fois, vous pouvez utiliser toutes
les valeurs ici ces codes de couleur que vous souhaitez.

215
00:13:25,120 --> 00:13:27,928
Je vous recommande de coller
avec ceux-là pour le moment,

216
00:13:27,928 --> 00:13:30,253
donc il est réellement logique,
ce que vous voyez dans la vidéo,

217
00:13:30,253 --> 00:13:31,920
et vous verrez dans votre navigateur,

218
00:13:31,920 --> 00:13:34,484
mais si vous décidez que
vous voulez vos propres valeurs,

219
00:13:34,484 --> 00:13:37,650
vous pouvez vraiment juste aller
à un site Web.

220
00:13:37,650 --> 00:13:42,138
Ainsi, vous pouvez, par exemple, obtenir
des codes de couleur hexadécimaux.

221
00:13:42,138 --> 00:13:44,398
Vous pouvez rechercher des
<i> codes de couleur hexadécimal </ i>,

222
00:13:44,398 --> 00:13:46,876
puis là, vous avez une explication,
par exemple:

223
00:13:46,876 --> 00:13:51,475
"Un triplet hexadécimal est un à six chiffres,
trois octets nombre hexadécimal utilisé en HTML

224
00:13:51,475 --> 00:13:54,956
[...] Et d'autres applications de calcul
pour représenter les couleurs. "

225
00:13:54,956 --> 00:13:59,750
Donc, ces triplets iront de,

226
00:13:59,750 --> 00:14:02,008
bon ces doublets, plutôt.

227
00:14:02,008 --> 00:14:04,673
Je veux dire que c'est un triplet
de ces deux nombres

228
00:14:04,673 --> 00:14:09,180
qui vont de 00 à FF
en notation hexadécimale.

229
00:14:09,180 --> 00:14:13,503
En notation décimale ce serait
0 à 255 en tant que valeur max.

230
00:14:13,503 --> 00:14:15,860
Et donc si vous, par exemple,
cliquez ici sur le premier lien,

231
00:14:15,860 --> 00:14:17,880
<I> couleur hex </ i>,

232
00:14:17,880 --> 00:14:21,500
vous pouvez voir ici les dernières
couleurs préférées des utilisateurs,

233
00:14:21,500 --> 00:14:23,942
et vous pouvez toujours
voir le code hexadécimal ici,

234
00:14:23,942 --> 00:14:29,090
de sorte que le hachage
et puis ces trois couples,

235
00:14:29,090 --> 00:14:31,840
88, 1a, et 1b,

236
00:14:31,840 --> 00:14:34,490
et ceux-ci sont pour les canaux
de couleurs de liaison correspondantes,

237
00:14:34,490 --> 00:14:37,445
de sorte RVB: rouge, vert, bleu.

238
00:14:37,445 --> 00:14:42,598
Donc, ceci est une valeur 13 ici,
par exemple, pour le rouge, pour le canal rouge,

239
00:14:42,598 --> 00:14:48,261
une valeur 92 pour le canal vert,

240
00:14:48,261 --> 00:14:52,325
et 8e de valeur pour le canal bleu.

241
00:14:52,960 --> 00:14:55,360
Ainsi, en passant, si vous voulez
juste choisir une couleur,

242
00:14:55,360 --> 00:14:56,900
vous pouvez, par exemple, cliquez ici,

243
00:14:56,900 --> 00:14:59,980
et puis vous pouvez choisir
la bande de couleur.

244
00:14:59,980 --> 00:15:03,210
Disons que vous aimeriez avoir ce bleu ici,
vous aimez ce bleu.

245
00:15:03,210 --> 00:15:07,546
Ce serait donc le code couleur
hexadécimal ici: # 282bdd.

246
00:15:08,907 --> 00:15:10,969
Donc, retour au code.

247
00:15:11,430 --> 00:15:15,614
Je pense que nous avons tous mis en place.
Nous avons ici notre <i> init_grid </ i> appel.

248
00:15:15,614 --> 00:15:17,603
Cela initialise la grille,

249
00:15:17,603 --> 00:15:21,054
met chaque individu dans l'état sensible,

250
00:15:21,054 --> 00:15:25,510
alors il choisit un individu
au hasard qui va être zéro patient.

251
00:15:25,510 --> 00:15:29,073
Nous allons donc définir
ce statut individuel à <i> "I" </ i>,

252
00:15:29,073 --> 00:15:31,304
puis le <i> draw_grid </ i> fonction est appelée,

253
00:15:31,304 --> 00:15:34,870
qui devrait maintenant dessiner
la grille dans le navigateur.

254
00:15:34,870 --> 00:15:38,804
Donc, nous allons enregistrer cela,
et revenir ici pour le navigateur,

255
00:15:38,804 --> 00:15:46,011
et ouvrir ce fichier, donc
<i> Ouvrir un fichier & gt; epidemics.html & gt; Ouvrir </ i>

256
00:15:46,556 --> 00:15:47,800
Et il est ici.

257
00:15:47,800 --> 00:15:54,089
Nous avons donc ici
une mer de 9.999 personnes en gris

258
00:15:54,089 --> 00:15:57,050
qui sont sensibles, et ici cette pauvre âme,

259
00:15:57,050 --> 00:16:00,712
que ce patient zéro, et
il est placé au hasard sur la grille,

260
00:16:00,712 --> 00:16:03,952
donc si vous rechargez cela et ici,

261
00:16:04,660 --> 00:16:05,821
maintenant il est ici,

262
00:16:06,240 --> 00:16:07,632
maintenant il est ici,

263
00:16:07,960 --> 00:16:08,990
maintenant il est ici et ainsi de suite.

264
00:16:08,990 --> 00:16:13,470
Donc, ceci est vraiment
une personne choisie au hasard

265
00:16:13,470 --> 00:16:15,050
qui est maintenant le patient zéro.

266
00:16:15,050 --> 00:16:16,733
Maintenant, rien ne se passe au moment

267
00:16:16,733 --> 00:16:21,456
parce que nous avons pas maintenant
mis en œuvre la simulation sur plusieurs pas de temps,

268
00:16:21,456 --> 00:16:23,160
et l'infection et les étapes
de récupération,

269
00:16:23,160 --> 00:16:25,914
mais nous allons commencer
dans la prochaine session.

270
00:16:25,914 --> 00:16:27,053
On se verra là bas.

