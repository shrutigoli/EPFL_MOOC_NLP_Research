1
00:00:03,347 --> 00:00:06,347
Bienvenue,la Nature, dans le code.
Nous sommes dans le chapitre 7, leçon 4.

2
00:00:06,750 --> 00:00:09,194
Nous avons tout mis en place
pour notre simulation.

3
00:00:09,431 --> 00:00:12,585
La fonction d'exposition est là, mais maintenant
nous avons besoin de la mettre en œuvre.

4
00:00:12,785 --> 00:00:15,222
Nous avons besoin de mettre en œuvre
l'ensemble du processus d'infection.

5
00:00:15,393 --> 00:00:17,588
Donc, ce que nous allons faire,
dans cette leçon.

6
00:00:17,751 --> 00:00:19,908
D'accord, tout comme un rappel,
comment nous le faisons est

7
00:00:20,108 --> 00:00:23,108
encore une fois, nous allons emprunter
lourdement du chapitre cinq.

8
00:00:24,420 --> 00:00:27,081
Lorsque nous en avons parlé en détail.

9
00:00:27,281 --> 00:00:32,207
Mais comme un rappel. Nous avons
un individu focal ici à l'emplacement I.

10
00:00:32,828 --> 00:00:33,730
ii

11
00:00:33,930 --> 00:00:37,544
puis en conséquence nous avons mis
maintenant, ok, ce sont les contacts ici.

12
00:00:37,744 --> 00:00:39,431
Huit cellules dans le voisinage

13
00:00:39,631 --> 00:00:41,047
et nous savons maintenant que

14
00:00:41,247 --> 00:00:44,709
les indices en conséquence ici sont i - 1

15
00:00:44,909 --> 00:00:48,272
et ii - 1 pour ici,
donc nous avons ici i - 1

16
00:00:49,517 --> 00:00:52,833
ceux au sommet, et nous avons ici i + 1

17
00:00:53,304 --> 00:00:54,654
pour ceux du bas

18
00:00:55,321 --> 00:00:58,195
et nous gardons juste la constante de i ici

19
00:00:58,395 --> 00:01:01,706
et, en conséquence, si nous allons à la gauche,
nous avons tout simplement soustraire

20
00:01:03,162 --> 00:01:05,709
un de i, et nous devons ajouter

21
00:01:06,877 --> 00:01:10,517
un à ii, si nous voulons aller

22
00:01:10,717 --> 00:01:11,678
Par la gauche?

23
00:01:14,889 --> 00:01:17,791
Et ici, dans ce cas particulier

24
00:01:17,966 --> 00:01:19,795
Où nous montons et descendons simplement,

25
00:01:19,970 --> 00:01:21,437
mais pas à gauche et à droite,

26
00:01:21,680 --> 00:01:24,123
nous allons bien sûr, rester

27
00:01:25,479 --> 00:01:27,725
nous conserverons la valeur ii

28
00:01:27,925 --> 00:01:31,660
et ainsi, c'est exactement comment
nous avons implémenté cette

29
00:01:31,890 --> 00:01:33,790
dans le chapitre cinq.

30
00:01:33,950 --> 00:01:37,492
Si cela ne vous dit pas quelque chose,
s'il vous plaît retourner au chapitre cinq

31
00:01:37,692 --> 00:01:40,692
leçon quatre, où on parle
de tout cela en détail.

32
00:01:40,892 --> 00:01:43,892
Donc, nous allons continuer
et mettre en œuvre cela.

33
00:01:44,092 --> 00:01:47,092
Ici, nous sommes, de retour dans notre code.
Nous devons exécuter pas de temps, mis en place ici.

34
00:01:47,689 --> 00:01:49,339
et nous créons cette grille temporaraie

35
00:01:49,489 --> 00:01:51,872
et nous appelons cette fonction voisins_exposés

36
00:01:52,087 --> 00:01:54,014
sur les individus, sur la grille

37
00:01:54,214 --> 00:01:55,893
qui sont à l'état infecté

38
00:01:56,667 --> 00:01:59,091
et puis à la fin, quand
tout est réglé et fait.

39
00:01:59,249 --> 00:02:02,444
Nous allons copier, le modèle d'évaluation

40
00:02:02,644 --> 00:02:05,195
qui maintenant a été mis à jour
dans la grille.

41
00:02:05,709 --> 00:02:10,104
Donc, maintenant ce que nous devons faire
est, nous avons besoin de mettre en œuvre

42
00:02:10,504 --> 00:02:13,200
cette fonction voisins_exposés.

43
00:02:13,400 --> 00:02:15,067
Donc, nous allonscontinuer et le faire.

44
00:02:15,856 --> 00:02:17,714
Je vais définir ici la fonction

45
00:02:18,673 --> 00:02:22,493
voisins_exposés

46
00:02:23,854 --> 00:02:25,184
voisins_exposés

47
00:02:26,118 --> 00:02:30,505
et je vais garder ces valeurs ici i & ii

48
00:02:30,705 --> 00:02:33,964
Je ne vais pas changer le nom.
Donc, nous avons ces deux

49
00:02:34,514 --> 00:02:36,311
paramètres ici dans cette fonction.

50
00:02:36,511 --> 00:02:40,012
Ceci est, bien sûr, la localisation
de l'individu qui est infecté

51
00:02:40,719 --> 00:02:43,846
qui est censé exposer les voisins.

52
00:02:44,866 --> 00:02:48,289
Donc, nous venons d'apprendre
sur le système de coordonnées

53
00:02:48,489 --> 00:02:53,807
quels voisins seront exposés.

54
00:02:54,163 --> 00:02:56,947
Maintenant, ici, ce n'est pas une chose
aléatoire, en fait nous allons

55
00:02:57,122 --> 00:03:00,766
aller systématiquement par tous
les voisins. Donc, ce que je

56
00:03:00,928 --> 00:03:05,011
vais faire et, mettre en place
la correspondante boucle à deux dimensions

57
00:03:05,173 --> 00:03:10,287
ici. Je vais dire, pour var n_i

58
00:03:10,487 --> 00:03:12,399
et je vais maintenant utiliser n_i, OK

59
00:03:12,869 --> 00:03:15,869
Parce que, tout d'abord
je l'ai déjà utilisé i ici

60
00:03:16,252 --> 00:03:17,954
donc, nous ne devrions pas jouer avec cela.

61
00:03:18,374 --> 00:03:21,435
Mais d'autre part, cela signifie,
essentiellement pour un voisin,

62
00:03:21,606 --> 00:03:22,880
Ok, voisin i.

63
00:03:23,214 --> 00:03:27,466
Donc, n_i devrait commencer
à la valeur minimale

64
00:03:27,666 --> 00:03:32,048
qui, comme nous le savons est i - 1.

65
00:03:33,886 --> 00:03:36,886
ceci est ici l'initialisation, de la boucle

66
00:03:37,147 --> 00:03:40,666
alors la condition sera que, ce n_i

67
00:03:40,866 --> 00:03:45,092
être inférieur ou égal
à une valeur maximale

68
00:03:45,441 --> 00:03:49,808
et nous savons que cette valeur maximale
est 1 + i ou i + 1.

69
00:03:50,008 --> 00:03:53,008
Bien sûr, il est le même,
et puis finalement

70
00:03:53,208 --> 00:03:56,821
dans la même logique que précédemment,
nous devons bien sûr, s'assurer que

71
00:03:57,021 --> 00:04:00,817
nous continuons à augmenter
cette n_i par un.

72
00:04:01,695 --> 00:04:05,327
Ok, donc cela est maintenant
une boucle légèrement modifiée

73
00:04:05,527 --> 00:04:08,840
de ce que nous savons, mais c'est
essentiellement la même logique.

74
00:04:09,226 --> 00:04:12,001
Donc, var n_i = i - 1

75
00:04:12,201 --> 00:04:15,374
donc, va avoir peu d'espace ici,
pour faire ce look peu mieux

76
00:04:15,629 --> 00:04:18,383
et donc, ceci est l'initialisation,
la valeur minimale

77
00:04:18,583 --> 00:04:21,583
puis, nous continuons d'augmenter
cette valeur par un

78
00:04:21,783 --> 00:04:24,482
jusqu'à ce que, nous arrivons
à la valeur maximale.

79
00:04:25,980 --> 00:04:29,528
Ok, essentiellement maintenant
je vais faire exactement la même chose

80
00:04:30,902 --> 00:04:32,528
à nouveau pour

81
00:04:33,943 --> 00:04:35,566
les valeurs ii.

82
00:04:36,798 --> 00:04:41,867
Donc, ce que je vais dire ici
est pour var n_ii

83
00:04:42,213 --> 00:04:45,963
et cela, la valeur minimale ici,
bien sûr, est égal à ii - 1

84
00:04:47,897 --> 00:04:55,252
puis n_ii inférieure ou égale
à la valeur maximale qui est ii + 1

85
00:04:56,192 --> 00:05:03,253
et enfin bien sûr, l'incrément de n_ii
est égal à n_ii + 1.

86
00:05:04,941 --> 00:05:07,778
Bon, maintenant, nous traversons

87
00:05:08,103 --> 00:05:12,007
tous les individus voisins,
et les coordonnées sont maintenant

88
00:05:12,207 --> 00:05:15,207
ici pour les voisins n_i et n_ii.

89
00:05:16,480 --> 00:05:19,021
Donc la première chose que
je dois faire est, je dois dire, regarde

90
00:05:19,208 --> 00:05:22,611
si j'ajoute maintenant i égal n_i

91
00:05:22,874 --> 00:05:24,723
et ii est égal n_ii

92
00:05:24,886 --> 00:05:28,005
ou qu'est-ce que cela signifie? Cela signifie que
je ne suis pas réellement dans un voisin

93
00:05:28,177 --> 00:05:31,719
de notre cellule, je suis dans ma propre cellule,
à droite. Parce que ce que je fais ici c'est

94
00:05:31,845 --> 00:05:35,023
je vais simplement horizontalement
et verticalement à travers cette grille

95
00:05:35,223 --> 00:05:38,223
qui est engendré par ces valeurs maximales

96
00:05:39,013 --> 00:05:43,490
et les valeurs minimales. Mais bien sûr,
il contient ma propre cellule i, ii

97
00:05:43,690 --> 00:05:47,338
donc, je dois veiller à ce que
je fais abstraction d'une cellule

98
00:05:48,002 --> 00:05:50,580
qui est en fait la mienne.
Donc, je vais dire simplement,

99
00:05:51,088 --> 00:05:56,288
Ok, si n_i est égal à i

100
00:05:56,488 --> 00:05:58,925
cela est bien sûr, les doubles égaux

101
00:05:59,129 --> 00:06:03,507
et également, si n_ii est égal à ii.

102
00:06:03,707 --> 00:06:07,307
Donc, si ces deux conditions
sont remplies. Oops, ii pas 11

103
00:06:09,020 --> 00:06:13,732
puis, je suis en fait dans ma propre cellule.
Donc, ne rien faire, poursuivez

104
00:06:14,633 --> 00:06:18,183
et agir comme si rien ne se passait,
et en fait le mot-clé dans le script java

105
00:06:18,383 --> 00:06:21,383
pour ce faire dans une boucle c'est,
disons tout simplement continuer.

106
00:06:22,306 --> 00:06:24,701
Ok, ceci est un mot-clé,
vous pouvez voir cela ici

107
00:06:25,888 --> 00:06:27,938
dans mon éditeur de texte,
dans mon textwrangler ici

108
00:06:28,101 --> 00:06:30,600
souligne en fait cela comme un mot-clé.

109
00:06:31,226 --> 00:06:33,851
Ainsi, ceci est un mot-clé pour continuer
quand vous êtes dans une boucle

110
00:06:34,526 --> 00:06:36,915
et la boucle appuye sur
la commande continuer,

111
00:06:37,115 --> 00:06:40,636
il va simplement ignorer,
quoi qu'il arrive plus bas ici

112
00:06:40,836 --> 00:06:42,649
ça va aller dans la prochaine itération

113
00:06:42,849 --> 00:06:47,173
et cela peut parfois être tout à fait
à portée de main, et voici un cas où

114
00:06:47,363 --> 00:06:52,201
ce qui est pratique. Ok, donc maintenant,
ici sur cette ligne maintenant,

115
00:06:53,110 --> 00:06:55,740
Je vais maintenant essayer une infection

116
00:06:55,940 --> 00:06:59,227
parce que maintenant, en effet, nous sommes
à la situation, où nous avons

117
00:07:00,563 --> 00:07:03,012
l'individu infecté i, ii.

118
00:07:03,805 --> 00:07:06,567
Nous sommes maintenant certain,
nous sommes sur une cellule voisine

119
00:07:06,767 --> 00:07:09,673
donc, je vais essayer d'infecter ce voisin

120
00:07:09,873 --> 00:07:12,645
Je vais appeler une fonction
pour cela, que je dois définir

121
00:07:12,873 --> 00:07:14,873
un "try_infection."

122
00:07:15,269 --> 00:07:16,557
Et encore une fois juste pour être clair

123
00:07:17,294 --> 00:07:21,292
la boucle, le code
ne sera jamais à cette ligne

124
00:07:21,761 --> 00:07:24,100
si cela est vrai, c'est ce que
continuer faire,

125
00:07:24,374 --> 00:07:28,886
il annule immédiatement l'itération
courante et continue à la prochaine

126
00:07:29,063 --> 00:07:32,600
itération. Donc, cette ligne ici,
ne sera jamais exécutée

127
00:07:33,244 --> 00:07:36,010
si cette condition n'est pas vrai.

128
00:07:36,976 --> 00:07:41,751
Ok, donc "try_infection," eh bien je voudrais
essayer maintenant d'infecter

129
00:07:42,192 --> 00:07:46,142
la voisine. Donc, fondamentalement,
je dois donner les coordonnées ici

130
00:07:46,342 --> 00:07:49,517
n_i et n_ii

131
00:07:52,078 --> 00:07:54,128
il y a une chose plus ici que je suis sûr

132
00:07:54,328 --> 00:07:57,093
vous avez été un peu nerveux
au sujet de tout ce temps, à venir

133
00:07:57,268 --> 00:08:01,619
du chapitre cinq, et qui a à voir avec
ces questions de frontières.

134
00:08:01,819 --> 00:08:04,819
C'est vrai? cela signifie
certaines de ces valeurs

135
00:08:05,019 --> 00:08:09,840
peut en fait maintenant ne pas être bon,
citer les valeurs unquote

136
00:08:10,040 --> 00:08:13,040
à utiliser comme index de tableau.

137
00:08:13,240 --> 00:08:17,922
Pourquoi? Eh bien, parce que, par exemple,
je peux effectivement être nulle

138
00:08:18,122 --> 00:08:21,122
et ainsi, votre n_i ici serait
une valeur négative

139
00:08:21,402 --> 00:08:24,703
et bien sûr, vous savez, vous ne pouvez pas
utiliser une valeur négative dans Java Script

140
00:08:24,903 --> 00:08:27,422
comme un indice de tableau,
et vous ne pouvez utiliser une valeur

141
00:08:27,622 --> 00:08:31,492
qui est supérieure ou égale
à la longueur du tableau

142
00:08:31,883 --> 00:08:35,146
et nous avons de nouveau parlé
de cela en détail, au chapitre cinq.

143
00:08:35,771 --> 00:08:38,892
Donc, ce qu'on va faire c'est,
on va utiliser cette même solution exacte

144
00:08:39,780 --> 00:08:41,467
que nous avons utilisé dans
le chapitre cinq.

145
00:08:41,942 --> 00:08:44,846
Donc, vous devriez aller
et copier cette fonction

146
00:08:45,275 --> 00:08:48,227
index "get_bounded",
et je l'ai déjà fait ici

147
00:08:48,427 --> 00:08:50,517
et viennent collé ici maintenant

148
00:08:50,931 --> 00:08:54,158
cette fonction, vous avez
dans le fichier html de simulation spatiale,

149
00:08:54,693 --> 00:08:57,842
c'est une fonction, que nous avons
développé dans le chapitre cinq.

150
00:08:58,684 --> 00:09:00,570
Il obtient un indice essentiellement,

151
00:09:02,575 --> 00:09:06,837
puis il vérifie, si cet indice
est en fait hors des limites ou

152
00:09:07,037 --> 00:09:13,167
pas étant donné la longueur de la grille,
et si elle est, elle retourne l'index correct

153
00:09:13,367 --> 00:09:16,367
si ce n'est pas il retourne le même index.

154
00:09:16,655 --> 00:09:20,700
Donc, cela est une fonction
très pratique, allez sur le chapitre cinq

155
00:09:21,041 --> 00:09:24,113
et le copier à partir
de votre simulation spatiale

156
00:09:24,588 --> 00:09:29,701
et collez-le ici. Donc, maintenant
au lieu de passer en n_i & n_ii.

157
00:09:30,487 --> 00:09:33,350
Nous devrions effectivement
passer les valeurs

158
00:09:33,550 --> 00:09:38,339
qui ont d'abord passé par cette fonction
de "get_bounded_index"

159
00:09:38,539 --> 00:09:41,242
Donc, je vais dire
"get_bounded_index n_i"

160
00:09:41,442 --> 00:09:44,732
et "get_bounded_index n_ii."

161
00:09:44,932 --> 00:09:49,081
Ecrire dans le n_i d'origine
et n + ii valeurs.

162
00:09:49,753 --> 00:09:50,753
D'accord.

163
00:09:52,697 --> 00:09:56,733
Bon, et maintenant nous pouvons être
certains, que les valeurs que nous

164
00:09:56,923 --> 00:10:02,061
passons ici à cette fonction
"try_infection" comme arguments

165
00:10:02,261 --> 00:10:05,364
sont des indices bien corrects

166
00:10:05,564 --> 00:10:07,943
et ainsi, avec cela en place,
nous pouvons maintenant

167
00:10:08,480 --> 00:10:11,559
enfin mettre en œuvre
cette "try_infection" méthodes.

168
00:10:11,759 --> 00:10:14,759
Ainsi, la fonction "try_infection"

169
00:10:16,444 --> 00:10:20,417
puis, les deux valeurs, et encore
une fois ici, je peux utiliser ii, i

170
00:10:20,692 --> 00:10:24,167
il n'a pas d'importance, ce sont maintenant
seulement deux valeurs corrigées.

171
00:10:25,352 --> 00:10:29,562
Donc, cela est maintenant un voisin

172
00:10:30,059 --> 00:10:34,954
qui est exposé à un individu infecté.

173
00:10:36,538 --> 00:10:37,551
Donc

174
00:10:38,276 --> 00:10:39,743
Quand est-ce que l'infection
peut se produire?

175
00:10:39,918 --> 00:10:42,638
Et il ne peut que se produire
dans deux circonstances.

176
00:10:42,838 --> 00:10:46,406
Tout d'abord, cet individu doit être sensible.

177
00:10:46,708 --> 00:10:49,023
Ok, ceci est la première condition,
nous pouvons simplement dire,

178
00:10:49,173 --> 00:10:53,076
ok, si la grille i, ii

179
00:10:54,201 --> 00:10:56,601
égal, et cela est la double égale S,

180
00:10:56,801 --> 00:11:00,951
Ok, si cet individu, qui est exposée ici,
est susceptible

181
00:11:01,357 --> 00:11:05,137
alors il peut potentiellement se produire.
Mais il y a bien sûr, une seconde

182
00:11:05,306 --> 00:11:07,681
condition et nous savons
que ce n'est pas déterministe

183
00:11:07,844 --> 00:11:10,017
il existe une probabilité
maintenant que cela arrive

184
00:11:10,217 --> 00:11:12,708
et cette probabilité est bien sûr
exactement beta.

185
00:11:13,163 --> 00:11:14,968
Et ainsi, nous pouvons simplement dire,

186
00:11:15,425 --> 00:11:19,808
si math_random est plus petite que la bêta.

187
00:11:21,490 --> 00:11:25,791
Donc, maintenant avec la version bêta
de probabilité cela va maintenant se produire

188
00:11:26,523 --> 00:11:30,193
Donc, voici maintenant,
nous allons définir la personne à i

189
00:11:31,398 --> 00:11:34,398
et être très prudent ici.
Comme nous l'avons dit à plusieurs reprises

190
00:11:35,007 --> 00:11:39,599
dans ce chapitre, on ne va pas
mettre à jour l'individu sur la grille

191
00:11:39,799 --> 00:11:43,466
parce que ce serait conduire
à des erreurs compliquées

192
00:11:43,901 --> 00:11:48,625
comme quelques erreurs cependant,
nous allons mettre à jour le temp_grid

193
00:11:48,982 --> 00:11:52,395
Ok, temp_grid i, ii,

194
00:11:52,595 --> 00:11:55,608
nous allons mettre cela à infecté,

195
00:11:59,034 --> 00:12:01,757
puis, vous savez ce qui va
se passer beaucoup de fois

196
00:12:01,920 --> 00:12:04,116
éventuellement, puis à la fin. Bien sûr

197
00:12:04,303 --> 00:12:07,441
parce que nous avons mis cela ici correctement
dans l'étape de temps d'exécution

198
00:12:07,623 --> 00:12:09,844
ce statut ici au temp_grid

199
00:12:10,044 --> 00:12:14,111
sera bien sûr, être ensuite copié
sur la grille.

200
00:12:15,287 --> 00:12:18,287
Mais ici, faites attention à,
que vous mettez vraiment à jour

201
00:12:18,754 --> 00:12:22,322
les individus temp_grid
et non pas les individus de la grille

202
00:12:23,199 --> 00:12:27,819
bon donc, dans cet endroit. Je pense que
nous pouvons maintenant réellement enregistrer ceci.

203
00:12:28,767 --> 00:12:32,177
et jeter un oeil à une épidémie
dans le navigateur.

204
00:12:32,377 --> 00:12:35,802
Donc, nous allons poursuivre et faire cela.
Nous allons basculer vers le navigateur.

205
00:12:36,400 --> 00:12:39,300
Donc, voici notre situation originale

206
00:12:39,450 --> 00:12:41,350
mais bien sûr, maintenant,
je vais recharger ceci

207
00:12:41,525 --> 00:12:43,150
il commence à un autre endroit

208
00:12:43,350 --> 00:12:45,738
mais laissez-moi continuer et faire
cet rechargement,

209
00:12:46,108 --> 00:12:48,116
et maintenant, ici vous pouvez voir,
il a commencé ici

210
00:12:48,279 --> 00:12:50,765
et il est maintenant en propagation rapide

211
00:12:50,927 --> 00:12:53,279
et il est bien sûr, étant donné
les conditions aux limites

212
00:12:53,454 --> 00:12:55,107
il vient dans des autres côtés

213
00:12:55,270 --> 00:12:59,303
et très rapidement, le tout sera infecté.

214
00:12:59,503 --> 00:13:01,642
Boom, nous sommes ici tout le monde
est maintenant infecté

215
00:13:01,842 --> 00:13:04,722
permettez-moi de recharger cela, juste pour
voir ce que cela ressemble à nouveau.

216
00:13:04,922 --> 00:13:07,174
il commence à partir d'ici,
localement étalant,

217
00:13:07,337 --> 00:13:10,227
maintenant il va sur les limites,
bien sûr ici

218
00:13:10,390 --> 00:13:13,640
à droite et vers le haut,
et puis finalement ici au sommet

219
00:13:13,815 --> 00:13:16,340
droite et maintenant,
tout le monde est infecté.

220
00:13:16,988 --> 00:13:20,360
Ok, cela semble fonctionner. Bon travail!

221
00:13:20,560 --> 00:13:24,552
Nous avons une propagation de l'infection,
ce qui est une épidémie ici

222
00:13:24,752 --> 00:13:28,241
maintenant, quelque chose n'est pas
encore tout à fait bonne, entièrement.

223
00:13:29,054 --> 00:13:34,477
Pourquoi? bon, la situation de fin ici
c'est que tout le monde

224
00:13:34,901 --> 00:13:38,140
est infecté et restera infecté.

225
00:13:38,872 --> 00:13:41,530
Donc, ce n'est pas tout à fait
ce que nous voulions, non?

226
00:13:41,730 --> 00:13:45,179
nous devrons mettre en œuvre maintenant,
une étape de récupération ainsi.

227
00:13:46,517 --> 00:13:50,264
 

228
00:13:50,464 --> 00:13:54,891
si nous ne le faisons pas, alors
nous obtenons exactement ce résultat

229
00:13:55,091 --> 00:13:57,332
qui est cela, chaque individu sera infecté

230
00:13:57,532 --> 00:13:59,234
et ce sera toujours le cas.
Eh bien, pourquoi?

231
00:13:59,422 --> 00:14:02,594
parce qu'il n'y a pas le droit
de récupération.

232
00:14:03,951 --> 00:14:07,201
même les personnes qui sont à la fin

233
00:14:07,401 --> 00:14:10,016
de cette propagation finira
par être infecté.

234
00:14:10,216 --> 00:14:12,335
Il est juste garantie que cela
se produira par la suite,

235
00:14:12,985 --> 00:14:15,559
cette exposition aura lieu

236
00:14:15,746 --> 00:14:17,170
et les probabilités seront
inférieurs au bêta

237
00:14:17,370 --> 00:14:22,399
et que l'infection se produise.

238
00:14:22,712 --> 00:14:25,187
Alors, voilà pourquoi chaque individu
sera toujours être infecté

239
00:14:25,387 --> 00:14:29,262
dans cette version particulière
de notre code.

240
00:14:29,801 --> 00:14:32,461
Donc, ce que nous devons faire maintenant,
nous devons terminer la simulation

241
00:14:32,635 --> 00:14:34,348
en mettant en oeuvre l'étape de récupération

