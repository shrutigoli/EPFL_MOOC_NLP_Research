1
00:00:03,420 --> 00:00:04,880
Bienvenue. <I> La Nature, Dans le code </ i>.

2
00:00:04,880 --> 00:00:07,420
Nous sommes dans le chapitre 4.
Ceci est la leçon 1

3
00:00:07,420 --> 00:00:10,890
Dans ce chapitre, nous allons apprendre
tout sur la mutation.

4
00:00:10,890 --> 00:00:13,430
Rappelons ce que nous avons appris
dans les chapitres précédents.

5
00:00:13,430 --> 00:00:17,220
Dans le chapitre 2, nous avons introduit
le monde de <i> Hardy-Weinberg </ i>,

6
00:00:17,220 --> 00:00:21,180
Un monde où il n'y a aucune force
Agissante sur les fréquences allèle,

7
00:00:21,180 --> 00:00:23,480
et où il n'y a pas d'évolution.

8
00:00:23,480 --> 00:00:27,000
Puis, dans le chapitre 3, nous avons
assoupli l'une des hypothèses clés

9
00:00:27,000 --> 00:00:28,870
du monde de Hardy-Weinberg,

10
00:00:28,870 --> 00:00:31,950
et qui est l'hypothèse des tailles infinie
de la population.

11
00:00:31,950 --> 00:00:36,380
Et on a vu, lorsque nous commençons à
considérer la taille finie de la population,

12
00:00:36,380 --> 00:00:39,740
alors les effets d'échantillonnage aléatoire
commenceraient à entrer,

13
00:00:39,740 --> 00:00:42,270
conduisant au phénomène de
<i> dérive génétique </ i>.

14
00:00:42,270 --> 00:00:46,190
Et nous avons appris que l'une des principales
conséquences de la dérive génétique

15
00:00:46,190 --> 00:00:50,920
est l'ultime, la perte totale de
la variation génétique.

16
00:00:50,920 --> 00:00:53,830
Maintenant, clairement, ce n'est pas ce que
nous observons dans le monde réel.

17
00:00:53,830 --> 00:00:56,690
Il y a beaucoup de variation génétique
dans le monde réel,

18
00:00:56,690 --> 00:01:01,400
il doit y avoir un processus contre
cet effet de la dérive génétique,

19
00:01:01,400 --> 00:01:03,910
et ce processus est la mutation.

20
00:01:03,910 --> 00:01:07,970
<I> Mutation </ i> est le générateur ultime
de la variation génétique.

21
00:01:07,970 --> 00:01:12,670
Et dans cette vidéo, et dans
les futures leçons de chapitre 4,

22
00:01:12,670 --> 00:01:15,400
nous allons apprendre tout sur la mutation,

23
00:01:15,400 --> 00:01:18,610
son effet sur l'évolution, et surtout,
bien sûr,

24
00:01:18,610 --> 00:01:21,840
nous allons mettre en œuvre ce processus
en JavaScript,

25
00:01:21,840 --> 00:01:24,380
ainsi, l'apprentissage de nouveaux
concepts JavaScript.

26
00:01:24,380 --> 00:01:25,670
Alors, allons-y.

27
00:01:25,670 --> 00:01:29,580
Donc, <i> mutation </ i> est le changement
aléatoire dans la séquence génétique.

28
00:01:29,580 --> 00:01:33,030
Cela se produit, généralement,
au cours de la <i> réplication cellulaire </ i>.

29
00:01:33,030 --> 00:01:34,910
Donc, si vous avez une cellule ici

30
00:01:34,910 --> 00:01:37,500
et ceci est la séquence génétique de la
cellule

31
00:01:37,500 --> 00:01:39,400
et maintenant cette cellule se reproduire

32
00:01:39,400 --> 00:01:43,810
de sorte que vous avez deux copies
après l'étape de réplication,

33
00:01:44,710 --> 00:01:47,520
il est possible qu'au cours de cette étape,

34
00:01:47,520 --> 00:01:52,480
un petit changement se produira,
une petite erreur.

35
00:01:52,480 --> 00:01:55,720
Donc, il pourrait y avoir une erreur
qui est faite ici,

36
00:01:55,720 --> 00:01:59,380
et puis vous avez une mutation
dans cette nouvelle cellule.

37
00:01:59,380 --> 00:02:02,180
Maintenant, ce processus
est extrêmement rare

38
00:02:02,180 --> 00:02:05,980
parce que le processus de réplication
est généralement incroyablement précis,

39
00:02:05,980 --> 00:02:08,500
mais parfois, des erreurs se produisent,

40
00:02:08,500 --> 00:02:12,730
et ces erreurs se manifestent
comme des mutations aléatoires.

41
00:02:12,730 --> 00:02:16,710
Maintenant, si ce processus se produit
dans l'une des cellules de votre corps,

42
00:02:16,710 --> 00:02:19,400
cela est typiquement une impasse évolutive

43
00:02:19,400 --> 00:02:21,920
parce que vous ne transmetez pas
les cellules de votre corps,

44
00:02:21,920 --> 00:02:25,410
votre soi-disant <i> cellules somatiques
</ i>, à votre progéniture.

45
00:02:25,410 --> 00:02:28,920
Si l'une de ces erreurs se produit dans
la <i> lignée germinale </ i>, cependant

46
00:02:28,920 --> 00:02:32,860
de sorte que la lignée de cellules
qui produire les gamètes,

47
00:02:32,860 --> 00:02:35,400
le sperme ou les ovules

48
00:02:35,400 --> 00:02:39,980
alors ces erreurs seront transmises
à la génération suivante,

49
00:02:39,980 --> 00:02:44,430
et ce sont ceux qui comptent
d'une perspective évolutive.

50
00:02:44,430 --> 00:02:47,430
Alors, comment devrions-nous
mettre en œuvre cette idée en Java Script?

51
00:02:47,430 --> 00:02:50,180
Eh bien, <i> l'ADN </ i> a quatre bases:

52
00:02:50,180 --> 00:02:53,480
adénine, la guanine, la cytosine
et la thymine,

53
00:02:53,480 --> 00:02:56,220
et ceux-ci sont généralement abrégés
par leur première lettre,

54
00:02:56,220 --> 00:02:58,460
si A, G, C et T.

55
00:02:58,460 --> 00:03:01,960
Donc ce que je vais faire c'est,
je vais réutiliser ce concept d'un évantail,

56
00:03:01,960 --> 00:03:05,160
et je vais stocker un ensemble
de ces lettres.

57
00:03:05,160 --> 00:03:06,500
Alors vous savez, disons, par exemple,

58
00:03:06,500 --> 00:03:09,910
'A', 'T', 'C',

59
00:03:09,910 --> 00:03:14,410
un autre «C», et un «T»,
et peut-être un 'G',

60
00:03:14,410 --> 00:03:18,490
et ainsi de suite, ok,
en tant que <i>chaînes d'evantails</ i>.

61
00:03:18,490 --> 00:03:21,140
Donc, ce sont des chaînes
avec un seul caractère.

62
00:03:21,140 --> 00:03:23,840
Maintenant, vous pouvez utiliser des
guillemets simples ou doubles,peu importe

63
00:03:25,420 --> 00:03:29,510
En réalité, bien sûr, vos séquences d'ADN
sont beaucoup, beaucoup plus long.

64
00:03:29,510 --> 00:03:33,520
Vos cellules contiennent <i> des séquences
d'ADN </ i> qui sont généralement

65
00:03:33,520 --> 00:03:37,160
de l'ordre de 3 milliards de ces bases,

66
00:03:37,160 --> 00:03:40,170
mais on ne va pas stocker les séquences
d'ADN long comme ça.

67
00:03:40,170 --> 00:03:41,700
Cela dépasse le point.

68
00:03:41,700 --> 00:03:44,410
Mais nous allons stocker les séquences
d'ADN comme ça,

69
00:03:44,410 --> 00:03:48,200
puis on va tout simplement ajouter
plusieurs de ces séquences,

70
00:03:48,200 --> 00:03:50,150
donc de multiple de ces évantails

71
00:03:50,870 --> 00:03:54,050
et, grâce à cela, on obtient
un évantail à deux dimension

72
00:03:54,050 --> 00:03:58,420
Maintenant, cet évantail à deux dimensions
est essentiellement notre population.

73
00:03:58,420 --> 00:04:01,660
Nous avons donc, vous le savez,
les évantails ici.

74
00:04:01,660 --> 00:04:03,500
D'accord, ce sont des séquences d'ADN.

75
00:04:04,700 --> 00:04:06,490
Et nous avons beaucoup, beaucoup
de séquences d'ADN

76
00:04:06,490 --> 00:04:09,910
qui finira par faire notre population

77
00:04:09,910 --> 00:04:12,070
dans cet évantail à deux dimensions.

78
00:04:12,890 --> 00:04:16,220
Maintenant, nous ne voulons pas aller
dans la troisième dimension.

79
00:04:16,220 --> 00:04:20,270
Parce que cet évantail à deux dimensions
capte notre population,

80
00:04:20,270 --> 00:04:23,000
nous voulons voir comment cela
change au fil du temps.

81
00:04:23,000 --> 00:04:26,190
Alors ce qu'on va faire est,
on va ajouter une troisième dimension,

82
00:04:27,530 --> 00:04:30,150
quelque chose comme ça, qui est le temps,

83
00:04:30,150 --> 00:04:32,950
et nous voulons voir comment
cette population

84
00:04:32,950 --> 00:04:36,990
qui, à chaque intervalle de temps est
représenté par un évantail à deux dimension

85
00:04:36,990 --> 00:04:42,410
va changer quand nous commençons
à introduire des mutations.

86
00:04:42,410 --> 00:04:45,840
Ainsi, afin de vous aider à comprendre
un peu

87
00:04:45,840 --> 00:04:48,460
à propos de ce concept des évantails
multi-dimensionnels,

88
00:04:48,460 --> 00:04:50,520
voici comment je penses:

89
00:04:50,520 --> 00:04:52,660
Donc, comme nous le rappelons,

90
00:04:52,660 --> 00:04:56,200
un <i>évantail</ i> est essentiellement un
moyen pour nous de stocker plusieurs valeurs.

91
00:04:56,200 --> 00:04:58,030
Ceux-ci peuvent être des nombres,
ceux-ci peuvent être des chaînes,

92
00:04:58,030 --> 00:05:00,370
peut être peu importe en JavaScript.

93
00:05:00,370 --> 00:05:05,060
Ainsi, chacune de ces boîtes ici,
contient un élément dans un évantail.

94
00:05:05,060 --> 00:05:07,210
Ceci est un <i> évantail unidimensionnel </ i>.

95
00:05:07,210 --> 00:05:10,150
Mais parfois, nous voulons avoir un
grand nombre de ces évantails ,

96
00:05:10,150 --> 00:05:11,660
et nous voulons stocker ceux-ci, aussi,

97
00:05:11,660 --> 00:05:15,220
de sorte que nous stockons tout simplement
ces évantails dans un autre évantail,

98
00:05:15,220 --> 00:05:17,220
et nous obtenons un <i> évantail à
deux dimensions </ i>.

99
00:05:17,220 --> 00:05:18,840
Et nous l'avons fait auparavant.

100
00:05:19,910 --> 00:05:23,980
Donc, avant, nous avons stocké
les fréquences des allèles au fil du temps,

101
00:05:23,980 --> 00:05:27,900
et ensuite, chacune de ces séries
temporelles de fréquences alléliques

102
00:05:27,900 --> 00:05:31,980
serait essentiellement <i> simulations A
</ i>,et on a eu plusieurs simulations.

103
00:05:31,980 --> 00:05:33,690
Dans notre cas, maintenant, par exemple,

104
00:05:33,690 --> 00:05:36,000
nous pourrions avoir ces sequences ADN

105
00:05:36,000 --> 00:05:38,420
chacun de ces ensembles est
une sequence ADN

106
00:05:38,420 --> 00:05:41,630
et l'ensemble des évantails d'ADN

107
00:05:41,630 --> 00:05:44,180
est lui-même, un évantail,
à deux dimensions,

108
00:05:44,180 --> 00:05:46,190
et ce serait la population.

109
00:05:46,190 --> 00:05:48,870
Alors, comment pouvons-nous porter celle-ci
à la troisième dimension?

110
00:05:48,870 --> 00:05:49,670
Eh bien, c'est tout à fait simple.

111
00:05:49,670 --> 00:05:53,470
Je veux dire, il suffit de penser maintenant de
ceci comme une structure à trois dimensions,

112
00:05:53,470 --> 00:05:56,400
et cela serait encore votre évantail
à deux dimensions ici,

113
00:05:56,400 --> 00:05:59,420
dans la première génération, par exemple.

114
00:05:59,420 --> 00:06:02,420
Et maintenant, nous allons reproduire
cette structure entière,

115
00:06:02,420 --> 00:06:04,910
l'ensemble de cet évantail
à deux dimensions,

116
00:06:04,910 --> 00:06:06,980
et nous allons créer un second.

117
00:06:06,980 --> 00:06:11,060
Et puis, nous introduirons de mutations.

118
00:06:11,060 --> 00:06:13,690
Et ainsi, nous pouvons maintenant
simplement ajouter ceci,

119
00:06:15,170 --> 00:06:16,720
ici, dans cette dimension,

120
00:06:16,720 --> 00:06:18,320
donc ce serait <i> temps </ i>.

121
00:06:19,250 --> 00:06:21,550
Ceux-ci seront nos séquences d'ADN

122
00:06:23,150 --> 00:06:25,200
comme nous l'avons fait auparavant.

123
00:06:25,910 --> 00:06:29,460
Et, vous savez, un ensemble
de ces séquences d'ADN

124
00:06:29,460 --> 00:06:31,410
sera notre <i> Population </ i>.

125
00:06:31,410 --> 00:06:35,920
Et maintenant, il va tout simplement
changer, au fil du temps.

126
00:06:35,920 --> 00:06:39,430
Donc, nous allons maintenant stocker
ces évantails à deux dimensions

127
00:06:39,430 --> 00:06:40,480
dans un évantail.

128
00:06:40,480 --> 00:06:42,750
Et donc, cet autre évantail,
cette nouvelle gamme,

129
00:06:42,750 --> 00:06:45,910
qui stocke beaucoup, plusieurs de
ces évantails à deux dimensions,

130
00:06:45,910 --> 00:06:48,620
est maintenant essentiellement un <i>
évantail à trois dimensions </ i>,

131
00:06:48,620 --> 00:06:53,720
et, de ce fait, nous pouvons représenter
ces populations au fil du temps

132
00:06:53,720 --> 00:06:58,140
comme nous avons beaucoup, beaucoup
de ces évantails de population à dimensions.

133
00:06:58,140 --> 00:07:00,230
Donc, nous allons mettre en œuvre
ceci en JavaScript.

134
00:07:00,230 --> 00:07:03,130
J'espère que cette visualisation
vous aide un peu

135
00:07:03,130 --> 00:07:06,690
à comprendre des évantails
à trois dimensions.

136
00:07:06,690 --> 00:07:09,430
Donc, nous allons continuer
et mettre en œuvre ceci en JavaScript.

