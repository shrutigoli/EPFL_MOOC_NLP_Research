1
00:00:03,310 --> 00:00:07,120
Bienvenue, la Nature, dans le code,
nous sommes dans le chapitre 4, leçon 6,

2
00:00:07,120 --> 00:00:08,180
et dans cette leçon.

3
00:00:08,180 --> 00:00:11,420
Nous allons examiner le sort
d'un seul allèle mutant

4
00:00:11,420 --> 00:00:14,810
qui vient d'arriver dans une population
et nous allons faire cela

5
00:00:14,810 --> 00:00:16,820
en utilisant Javascript.

6
00:00:16,820 --> 00:00:20,920
Et nous allons utiliser l'ancien modèle que
nous avons développé dans le chapitre 3,

7
00:00:20,920 --> 00:00:24,940
qui avait 2 allèles a1 et a2
et nous noterons la fréquence

8
00:00:24,940 --> 00:00:27,480
de l'allèle A1 P.

9
00:00:27,480 --> 00:00:28,540
Et si vous vous souvenez,

10
00:00:28,540 --> 00:00:31,780
ce que nous avons fait à l'époque
c'est que nous Initialisons la population

11
00:00:31,780 --> 00:00:36,710
à P est égal 0,5, de sorte que la moitié des
clandestins étaient  a1 la moitié étaient a2

12
00:00:36,710 --> 00:00:40,420
puis on verrait un d'entre eux
aller à la fixation par la suite

13
00:00:40,420 --> 00:00:43,110
parce que ce l'effet de la dérive génétique

14
00:00:43,150 --> 00:00:46,740
que vous avez fini par perdre
toute variation génétique.

15
00:00:46,740 --> 00:00:49,360
Nous demandons maintenant
une autre question.

16
00:00:49,360 --> 00:00:53,680
Nous partons du principe que tous
les allèles sont a2 et puis un jour,

17
00:00:53,680 --> 00:00:58,030
ce allèle a1 vient par mutation
et bien sûr,

18
00:00:58,030 --> 00:01:02,220
maintenant il commence ici à droite,
car il existe en un seul exemplaire

19
00:01:02,220 --> 00:01:03,570
et qu'est-ce qu'une fréquence?

20
00:01:03,570 --> 00:01:07,290
Eh bien il y a 2 N allèles donc
la fréquence c'est un sur deux,

21
00:01:07,290 --> 00:01:11,010
et donc si vous avez une population
de 100 individus par exemple

22
00:01:11,010 --> 00:01:17,560
la fréquence sera de 1 sur 200 ou 0,5

23
00:01:18,360 --> 00:01:21,640
et si votre population est plus grande,
la fréquence

24
00:01:21,640 --> 00:01:23,130
sera même plus faible.

25
00:01:23,530 --> 00:01:26,950
Et donc chaque allèle simple au début,
quand il vient

26
00:01:26,950 --> 00:01:29,000
comme une mutation va être très,

27
00:01:29,000 --> 00:01:31,190
très rare et c'est tout à fait remarquable.

28
00:01:31,190 --> 00:01:32,330
Si vous pensez à ce sujet,

29
00:01:32,330 --> 00:01:34,580
Je veux dire chaque allèle
que vous voyez dans la nature,

30
00:01:34,580 --> 00:01:38,960
devait être rare au début, vous savez,
beaucoup sont venus aprés

31
00:01:38,960 --> 00:01:45,730
comme cette mutation unique ont dû
faire leur chemin à travers la population.

32
00:01:45,730 --> 00:01:49,650
Il existe différentes raisons pour lesquelles
cela se produit et il est important maintenant

33
00:01:49,650 --> 00:01:52,540
pour le moment de comprendre
que nous ne supposons pas

34
00:01:52,840 --> 00:01:57,320
aucun avantage sélectif ou un désavantage,
donc, vous savez, portant un allèle

35
00:01:57,320 --> 00:02:02,220
en tant qu'individu dans notre modèle actuel
ne vous donne aucun avantage

36
00:02:02,220 --> 00:02:05,030
ou aucun inconvénient,
c'est effectivement neutre

37
00:02:05,030 --> 00:02:10,780
et nous appelons cela sélectivement neutre,
donc dans le chapitre 6, nous allons prendre,

38
00:02:10,780 --> 00:02:15,220
vous savez, un regard détaillé de ce qui
se passe lorsque cela n'est plus le cas

39
00:02:15,220 --> 00:02:17,240
et nous avons des effets
de la sélection naturelle.

40
00:02:17,240 --> 00:02:18,480
Mais pour le moment,

41
00:02:18,480 --> 00:02:22,280
nous supposons que tout simplement
ces allèles sont neutres.

42
00:02:22,280 --> 00:02:27,790
Alors, quelle est la probabilité
de la fixation d'un allèle neutre.

43
00:02:27,790 --> 00:02:30,280
Eh bien, je vais vous donner
la réponse tout de suite.

44
00:02:30,280 --> 00:02:35,030
Mais nous confirmerons évidemment
cela avec une simulation Javascript.

45
00:02:35,440 --> 00:02:38,750
Donc, fondamentalement,
ce qui peut arriver ici.

46
00:02:38,790 --> 00:02:41,740
C'est que ce premier,
vous le savez, copier ici,

47
00:02:41,740 --> 00:02:46,110
vous pouvez en principe le perdre
immédiatement ou il pourrait,

48
00:02:46,110 --> 00:02:46,880
en principe,

49
00:02:46,880 --> 00:02:47,580
Vous savez,

50
00:02:47,580 --> 00:02:48,920
rester pour un certain temps,

51
00:02:48,920 --> 00:02:51,800
mais alors, vous savez, finir
par être perdu de la population

52
00:02:51,800 --> 00:02:54,330
ou bien sûr quelque chose entre les deux,

53
00:02:54,330 --> 00:02:57,460
et en particulier ce qui peut arriver
c'est cette étoile se déplace autour

54
00:02:57,460 --> 00:03:01,280
et va finalement effectivement
à la fixation.

55
00:03:01,280 --> 00:03:04,470
Alors, quelle est la probabilité
que cela se produise?

56
00:03:04,470 --> 00:03:11,030
Maintenant, la réponse est que
la probabilité de fixation d'un allèle neutre

57
00:03:11,030 --> 00:03:15,960
est en fait sa fréquence.

58
00:03:17,920 --> 00:03:18,690
Bon.

59
00:03:18,980 --> 00:03:22,380
Quand un premier allèle arrive,
la première copie.

60
00:03:22,380 --> 00:03:28,070
Nous savons sa fréquence
est de 1 sur 2N et qu'il se trouve,

61
00:03:28,070 --> 00:03:32,490
que c'est exactement la probabilité,
que cela va aller à la fixation.

62
00:03:32,490 --> 00:03:35,190
Cela est également une logique intuitive

63
00:03:35,190 --> 00:03:38,660
si N est trop grande, alors cette fréquence,

64
00:03:38,660 --> 00:03:40,750
elle sera plus petite
mais elle ne sera pas très,

65
00:03:40,750 --> 00:03:42,030
très petit.

66
00:03:42,030 --> 00:03:45,990
Donc, vous savez qu'il ya un peu
de chance que cela va aller à la fixation

67
00:03:45,990 --> 00:03:47,170
encore très faible,

68
00:03:47,170 --> 00:03:51,280
mais elle existe quand vous commencez
à augmenter la taille de la population,

69
00:03:51,400 --> 00:03:54,430
cette fréquence sera de plus en
plus petits et plus petits,

70
00:03:54,430 --> 00:03:58,580
et il devient donc de plus en plus
improbable que cet allèle

71
00:03:58,580 --> 00:03:59,580
va à une fixation.

72
00:03:59,580 --> 00:04:00,780
Il peut encore arriver,

73
00:04:00,780 --> 00:04:05,900
mais la probabilité, ainsi que
la fréquence diminue

74
00:04:06,130 --> 00:04:09,090
très sensiblement N est devenu plus grand.

75
00:04:09,750 --> 00:04:12,740
Alors maintenant, nous aimerions
mettre en œuvre cela en Javascript

76
00:04:12,740 --> 00:04:17,790
et de confirmer l'essentiel de cette équation,
ce fait que la probabilité

77
00:04:17,790 --> 00:04:21,390
de fixation d'un allèle neutre
est sa fréquence

78
00:04:21,390 --> 00:04:25,410
Donc, je vais commencer
avec ce document vide ici.

79
00:04:25,410 --> 00:04:32,390
Je suis dans le texte wrangler et
je vais mettre en place l'échafaud HTML,

80
00:04:32,390 --> 00:04:38,180
donc je vais dire le type de doc, html
et puis bien sûr ma balise HTML

81
00:04:40,380 --> 00:04:44,560
./html et ma tête.

82
00:04:47,630 --> 00:04:49,600
Et mon corps.

83
00:04:51,740 --> 00:04:52,510
D'accord.

84
00:04:53,610 --> 00:04:55,730
Et ici, dans ma balise tête.

85
00:04:55,730 --> 00:05:01,410
Je vais avoir ma balise script
qui contiendra le code Javascript,

86
00:05:01,410 --> 00:05:08,130
donc dans les exemples précédents
du chapitre 3,

87
00:05:08,130 --> 00:05:12,800
nous avons eu cette fonction prochaine
génération, donc je vais dire ici la fonction

88
00:05:13,170 --> 00:05:14,040
la prochaine génération.

89
00:05:14,040 --> 00:05:17,280
Je voudrais construire ceci à nouveau,
la prochaine génération,

90
00:05:17,280 --> 00:05:21,520
effectivement permettez-moi d'enregistrer
ce fichier, si je reçois les avantages

91
00:05:21,520 --> 00:05:26,950
de la coloration syntaxique,
je vais aller à enregistrer en tant que,

92
00:05:26,950 --> 00:05:31,500
puis ici des exemples de code,
voilà où je stocke mes fichiers

93
00:05:32,080 --> 00:05:35,880
et je vais l'appeler fixation.

94
00:05:37,070 --> 00:05:43,520
souligner la probabilité, HTML dot,
probabilité de fixation.

95
00:05:44,750 --> 00:05:46,470
Et voilà.

96
00:05:48,300 --> 00:05:49,220
Très bien.

97
00:05:49,220 --> 00:05:52,020
Voici la coloration syntaxique,
est beaucoup mieux.

98
00:05:52,020 --> 00:05:52,800
Bien.

99
00:05:52,800 --> 00:05:56,270
Nous allons donc mettre en œuvre cela
et nous disons que vous savez

100
00:05:56,270 --> 00:05:58,750
nous avons le nombre de tracés.

101
00:05:58,750 --> 00:06:03,870
Ainsi, le nombre de fois que nous choisissons
un allèle et ce serait bien sûr,

102
00:06:03,870 --> 00:06:11,110
deux fois N et il signifiait aussi que
nous devions définir une variable appelée N

103
00:06:11,110 --> 00:06:15,270
qui est une taille de la population,
je vais initialiser ceci à 100 ici

104
00:06:15,270 --> 00:06:17,760
puis nous dirions d'accord,

105
00:06:17,760 --> 00:06:19,960
On va garder une trace de combien de fois,

106
00:06:19,960 --> 00:06:26,210
et un ou deux est dessiné et nous faisons
ceci par vous savez en utilisant ces

107
00:06:26,300 --> 00:06:31,700
2 variables locales a1 et a2,
alors nous initialisons à zéro

108
00:06:31,700 --> 00:06:37,350
puis nous mettons en place cette boucle
donc pour var, notre i est égal à zéro,

109
00:06:37,350 --> 00:06:42,580
i plus petits et dessine et égale i plus un.

110
00:06:45,740 --> 00:06:47,680
Donc, ici nous serions
simplement maintenant.

111
00:06:48,410 --> 00:06:49,300
Lancer une pièce.

112
00:06:50,830 --> 00:06:54,130
Donc, nous dire si math aléatoire.

113
00:06:56,260 --> 00:06:57,110
est

114
00:06:57,800 --> 00:07:02,560
inférieur ou égal à P,
la fréquence de l'allèle A1,

115
00:07:02,560 --> 00:07:05,690
alors cela signifierait
que nous aurions établi un allèle

116
00:07:05,690 --> 00:07:08,440
et nous allons augmenter ce compteur a1

117
00:07:09,040 --> 00:07:13,780
par un et si ce n'est pas le cas.

118
00:07:13,780 --> 00:07:14,570
Sinon.

119
00:07:15,480 --> 00:07:19,850
Ensuite, cela signifie que nous avons dessiné
un allèle a2, donc on va augmenter

120
00:07:20,190 --> 00:07:26,460
le calendrier des a2 par un, puis à la fin.

121
00:07:26,460 --> 00:07:28,840
Voici donc après que nous avons
fait tout ces

122
00:07:28,840 --> 00:07:34,340
dessins, nous pourrions alors
calculer la nouvelle fréquence a1

123
00:07:34,980 --> 00:07:39,250
simplement le nombre d'allèles
que nous avons dessiné qui étaient a1

124
00:07:39,690 --> 00:07:41,810
divisé par le nombre de tirages.

125
00:07:43,860 --> 00:07:44,590
Tres bien alors,

126
00:07:44,590 --> 00:07:50,560
nous le stockons dans cette variable p
et bien sûr nous devons mettre en place

127
00:07:50,560 --> 00:07:53,310
cette variable ainsi,
c'est une variable globale

128
00:07:53,310 --> 00:07:58,070
et nous avons utilisé pour démarrer comme 0,5,
maintenant, nous allons changer cela.

129
00:07:58,070 --> 00:07:58,840
Mais,

130
00:07:58,840 --> 00:08:03,550
mais cela est essentiellement la façon
dont nous avons commencé la dernière fois.

131
00:08:03,550 --> 00:08:07,040
Donc, ce que nous avons alors
c'était-à-dire essentiellement d'accord,

132
00:08:07,040 --> 00:08:11,280
on vaexécuter un certain nombre de
simulations et quelque chose comme 10

133
00:08:11,280 --> 00:08:15,750
et chaque simulation exécute
un certain nombre de générations

134
00:08:15,750 --> 00:08:17,390
et cela était fixé,

135
00:08:17,390 --> 00:08:19,270
mais maintenant nous voulons faire
quelque chose d'autre.

136
00:08:19,270 --> 00:08:21,780
Nous voulons commencer avec
un très petit p.

137
00:08:21,780 --> 00:08:25,540
Et puis nous voulons essentiellement
exécuter la simulation aussi longtemps

138
00:08:25,540 --> 00:08:30,300
car il est nécessaire et s'arrêtera
quand soit,

139
00:08:30,300 --> 00:08:34,770
l'allèle a1 ou a2 va à la fixation.

140
00:08:34,770 --> 00:08:39,330
Donc ce que nous devons faire maintenant c'est que
nous devons exécuter essentiellement cela

141
00:08:39,330 --> 00:08:44,590
pour un certain nombre de fois,
donc je vais appeler, je vais définir ici

142
00:08:44,590 --> 00:08:48,770
cette simulations de variable
et cela peut être très grande.

143
00:08:48,770 --> 00:08:50,930
Je vais mis cela à,

144
00:08:50,930 --> 00:08:54,340
disons 10.000 et on ne va pas tracer.

145
00:08:54,340 --> 00:08:55,130
Donc, tu sais,

146
00:08:55,130 --> 00:08:58,570
on n'a pas besoin d'être inquiet
au sujet de tracer 10.000 lignes

147
00:08:58,570 --> 00:09:01,160
mais nous allons exécuter
10.000 simulations.

148
00:09:01,160 --> 00:09:04,030
Maintenant, vous pouvez penser que
vous savez, ce qui me préoccupe un peu,

149
00:09:04,030 --> 00:09:06,710
je veux dire que ce ne va pas
prendre beaucoup de temps?

150
00:09:06,710 --> 00:09:08,500
Il pourrait, en principe,

151
00:09:08,500 --> 00:09:12,260
mais rappelons que nous ne commencerons
pas les simulations à 0,5,

152
00:09:12,260 --> 00:09:15,470
nous allons effectivement les démarrer
à quelque chose très proche de zéro

153
00:09:15,470 --> 00:09:21,260
et la plupart du temps la population ira
à la fixation immédiatement,

154
00:09:21,260 --> 00:09:26,400
qui est, la raison de cela
c'est l'allèle a1, qui est très rare

155
00:09:26,400 --> 00:09:29,290
au début sera essentiellement
perdu immédiatement,

156
00:09:29,290 --> 00:09:31,180
tant de simulations seront très,

157
00:09:31,180 --> 00:09:35,510
très courte, car certains vont prendre
un peu de temps, courir pour beaucoup

158
00:09:35,510 --> 00:09:36,270
de générations.

159
00:09:36,270 --> 00:09:40,010
Mais de grande en moyenne,
ils seront courts,

160
00:09:40,010 --> 00:09:42,690
il devrait donc être bien
à exécuter 10.000

161
00:09:43,090 --> 00:09:43,940
simulations.

162
00:09:45,040 --> 00:09:49,660
Maintenant, ce que je n'ai pas fait ici encore
c'est réellement exécuter et peut appeler

163
00:09:49,660 --> 00:09:50,870
cette prochaine génération.

164
00:09:50,870 --> 00:09:55,020
Je dois mettre en œuvre
les simulations réelles et je vais le faire

165
00:09:55,170 --> 00:10:01,870
ici-bas et je vais le dire pour
var i est égal à zéro, i plus petit que

166
00:10:02,330 --> 00:10:03,300
simulations.

167
00:10:03,300 --> 00:10:08,540
Voilà donc le nombre de simulations
ici et bien sûr i est égal à i plus un.

168
00:10:10,150 --> 00:10:15,390
Maintenant, je voudrais courir
cette nouvelle génération, mais je ne

169
00:10:15,390 --> 00:10:20,970
veux que faire cela jusqu'à ce que
l'un des allèles va à la fixation.

170
00:10:20,970 --> 00:10:24,040
Donc ce que je vais faire en fait,
je vais appeller ici

171
00:10:24,040 --> 00:10:27,640
une fonction que
je vais appeler exécution jusqu'à

172
00:10:28,200 --> 00:10:28,950
la fixation.

173
00:10:30,480 --> 00:10:32,230
Et bien sûr, ils ont à nous définir.

174
00:10:32,230 --> 00:10:32,970
Mais,

175
00:10:32,970 --> 00:10:35,540
alors maintenant je sais ok 10000 fois.

176
00:10:35,540 --> 00:10:39,180
Je vais appeler cette fonction
qui va commencer une simulation

177
00:10:39,180 --> 00:10:43,610
et nous allons exécuter
jusqu'à ce que l'un des allèles va à la fixation.

178
00:10:43,610 --> 00:10:45,710
Alors à quoi ressemble cette fonction ,

179
00:10:45,710 --> 00:10:46,430
Eh bien,

180
00:10:46,430 --> 00:10:49,160
Commençons à le définir ici.

181
00:10:49,160 --> 00:10:52,840
exécuter jusqu'à fixation.

182
00:10:57,800 --> 00:11:00,070
Donc, deux choses que je dois faire.

183
00:11:01,710 --> 00:11:02,590
Alors d'abord,

184
00:11:02,590 --> 00:11:03,850
ce que j'aimerais maintenant faire,

185
00:11:03,850 --> 00:11:07,160
je voudrais mettre à chaque simulation.

186
00:11:07,160 --> 00:11:11,520
Je voudrais définir
cette fréquence allélique de a1 par la seule

187
00:11:11,550 --> 00:11:17,530
allèle droite et comme
nous avons vu avant est 1 sur 2N

188
00:11:19,490 --> 00:11:23,070
Et parce que nous faisons cela
nous pouvons vraiment nous débarrasser de

189
00:11:23,800 --> 00:11:27,120
l'internationalisation ici,
donc je vais me débarrasser de cela

190
00:11:27,120 --> 00:11:30,350
parce que cela donne la fausse impression
que nous commencçrons jamais réellement

191
00:11:30,350 --> 00:11:34,400
p à 0,5, mais on va dit ici,

192
00:11:34,400 --> 00:11:35,760
chaque simulation.

193
00:11:35,760 --> 00:11:40,170
Ça va être fixé au début à 1 sur 2N,

194
00:11:40,170 --> 00:11:44,430
alors maintenant ce que nous devons faire c'est que
nous devons appeler cette prochaine génération

195
00:11:44,690 --> 00:11:45,410
fonction ici

196
00:11:46,980 --> 00:11:48,160
retour dans les temps anciens.

197
00:11:48,160 --> 00:11:51,710
C'était simple ou à droite,
nous avons défini un certain nombre

198
00:11:51,710 --> 00:11:53,240
des générations et nous avons dit,

199
00:11:53,240 --> 00:11:53,940
Vous savez,

200
00:11:53,940 --> 00:11:56,790
nous avons implémenté une boucle pour et
nous avons dit, vous savez appeler simplement

201
00:11:56,790 --> 00:12:00,710
cette fonction de la prochaine génération
autant de fois que nous avons générations.

202
00:12:00,710 --> 00:12:05,650
Maintenant, malheureusement, nous ne savons pas
combien de générations, nous devons exécuter.

203
00:12:05,660 --> 00:12:11,066
Nous voulons juste pour arrêter
la simulation lorsque P atteint zéro ou un.

204
00:12:11,066 --> 00:12:13,350
Ainsi, lorsque l'un des allèles
est allé à la fixation.

205
00:12:13,350 --> 00:12:14,640
Alors, comment pouvons-nous faire cela?

206
00:12:14,640 --> 00:12:15,640
Eh bien, il se trouve.

207
00:12:15,870 --> 00:12:18,930
Notre ami, la boucle do while,

208
00:12:18,930 --> 00:12:22,280
que nous avons récemment appris
devient vraiment pratique ici

209
00:12:22,280 --> 00:12:29,160
parce que nous pouvons dire, donc faire quoi?
bien appeler cette fonction de la prochaine génération

210
00:12:29,860 --> 00:12:31,090
dans la prochaine génération

211
00:12:32,690 --> 00:12:35,490
tandis qu'une certaine condition est vraie.

212
00:12:35,490 --> 00:12:41,460
Maintenant, quelle est cette condition?
Si cette condition est la suivante:

213
00:12:41,460 --> 00:12:47,350
P doit être supérieure à zéro
et il doit aussi être

214
00:12:47,350 --> 00:12:49,660
inférieure à celle-ci.

215
00:12:49,660 --> 00:12:50,430
Alors d'abord,

216
00:12:50,430 --> 00:12:52,270
regardons la syntaxe ici,

217
00:12:52,270 --> 00:12:57,190
ceci est l'opérateur que l'on appelle logique ET,
parfois quand vous avez une condition

218
00:12:57,190 --> 00:13:02,060
soit ici, dans le tout ou un SI,
les multiples

219
00:13:02,210 --> 00:13:04,010
conditions doivent être vraies.

220
00:13:04,010 --> 00:13:06,120
Ceci est lorsque vous utilisez
cet opérateur ET.

221
00:13:06,120 --> 00:13:06,820
Donc ceci

222
00:13:06,820 --> 00:13:09,310
dit tout cela est vrai,

223
00:13:09,310 --> 00:13:12,010
et cela est vrai.

224
00:13:12,010 --> 00:13:15,320
Parfois, vous voulez qu'au moins
un pour soit vrai.

225
00:13:15,320 --> 00:13:18,530
Ainsi donc, vous pouvez utiliser
le OU, opérateur OU logique

226
00:13:18,530 --> 00:13:20,390
et voici comment vous pouvez écrire cela,

227
00:13:20,390 --> 00:13:22,330
de sorte que les 2 tubes ici,

228
00:13:22,330 --> 00:13:26,180
ceci est le OU logique est si l'un de ces,

229
00:13:26,180 --> 00:13:27,780
au moins l'un d'entre eux est vrai,

230
00:13:27,780 --> 00:13:33,000
puis toute cette expression sera vrai,
mais le ET est un peu restrictive

231
00:13:33,000 --> 00:13:36,870
en ce sens que l'ensemble que
cette expression soit vraie,

232
00:13:36,870 --> 00:13:40,760
à la fois et ceci a besoin d'être vrai.

233
00:13:40,760 --> 00:13:44,060
Voilà donc l'opérateur logique ET,

234
00:13:44,060 --> 00:13:46,020
maintenant pourquoi nous l'écrivons
comme ça.

235
00:13:46,020 --> 00:13:47,110
Eh bien, essentiellement,

236
00:13:47,110 --> 00:13:48,200
nous voulons continuer

237
00:13:48,240 --> 00:13:54,890
à appeler cette fonction de la prochaine
génération tant que P est non nul et non un.

238
00:13:54,890 --> 00:13:59,550
Donc, tant qu'il est quelque part entre
ces 2 valeurs parce que si elle est,

239
00:13:59,550 --> 00:14:03,570
si elle est soit zéro ou un cela signifie,
bien, au moins allèle A1

240
00:14:03,570 --> 00:14:09,410
a été soit perdue
et la a2 est allé à la fixation ou l'a1

241
00:14:09,410 --> 00:14:12,740
est allé à la fixation et l'a2 a été perdu.

242
00:14:12,740 --> 00:14:16,260
Donc, nous voulons nous assurer,
nous continuons à appeler cette fonction

243
00:14:16,260 --> 00:14:19,610
tandis que ces 2 conditions
ne sont pas remplies,

244
00:14:19,890 --> 00:14:22,930
Une autre façon de penser à ce sujet
est de, vous savez, demander

245
00:14:22,930 --> 00:14:27,570
ce qui se passe si P est effectivement nul,
ce qui va se passer très, très souvent

246
00:14:27,680 --> 00:14:30,770
P ira à zéro parce que nous avons
commencé les valeurs très faibles

247
00:14:31,080 --> 00:14:33,140
alors P ira souvent à zéro.

248
00:14:33,140 --> 00:14:34,230
Eh bien, dans ce cas,

249
00:14:34,380 --> 00:14:36,570
cela n'est plus vrai.

250
00:14:36,570 --> 00:14:38,470
Cela est encore vrai.

251
00:14:38,470 --> 00:14:41,000
Mais ceci n'est plus vrai.

252
00:14:41,000 --> 00:14:42,540
Et donc cette expression entière

253
00:14:42,540 --> 00:14:43,660
ne sera pas vrai.

254
00:14:43,660 --> 00:14:47,860
Et donc nous allons arrêter ce qui
se passe dans ces rares cas

255
00:14:47,860 --> 00:14:52,510
lorsque P atteindra finalement
un et en effet et l'allèle mutant a1

256
00:14:52,510 --> 00:14:57,090
ira à la fixation, bien dans
ce cas parce que P est égal à un,

257
00:14:57,090 --> 00:14:58,880
il sera toujours plus grand que zéro,

258
00:14:58,880 --> 00:15:03,280
donc ce sera toujours vrai,
mais maintenant ce ne sera pas vrai.

259
00:15:03,280 --> 00:15:06,490
Et pour que vous sachiez toute
cette expression ne sera plus vrai

260
00:15:06,780 --> 00:15:11,880
et arrêtera donc cette condition ici
couvre ces deux situations

261
00:15:11,880 --> 00:15:12,980
Donc c'est super,

262
00:15:12,980 --> 00:15:13,940
nous pouvons l'utiliser.

263
00:15:15,150 --> 00:15:19,340
Alors maintenant, ce qui reste à faire est que
nous devons assurer le suivi

264
00:15:19,340 --> 00:15:23,830
de combien de fois il va en effet à un,

265
00:15:23,830 --> 00:15:28,760
de sorte que nous pouvons dire SI,
maintenant P a en effet allé à un.

266
00:15:28,760 --> 00:15:32,690
C'est le cas intéressant,
le p étant allé à zéro

267
00:15:32,690 --> 00:15:35,780
n'est pas intéressant pour nous, nous voulons
savoir combien de fois cela se produit,

268
00:15:35,780 --> 00:15:39,030
la fréquence de l'allèle mutant
a1 va à la fixation.

269
00:15:39,030 --> 00:15:43,510
Alors maintenant, nous voulons garder
une trace de cet événement qui est arrivé.

270
00:15:43,510 --> 00:15:47,160
donc, nous avons besoin de mettre en place
une sorte de variable pour garder une trace de cela,

271
00:15:47,160 --> 00:15:50,110
Je vais le faire ici,
je vais définir une variable globale

272
00:15:50,110 --> 00:15:53,790
et je vais l'appeler fixations de mutants..

273
00:15:53,920 --> 00:15:58,830
fixations de mutants.

274
00:15:59,350 --> 00:16:00,130
D'accord.

275
00:16:00,130 --> 00:16:04,880
Bien sûr, je vais initialiser cela à zéro,
de sorte que je peux augmenter cette

276
00:16:05,160 --> 00:16:10,270
variables par un,
ici chaque fois que P a en fait

277
00:16:10,270 --> 00:16:15,880
vraiment atteint l'un et maintenant
cette variable ici garde la trace

278
00:16:15,880 --> 00:16:20,090
du nombre de fois où A1
serait allé à la fixation.

279
00:16:20,090 --> 00:16:20,890
Alors maintenant,

280
00:16:20,890 --> 00:16:26,050
tout ce qui reste à faire
c'est juste sortir ce numéro.

281
00:16:26,380 --> 00:16:32,010
Donc, je vais tout simplement sortie
cette fixations de mutant divisé par

282
00:16:32,010 --> 00:16:36,590
le nombre de simulations d'une exécution
et qui nous donne la fraction

283
00:16:36,590 --> 00:16:37,620
des simulations.

284
00:16:37,920 --> 00:16:39,030
ou en d'autres termes, 20%.

285
00:16:39,030 --> 00:16:45,620
La probabilité que a1 est vraiment allé

286
00:16:45,670 --> 00:16:49,030
à la fixation et c'est bien sûr
exactement ce que nous recherchons.

287
00:16:49,030 --> 00:16:51,380
Donc, nous allons enregistrer cela.

288
00:16:51,380 --> 00:16:57,400
Et revenons ou plutôt,
vers le navigateur et ouvrez ce fichier.

289
00:16:57,510 --> 00:17:03,230
Ainsi, le fichier ouvert et voici
mon fichier HTML probabilité de fixation,

290
00:17:03,230 --> 00:17:05,730
Je vais ouvrir cela, je ne vois rien ici,

291
00:17:05,730 --> 00:17:08,890
qui est prévu parce que
je sors simplement dans la console

292
00:17:09,580 --> 00:17:13,960
donc nous allons ouvrir la console Javascript
et ici nous pouvons voir cette valeur

293
00:17:13,960 --> 00:17:19,970
est en effet très proche de 0,005,
ce qui était le résultat attendu.

294
00:17:20,020 --> 00:17:25,310
Donc, si vous rechargez, vous verrez ceci
est toujours en vol stationnaire un peu

295
00:17:25,490 --> 00:17:28,720
autour de cette valeur et parfois
il est très proche et parfois

296
00:17:28,720 --> 00:17:33,170
il atteint effectivement cette valeur.

297
00:17:33,170 --> 00:17:37,870
Mais il se trouve que notre
observation par grand est en effet

298
00:17:38,240 --> 00:17:39,260
correctes.

299
00:17:39,260 --> 00:17:44,760
Maintenant, nous pouvons revenir au code
et nous pouvons maintenant jouer un peu

300
00:17:44,800 --> 00:17:49,590
avec ce code et de voir si
ce que nous faisons ici est vraiment

301
00:17:49,630 --> 00:17:50,420
en effet correct.

302
00:17:50,420 --> 00:17:51,190
Ainsi, par exemple,

303
00:17:51,190 --> 00:17:54,920
au moment où nous initialisons
ce P à 1 sur 2N.

304
00:17:54,920 --> 00:17:57,930
Ceci est la bonne façon de le faire,
si nous voulons dire, d'accord,

305
00:17:57,930 --> 00:18:02,780
on va commencer une seule mutation,
mais cette observation que la probabilité

306
00:18:02,780 --> 00:18:07,020
de la fixation d'un allèle neutre
est sa fréquence est toujours vrai

307
00:18:07,020 --> 00:18:08,680
non seulement au début.

308
00:18:08,680 --> 00:18:09,410
Ainsi, par exemple,

309
00:18:09,410 --> 00:18:13,510
nous pourrions initialiser
cette valeur p ici à 0,1.

310
00:18:13,510 --> 00:18:18,700
Donc, cela signifie simplement que chaque
simulation commence à P est égale à 10%,

311
00:18:18,700 --> 00:18:21,160
10% des allèles sont A1.

312
00:18:21,160 --> 00:18:22,690
Alors maintenant, quelle est la probabilité

313
00:18:22,690 --> 00:18:26,950
maintenant que l'allèle A1 ira
à la fixation à partir d'ici.

314
00:18:26,980 --> 00:18:31,060
Eh bien, si notre théorie est correcte,
alors il devrait être de 10%.

315
00:18:31,060 --> 00:18:35,850
Donc, nous allons enregistrer cela, revenir au navigateur
et recharger cela et voir si nous obtenons

316
00:18:35,850 --> 00:18:38,070
le nombre ici qui est très proche de 0,1.

317
00:18:39,850 --> 00:18:40,910
Yep

318
00:18:41,000 --> 00:18:44,850
Je pense que vous pourriez dire que ce qui est
très proche de 0,1, permettez-moi de recharger cela.

319
00:18:46,310 --> 00:18:51,390
Tous ces chiffres ici qui montrent
maintenant ici sont très très proche de 0,1.

320
00:18:51,400 --> 00:18:54,340
Donc, en effet ceci est vérifié
encore une fois.

321
00:18:54,340 --> 00:18:55,400
Comme vous pouvez le remarquer.

322
00:18:55,400 --> 00:18:57,390
Ceci va maintenant prendre
un peu plus longtemps.

323
00:18:57,390 --> 00:18:59,020
Pourquoi faut-il un peu plus longtemps?

324
00:18:59,020 --> 00:19:01,780
Eh bien, c'est parce que
nous initialisons P à 0,1,

325
00:19:01,780 --> 00:19:06,580
donc encore la grande majorité
des simulations seront effectivement

326
00:19:06,580 --> 00:19:11,290
finir dans P égale à 0.

327
00:19:11,300 --> 00:19:12,170
Mais maintenant,

328
00:19:12,170 --> 00:19:16,180
cela prend beaucoup plus de temps, en moyenne,
avant que nous venons d'avoir une copie

329
00:19:16,180 --> 00:19:18,500
cette copie a été rapidement perdu.

330
00:19:18,500 --> 00:19:22,830
Maintenant, nous avons 10%
des allèles étant a1 au début,

331
00:19:22,830 --> 00:19:25,910
et donc il va prendre un peu
de temps pour les simulations

332
00:19:26,150 --> 00:19:27,700
pour aller à zéro.

333
00:19:27,700 --> 00:19:29,460
Voilà pourquoi il prendre
un peu plus de temps

334
00:19:29,460 --> 00:19:32,460
Ainsi, un test de cohérence finale,
revenons au code,

335
00:19:32,460 --> 00:19:34,610
nous allons initialiser cela comme à 0,2,

336
00:19:34,610 --> 00:19:38,800
enregistrons cela, maintenant
nous allons recharger cela dans le navigateur,

337
00:19:38,800 --> 00:19:42,150
à nouveau, nous devons maintenant
voir une valeur très proche de 0,2,

338
00:19:42,150 --> 00:19:42,930
et encore une fois,

339
00:19:42,930 --> 00:19:45,180
maintenant, nous devrions prendre
encore un peu plus longtemps, oui.

340
00:19:45,180 --> 00:19:49,210
Très proche de 0,2, il devrait prendre encore plus longtemps
parce que maintenant nous commençons

341
00:19:49,210 --> 00:19:54,500
à 20% et il prendra encore
plus long pour les simulations,

342
00:19:54,530 --> 00:19:58,610
pour la plupart des simulations
pour aller à P est égal à zéro.

343
00:19:58,610 --> 00:19:59,350
D'accord.

344
00:19:59,350 --> 00:20:01,740
Mais il se révèle être correcte ici.

345
00:20:01,740 --> 00:20:04,790
P est très proche de 0,2.

346
00:20:04,790 --> 00:20:07,980
Nous avons donc confirmé en utilisant
des simulations Javascript.

347
00:20:07,980 --> 00:20:12,260
L'observation que nous avons commencé
avec, qui est que la probabilité de fixation

348
00:20:12,280 --> 00:20:15,050
de l'allèle neutre est sa fréquence.

349
00:20:15,050 --> 00:20:15,770
D'accord.

350
00:20:15,770 --> 00:20:19,070
Alors maintenant, nous avons établi
que la probabilité de fixation

351
00:20:19,070 --> 00:20:23,730
de l'allèle neutre est sa fréquence
et si en effet il apparaît

352
00:20:23,730 --> 00:20:25,890
comme un seul exemplaire
dans la population,

353
00:20:25,890 --> 00:20:28,840
alors la probabilité de fixation
est de 1 sur 2N,

354
00:20:28,840 --> 00:20:31,060
et maintenant que nous savons cela,

355
00:20:31,060 --> 00:20:33,830
nous pouvons passer à la deuxième
question, qui est,

356
00:20:33,830 --> 00:20:37,970
si cela arrive en effet que
la seule copie ira à la fixation,

357
00:20:37,970 --> 00:20:39,610
c'est quoi est le temps prévu ici?

358
00:20:39,610 --> 00:20:43,270
Combien de temps cela va se prendre?
Ceci est une question qu'on abordera

359
00:20:43,270 --> 00:20:45,270
dans la prochaine session,
je vous verrai là-bas.

