1
00:00:02,826 --> 00:00:06,064
Bienvenue.La Nature, dans le code.
Nous sommes dans le chapitre 5, leçons 6.

2
00:00:06,243 --> 00:00:09,182
Maintenant, il va se passer. Nous allons
visualiser notre simulation spatiale

3
00:00:09,351 --> 00:00:13,101
Ne perdons pas une seconde. Allons-y.

4
00:00:13,306 --> 00:00:17,193
Voici donc notre code, les choses fonctionnent
bien. Maintenant, nous devons visualiser cela.

5
00:00:17,368 --> 00:00:20,243
Encore une fois, nous allons utiliser
ces trois pour le visualiser.

6
00:00:20,360 --> 00:00:23,747
Nous allons utiliser des méthodes
légèrement différentes de celles

7
00:00:23,926 --> 00:00:27,189
nous avons utilisé auparavant. Donc, je vais
remettre cela à vous encore, vous pouvez

8
00:00:27,364 --> 00:00:33,102
trouver sur cette page ou vous pouvez
trouver sur le site Web la nature dans le code.

9
00:00:33,317 --> 00:00:38,041
Donc, je vais maintenant continuer
et d'abord obtenir la

10
00:00:38,197 --> 00:00:41,660
bibliothèque D3 encore une fois,
et si vous vous souvenez

11
00:00:41,820 --> 00:00:45,221
comment nous avons fait cela, nous sommes
allés tout simplement sur le site D3.

12
00:00:45,359 --> 00:00:50,359
Donc, si vous allez ici, vous
recherchez D3, vous devriez arriver à ce

13
00:00:50,536 --> 00:00:54,486
site ici, d3js.org. C'est là cette bibliothèque

14
00:00:54,669 --> 00:00:55,269
est hébergé

15
00:00:56,023 --> 00:00:59,048
et voici l'exemple de la façon
dont vous avez dirigé un lien

16
00:00:59,210 --> 00:01:02,035
à la dernière version.
Il vous suffit de copier l'extrait, qui est

17
00:01:02,220 --> 00:01:03,220
ce que je vais faire.

18
00:01:03,397 --> 00:01:07,135
Encore une fois, quand je copie
et je vais revenir

19
00:01:07,306 --> 00:01:11,994
à mon code, et je vais mettre cela
ici dans la tête.

20
00:01:12,181 --> 00:01:15,081
Maintenant, vous pouvez aussi le mettre
dans le corps, mais je vais juste

21
00:01:15,249 --> 00:01:18,524
mettre dans la tête ici. Donc,
je ,vous savez, m'assure que

22
00:01:18,695 --> 00:01:20,658
les choses sont chargées immédiatement.

23
00:01:20,799 --> 00:01:23,799
D'accord, donc cela charge D3
à partir du Web.

24
00:01:24,281 --> 00:01:29,231
Maintenant, ce que j'ai besoin c'est, j'ai besoin
des méthodes qui peuvent me aider

25
00:01:29,403 --> 00:01:33,465
visualiser cela. Et encore une fois,
il serait au-delà de la portée de ceci

26
00:01:33,651 --> 00:01:35,989
bien sûr pour expliquer en détail
comment cela fonctionne.

27
00:01:36,162 --> 00:01:39,162
Donc, encore une fois,
je vais assurer ces fonctions et

28
00:01:39,329 --> 00:01:42,729
dans ce cas on les appelle grille
de traçage et la grille de mise à jour.

29
00:01:42,897 --> 00:01:46,485
Vous pouvez les obtenir ici dans
le contexte de cette MOOC.

30
00:01:46,901 --> 00:01:51,976
Vous devriez trouver le lien ici
de la fenêtre vidéo, mais

31
00:01:52,464 --> 00:01:58,076
si vous ne trouvez pas, vous pouvez
aussi aller toujours dans natureincode.com,

32
00:01:58,246 --> 00:02:02,296
qui est l'endroit où je suis l'hôte, vous le savez,
des nouvelles, des mises à jour et certains

33
00:02:02,473 --> 00:02:08,273
codes en ligne des exemples.
Et ici si vous allez voir le code en action,

34
00:02:08,456 --> 00:02:11,831
cela peut paraître un peu différemment
lorsque vous accédez à la page, mais

35
00:02:12,021 --> 00:02:13,671
encore globalement le même.

36
00:02:13,840 --> 00:02:18,553
Vous pouvez aller ici au chapitre 5,
modèle spatial, vous faites défiler tous les

37
00:02:18,703 --> 00:02:23,091
chemin vers le bas et vous pouvez trouver ici,
note la grille de traçage et mise à jour

38
00:02:23,257 --> 00:02:26,294
les fonctions de la grille sont construits avec D3.
Nous savons que et peut être trouvé

39
00:02:26,461 --> 00:02:29,799
ici, donc cliquez ici et ils sont ici.
Donc, voir les deux fonctions,

40
00:02:29,935 --> 00:02:33,460
dessiner la grille et la mise à jour de grille.
D'accord, comme ça. Je vais copier

41
00:02:33,616 --> 00:02:37,804
Donc, tout simplement l'ensemble de
ces deux fonctions. D'accord, comme ça.

42
00:02:37,957 --> 00:02:42,882
Je vais les copier, puis revenir
à votre code dans le corps

43
00:02:43,050 --> 00:02:47,663
script. Je voudrais simplement mettre
à nouveau, en haut de votre code.

44
00:02:47,841 --> 00:02:51,966
Donc, le coller et encore, si vous voulez,
vous pouvez les mettre en retrait

45
00:02:52,144 --> 00:02:58,382
si vous voulez lire et les comprendre,
mais ops, ce n'est pas nécessaire

46
00:02:58,572 --> 00:03:02,859
mais si vous voulez le faire,
bien sûr, alors allez-y et faites-le.

47
00:03:03,506 --> 00:03:08,381
Donc, nous avons la fonction de traçage
de grille, il a deux paramètres, un est le

48
00:03:08,540 --> 00:03:11,802
données et c'est simplement
la grille à deux dimensions, et le second

49
00:03:11,942 --> 00:03:16,480
est les couleurs que vous
aimeriez avoir à visualiser

50
00:03:16,664 --> 00:03:19,764
dans les différentes cellules. Maintenant, celui-ci
est obligatoire, mais si vous ne

51
00:03:19,907 --> 00:03:23,070
fourni pas cela, nous allons
juste cette fonction va utiliser

52
00:03:23,254 --> 00:03:25,167
une couleur par défaut définie.

53
00:03:25,459 --> 00:03:28,584
Ok, donc nous allons continuer
maintenant et l'utiliser.

54
00:03:28,764 --> 00:03:31,289
Donc, nous descendons à notre code.

55
00:03:32,870 --> 00:03:37,620
Nous appelons la fonction
de initgrid ici puis ici,

56
00:03:37,942 --> 00:03:44,692
nous appelons la fonction d'exécution
de génération dans une boucle.

57
00:03:44,869 --> 00:03:50,006
En fait, permettez-moi de mettre
tous les appels de fonction ici en bas.

58
00:03:50,188 --> 00:03:53,125
Permettez-moi de prendre cette fonction
de grille init. D'accord, je vais juste

59
00:03:53,301 --> 00:03:57,701
couper ce ici et je vais mettre cela ici.

60
00:03:57,877 --> 00:04:02,227
Peu importe où il est,
aussi longtemps qu'il se produit

61
00:04:02,413 --> 00:04:06,000
avant que la boucle de génération de l'exécution.
Mais je pense qu'il est juste de bonnes pratiques

62
00:04:06,167 --> 00:04:10,205
d'avoir tous les appels
de fonction ici regroupé.

63
00:04:10,375 --> 00:04:14,575
Très bien, ici nous avons init grid
et nous exécutons

64
00:04:14,742 --> 00:04:19,655
génération. Donc, ce que nous devons
faire ici est après l'initialisation,

65
00:04:19,817 --> 00:04:23,317
après avoir initialisé init grid, nous pouvons
maintenant par exemple appeler cette

66
00:04:23,561 --> 00:04:29,461
méthode de traçage de grille. Donc, je vais
simplement appeler ici tracer la grille.

67
00:04:29,638 --> 00:04:35,350
Et encore une fois, cela prendrait
deux arguments mais je vais seulement

68
00:04:35,547 --> 00:04:39,084
passer un, qui est la grille parce que
je suis à laise avec la valeur par défaut

69
00:04:39,236 --> 00:04:42,986
des couleurs. Bon, alors assurez-vous
que cela vient après la init grid

70
00:04:43,158 --> 00:04:44,921
et avant l'exécution de cette génération.

71
00:04:45,095 --> 00:04:48,095
Alors maintenant, si nous enregistrons cela
et si tout a bien fonctionné,

72
00:04:48,258 --> 00:04:52,071
nous devrions aller sur le navigateur.
Je vais fermer ces

73
00:04:52,237 --> 00:04:55,737
deux onglets ici. Nous revenons à notre simulation.
Nous devrions être en mesure

74
00:04:55,915 --> 00:04:58,915
de recharger cela et voir.

75
00:04:59,104 --> 00:05:02,192
Donc, ceci est votre population.
Il semble assez cool.

76
00:05:02,331 --> 00:05:06,706
Donc en fait les trois couleurs ici sont faciles
à expliquer, le blanc est A1A1,

77
00:05:06,874 --> 00:05:11,886
noir est A2A2, ce sont donc
les deux homozygotes et le

78
00:05:12,071 --> 00:05:14,909
bleu est l'hétérozygote, A1A1.

79
00:05:15,102 --> 00:05:20,127
Donc, cela est tout simplement la population
après avoir l'initialiser. Vous pouvez

80
00:05:20,290 --> 00:05:23,240
rechargez cela plusieurs fois
et vous pouvez voir cela est aléatoire

81
00:05:23,422 --> 00:05:28,672
comme il se doit, et rien n'est
encore passé en termes de

82
00:05:28,842 --> 00:05:31,842
dynamique. Vous ne voyez pas la dynamique.
Le code est en cours d'exécution ici,

83
00:05:31,993 --> 00:05:37,093
mais vous ne voyez pas la dynamique.
Cela vous montre que la première

84
00:05:37,259 --> 00:05:40,934
instantané de la population. Donc
c'est super. La partie de visualisation

85
00:05:41,101 --> 00:05:44,776
fonctionne. Ce que nous devons faire
maintenant est que nous devons mettre à jour

86
00:05:44,943 --> 00:05:47,718
cette grille à chaque génération.

87
00:05:47,886 --> 00:05:50,848
Alors revenons au code et à faire cela.

88
00:05:50,995 --> 00:05:55,845
Donc, ce que nous pourrions faire est ici simplement
après chaque appel pour exécuter la génération,

89
00:05:56,009 --> 00:06:00,059
nous pourrions appeler cette fonction mise à jour
de la grille. Mise à jour de la grille est juste

90
00:06:00,239 --> 00:06:04,539
une version légèrement modifiée de
la grille de traçage. Il n'a pas besoin de tirer

91
00:06:04,714 --> 00:06:07,027
l'ensemble du tableau à nouveau.
Il peut tout simplement le mettre à jour.

92
00:06:07,435 --> 00:06:11,197
Mais en tout cas, si nous avons fait cela
en fait des choses serait bien

93
00:06:11,372 --> 00:06:16,135
trop vite, parce que
si vous allez ici au navigateur

94
00:06:16,315 --> 00:06:20,202
et vous rechargez cette page,
vous remarquez, à droite, la grille est

95
00:06:20,380 --> 00:06:25,455
dessinés, puis 100 générations
sont exécutées moins immédiatement.

96
00:06:25,617 --> 00:06:31,880
Maintenant, si nous devions mettre à jour
la grille ici en temps réel, comme cela est

97
00:06:32,052 --> 00:06:35,639
calculé, cela arriverait si vite,
il va juste se produire dans

98
00:06:35,819 --> 00:06:39,107
de millisecondes, et nous ne serions pas
en mesure de  même le voir,

99
00:06:39,288 --> 00:06:41,888
parce que ce serait tout simplement
trop rapide pour nos yeux.

100
00:06:42,119 --> 00:06:47,781
Nous avons donc en quelque sorte à ralentir
artificiellement cela, nous allons donc revenir

101
00:06:48,025 --> 00:06:51,025
nous allons donc revenir à notre code
et faire cela. Et effectivement, il est

102
00:06:51,178 --> 00:06:54,178
sorte de drôle de penser
à ce sujet et le testament

103
00:06:54,338 --> 00:06:58,463
à la vitesse des ordinateurs et
des navigateurs et des visualisations,

104
00:06:58,638 --> 00:07:02,476
et java script que nous avons maintenant
besoin de ralentir artificiellement le code

105
00:07:02,660 --> 00:07:06,897
de sorte que nous pouvons voir les choses
qui se passe. Mais vous savez,

106
00:07:07,069 --> 00:07:08,632
c'est comme ca.

107
00:07:08,794 --> 00:07:12,756
Donc, ce que nous ferions est que nous allons nous
débarrasser de cette exécution génération  de l'ensemble

108
00:07:12,923 --> 00:07:15,998
de boucle ici, et nous allons
le remplacer par un code

109
00:07:16,180 --> 00:07:21,105
extrait qui utilise une méthode que
nous avons pas rencontré auparavant.

110
00:07:21,281 --> 00:07:24,518
Donc, javascript dans le navigateur est
livré avec cette méthode très pratique

111
00:07:24,707 --> 00:07:27,870
appelé intervalle de jeu,
et ce que cette méthode fait

112
00:07:28,059 --> 00:07:33,959
alors voici comment vous écrivez
cet intervalle de jeu. Cette méthode prend

113
00:07:34,127 --> 00:07:35,539
deux paramètres.

114
00:07:35,716 --> 00:07:39,403
L'un est le nom de fonction
et l'autre est un nombre

115
00:07:39,590 --> 00:07:40,840
en millisecondes.

116
00:07:41,030 --> 00:07:45,067
Et cela signifie que la fonction
est ce qui est appelé

117
00:07:45,239 --> 00:07:49,552
répétitivement et les milliseconds,
le second paramètre

118
00:07:49,728 --> 00:07:53,928
est la milliseconde,
il définit combien de millisecondes devra

119
00:07:54,110 --> 00:07:57,623
passer avant que la fonction soit appelée
à nouveau et c'est exactement

120
00:07:57,784 --> 00:07:59,159
ce dont nous avons besoin.

121
00:07:59,326 --> 00:08:02,901
Donc, ce que je vais faire d'abord
encore après la grille de traçage

122
00:08:03,081 --> 00:08:07,443
est, je vais en fait définir
une fonction qui combine la

123
00:08:07,615 --> 00:08:12,215
exécuter la génération et la grille de mise à jour.
Encore une fois, je vais appeler cette simulation

124
00:08:13,267 --> 00:08:15,330
et de visualiser,

125
00:08:18,023 --> 00:08:22,261
d'accord. C'est une fonction pratique
simple qui appelle deux fonctions,

126
00:08:22,433 --> 00:08:31,946
à savoir notre exécuter la génération
et la méthode mise à jour de la grille.

127
00:08:32,115 --> 00:08:35,927
Mettre à jour la grille et une fois encore,
je dois passer, la grille

128
00:08:36,098 --> 00:08:39,411
parce que la grille sera différente.
Les contenus de la grille seront

129
00:08:39,590 --> 00:08:43,528
différent après chaque exécution
de la génération de l'exécution.

130
00:08:43,909 --> 00:08:46,509
Bon, et maintenant, que je suis ici,
je vais dire,

131
00:08:46,688 --> 00:08:55,313
«Regardez, appeler cette fonction,
simuler et visualiser."

132
00:08:56,416 --> 00:09:00,816
Simplement le nom de la fonction
comme paramètre et faire cela pour tous,

133
00:09:00,978 --> 00:09:03,603
vous savez, 100 millisecondes
ou vous pourriez dire que vous savez,

134
00:09:03,785 --> 00:09:10,147
200 ou 500 ou un second
sera 1000 millisecondes.

135
00:09:10,325 --> 00:09:13,413
Faisons 1000 millisecondes, d'accord.

136
00:09:13,593 --> 00:09:19,731
Donc, nous allons enregistrer cela et maintenant
nous allons revenir au navigateur et recharger

137
00:09:20,204 --> 00:09:22,741
le document.

138
00:09:23,336 --> 00:09:26,324
Et là, vous pouvez maintenant
voir ce qui se passe, vous

139
00:09:26,511 --> 00:09:30,224
visualisez votre population et
vous pouvez le voir ici dans la console

140
00:09:30,396 --> 00:09:34,871
que les choses se déplaçant lentement
avec le retard d'une seconde.

141
00:09:35,044 --> 00:09:38,282
Et vous pouvez voir ici votre
simulation est mise à jour.

142
00:09:38,551 --> 00:09:39,626
C'est vraiment cool.

143
00:09:39,882 --> 00:09:43,007
Donc en fait, il semble que, hmm,
ceci est presque un peu trop lent.

144
00:09:43,181 --> 00:09:45,456
Nous pourrions l'accélérer un peu.

145
00:09:45,636 --> 00:09:53,386
Donc, revenons à notre code et
nous allons mettre la valeur ici à 100.

146
00:09:55,221 --> 00:09:57,633
D'accord, je vais enregistrer cela

147
00:09:58,751 --> 00:10:00,276
et puis je vais revenir,

148
00:10:00,537 --> 00:10:03,699
recharger et maintenant, il ressemble
beaucoup plus agréable.

149
00:10:04,449 --> 00:10:08,549
Et maintenant, je pourrais le regarder toute
la journée. Je trouve cela fascinant.

150
00:10:08,716 --> 00:10:12,254
Ainsi, vous pouvez voir ici comment
votre population évolue au fil du temps

151
00:10:12,436 --> 00:10:17,211
et vous pouvez vraiment voir les effets
de l'espace ici et particulièrement

152
00:10:17,375 --> 00:10:21,788
la distance d'accouplement limitée.
Vous pouvez maintenant voir ces îles

153
00:10:21,950 --> 00:10:27,687
émergent ici en noir par exemple
un en blanc dans ces grappes vraiment.

154
00:10:27,868 --> 00:10:31,506
Et donc ce qui se passe ici est que
vous commencer réellement à

155
00:10:31,687 --> 00:10:34,937
obtenir des grappes de homozygotes.
Ainsi, par exemple ici,

156
00:10:35,109 --> 00:10:37,546
cette grappe blanche ici, ou ici et la

157
00:10:37,716 --> 00:10:38,866
grappe noire ici.

158
00:10:39,047 --> 00:10:42,297
Alors qu'est-ce qui se passe ici?
Eh bien, vous savez, garder à l'esprit

159
00:10:42,471 --> 00:10:47,571
que chaque point ici est un individu
et il ne reçoit que pour coupler avec

160
00:10:47,760 --> 00:10:51,785
ses voisins. Ainsi, si tous ses voisins
sont de même génotype

161
00:10:51,964 --> 00:10:54,989
et ils sont homozygotes,
et ils ne peuvent jamais produire

162
00:10:55,161 --> 00:10:59,824
exactement le même génotype
à nouveau. Même ici dans le cas

163
00:11:00,014 --> 00:11:02,802
des génotypes A2A2 dans la région noire.

164
00:11:03,199 --> 00:11:08,137
D'autre part, le rouge,
désolé hétérozygote bleu,

165
00:11:08,304 --> 00:11:14,154
ils peuvent générer à la fois hétérozygotes
et homozygotes. Donc, l'équilibre est

166
00:11:14,327 --> 00:11:17,727
juste un peu décalé et ce qui
se passera en réalité est que vous

167
00:11:17,889 --> 00:11:22,689
finalement, très vite en fait, vous savez,
dans les temps d'évolution

168
00:11:22,865 --> 00:11:27,152
perdront toutes
les variations génétiques ici.

169
00:11:28,244 --> 00:11:31,832
Et vous verrez ces îles deviennent
plus gros et plus grand et plus gros,

170
00:11:32,005 --> 00:11:37,918
et, finalement, l'un des deux,
ou A1A1 A2A2 prendra le relais

171
00:11:38,098 --> 00:11:41,098
et l'ensemble de la population
sera de ce type.

172
00:11:41,288 --> 00:11:44,275
Maintenant, il faudrait un temps assez
long parce que je peux voir ici

173
00:11:44,467 --> 00:11:47,917
la console que nous avons déjà
atteint la génération 1000,

174
00:11:48,090 --> 00:11:51,390
mais vous pouvez réellement
tester cela en remontant au code

175
00:11:51,568 --> 00:11:55,793
et essentiellement juste avoir
une population plus petite.

176
00:11:55,961 --> 00:11:58,661
Ainsi, par exemple ici, ici dans
les variables globales,

177
00:11:58,829 --> 00:12:01,304
nous pourrions simplement dire:
«Vous savez quoi, nous allons mettre

178
00:12:01,493 --> 00:12:04,430
la longueur de la grille à 20, "
car alors vous aurez pas

179
00:12:04,618 --> 00:12:08,568
une population de 10 000,
mais de 20 x 20, de sorte 400.

180
00:12:08,740 --> 00:12:12,890
Maintenant, cela devrait être beaucoup plus rapide.
Alors, évidemment, cela ressemble un peu

181
00:12:13,089 --> 00:12:17,377
différent ici, mais vous pouvez toujours
voir ces îles qui commencent maintenant

182
00:12:17,561 --> 00:12:24,461
à former ces groupes de noir
et blanc, de sorte A2A2 et A1A1.

183
00:12:24,644 --> 00:12:28,182
Il est un peu difficile à dire
au moment où l'on semble gagner,

184
00:12:28,355 --> 00:12:33,080
mais si vous continuez maintenant
à regarder cela,vous auriez probablement à dire,

185
00:12:33,257 --> 00:12:36,857
il semble que clairement le A2A2 gagne.
Il y a seulement

186
00:12:37,044 --> 00:12:42,144
quelques A1s gauche et il y a seulement
une question de temps jusqu'à ce que les A1A1s

187
00:12:42,334 --> 00:12:44,959
ont complètement disparu.

188
00:12:45,676 --> 00:12:49,051
Cela peut prendre un certain temps,
mais c'est certainement beaucoup plus rapide

189
00:12:49,229 --> 00:12:53,704
on sait que, par rapport
à la situation où la

190
00:12:53,877 --> 00:12:56,002
taille de la population est de 10.000.

191
00:12:56,710 --> 00:13:00,685
Maintenant, vous pouvez regarder dans
votre navigateur, bien sûr depuis longtemps,

192
00:13:00,862 --> 00:13:04,400
mais je veux juste passer
et je veux juste aller sur le code,

193
00:13:04,557 --> 00:13:08,532
et je veux mettre ce retour à 100.
Donc, revenir

194
00:13:08,728 --> 00:13:11,341
à notre cas de 10.000 personnes.

195
00:13:11,522 --> 00:13:15,397
mais je veux maintenant régler cette distance
max d'accouplement  à une valeur élevée,

196
00:13:15,564 --> 00:13:20,714
à savoir 50. Pourquoi 50? Parce que 50 est
exactement la moitié de la longueur de la grille

197
00:13:20,899 --> 00:13:24,674
ce qui signifie que nous revenons
à l'accouplement global, à droite,

198
00:13:24,855 --> 00:13:27,755
parce que maintenant pour chaque
individu, le quartier d'accouplement

199
00:13:27,955 --> 00:13:31,880
où je peux choisir un individu au hasard
de produire des descendants

200
00:13:32,059 --> 00:13:35,422
avec est, en substance,
l'ensemble de la population.

201
00:13:35,613 --> 00:13:37,088
L'ensemble de la grille.

202
00:13:37,258 --> 00:13:40,321
Donc, nous avons encore un monde spatial,
mais efficace, nous revenons

203
00:13:40,508 --> 00:13:44,546
à l'accouplement aléatoire. Donc,
si j'enregistre cela et reviens ici, oh, eh bien,

204
00:13:44,718 --> 00:13:48,643
il semble en fait comme si A1A1 avait fait
un rebond, mais nous

205
00:13:48,829 --> 00:13:51,779
n'attendrons pas  ici.
Nous allons recharger cela.

206
00:13:51,969 --> 00:13:57,456
Ceci est maintenant le cas d'accouplement aléatoire
ou global et vous pouvez voir ici

207
00:13:57,627 --> 00:14:00,352
vous ne trouverez pas ces îles. Pourquoi pas,
encore une fois, parce que nous sommes

208
00:14:00,531 --> 00:14:04,344
essentiellement, complètement
à nouveau au mélange aléatoire.

209
00:14:05,113 --> 00:14:09,313
Maintenant, ceci encore maintenant
de retour à la simulation de la dérive.

210
00:14:09,498 --> 00:14:14,873
Nous avons une taille limitée de la population
N est égal à 10 000, donc en fin de compte

211
00:14:15,043 --> 00:14:19,343
comme vous le savez, nous allons perdre
une variation génétique et l'un des deux

212
00:14:19,536 --> 00:14:23,186
homozygotes finira par gagner, mais ça va
prendre beaucoup plus longtemps

213
00:14:23,352 --> 00:14:26,940
et nous ne voyons aucun
de ces effets spéciaux ici.

214
00:14:27,445 --> 00:14:34,307
Ce que nous avons vraiment besoin est de
comparer les deux mondes d'accouplement global,

215
00:14:34,492 --> 00:14:37,930
d'un modèle non spatial si vous changez
simplement cette variable

216
00:14:38,107 --> 00:14:41,670
nous changeons ceci à un ici
l'enregistrer, recharger. Tu peux voir

217
00:14:41,831 --> 00:14:45,256
la dynamique ici sont très, très différent.
Maintenant,très rapidement

218
00:14:45,420 --> 00:14:49,720
à nouveau nous obtenons ces îles
de homozygotes, ces clusters.

219
00:14:49,926 --> 00:14:55,764
Voilà donc votre simulation spatiale.
Vraiment bien fait si vous avez arrivés

220
00:14:55,920 --> 00:14:56,983
aussi loin.

221
00:14:57,174 --> 00:15:01,986
Vous avez la simulation stacarstic spatiale
individuelle  sur la base d'un modèle

222
00:15:02,168 --> 00:15:08,581
de population génétique. Voilà donc vraiment super.
Maintenant, la seule chose qui reste à être

223
00:15:08,773 --> 00:15:11,573
fait est d'obtenir un peu plus d'une
manipulation quantitative. Je veux dire,

224
00:15:11,741 --> 00:15:16,079
nous semblons observer que les choses
ont plutôt une dynamique différente,

225
00:15:16,248 --> 00:15:19,911
mais comment sont-ils différents
et est-ce vraiment vrai que

226
00:15:20,089 --> 00:15:24,664
on obtient différentes distributions
des génotypes ici par rapport

227
00:15:24,847 --> 00:15:28,697
au mélange aléatoire? Nous pouvons trouver.
Il y a un type particulièrement

228
00:15:28,876 --> 00:15:31,876
des statistiques qui peuvent nous aider
à comprendre cela et nous allons

229
00:15:32,037 --> 00:15:35,512
regarder cela dans la prochaine
et dernière leçon de ce chapitre.

230
00:15:35,680 --> 00:15:36,780
Donc, je vous verrai là-bas.

