1
00:00:03,435 --> 00:00:06,735
Bienvenue. Nature dans le Code.
Nous sommes dans le chapitre 5, leçon 3.

2
00:00:07,025 --> 00:00:09,625
Dans cette leçon, nous allons
mettre en œuvre la fonction

3
00:00:09,809 --> 00:00:12,897
qui est appelée dans chaque
génération c'est donc où tous

4
00:00:13,120 --> 00:00:16,482
les choses intéressantes
se produisent; la reproduction, trouver

5
00:00:16,674 --> 00:00:21,624
un partenaire d'accouplement et ainsi de suite .
Comme nous le faisons, nous rencontrons

6
00:00:21,824 --> 00:00:27,024
un piège très courant dans les modèles
à base individuels comme celui-ci

7
00:00:27,194 --> 00:00:30,557
et bien sûr, nous allons trouver un moyen
de contourner cela donc nous allons le faire.

8
00:00:30,742 --> 00:00:34,517
Bon, ceci est notre code.
Nous avons la fonction init_grid.

9
00:00:34,710 --> 00:00:40,147
Il initialise la grille, fixe 1 de 3 génotypes
sur chaque cellule

10
00:00:40,317 --> 00:00:43,367
dans la grille. Cela fonctionne bien.
Nous avons testé cela.

11
00:00:43,798 --> 00:00:48,473
Maintenant, qu'est-ce que nous avons
à faire après la init_grid? Il est temps

12
00:00:48,689 --> 00:00:52,139
pour exécuter les générations.
Ce que je vais faire est, je vais

13
00:00:52,352 --> 00:00:56,065
configurer une boucle, puis appeler
une fonction 'exécuter_génération'.

14
00:00:56,259 --> 00:01:00,984
Je vais dire pour (var i = 0 ;.Alors je vais

15
00:01:01,178 --> 00:01:04,840
dire i est inférieur à 100 et
je vais évidemment changer ceci

16
00:01:05,039 --> 00:01:08,326
plus tard. Comme vous le savez, je n'aime
pas ces valeurs difficilement codées ici

17
00:01:08,770 --> 00:01:12,395
mais pour le moment c'est assez bon.
Nous allons la changer plus tard.

18
00:01:12,614 --> 00:01:18,489
Ensuite, i = i + 1 pour empêcher les boucles
infinate. Ici, nous aimerions appeler cette

19
00:01:18,681 --> 00:01:24,319
fonction exécuter_génération
et quelque part bien sûr, nous devons

20
00:01:24,525 --> 00:01:28,100
impliment cette fonction.
Je vais le faire ici:

21
00:01:28,293 --> 00:01:36,755
fonction exécuter_génération ().
Qu'est-ce que cette fonction doit faire?

22
00:01:37,447 --> 00:01:39,797
Eh bien, cette fonction a besoin
de faire une ou deux choses.

23
00:01:40,034 --> 00:01:43,034
Ce que nous devons faire est, nous avons
besoin de passer par chaque individu

24
00:01:43,591 --> 00:01:47,929
ou à travers chaque cellule, regardez
à l'individu dans cette cellule,

25
00:01:48,134 --> 00:01:51,134
choisir un partenaire
d'accouplement pour cette personne,

26
00:01:52,139 --> 00:01:56,326
générer la bonne progéniture
étant donné les options et

27
00:01:56,520 --> 00:02:00,320
puis remplacer finalement
la génération parent avec

28
00:02:00,527 --> 00:02:03,977
la génération de progéniture.
Nous ferons toutes ces choses

29
00:02:04,255 --> 00:02:08,943
dans le futur proche.
Maintenant, la première chose que

30
00:02:09,109 --> 00:02:12,771
Je vais mentionner c'est un piége potentiel
que nous pouvons courir dans avec

31
00:02:12,958 --> 00:02:16,483
ces modèles basés sur l'individu.
Voici ce que je veux dire:

32
00:02:16,677 --> 00:02:21,140
Voici un problème. Imaginez ceci est
votre grille et nous allons maintenant

33
00:02:21,337 --> 00:02:24,925
à travers chacune de ces cellules
en utilisant notre double boucle pour.

34
00:02:25,699 --> 00:02:30,561
Faisons un zoom sur une situation ici.
Disons que nous sommes dans cette cellule ici

35
00:02:30,745 --> 00:02:36,045
en ce moment et cela est
la personne qui vit sur cette grille.

36
00:02:37,988 --> 00:02:46,238
Nous avons une distance d'accouplement de 1.
Notre distance d'accouplement ici c'est 1

37
00:02:46,436 --> 00:02:51,549
de sorte que le quartier d'accouplement
est cette zone ici.

38
00:02:54,994 --> 00:03:00,919
Disons que nous avons maintenant
choisi par choix aléatoire,

39
00:03:01,098 --> 00:03:04,598
cet individu ici comme
un partenaire d'accouplement

40
00:03:04,885 --> 00:03:09,960
Ces 2 vont maintenant accoupler
et ils vont créer

41
00:03:10,144 --> 00:03:13,582
un individu de la progéniture.
Qu'est-ce que nous allons faire maintenant

42
00:03:13,769 --> 00:03:17,070
avec cette progéniture individuelle?
Eh bien, la première intuition

43
00:03:17,268 --> 00:03:21,230
peut être simplement remplacer
ce parent individu avec la progéniture

44
00:03:21,432 --> 00:03:25,007
individuel qui est ce que nous avons
en fin de compte l'intention de faire.

45
00:03:25,214 --> 00:03:28,401
Ceci est la prochaine génération afin
que les parents ont juste accouplé.

46
00:03:28,588 --> 00:03:33,863
La progéniture remplacera le parent.
Toutefois, si vous l'avez fait

47
00:03:34,028 --> 00:03:37,303
comme celui-ci vous introduirez
une erreur assez substantielle

48
00:03:37,498 --> 00:03:42,336
mais délicate qui est la suivante:
Supposons que nous passons

49
00:03:42,651 --> 00:03:45,651
à la cellule suivante. Maintenant,
nous considérant cette cellule ici; cette

50
00:03:45,849 --> 00:03:51,224
personne ici, sa gamme d'accouplement serait cette

51
00:03:51,404 --> 00:03:58,641
espace ici. Corrélativement,
disons maintenant juste par

52
00:03:58,946 --> 00:04:03,346
hasard que nous choisissons cette personne ici
comme un partenaire d'accouplement

53
00:04:03,534 --> 00:04:07,397
parce qu'il est dans la gamme
d'accouplement de cet individu.

54
00:04:08,086 --> 00:04:14,336
Ces 2 serait accoupler et maintenant je l'espère,
vous pouvez voir le gros problème ici.

55
00:04:14,966 --> 00:04:19,629
Ceci est potentiellement un gros problème
parce que ce qui se passe effectivement

56
00:04:19,833 --> 00:04:26,695
ici c'est que vous avez une personne
de la relation parent-génération actuelle

57
00:04:26,894 --> 00:04:31,031
accoupler avec une personne
de la prochaine génération, car

58
00:04:31,219 --> 00:04:34,157
on a remplacé le parent ici
avec la progéniture individuelle

59
00:04:34,349 --> 00:04:40,411
déjà. Voilà le vrai problème si vous
faites cela. C'est que les individus

60
00:04:40,602 --> 00:04:44,327
dans cette génération sera en mesure
de coopérer avec les individus

61
00:04:44,556 --> 00:04:47,556
dans la prochaine génération.
Bien sûr, cela ne peut pas être.

62
00:04:48,979 --> 00:04:55,566
La solution ici est de ne pas
remplacer immédiatement le parent

63
00:04:55,768 --> 00:04:59,818
quand vous passez par
chaque parent individu ici un par un

64
00:04:59,996 --> 00:05:05,096
mais vous avez réellement mis
la progéniture sur une grille temporaire.

65
00:05:06,212 --> 00:05:10,237
Vous pourriez avoir cette grille temporaire
qui est tout simplement une grille maintenant avec

66
00:05:10,435 --> 00:05:14,585
les mêmes dimensions; donc assumer celles-ci
seraient tout simplement les mêmes

67
00:05:14,764 --> 00:05:18,652
dimensions. D'accord, une grille avec
les mêmes dimensions. Ceci est ta

68
00:05:18,829 --> 00:05:23,092
grille temperaire ici. Ceci est l'endroit
où vous allez mettre la progéniture

69
00:05:23,259 --> 00:05:26,259
dans les emplacements correspondants
pour dire que ces 2 personnes

70
00:05:26,415 --> 00:05:32,528
accouple vous calculez ou vous générez
la progéniture et plutôt

71
00:05:32,719 --> 00:05:35,781
que de remplacer
le parent individu ici immédiatement,

72
00:05:35,960 --> 00:05:40,310
vous allez maintenant mettre cela sur
la grille temporaire sur la cellule correcte.

73
00:05:41,645 --> 00:05:46,383
Quand il est au tour de cet individu
et il choisit cette cellule pour accoupler

74
00:05:46,565 --> 00:05:51,603
puis il sera toujours accoupler
avec le parent avec l'individu du même

75
00:05:51,808 --> 00:05:54,808
génération  ici et non pas avec
un individu de prochaine

76
00:05:55,082 --> 00:05:58,082
génération.
Puis, quand vous avez fait tout cela,

77
00:05:58,257 --> 00:06:01,207
lorsque vous avez passé par chacun
des individus et vous avez

78
00:06:01,665 --> 00:06:04,728
créé tous les individus de
la progéniture alors vous aurez un

79
00:06:04,907 --> 00:06:08,982
Temp grille complète ici avec tous
les individus de la progéniture et

80
00:06:09,550 --> 00:06:12,388
alors vous pouvez continuer
et remplacer tous les individus

81
00:06:12,558 --> 00:06:16,220
sur la grille de sorte que la génération
des parents avec ceux que vous avez

82
00:06:16,691 --> 00:06:19,691
dans la grille de temp et vous faites cela
pour chaque génération.

83
00:06:20,581 --> 00:06:24,056
Comme cela, vous éviterez
cet piége potentiel où vous

84
00:06:24,470 --> 00:06:29,595
avez des individus de différentes
générations accouplent avec l'autre.

85
00:06:29,842 --> 00:06:32,679
D'accord donc avec cette connaissance
à la main nous allons mettre en œuvre la

86
00:06:32,859 --> 00:06:38,021
fonction exécuter_génération. Comme je l'ai dit,
nous avons besoin d'une grille temporaire

87
00:06:38,192 --> 00:06:41,305
et ceci est quelque chose que nous avons besoin
seulement dans cette fonction. Le reste de

88
00:06:41,482 --> 00:06:43,482
la simulation n'a pas besoin de connaître

89
00:06:43,658 --> 00:06:46,233
cela du tout, mais ici dans exécuter_génération
nous avons besoin de ceci.

90
00:06:46,408 --> 00:06:52,107
Je vais installer ici une grille de temperaire
qui est aussi un tableau à 2 dimensions.

91
00:06:52,769 --> 00:06:56,182
Je vais initialiser cela ici simplement
comme un tableau vide.

92
00:06:56,524 --> 00:07:01,736
Maintenant, je vais aller à travers chaque
cellule de la grille, donc j'aurais

93
00:07:01,983 --> 00:07:07,332
une grille de 2 dimensions, bien ma grille
est un tableau à 2 dimensions,

94
00:07:07,601 --> 00:07:17,201
donc j'ai besoin de cette double imbriquée
boucle pour,donc pour (var i = 0; et puis

95
00:07:17,417 --> 00:07:22,554
i est plus petite que la longeur_grille
parce que cela fest ixe et bien sûr

96
00:07:22,764 --> 00:07:31,338
i = i + 1) et je vais mettre
le prochain tout de suite ici.

97
00:07:31,541 --> 00:07:47,128
pour (var ii = 0; ii nouveau est plus
petite que la longeur_grille, et ii = ii + 1).

98
00:07:47,815 --> 00:07:54,152
Maintenant, nous avons un moyen d'itérer
sur notre tableau à 2 dimensions qui est la grille.

99
00:07:54,318 --> 00:07:59,580
Bien. Maintenant, que devons-nous faire?
Eh bien, tout d'abord que nous allons

100
00:07:59,765 --> 00:08:03,665
itérer sur notre tableau,
nous pouvons utiliser cette itération,

101
00:08:03,873 --> 00:08:07,860
cette boucle doublement imbriquée
comme nous l'avons fait en réalité ici

102
00:08:08,031 --> 00:08:12,419
où nous configuronsla grille en premier
lieu en utilisant cette ligne ici

103
00:08:12,595 --> 00:08:17,469
et nous pouvons faire exactement la même
chose Ici, après la première boucle,

104
00:08:17,650 --> 00:08:24,337
nous allons simplement
dire temp_grid [i] = []

105
00:08:24,949 --> 00:08:29,549
Maintenant, nous avons essentiellement configuré
la grille de temporairde la même manière exacte

106
00:08:29,726 --> 00:08:35,638
comme nous avons la configuration
de la grille ici dans la fonction init_grid;

107
00:08:35,815 --> 00:08:38,590
au moins initialisé.
Il n'a pas de valeurs, mais cela

108
00:08:38,777 --> 00:08:40,089
viendra maintenant.

109
00:08:40,800 --> 00:08:47,525
Maintenant, je suis ici et donc au résea
[i] [ii] J'ai mon individu actuel sur cette

110
00:08:47,702 --> 00:08:52,427
cellule actuelle que je suis sur. Maintenant,
la première chose que je voudrais faire c'est

111
00:08:52,613 --> 00:08:55,488
Je voudrais choisir un partenaire
d'accouplement pour cet individu.

112
00:08:55,767 --> 00:09:01,830
Je vais dire ici var mating_partner =

113
00:09:02,164 --> 00:09:06,264
Maintenant, comment vais-je choisir ce partenaire
d'accouplement? Eh bien, encore une fois,

114
00:09:06,438 --> 00:09:10,588
cela semble être quelque chose que
nous devrions probablement remettre

115
00:09:10,776 --> 00:09:14,126
à une fonction. Je vais appeler
la fonction; Je vais devoir

116
00:09:14,332 --> 00:09:17,269
définir cela, mais l'idée est que
j'ai cette fonction qui

117
00:09:17,440 --> 00:09:20,440
Je vais appeler pick_mating_partner

118
00:09:20,656 --> 00:09:23,656
et ce que je vais faire c'est,
je vais simplement la passer

119
00:09:24,025 --> 00:09:28,700
les coordonnées comme arguments;
les coordonne où je suis

120
00:09:28,908 --> 00:09:33,883
actuellement sur la grille à savoir
une position (i, ii) dans le tableau

121
00:09:35,077 --> 00:09:38,715
puis cette fonction doit alors prendre
en charge de tout le reste.

122
00:09:38,915 --> 00:09:42,078
Il faut choisir un partenaire d'accouplement
étant donné son emplacement, étant donné la

123
00:09:42,254 --> 00:09:46,304
distance l'accouplement et
ainsi de suite. J'externalise ceci

124
00:09:46,469 --> 00:09:49,106
à cette fonction que nous aurons
à mettre en œuvre plus tard

125
00:09:49,309 --> 00:09:52,321
puis il retournera
un partenaire d'accouplement.

126
00:09:52,592 --> 00:09:56,542
Maintenant que j'ai un partenaire
d'accouplement en principe, ce que je dois

127
00:09:56,729 --> 00:09:59,467
faire c'est, je dois maintenant
produire une descendance.

128
00:09:59,647 --> 00:10:02,835
Ceci est héritage mendélienne
donc je ne peux pas choisir

129
00:10:03,026 --> 00:10:06,689
une progéniture aléatoire.
La progéniture dépendra beaucoup

130
00:10:06,859 --> 00:10:11,684
des 2 génotypes que nous avons ici.
Ce que je vais faire est, je vais encore

131
00:10:11,868 --> 00:10:15,105
externaliser ce problème.
Je vais appeler une fonction

132
00:10:15,325 --> 00:10:20,000
"Obtenir la progéniture" donc get_offspring ();
puis ce que je vais faire c'est,

133
00:10:20,164 --> 00:10:26,089
Je vais essentiellement passer
ces 2 génotypes des parents

134
00:10:26,302 --> 00:10:30,552
comme arguments. Le premier est bien sûr
tout simplement ce que nous avons dans

135
00:10:30,735 --> 00:10:33,972
la grille [i] [ii]

136
00:10:34,139 --> 00:10:38,489
et le second est ce partenaire d'accouplement
que nous venons de sélectionner;

137
00:10:38,898 --> 00:10:45,373
mating_partner. Je vais remettre
ces 2 génotypes, je vais passer

138
00:10:45,584 --> 00:10:48,384
leur fonction.
Nous devrons mettre en œuvre cela et

139
00:10:48,576 --> 00:10:52,651
alors cette fonction retourne
un génotype de la progéniture.

140
00:10:52,898 --> 00:10:57,723
Maintenant, encore une fois, il serait erroné
de le faire comme ça; de dire ce que

141
00:10:57,883 --> 00:11:02,583
ceci retourne, je vais mettre
cela ici sur la grille [i] [ii].

142
00:11:02,778 --> 00:11:07,303
Je vais essentiellement remplacer
le parent tout de suite avec le

143
00:11:07,488 --> 00:11:10,538
get_offspring pour les raisons que
nous venons de citer. Cela ne doit pas

144
00:11:10,804 --> 00:11:13,804
être stockés dans le tableau
pour remplacer le parent

145
00:11:14,152 --> 00:11:18,327
tout de suite mais c'est exactement là où
la grille de temporaire entre en jeu.

146
00:11:18,517 --> 00:11:21,029
Je vais stocker ceci maintenant
dans cette grille temporaire,

147
00:11:21,229 --> 00:11:24,917
la position correspondante.
Voilà où vie la progéniture

148
00:11:25,341 --> 00:11:28,341
pour le moment
Puis, après cette boucle ici;

149
00:11:28,571 --> 00:11:33,459
cette double boucle a itéré, maintenant
la grille temporaire est pleine

150
00:11:33,662 --> 00:11:37,087
avec la progéniture nous pouvons maintenant continuer et juste

151
00:11:37,267 --> 00:11:41,517
remplacer la grille avec tout ce que
nous avons sur température grille.

152
00:11:42,204 --> 00:11:45,816
Je vais à nouveau la configuration d'une
double boucle, donc je vais juste copier ceci

153
00:11:45,978 --> 00:11:51,603
maintenant. Première itération ici,
puis des parenthèses de cours

154
00:11:51,896 --> 00:12:03,184
et un second; celui-là. Je vais
maintenant à nouveau aller sur la grille

155
00:12:03,377 --> 00:12:08,377
et je veux dire, vous savez quoi?
Je vais écrire maintenant les valeurs

156
00:12:08,560 --> 00:12:14,785
dans la grille [i] [ii] que
je lis de temp_grid [i] [ii].

157
00:12:15,297 --> 00:12:20,272
C'est une façon simple de copier
les valeurs d'un

158
00:12:20,470 --> 00:12:25,095
tableau à 2 dimensions dans
l'autre tableau à 2 dimensions

159
00:12:25,299 --> 00:12:29,674
la remplacer cellule par cellule. Je vais
simplement itérer à nouveau sur

160
00:12:29,854 --> 00:12:33,267
la grille et je vais dire d'accord,
tout ce que vous avez à temp_grid

161
00:12:33,443 --> 00:12:38,518
à ces positions, [i] et [ii],
s'il vous plaît mettez-les dans

162
00:12:38,701 --> 00:12:42,264
grille [i] et [ii] et donc ici

163
00:12:42,434 --> 00:12:46,822
exactement cette ligne de code
remplaçant la génération des parents.

164
00:12:48,026 --> 00:12:51,001
C'est à peu près ça. Puis, quand
j'ai fini, je veux également assurer

165
00:12:51,166 --> 00:12:53,991
que je garder une trace des générations
afin de, vous le savez, nous avons ceci

166
00:12:54,171 --> 00:12:58,846
compteur de variables de génération.
Nous allons jusqu'à présent 1.

167
00:12:59,028 --> 00:13:09,865
compteur de génération=
compteur de génération + 1

168
00:13:10,139 --> 00:13:13,251
Maintenant, nous enregistrons cela, mais
nous ne pouvons pas le tester encore car

169
00:13:13,770 --> 00:13:16,770
ce code ne sera pas exécuté;
le navigateur rechignerait sur nous,

170
00:13:17,923 --> 00:13:21,211
justement parce que
nous appelons ici une fonction

171
00:13:21,743 --> 00:13:24,393
pick_mating_partner
que nous avons pas encore défini.

172
00:13:24,563 --> 00:13:27,638
Nous avons également appelé la fonction ici,
get_offspring que nous avons pas

173
00:13:27,810 --> 00:13:31,547
encore défini.
Nous allons le faire dans l'avenir.

174
00:13:31,830 --> 00:13:34,892
D'accord, la fonction exécuter_génération
est mis en œuvre, mais bien sûr

175
00:13:35,063 --> 00:13:37,526
nous venons d'externaliser
la plupart des problèmes à ces

176
00:13:37,681 --> 00:13:40,719
2 autres fonctions. Maintenant,
nous devons le mettre en oeuvre.

177
00:13:40,906 --> 00:13:42,769
Nous le ferons dans les prochaines leçon.

