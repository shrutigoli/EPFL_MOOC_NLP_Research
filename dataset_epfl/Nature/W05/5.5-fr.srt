1
00:00:02,954 --> 00:00:04,409
Bienvenue, la Nature, dans le code.

2
00:00:04,597 --> 00:00:06,784
Nous sommes dans le chapitre 5, leçon 5.

3
00:00:06,984 --> 00:00:08,586
Nous venons de terminer la mise en œuvre

4
00:00:08,797 --> 00:00:10,697
de choisir les partenaires d'accouplements.

5
00:00:10,897 --> 00:00:12,909
Maintenant, ce que nous devons faire
c'est de mettre en œuvre

6
00:00:13,109 --> 00:00:14,772
La production de progénitures

7
00:00:14,972 --> 00:00:16,915
et nous ferons cela, bien sûr,
la façon dont il fonctionne

8
00:00:17,103 --> 00:00:19,753
dans la nature,
qui est par l'héritage Mendélienne.

9
00:00:19,953 --> 00:00:22,253
Bon, nous sommes ici, dans notre code.

10
00:00:22,578 --> 00:00:25,478
Ce fut la fonction de choisir le partenaire
d'accouplementle que nous avons examiné

11
00:00:25,653 --> 00:00:26,578
dans la dernière leçon.

12
00:00:26,778 --> 00:00:27,932
Nous l'avons mis ici.

13
00:00:28,132 --> 00:00:31,682
Et maintenant, la fonction restant
qui n'est pas mis en œuvre

14
00:00:31,882 --> 00:00:33,863
est cette fonction de get_offspring.

15
00:00:34,063 --> 00:00:37,820
Donc, cette fonction de
get_offspring prend deux individus

16
00:00:38,020 --> 00:00:40,635
à savoir, l'individu focal,
l'individu actuel,

17
00:00:40,822 --> 00:00:42,723
qui vit sur la grille (i, ii),

18
00:00:42,923 --> 00:00:44,566
et le partenaire d'accouplement,

19
00:00:44,766 --> 00:00:46,553
que nous venons de sélectionner.

20
00:00:46,753 --> 00:00:49,398
Et d'ailleurs, la façon dont elle
est mise en œuvre au moment

21
00:00:49,598 --> 00:00:54,035
c'est que cela peut en effet être
le même individu,

22
00:00:54,235 --> 00:00:55,735
ce serait appelé autofécondation.

23
00:00:55,910 --> 00:00:57,928
Ce n'est pas rare en réalité
dans la nature

24
00:00:58,515 --> 00:01:00,965
Il devrait être relativement
facile pour vous

25
00:01:01,165 --> 00:01:04,165
à modifier ce paramètre dans la fonction
de pick_mating_partner

26
00:01:04,365 --> 00:01:06,943
Si vous voulez éviter le i, ii

27
00:01:07,143 --> 00:01:09,818
est relativement identique à j, jj.

28
00:01:10,018 --> 00:01:12,618
Mais on ne va pas le faire,
car en termes de biologie

29
00:01:12,818 --> 00:01:15,143
pas beaucoup changerait de toute façon.

30
00:01:15,343 --> 00:01:18,855
Mais nous avons besoin de mettre en œuvre
cette fonction de get_offspring

31
00:01:19,055 --> 00:01:21,350
maintenant de sorte que lorsque
nous transmettons

32
00:01:21,550 --> 00:01:23,000
aux génotypes des parents,

33
00:01:23,200 --> 00:01:27,012
nous obtenons un génotype
de la progéniture appropriée

34
00:01:27,212 --> 00:01:29,350
que nous mettons alors ici
sur le temp_grid.

35
00:01:29,712 --> 00:01:30,950
Alors, comment faisons-nous cela?

36
00:01:31,150 --> 00:01:34,250
Eh bien, la réponse
est l'Héritage Mendélienne.

37
00:01:34,425 --> 00:01:36,340
Donc, pour comprendre
l'Héritage Mendélienne,

38
00:01:36,540 --> 00:01:40,865
nous devons revenir en arrière
de 150 ans à peu près en Autriche

39
00:01:41,128 --> 00:01:43,053
et à un moine du nom de Mendel.

40
00:01:43,253 --> 00:01:45,940
qui a découvert les lois de l'Héritage Génétique.

41
00:01:46,153 --> 00:01:48,090
Et la première loi de Mendel affirme que

42
00:01:48,540 --> 00:01:52,028
les allèles se séparent lors
de la déformation de gamètes

43
00:01:52,228 --> 00:01:56,753
et chaque parent transmet un allèle
à la descendance individuelle.

44
00:01:56,953 --> 00:01:58,913
et cela, bien sûr, n'a rien
de nouveau pour nous.

45
00:01:59,113 --> 00:02:00,675
Nous avons supposé cela tout le long

46
00:02:00,850 --> 00:02:03,650
mais nous sommes en train
de le faire plus explicite

47
00:02:03,850 --> 00:02:07,463
dans cette conférence parce que
nous devons mettre en œuvre

48
00:02:07,663 --> 00:02:10,789
ceci explicitement dans
un mode basé sur l'individu.

49
00:02:11,602 --> 00:02:14,495
D'accord,
il y a essentiellement six combinaisons

50
00:02:14,708 --> 00:02:16,616
six combinaisons distinctes.

51
00:02:16,829 --> 00:02:19,329
Et vous pourriez échanger
parent 1 et parent 2, si vous vouliez

52
00:02:19,529 --> 00:02:20,957
ça ne fait aucune différence.

53
00:02:21,157 --> 00:02:23,115
Mais les six combinaisons
sont les suivantes.

54
00:02:23,615 --> 00:02:27,155
Soit les deux sont
des homo-zygotes du même type.

55
00:02:27,442 --> 00:02:29,655
Ainsi, par exemple, A1A1 un parent,

56
00:02:29,855 --> 00:02:31,542
et A1A1 l'autre parent,

57
00:02:31,742 --> 00:02:36,442
ou, A2A2 un parent et A2A2 l'autre parent.

58
00:02:37,630 --> 00:02:41,830
Ou bien, l'un d'eux est un homo-zygote

59
00:02:42,030 --> 00:02:44,642
mais l'autre est un hétéro-zygote.

60
00:02:44,842 --> 00:02:46,017
Donc, nous avons ici, par exemple

61
00:02:46,217 --> 00:02:48,407
A1A1 et hétéro-zygote

62
00:02:48,607 --> 00:02:51,294
ou A2A2, et l'hétéro-zygote.

63
00:02:52,294 --> 00:02:55,906
Ils pourraient être à la fois homo-zygotes
mais de types différents.

64
00:02:56,106 --> 00:02:58,833
Ainsi, on est A1A1 et A2A2 l'autre.

65
00:02:59,220 --> 00:03:02,570
Ou enfin, ils pourraient tous deux
être hétéro-zygotes.

66
00:03:02,795 --> 00:03:04,634
Donc, les deux sont A1A2.

67
00:03:04,834 --> 00:03:09,446
Et maintenant, chacun d'entre eux
créera les gamètes correspondants

68
00:03:09,646 --> 00:03:12,048
et ensuite passer l'un des allèles

69
00:03:12,248 --> 00:03:13,648
dans la descendance.

70
00:03:13,848 --> 00:03:16,348
Ainsi, nous obtenons
ces différentes combinaisons.

71
00:03:16,548 --> 00:03:19,948
Donc, si chacun d'entre eux,
si les deux parents sont A1A1

72
00:03:20,148 --> 00:03:23,335
alors évidemment tous
les gamètes vont être A1A1.

73
00:03:23,560 --> 00:03:26,048
Et puis, il y a une probabilité de 100%

74
00:03:26,373 --> 00:03:30,832
que la progéniture sera A1A1 aussi.

75
00:03:31,144 --> 00:03:32,419
Le même, bien sûr, est vrai

76
00:03:32,619 --> 00:03:34,069
si elles sont à la fois A2A2.

77
00:03:34,707 --> 00:03:39,825
Tous les descendants vont être A2A2, 100%.

78
00:03:40,025 --> 00:03:41,861
Maintenant, les choses deviennent
un peu plus intéressant

79
00:03:42,061 --> 00:03:45,899
si nous ne disposons pas exactement
le même génotype zygote.

80
00:03:46,161 --> 00:03:48,849
Par exemple, nous allons regarder
les deux à la fois

81
00:03:49,049 --> 00:03:51,111
ayant un génotype homo-zygote

82
00:03:51,311 --> 00:03:52,463
mais l'autre.

83
00:03:52,663 --> 00:03:55,663
Ainsi, dans ce cas, l'un des parents

84
00:03:55,863 --> 00:03:57,851
ne fera que contribuer avec les allèles A1

85
00:03:58,051 --> 00:04:00,517
et l'autre contribueront
seulement les allèles A2.

86
00:04:01,192 --> 00:04:04,554
Donc, encore une fois, nous obtenons
effectivement un résultat de 100%.

87
00:04:04,767 --> 00:04:08,292
La progéniture, ils ont tous
les mêmes génotypes

88
00:04:08,554 --> 00:04:11,192
mais maintenant
il est d'autant hétéro-zygote.

89
00:04:11,392 --> 00:04:14,042
Maintenant, si, si l'un d'eux
est un homo-zygotes,

90
00:04:14,242 --> 00:04:15,459
par exemple A2A2

91
00:04:15,659 --> 00:04:16,575
ou A1A1,

92
00:04:16,775 --> 00:04:19,190
et l'autre est un hétéro-zygote.

93
00:04:19,390 --> 00:04:22,390
Eh bien, l'un des parents,
celui qui est homo-zygote

94
00:04:22,590 --> 00:04:24,484
ne contribue l'un des allèles.

95
00:04:24,684 --> 00:04:27,182
Mais l'autre contribue à la fois.

96
00:04:27,382 --> 00:04:30,517
Donc, cela signifie que dans 50% des cas,

97
00:04:31,730 --> 00:04:34,117
vous obtenez un homo-zygote correspondant.

98
00:04:34,317 --> 00:04:36,092
Ici, dans ce cas, il serait A1A1,

99
00:04:36,805 --> 00:04:38,339
Et dans 50% des cas,

100
00:04:38,539 --> 00:04:40,757
vous obtenez l'hétéro-zygote.

101
00:04:40,957 --> 00:04:44,895
Donc, ici, c'est essentiellement
l'hétéro-zygote individuelle

102
00:04:45,095 --> 00:04:47,528
qui détermine ce que sera le résultat.

103
00:04:48,241 --> 00:04:49,634
Même situation ici.

104
00:04:49,834 --> 00:04:53,612
Nous avons un seul individu contribuant
les allèles A2

105
00:04:53,812 --> 00:04:58,174
et l'autre contribuant A2
et les allèles A1.

106
00:04:58,374 --> 00:05:00,372
Donc, cela dépend vraiment de celui-ci.

107
00:05:00,572 --> 00:05:02,797
Ainsi encore, 50% des cas,

108
00:05:02,997 --> 00:05:04,879
nous obtenons l'homo-zygote.

109
00:05:05,079 --> 00:05:07,345
Mais, dans 50% des cas, nous obtenons

110
00:05:07,557 --> 00:05:11,157
hétéro-zygote correspondant A1A2.

111
00:05:11,982 --> 00:05:13,903
Peut-être, le cas le plus intéressant

112
00:05:14,103 --> 00:05:17,078
est si les deux sont des hétéro-zygotes

113
00:05:17,303 --> 00:05:19,803
car alors les deux vont contribuer

114
00:05:20,003 --> 00:05:21,290
les deux types d'allèles

115
00:05:21,490 --> 00:05:23,290
A1A2 à la descendance.

116
00:05:23,490 --> 00:05:24,622
Et comme vous pouvez le voir ici,

117
00:05:24,822 --> 00:05:27,326
dans 25% des cas,

118
00:05:27,526 --> 00:05:30,623
que si les deux arriver à contribuer
les allèles A1,

119
00:05:30,811 --> 00:05:33,598
ce qui se produit dans 50%
des parents 1 et 50% du parent 2.

120
00:05:33,798 --> 00:05:38,634
Alors combinée de 25%,
nous obtenons la A1A1 homozygote.

121
00:05:38,922 --> 00:05:41,464
Même logique pour A2A2.

122
00:05:41,664 --> 00:05:44,408
25% de chance que cela arrive.

123
00:05:44,608 --> 00:05:45,809
Et le reste,

124
00:05:46,434 --> 00:05:49,509
obtient un type d'allèle d'un parent

125
00:05:49,709 --> 00:05:52,594
mais l'autre type d'allèle
de l'autre parent

126
00:05:52,794 --> 00:05:57,006
mais c'est de 50% de probabilité
que nous obtenons l'hétéro-zygote.

127
00:05:57,369 --> 00:06:01,391
Donc, ce sont les résultats possibles,
les probabilités,

128
00:06:01,591 --> 00:06:05,328
compte tenu de ces six
combinaisons possibles.

129
00:06:05,541 --> 00:06:06,440
et ce que nous devons faire

130
00:06:06,640 --> 00:06:08,944
c'est que nous devons mettre en œuvre
ces probabilités

131
00:06:09,144 --> 00:06:11,786
et compte tenu
de deux génotypes de parents,

132
00:06:11,986 --> 00:06:15,048
retourner le bon, mais encore,

133
00:06:15,273 --> 00:06:19,999
potentiellement choisis au hasard le génotype
comme une progéniture en JavaScript.

134
00:06:20,187 --> 00:06:22,572
Bon, maintenant que nous avons
cette connaissance de base

135
00:06:22,772 --> 00:06:25,172
nous pouvons mettre en œuvre
cette fonction ici, get_offspring.

136
00:06:25,360 --> 00:06:27,597
Donc, nous allons faire cela ici.

137
00:06:27,822 --> 00:06:30,919
Ant cela a besoin d'un peu d'espace,
donc je vais juste venir ici

138
00:06:31,119 --> 00:06:32,748
et je vais vous dire,

139
00:06:32,948 --> 00:06:37,648
une fonction get_offspring.

140
00:06:40,723 --> 00:06:47,223
Et cette fonction a deux paramètres,

141
00:06:49,298 --> 00:06:52,671
à savoir Parent 1 et Parent 2.

142
00:06:52,871 --> 00:06:56,011
Et, je vais faire un peu de la saisie ici

143
00:06:56,211 --> 00:06:58,186
donc je vais en faire
un peu plus simple ici

144
00:06:58,386 --> 00:07:01,386
et je vais dire P1 et P2.

145
00:07:01,586 --> 00:07:04,586
Donc, ceci représente les deux parents.

146
00:07:04,786 --> 00:07:07,786
Je dois dire Parent 1

147
00:07:08,599 --> 00:07:12,161
Nous avons dit au début, nous devrions
toujours saisir les choses,

148
00:07:12,361 --> 00:07:15,811
appeler les choses comme
elles sont faciles à comprendre.

149
00:07:16,011 --> 00:07:19,974
Donc, je pense Parent 1 et Parent 2
sont très bien.

150
00:07:20,174 --> 00:07:22,436
Mais, néanmoins, en fait ce que
je vais faire

151
00:07:22,636 --> 00:07:25,136
est que je vais mettre en place
ces variables locales ici

152
00:07:25,336 --> 00:07:29,411
P1, que je mettrai au parent 1

153
00:07:29,611 --> 00:07:33,649
et P2 fixé au parent 2.

154
00:07:35,424 --> 00:07:40,049
Donc, ces deux lignes maintenant
que je viens de mettre

155
00:07:40,249 --> 00:07:42,211
de sorte que je saisirai moins peu.

156
00:07:42,886 --> 00:07:45,161
ce qui est important,
parce que vous ne voulez pas dépenser

157
00:07:45,361 --> 00:07:47,980
trop de temps devant votre ordinateur

158
00:07:48,180 --> 00:07:49,377
me regardant saisir.

159
00:07:49,577 --> 00:07:52,266
Mais sinon, je ne ferais pas cela.

160
00:07:53,054 --> 00:07:56,678
Appelez les variables la façon dont
ils sont censés être appelé.

161
00:07:57,115 --> 00:07:58,140
Bien entendu

162
00:07:58,340 --> 00:08:00,127
Nous avons six combinaisons

163
00:08:00,327 --> 00:08:01,981
Donc, fondamentalement,
nous devons juste aller

164
00:08:02,181 --> 00:08:03,750
à travers les six combinaisons

165
00:08:03,950 --> 00:08:05,447
et nous devons nous demander

166
00:08:05,734 --> 00:08:07,909
Parent donné 1 et Parent 2,

167
00:08:08,422 --> 00:08:11,072
laquelle des six combinaisons sommes-nous.

168
00:08:11,272 --> 00:08:14,509
Et puis, lancez un dé,
si c'est nécessaire,

169
00:08:14,709 --> 00:08:18,422
et choisir le génotype approprié.

170
00:08:18,622 --> 00:08:20,534
Alors continuons et faisons cela.

171
00:08:20,734 --> 00:08:23,600
Donc, la première chose
que je vais tester ici

172
00:08:23,775 --> 00:08:25,491
par exemple, le premier cas
je vais tester ici

173
00:08:25,679 --> 00:08:29,916
est, si les deux parents sont A1A1.

174
00:08:30,116 --> 00:08:32,629
Donc, ce que nous écrivons ici
sera tout simplement

175
00:08:32,829 --> 00:08:37,841
si P1 est égale, et encore,
ici, nous faisons le test d'égalité,

176
00:08:38,029 --> 00:08:39,641
de sorte que le double signe égal.

177
00:08:39,841 --> 00:08:43,679
"A1A1"

178
00:08:45,716 --> 00:08:52,716
et P2, alors que
l'autre parent est également "A1A1".

179
00:08:54,729 --> 00:08:58,041
Faites attention ici que vous ne saisissez
pas de fautes de frappe ici.

180
00:08:58,616 --> 00:09:01,241
Ok, donc si tel est le cas,

181
00:09:02,179 --> 00:09:07,416
Nous connaissons aucun dessin de numéro
est nécessaire

182
00:09:07,616 --> 00:09:09,256
pas de lance de dés,

183
00:09:09,456 --> 00:09:13,431
parce que nous savons que la progéniture
va être "A1A1".

184
00:09:13,631 --> 00:09:16,543
Ainsi, nous pouvons essentiellement
mettre fin à la fonction ici et simplement

185
00:09:16,743 --> 00:09:20,693
par exemple, ramener "A1A1".

186
00:09:22,468 --> 00:09:27,168
Donc, si tel est le cas, nous ne pouvons
tout simplement écrire, ramener "A1A1"

187
00:09:27,368 --> 00:09:30,131
Qu'est-ce que ça veut dire?
Cela signifie, nous retournant A1A1

188
00:09:30,331 --> 00:09:32,506
et aussi, la fonction sera terminée

189
00:09:32,706 --> 00:09:38,143
et tous ces autres tests ci-dessous
ne seraient pas à exécuter

190
00:09:38,343 --> 00:09:39,381
ne serait pas nécessaire de tester

191
00:09:39,581 --> 00:09:42,206
parce que nous avons déjà trouvé
notre combinaison

192
00:09:42,406 --> 00:09:44,084
Et nous allons maintenant
faire essentiellement ceci

193
00:09:44,284 --> 00:09:45,084
six fois.

194
00:09:45,284 --> 00:09:46,959
Donc, ceci est le premier cas.

195
00:09:47,459 --> 00:09:50,231
Alors, laissez-nous regarder
un cas plus compliqué.

196
00:09:50,431 --> 00:09:51,256
Le suivant.

197
00:09:51,669 --> 00:09:54,606
Je vais supposer
que l'un des parents est A1A1

198
00:09:54,806 --> 00:09:57,306
et l'autre est l'hétéro-zygote A1A2.

199
00:09:57,506 --> 00:09:59,057
D'accord, je vais dire,

200
00:09:59,257 --> 00:10:08,269
si, {} cette condition est vraie,

201
00:10:08,507 --> 00:10:09,694
Je vais faire quelque chose.

202
00:10:09,894 --> 00:10:11,394
Je mets en place ceci déjà.

203
00:10:11,594 --> 00:10:13,273
Bon, alors, quelle est la condition?

204
00:10:13,473 --> 00:10:17,823
L'un d'eux doit être A1A1
et l'autre doit être A1A2.

205
00:10:18,023 --> 00:10:21,998
Maintenant, bien sûr,
je ne me soucie pas lequel est A1A1

206
00:10:22,198 --> 00:10:23,810
et je ne me soucie pas lequel est A1A2,

207
00:10:24,010 --> 00:10:26,110
mais je dois tester les deux cas.

208
00:10:26,310 --> 00:10:29,310
Il pourrait être que P1 est A1A1

209
00:10:29,510 --> 00:10:30,523
donc Parent 1.

210
00:10:31,098 --> 00:10:34,710
Et P2 est A1A2, ou il pourrait être
dans l'autre sens.

211
00:10:34,923 --> 00:10:38,410
Je dois donc vous assurer
que je prends ces deux cas.

212
00:10:38,610 --> 00:10:40,033
Donc, ici, maintenant nous allons combiner

213
00:10:40,233 --> 00:10:43,233
l'opérateur "et" avec le "ou" opérateur.

214
00:10:43,783 --> 00:10:52,395
Parce que le premier sera P1 égale à A1A1,

215
00:10:53,220 --> 00:11:02,983
Et P2 égalant A1A2.

216
00:11:03,895 --> 00:11:05,958
Maintenant, si je pourrais
tester pour cela,

217
00:11:06,158 --> 00:11:10,083
Je manquerais le cas où P2 est en fait A1A1

218
00:11:10,358 --> 00:11:13,283
et P1 est A1A2.

219
00:11:13,483 --> 00:11:16,620
Et ce sont les mêmes cas précis,
mais je ne pourrais pas le capturer ici.

220
00:11:16,820 --> 00:11:19,583
Donc, ce que je dois faire
c'est que je dois avoir

221
00:11:19,783 --> 00:11:20,845
une deuxième énoncé ici.

222
00:11:21,045 --> 00:11:23,545
Donc, je vais mettre cela ici
entre parenthèses,

223
00:11:25,745 --> 00:11:28,595
et puis je vais copier ceci ici,

224
00:11:29,645 --> 00:11:30,870
Et je vais dire

225
00:11:32,108 --> 00:11:32,520
Ou

226
00:11:32,720 --> 00:11:34,707
Alors maintenant, nous utilisons
le symbole double tuyau ici

227
00:11:35,357 --> 00:11:37,309
Et je colle ceci tout simplement

228
00:11:37,646 --> 00:11:40,909
mais j'échange maintenant P1 P2.

229
00:11:41,959 --> 00:11:43,684
Donc, je l'espère, vous pouvez
voir comment cela fonctionne.

230
00:11:43,884 --> 00:11:47,621
Si c'est ce cas, ou ce cas,

231
00:11:48,234 --> 00:11:52,009
le seul être que j'ai échangé P1 avec P2

232
00:11:52,209 --> 00:11:54,871
Je n'ai pas besoin de le faire ici
évidemment, parce que

233
00:11:55,071 --> 00:11:56,471
ils sont identiques.

234
00:11:57,084 --> 00:11:57,946
Mais ici, ils ne le sont pas.

235
00:11:58,146 --> 00:12:01,384
Je dois donc tester ces deux scénarios.

236
00:12:02,496 --> 00:12:04,346
Alors, que devons-nous faire

237
00:12:04,546 --> 00:12:07,085
Nous avons vu sur la diapositive
précédente et dans ce cas

238
00:12:07,285 --> 00:12:10,035
la moitié du temps,
la progéniture va être A1A1

239
00:12:10,235 --> 00:12:12,818
et la moitié du temps, il va être A1A2.

240
00:12:13,056 --> 00:12:14,919
Donc ce que je vais simplement dire ici

241
00:12:15,157 --> 00:12:20,381
si Math_random, inférieure à 0,5

242
00:12:20,581 --> 00:12:22,250
Ceci est notre pièce juste.

243
00:12:22,450 --> 00:12:26,987
Je ramènerai "A1A1"

244
00:12:28,037 --> 00:12:30,187
sinon,

245
00:12:30,387 --> 00:12:37,312
Je ramènerai "A1A2"

246
00:12:39,125 --> 00:12:41,887
D'accord, ceci est notre second cas.

247
00:12:42,087 --> 00:12:43,625
Ce fut probablement plus compliqué

248
00:12:43,825 --> 00:12:46,075
mais encore une fois,
il utilise la construction

249
00:12:46,287 --> 00:12:48,187
et des idées que vous êtes
tous familiers avec.

250
00:12:48,387 --> 00:12:51,387
Nous combinons simplement maintenant
ceux-ci dans une seule fonction.

251
00:12:51,587 --> 00:12:53,800
Donc, cela va être une fonction
assez complexe

252
00:12:54,000 --> 00:12:56,650
mais, c'est l'Héritage Mendélienne.

253
00:12:56,850 --> 00:12:58,575
C'est tout à fait quelque chose.

254
00:12:58,775 --> 00:12:59,937
Bon, troisième cas.

255
00:13:00,137 --> 00:13:01,262
Ce que nous allons supposer?

256
00:13:01,475 --> 00:13:06,262
Nous allons supposer que
l'un d'eux est A1A1

257
00:13:06,512 --> 00:13:08,725
et l'autre est maintenant A2A2.

258
00:13:08,925 --> 00:13:11,925
Donc, fondamentalement,
nous avons la même situation qu'ici.

259
00:13:12,125 --> 00:13:13,602
Donc, nous pouvons copier cela.

260
00:13:13,802 --> 00:13:15,252
Nous allons copier cela.

261
00:13:16,827 --> 00:13:19,302
Bien sûr, assurez-vous que
c'est près de parenthesizes ici.

262
00:13:19,502 --> 00:13:22,202
Alors maintenant, nous voulons faire
en sorte que l'un d'eux est A1A1

263
00:13:22,402 --> 00:13:24,539
et l'autre est A2A2.

264
00:13:24,739 --> 00:13:27,964
Assurez-vous donc de changer ceci ici
à A2A2.

265
00:13:28,164 --> 00:13:29,939
Et encore, parce qu'ils ne sont pas
les mêmes,

266
00:13:30,139 --> 00:13:33,139
nous avons besoin de tester
pour la situation (inaudible)

267
00:13:33,339 --> 00:13:36,508
où P2 sera A1A1

268
00:13:36,708 --> 00:13:38,429
Et P1 sera A2A2.

269
00:13:38,629 --> 00:13:41,417
Donc, encore une fois, passer ici à 2.

270
00:13:42,192 --> 00:13:44,096
Bon, si tel est le cas,

271
00:13:44,571 --> 00:13:46,037
puis, ce qui va se passer?

272
00:13:46,237 --> 00:13:48,958
Nous l'avons vu précédemment,
ce résultat est très simple

273
00:13:49,189 --> 00:13:51,414
parce que l'un des parents
va contribuer A1

274
00:13:51,602 --> 00:13:53,402
l'autre va contribuer A2.

275
00:13:53,602 --> 00:13:56,602
C'est donc un A1A2 garanti.

276
00:13:57,152 --> 00:14:00,452
Donc, ramènant "A1A2".

277
00:14:02,251 --> 00:14:03,439
Bien entendu,

278
00:14:03,639 --> 00:14:05,552
nous avons déjà mis en place
la moitié de celui-ci.

279
00:14:05,752 --> 00:14:07,530
Bravo,

280
00:14:07,755 --> 00:14:10,142
Jetons un coup d'oeil à l'exemple suivant.

281
00:14:10,342 --> 00:14:14,493
Allons-y pour A1A2 et A1A2.

282
00:14:14,693 --> 00:14:17,124
Donc, les deux sont A1A2.

283
00:14:17,324 --> 00:14:19,887
Donc, cela est le cas le plus compliqué.

284
00:14:20,087 --> 00:14:21,745
Alors, comment faisons-nous cela?

285
00:14:21,945 --> 00:14:24,645
Eh bien, encore une fois, d'autre si,

286
00:14:26,095 --> 00:14:27,883
Maintenant, ce que je vais dire ici

287
00:14:28,083 --> 00:14:33,133
est, si P1 est égal à A1A2,

288
00:14:35,120 --> 00:14:41,095
et P2 est égale A1A2.

289
00:14:41,295 --> 00:14:43,108
Maintenant encore, le même génotype.

290
00:14:43,295 --> 00:14:45,958
Donc, je ne dois pas tester
la situation (inaudible).

291
00:14:46,158 --> 00:14:47,661
parce qu'elle est exactement identique.

292
00:14:47,936 --> 00:14:50,549
Mais le résultat ici
est un peu plus compliqué

293
00:14:50,749 --> 00:14:53,103
parce qu'ici nous avons
trois résultats possibles.

294
00:14:53,678 --> 00:14:55,903
A partir de ces deux génotypes,

295
00:14:56,103 --> 00:14:59,603
nous pouvons générer
les trois génotypes possibles.

296
00:14:59,803 --> 00:15:03,691
Donc, ceci est le résultat
le plus diversifié ici.

297
00:15:03,891 --> 00:15:05,906
25% On a l'A1A1,

298
00:15:06,106 --> 00:15:08,201
25% nous obtenons le A1A2

299
00:15:08,401 --> 00:15:12,789
et enfin, 50% du temps nous obtenons
l'hétéro-zygote.

300
00:15:12,989 --> 00:15:15,449
Mais encore une fois, nous savons déjà
comment faire cela

301
00:15:15,649 --> 00:15:17,774
en utilisant l'ensemble des lignes
de nombres

302
00:15:18,924 --> 00:15:21,524
un principe que nous avons utilisé
précédemment

303
00:15:21,724 --> 00:15:23,249
lorsque nous avons créé la grille.

304
00:15:23,449 --> 00:15:24,735
Donc, nous pouvons dire simplement,

305
00:15:24,935 --> 00:15:27,935
Tout d'abord, nous allons dessiner
un nombre aléatoire.

306
00:15:28,498 --> 00:15:30,248
Nous allons le faire ici

307
00:15:30,986 --> 00:15:33,149
et je vais vous dire Math_random

308
00:15:33,349 --> 00:15:36,561
Je vais effectivement vous dire dans
un instant pourquoi je le fais comme ça.

309
00:15:37,161 --> 00:15:38,899
D'accord, nous allons dessiner
un nombre aléatoire

310
00:15:39,099 --> 00:15:40,482
et maintenant nous allons tester ici

311
00:15:40,682 --> 00:15:48,703
si le nombre aléatoire
est inférieur à 0,25,

312
00:15:52,003 --> 00:15:54,965
alors nous allons ramèner le A1A1.

313
00:15:56,053 --> 00:16:00,803
Ainsi, dans 25% des cas,
nous allons retourner A1A1.

314
00:16:02,540 --> 00:16:03,953
Sinon, si,

315
00:16:06,353 --> 00:16:10,915
ce nombre aléatoire se trouve être

316
00:16:11,990 --> 00:16:16,653
plus grand que 0,75,

317
00:16:17,090 --> 00:16:20,968
Donc, ceci est 1 moins 0,25.

318
00:16:21,168 --> 00:16:25,455
Et ce serait aussi se produire
dans 25% des cas.

319
00:16:25,655 --> 00:16:31,180
Donc dans ce cas, nous allons retourner
l'autre A2A2 homo-zygote.

320
00:16:31,655 --> 00:16:33,118
Et enfin d'autre,

321
00:16:34,043 --> 00:16:35,468
donc aucun de ceux-la se sont passé

322
00:16:35,668 --> 00:16:37,205
dans les 50% restants.

323
00:16:37,430 --> 00:16:43,318
Donc, le reste est tout simplement
va ramèner "A1A2".

324
00:16:43,693 --> 00:16:45,093
Ainsi, quelques observations.

325
00:16:45,280 --> 00:16:45,930
Tout d'abord,

326
00:16:46,130 --> 00:16:49,130
nous avons ceux-ci si, d'autre si ici
est imbriqué

327
00:16:49,330 --> 00:16:50,812
dans une autre si.

328
00:16:51,125 --> 00:16:52,687
Alors, cela est, je pense la première

329
00:16:52,887 --> 00:16:54,375
ou quelque chose qui a été rare.

330
00:16:54,700 --> 00:16:57,575
Mais vous verrez, vous pouvez
le faire comme les boucles "pour".

331
00:16:57,775 --> 00:17:00,088
Vous pouvez imbriquer ces déclarations

332
00:17:00,288 --> 00:17:03,288
au tant que compliqué que
vous voulez le faire.

333
00:17:03,488 --> 00:17:06,488
Et encore, ceci est la raison pour laquelle
l'indentation est si important

334
00:17:06,688 --> 00:17:08,901
parce que vous pouvez très facilement voir

335
00:17:09,101 --> 00:17:13,651
quelles accolades appartiennent
à quelle énoncé.

336
00:17:13,851 --> 00:17:16,449
Et l'autre chose que vous vous demandè

337
00:17:16,649 --> 00:17:18,324
c'est, pourquoi ne dis-je

338
00:17:18,524 --> 00:17:22,953
si Math_random est égal ou inférieur à 0,25

339
00:17:23,153 --> 00:17:24,263
et la même chose ici.

340
00:17:24,463 --> 00:17:26,456
Bon, c'est comme nous l'avons fait ici.

341
00:17:26,656 --> 00:17:29,169
C'est parce que nous testons
plusieurs fois.

342
00:17:29,569 --> 00:17:31,554
Nous testons concrètement deux fois,
à savoir,

343
00:17:31,754 --> 00:17:33,324
ici, ceci est un test.

344
00:17:33,524 --> 00:17:34,517
Et ceci est un test.

345
00:17:35,029 --> 00:17:37,954
Et nous devons nous assurer que
nous testons avec le même numéro.

346
00:17:38,154 --> 00:17:41,154
Parce que si nous voulons simplement
mettre Math_random ici et ici,

347
00:17:41,354 --> 00:17:44,079
ceux-ci seraient en fait deux nombres
aléatoires différents

348
00:17:44,304 --> 00:17:45,443
ce serait une erreur.

349
00:17:45,680 --> 00:17:47,740
Nous devons tester avec le même numéro.

350
00:17:48,003 --> 00:17:49,717
Là-haut, c'est pas un problème

351
00:17:49,917 --> 00:17:52,054
parce que nous avons seulement un seul test

352
00:17:52,254 --> 00:17:53,105
et le reste.

353
00:17:53,305 --> 00:17:57,261
Donc, c'est bien si nous ne stockons pas cela
dans une variable intermédiaire.

354
00:17:57,461 --> 00:17:59,245
Mais ici, il le ferait.

355
00:17:59,583 --> 00:18:03,845
Ce fut le premier cas,
et certainement le plus compliqué.

356
00:18:05,295 --> 00:18:07,635
Le second dernier cas serait que

357
00:18:07,835 --> 00:18:11,735
l'un d'eux est A2A2,
et l'autre est l'hétéro-zygote.

358
00:18:12,048 --> 00:18:16,055
Donc, fondamentalement, c'est la même situation

359
00:18:16,255 --> 00:18:17,401
comme celui-ci.

360
00:18:17,601 --> 00:18:20,601
Sauf, celui-ci devrait être A2A2.

361
00:18:20,801 --> 00:18:23,645
Ainsi, nous pouvons copier ceci,
je pense que ça va.

362
00:18:23,845 --> 00:18:25,246
Copions ceci ici

363
00:18:25,446 --> 00:18:27,400
et mettez-le ici.

364
00:18:28,313 --> 00:18:30,165
Et ce que nous devons faire
ici maintenant,

365
00:18:30,365 --> 00:18:35,440
c'est que nous devons changer
l'homo-zygote A1A1 à A2A2.

366
00:18:35,640 --> 00:18:37,033
Nous avons besoin de le faire ici

367
00:18:37,233 --> 00:18:39,082
et nous avons besoin de le faire ici.

368
00:18:40,057 --> 00:18:42,123
Et aussi, bien entendu, la valeur de retour

369
00:18:42,323 --> 00:18:43,561
doit être changée.

370
00:18:43,761 --> 00:18:46,419
Parce que nous allons soit,
dans la moitié des cas,

371
00:18:46,619 --> 00:18:48,143
retourner le A2A2.

372
00:18:49,130 --> 00:18:51,788
ou dans l'autre moitié des cas,
l'hétéro- zygote

373
00:18:52,575 --> 00:18:55,946
Et puis, nous avons le sixième
et le dernier cas.

374
00:18:56,146 --> 00:18:58,683
Donc, ici, nous pourrions maintenant
essentiellement juste dire

375
00:18:58,883 --> 00:19:02,279
"autre", je serai complètement explicite.

376
00:19:02,479 --> 00:19:04,752
Et je vais vous dire,
juste pour que nous sachions,

377
00:19:04,952 --> 00:19:09,766
ce que nous parlons ici,
d'autre si les deux sont A2A2.

378
00:19:09,966 --> 00:19:21,504
Donc, d'autre si, P1 est égal à A2A2,
et P2 est égale à A2A2.

379
00:19:21,704 --> 00:19:24,104
Et encore une fois, pas besoin
de vérifier la situation (inaudible)

380
00:19:24,304 --> 00:19:25,726
car elle est identique.

381
00:19:25,988 --> 00:19:27,668
Ils sont tous deux les mêmes génotypes.

382
00:19:27,868 --> 00:19:31,395
Dans ce cas, bien sûr,
je voudrais simplement revenir

383
00:19:31,595 --> 00:19:36,257
un A2A2, parce que
c'est le seul génotype que ces parents

384
00:19:36,457 --> 00:19:37,245
peut générer.

385
00:19:37,445 --> 00:19:39,095
Bon alors, ça y est!

386
00:19:39,295 --> 00:19:40,854
L'Héritage Mendélienne

387
00:19:41,579 --> 00:19:46,127
accordé ceci est probablement la fonction la plus
longue que nous avons développé jusqu'à présent

388
00:19:46,327 --> 00:19:48,350
et sera probablement la fonction
la plus longue

389
00:19:48,613 --> 00:19:51,438
mais vous pouvez déjà voir,
avec un peu de bonne structuration

390
00:19:51,638 --> 00:19:54,043
et une logique très simple,

391
00:19:54,243 --> 00:19:56,781
cela est simple à mettre en œuvre.

392
00:19:57,143 --> 00:19:59,294
Alors maintenant, nous allons voir
si cela fonctionne réellement

393
00:19:59,494 --> 00:20:02,494
et veiller à ce que nous n'avons pas
fait de fautes de saisir,

394
00:20:02,694 --> 00:20:04,023
Ce que je voudrais faire maintenant

395
00:20:04,223 --> 00:20:07,736
c'est que je voudrais sortir
le résultat maintenant

396
00:20:07,936 --> 00:20:09,599
de cette simulation.

397
00:20:09,799 --> 00:20:12,803
Donc ce que je vais faire
si vous faites défiler vers le bas ici

398
00:20:13,003 --> 00:20:15,837
dans le run_generation,

399
00:20:16,037 --> 00:20:21,160
nous avions ces fonctions
que nous avons appelé ici

400
00:20:21,447 --> 00:20:23,746
le pick_mating_partner,
the_get_offspring etc.

401
00:20:23,946 --> 00:20:26,154
puis ici, nous avons
un compteur de génération

402
00:20:26,354 --> 00:20:29,211
Donc, ce serait bien fait ici
pour appeler une fonction

403
00:20:29,411 --> 00:20:32,686
qui va imprimer les données
de la génération actuelle.

404
00:20:32,886 --> 00:20:36,731
Donc, je vais appeler cette "print_data"

405
00:20:37,994 --> 00:20:40,426
print_data, et maintenant, bien sûr,

406
00:20:40,788 --> 00:20:42,345
je dois mettre en œuvre cette fonction

407
00:20:42,545 --> 00:20:44,137
et je vais le faire ici.

408
00:20:44,337 --> 00:20:48,839
Ainsi, la fonction print_data

409
00:20:52,027 --> 00:20:52,802
D'accord ?

410
00:20:53,614 --> 00:20:56,143
Maintenant, qu'est-ce que
cette fonction doit faire?

411
00:20:56,581 --> 00:20:59,655
Rappelons que nous avons ces variables

412
00:20:59,855 --> 00:21:04,643
pour les génotypes A1A1, A1A2 et A2A2

413
00:21:05,006 --> 00:21:09,575
Et nous pouvons maintenant utiliser
ceux-ci, les réutiliser plutôt,

414
00:21:09,775 --> 00:21:11,173
parce qu'on les a déjà utilisé une fois,

415
00:21:11,373 --> 00:21:12,454
lorsque nous avons mis les choses.

416
00:21:13,279 --> 00:21:16,033
Et ici, dans "print_data"

417
00:21:16,433 --> 00:21:19,373
la première chose que je vais faire
c'est que je vais remettre celles-ci

418
00:21:19,848 --> 00:21:20,548
à zéro

419
00:21:20,748 --> 00:21:25,525
A1A1, A1A2 et A2A2,

420
00:21:25,761 --> 00:21:27,618
chacun d'entre eux vont être remis à zéro.

421
00:21:27,818 --> 00:21:30,217
Ne pas mettre la barre ici,
parce que cela signifierait,

422
00:21:30,417 --> 00:21:32,111
que vous devez créer une variable locale

423
00:21:32,311 --> 00:21:34,039
qui est dans le champ d'application
de cette fonction,

424
00:21:34,239 --> 00:21:37,508
Nous voulons effectivement
remplacer les variables globales ici.

425
00:21:38,233 --> 00:21:40,097
Et puis nous allons itérer

426
00:21:40,297 --> 00:21:43,576
à travers le réseau,

427
00:21:43,776 --> 00:21:46,239
en utilisant imbriquée pour la boucle.

428
00:21:46,989 --> 00:21:48,997
Donc, pour "i" est égal à zéro,

429
00:21:49,197 --> 00:21:51,161
Ceci n'est pas très standard,

430
00:21:51,361 --> 00:21:52,586
vous savez très bien.

431
00:21:53,024 --> 00:21:59,336
"I" plus petite que la longueur
de la grille, "i" est égal à "i + 1"

432
00:22:00,736 --> 00:22:05,424
Et puis exactement la même chose
pour la deuxième dimension.

433
00:22:05,624 --> 00:22:09,686
Je vais me contenter de copier ceci,
remplacer le "i" avec "ii",

434
00:22:09,886 --> 00:22:12,203
ici, ici, ici et ici.

435
00:22:13,003 --> 00:22:15,403
Et maintenant, je vais simplement
vérifier maintenant

436
00:22:15,603 --> 00:22:21,040
le contenu, essentiellement
de la grille [i] [ii]

437
00:22:21,240 --> 00:22:24,027
qui est maintenant la nouvelle génération

438
00:22:24,440 --> 00:22:25,415
des génotypes.

439
00:22:26,302 --> 00:22:28,146
Donc, ce que je vais simplement faire ici

440
00:22:28,346 --> 00:22:31,346
Je vais dire, si cette grille ici

441
00:22:31,546 --> 00:22:34,871
est A1A1,

442
00:22:35,071 --> 00:22:40,143
alors, je vais augmenter par 1.

443
00:22:40,343 --> 00:22:42,387
Le compteur de A1A1 évidemment.

444
00:22:42,587 --> 00:22:46,449
Donc, A1A1 est égal à A1A1 plus un.

445
00:22:50,187 --> 00:22:52,112
Vous pouvez déjà voir ici

446
00:22:52,312 --> 00:22:55,311
tout à fait bien que j'ai oublié de fermer

447
00:22:55,511 --> 00:22:57,959
les accolades, qui est vraiment l'avantage

448
00:22:58,159 --> 00:23:01,200
de ce type d'indentation.

449
00:23:01,400 --> 00:23:03,411
Ce serait extrêmement facile de manquer

450
00:23:03,611 --> 00:23:05,895
si tu n'a pas cela,
mais vous pouvez juste voir ici.

451
00:23:06,095 --> 00:23:08,267
Si vous regardez cela, il y a une lacune

452
00:23:08,455 --> 00:23:09,828
ou quelque chose ne va pas.

453
00:23:10,240 --> 00:23:11,692
Et vous pouvez voir immédiatement,

454
00:23:11,892 --> 00:23:16,030
J'ai oublie de fermer cette accolade
d'ouverture ici.

455
00:23:16,230 --> 00:23:18,304
D'accord, permettez-moi
de faire cela avant que je continue.

456
00:23:18,504 --> 00:23:20,929
Bon, bon!

457
00:23:21,129 --> 00:23:26,096
Donc, d'autre si, ou si elle arrive à être,

458
00:23:26,296 --> 00:23:31,417
nous pouvons par exemple, vérifier la A1A2.

459
00:23:32,655 --> 00:23:36,942
A1A2, d'accord?

460
00:23:37,442 --> 00:23:40,278
Ensuite, bien sûr, j'augmente A1A2

461
00:23:40,478 --> 00:23:41,360
par 1.

462
00:23:41,635 --> 00:23:45,247
Donc, A1A2 A1A2 est égal à plus un,

463
00:23:46,135 --> 00:23:50,834
Et enfin dans ce cas,

464
00:23:51,034 --> 00:23:54,419
Il doit être un A2A2.

465
00:23:54,619 --> 00:23:55,930
Aucun autre choix.

466
00:23:57,030 --> 00:23:58,330
Très bien!

467
00:23:58,530 --> 00:24:00,817
Alors maintenant, nous avons
cette fonction

468
00:24:01,504 --> 00:24:03,205
nous calculons tout cela,

469
00:24:03,942 --> 00:24:07,267
Mais nous ne comptons pas, plutôt que
calculer.

470
00:24:07,517 --> 00:24:08,647
Nous n'imprimons rien,

471
00:24:08,897 --> 00:24:10,497
donc, bien sûr, nous devrions le faire,
donc ici,

472
00:24:10,697 --> 00:24:13,879
quand je termine avec le boucle "pour",
je dirais,

473
00:24:14,154 --> 00:24:17,158
tout d'abord, je dois savoir
quelle génération nous sommes.

474
00:24:17,358 --> 00:24:18,769
Donc, je vais simplement dire

475
00:24:19,744 --> 00:24:22,244
«Génération», je vais utiliser

476
00:24:22,444 --> 00:24:24,188
la concaténation de chaîne ici

477
00:24:24,388 --> 00:24:25,897
à l'aide du compteur de génération

478
00:24:27,759 --> 00:24:31,707
et peut-être un aller,
juste pour être agréable.

479
00:24:33,069 --> 00:24:33,882
Bon!

480
00:24:34,669 --> 00:24:37,153
Et puis, un autre verrou de la console

481
00:24:37,341 --> 00:24:39,457
où je sors effectivement les données.

482
00:24:39,845 --> 00:24:41,583
Donc, je vais simplement la sortie

483
00:24:41,783 --> 00:24:46,358
A1A1, A1A2 et A2A2.

484
00:24:47,433 --> 00:24:49,462
Bon, maintenant, nous enregistrons ceci

485
00:24:49,662 --> 00:24:51,031
nous retournons au navigateur,

486
00:24:51,231 --> 00:24:52,586
et nous voyons si tout cela a fonctionné.

487
00:24:52,786 --> 00:24:54,092
Donc nous sommes ici, dans le navigateur.

488
00:24:54,292 --> 00:24:55,896
Voici encore (jnaudible).

489
00:24:56,096 --> 00:24:57,690
donc nous allons 'recharger ceci

490
00:24:58,749 --> 00:24:59,986
et cela a fonctionné!

491
00:25:00,186 --> 00:25:01,417
Donc, il n'y a pas des erreurs,

492
00:25:02,767 --> 00:25:05,125
et ce que vous pouvez voir ici

493
00:25:05,325 --> 00:25:07,465
c'est que nous commençons.

494
00:25:07,665 --> 00:25:12,640
Encore une fois, à peu près ici,
à Hardy Wineberck avec 25%,

495
00:25:14,440 --> 00:25:15,914
Mais comme vous pouvez
le voir très rapidement

496
00:25:16,114 --> 00:25:18,541
les choses semblent changer un peu.

497
00:25:18,741 --> 00:25:21,741
Par exemple, nous avons beaucoup
de A1A1 ici

498
00:25:21,941 --> 00:25:26,053
et non pas beaucoup de A1A2.

499
00:25:26,566 --> 00:25:28,512
Alors nous rechargeons ceci encore

500
00:25:29,599 --> 00:25:31,383
Ouaip! C'est la même histoire.

501
00:25:31,628 --> 00:25:36,828
Donc, nous perdons beaucoup de A1A2s,

502
00:25:37,028 --> 00:25:39,796
sur le gain de A1A1s et A2A2s

503
00:25:39,996 --> 00:25:41,807
Alors, nous rechargeons ceci encore.

504
00:25:42,882 --> 00:25:43,869
l'histoire similaire.

505
00:25:44,069 --> 00:25:45,633
Donc, il semble y avoir un modèle ici.

506
00:25:45,833 --> 00:25:48,833
Maintenant, il est évidemment très difficile
de simplement regarder ces

507
00:25:49,033 --> 00:25:52,783
valeurs, puis dites bien,
je pense que ce qui se passe ici

508
00:25:53,008 --> 00:25:56,333
est la suivante, non, nous avons
maintenant besoin de visualiser cela.

509
00:25:56,558 --> 00:26:00,446
Voilà pourquoi nous avons mis en place
un modèle spatial en premier lieu

510
00:26:00,646 --> 00:26:02,564
afin que nous puissions comprendre
le processus

511
00:26:02,764 --> 00:26:05,014
en examinant également cela.

512
00:26:05,239 --> 00:26:06,616
Et voici ce que nous ferons

513
00:26:06,816 --> 00:26:07,925
dans les prochaines leçons.

514
00:26:08,125 --> 00:26:10,240
Nous allons maintenant prendre ce code,

515
00:26:10,440 --> 00:26:14,552
et générer une très belle
représentation visuelle

516
00:26:14,752 --> 00:26:15,877
des dynamiques ici

517
00:26:16,090 --> 00:26:17,927
et nous allons le faire dans
la prochaine session.

518
00:26:18,127 --> 00:26:19,116
Bon, bien fait!

519
00:26:19,316 --> 00:26:20,628
Vous avez essentiellement mis en œuvre

520
00:26:20,828 --> 00:26:23,588
une simulation complète stochastique
spatiale

521
00:26:23,788 --> 00:26:25,860
d'un processus générique de population .

522
00:26:26,060 --> 00:26:29,772
Maintenant, pour mettre la cerise
sur le gâteau, nous allons visualizer

523
00:26:29,972 --> 00:26:31,397
la dynamique de tout cela.

524
00:26:31,622 --> 00:26:32,674
Il semblera bon

525
00:26:32,874 --> 00:26:34,149
et nous allons le faire
dans la prochaine session.

526
00:26:34,349 --> 00:26:35,324
Je vous y verrai.

