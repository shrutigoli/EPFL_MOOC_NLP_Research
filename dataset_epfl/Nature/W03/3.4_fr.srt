1
00:00:03,060 --> 00:00:07,260
Bienvenue la nature dans le code.
Nous sommes dans le chapitre 3 leçon 4.

2
00:00:07,270 --> 00:00:11,360
Dans cette vidéo, nous allons terminer
notre exemple de lancer une pièce .

3
00:00:11,360 --> 00:00:14,450
Voici donc le code que nous avons
développé jusqu'à présent

4
00:00:14,450 --> 00:00:16,710
et comme nous l'avons vu
cela fonctionne très bien.

5
00:00:16,710 --> 00:00:21,390
Il utilise les math aléatoire pour mettre en œuvre
essentiellement une lance de pièce de monnaie .

6
00:00:21,390 --> 00:00:25,470
Maintenant, ce que cela fait ici,
c'est il lance 10 pièces

7
00:00:25,470 --> 00:00:30,740
puis il signale simplement sur le nombre
de têtes et les queues venus.

8
00:00:30,740 --> 00:00:35,490
Maintenant, ce que je voudrais faire c'est,
d'envelopper tout cela dans une fonction.

9
00:00:35,490 --> 00:00:41,430
Une fonction qui, lorsqu'il est exécuté lance
essentiellement 10 pièces

10
00:00:41,430 --> 00:00:46,700
et rend compte ensuite si l'événement
que nous aimerions observer,

11
00:00:46,700 --> 00:00:51,340
à savoir, 8 têtes et 2 contes
ont en effet se produire.

12
00:00:51,340 --> 00:00:55,540
Et alors nous pouvons appeler
cette fonction de nombreuses fois

13
00:00:55,540 --> 00:00:58,830
puis calculer combien de fois
cet événement particulier est arrivé

14
00:00:58,830 --> 00:01:00,440
et combien de fois il n'a pas.

15
00:01:00,440 --> 00:01:02,400
Donc, nous allons faire cela.

16
00:01:02,400 --> 00:01:04,350
Alors ce que je vais faire ici c'est,

17
00:01:04,350 --> 00:01:09,710
je vais envelopper tout cela ici maintenant
dans une fonction et je vais appeler cette

18
00:01:09,710 --> 00:01:15,300
fonction maintenant dans une fonction et je vais
appeler cette fonction lancer des pièces de monnaie.

19
00:01:15,300 --> 00:01:18,300
Ok, lancer des pièces de monnaie.

20
00:01:18,310 --> 00:01:22,530
Aucun paramètre. Donc les crochets.

21
00:01:22,530 --> 00:01:24,000
Donc en gros,

22
00:01:24,000 --> 00:01:30,700
ce sera le corps de la fonction entière.
Donc, je vais couper cela et le déplacer ici.

23
00:01:30,700 --> 00:01:36,830
D'accord, je vais juste vous assurer
que j'ai tout correctement indenté,

24
00:01:36,830 --> 00:01:40,700
seulement à des fins esthétiques.

25
00:01:40,720 --> 00:01:42,760
Très bien.

26
00:01:42,760 --> 00:01:47,300
Donc maintenant vous pouvez voir tout ce code
que nous avons développé dans la dernière leçon

27
00:01:47,300 --> 00:01:52,620
est maintenant enveloppé dans cette fonction
appelée lancer des pièces de monnaie,

28
00:01:52,620 --> 00:01:56,650
et nous ne pouvons tout simplement maintenant
appeler cette fonction et d'exécuter ce code.

29
00:01:56,650 --> 00:01:57,510
Très bien.

30
00:01:57,510 --> 00:02:01,800
Mais pour atteindre l'objectif que
je me suis fixé au début de cette leçon,

31
00:02:01,800 --> 00:02:03,880
Je dois changer quelques choses.

32
00:02:03,880 --> 00:02:04,780
Donc, le numéro un,

33
00:02:04,780 --> 00:02:09,180
nous pouvons nous débarrasser de cet verrou
de console ici on n'én a pas besoin pour le moment.

34
00:02:09,180 --> 00:02:15,410
Ce que nous aimerions faire après
ce code ici est exécuté,

35
00:02:15,560 --> 00:02:19,970
nos  variables têtes et queues
contiennent les valeurs de la fréquence

36
00:02:20,050 --> 00:02:20,700
d'avoir de têtes,

37
00:02:20,700 --> 00:02:24,510
et la fréquence d'avoir de queues
et donc on voudrait maintenant

38
00:02:24,530 --> 00:02:25,870
dire essentiellement,

39
00:02:25,870 --> 00:02:26,450
Vous savez,

40
00:02:26,450 --> 00:02:28,720
cet événement particulier est-il arrivé,

41
00:02:28,720 --> 00:02:29,310
à savoir.

42
00:02:29,310 --> 00:02:32,500
Que 8 têtes sont venus et deux queues .

43
00:02:32,500 --> 00:02:38,930
Donc, nous pouvons maintenant, dire tout simplement
si, alors voici maintenant après la quatrième boucle

44
00:02:38,930 --> 00:02:39,700
Ok.

45
00:02:39,700 --> 00:02:46,380
Donc 4 boucles se ferment ici, si à ce stade
les têtes sont maintenant égales à 8

46
00:02:46,380 --> 00:02:53,350
alors il est arrivé. Puis en effet on eu
8 fois les têtes et 2 fois les queues.

47
00:02:53,350 --> 00:02:56,590
On n'a pas besoin de vérifier 2 fois
les queues, car il est clair que

48
00:02:56,590 --> 00:03:00,040
cela est arrivé si la tête est égal à 8,

49
00:03:00,060 --> 00:03:02,200
Je vais parler de cette condition
dans une seconde,

50
00:03:02,200 --> 00:03:03,750
mais pour le moment,

51
00:03:03,750 --> 00:03:06,560
nous allons simplement
dire si tel est le cas,

52
00:03:06,560 --> 00:03:10,920
puis je vais retourner une valeur
particulière de cette fonction,

53
00:03:10,920 --> 00:03:13,250
à savoir vrai.

54
00:03:13,250 --> 00:03:18,870
Et nous allons parler de cela aussi.
Sinon, d'accord, donc si cela ne s'est pas produit

55
00:03:18,870 --> 00:03:25,650
donc d'autre bien, je vais faire c'est que
je vais retourner faux.

56
00:03:25,650 --> 00:03:27,130
D'accord,

57
00:03:27,140 --> 00:03:30,150
et cela est tout dans cette fonction,

58
00:03:30,150 --> 00:03:30,810
la droite.

59
00:03:30,810 --> 00:03:33,390
Donc, si vous l'appelez cette fonction.

60
00:03:33,390 --> 00:03:37,400
si vous l'exécutez des ensembles
de ces variables et ces variables

61
00:03:37,430 --> 00:03:42,530
sont des variables maintenant locales
dans la portée locale de cette fonction

62
00:03:42,530 --> 00:03:48,330
puis il exécute cette itération
de cette boucle jette d'essentiellement 10

63
00:03:48,480 --> 00:03:52,850
pièces de monnaie juste gardant
la trace des têtes et les queues,

64
00:03:52,850 --> 00:03:54,660
et puis à la fin, si elle dit,
bon, d'accord,

65
00:03:54,660 --> 00:03:56,940
si nous avions exactement 8 têtes.

66
00:03:56,940 --> 00:04:00,220
que je vais retourner vrai
et mettre fin à cette fonction

67
00:04:00,220 --> 00:04:02,130
parce que retour termine toujours
la fonction.

68
00:04:02,130 --> 00:04:04,140
Si ce  n'est pas le cas.

69
00:04:04,140 --> 00:04:07,920
Je vais retourner faux et mettre
fin à la fonction.

70
00:04:07,920 --> 00:04:08,960
Ok.

71
00:04:08,960 --> 00:04:10,930
alors qu'est-ce cela ici,

72
00:04:10,930 --> 00:04:12,730
donc c'est un,

73
00:04:12,730 --> 00:04:14,250
un opérateur très important.

74
00:04:14,250 --> 00:04:16,050
D'accord. C'est l'opérateur d'égalité.

75
00:04:16,050 --> 00:04:21,170
Donc, fondamentalement, vous comparez
2 valeurs et vous vérifiez si leur égale.

76
00:04:21,170 --> 00:04:26,850
Maintenant, il utilise un double signe égale
ici et qui est très important,

77
00:04:26,850 --> 00:04:32,960
et il peut être en fait l’erreur numéro
un dans JavaScript.

78
00:04:32,960 --> 00:04:37,440
Vous pouvez voir ici nous avons
un signe égal et je passé un certain temps

79
00:04:37,440 --> 00:04:41,380
expliquant cela dans les premières
leçons de ce cours que

80
00:04:41,380 --> 00:04:43,670
c'est vraiment l'opérateur d'affectation.

81
00:04:43,670 --> 00:04:46,790
Cela ne doit pas être considérée
comme une équation.

82
00:04:46,790 --> 00:04:50,660
C'est tout simplement un opérateur
d'affectation où nous disons dans ce

83
00:04:50,660 --> 00:04:55,900
variables queues j'assignent
la valeur zéro.

84
00:04:55,900 --> 00:05:01,140
Cet opérateur ne peut pas
être utilisé pour vérifier

85
00:05:01,140 --> 00:05:02,660
l'égalité

86
00:05:02,660 --> 00:05:03,420
Ok.

87
00:05:03,420 --> 00:05:04,930
ceci est très, très important,

88
00:05:04,930 --> 00:05:08,190
je vais répéter ce signe égal ne vise pas à vérifier

89
00:05:08,190 --> 00:05:08,810
l'égalité

90
00:05:08,810 --> 00:05:11,010
Si vous voulez vérifier l'égalité.

91
00:05:11,010 --> 00:05:14,210
Ceci est celui que vous utilisez.
Le double signe égal.

92
00:05:14,210 --> 00:05:19,880
Maintenant, un peu d'un spoiler c'est quelque chose
que nous allons faire et parler dans

93
00:05:19,880 --> 00:05:21,070
la prochaine leçon.

94
00:05:21,070 --> 00:05:26,830
Il y a aussi un triple signe égal

95
00:05:26,850 --> 00:05:31,850
et si ce triple signe égal
ou ce double signe égal

96
00:05:31,900 --> 00:05:33,100
Devraient être utilisés.

97
00:05:33,100 --> 00:05:38,980
Il est probablement le contenu de peut-être
100 millions de blogs et pages Web

98
00:05:38,980 --> 00:05:41,940
discuter de celui qui est mieux maintenant,

99
00:05:41,940 --> 00:05:44,770
nous n'avons pas le temps
d'en discuter en détail.

100
00:05:44,770 --> 00:05:48,190
Je vais vous expliquer la différence
dans la prochaine session.

101
00:05:48,200 --> 00:05:52,710
Pour nos besoins et dans le but de ce cours

102
00:05:52,710 --> 00:05:55,710
je vais utiliser ce double signe égal

103
00:05:55,710 --> 00:06:00,130
parce que ce aussi un standard dans de
nombreux autres langages de programmation.

104
00:06:00,130 --> 00:06:05,380
Mais je vais vous expliquer cette différence
dans une autre conférence.

105
00:06:05,380 --> 00:06:09,570
Mais le point clé ici c'est vraiment
ne pas utiliser le seul

106
00:06:09,580 --> 00:06:13,140
signe égal parce que le signe égal
unique est un opérateur d'affectation.

107
00:06:13,140 --> 00:06:18,450
Les signes de la valeur à une variable,
alors que le signe double égal

108
00:06:18,450 --> 00:06:20,640
ou si vous voulez,

109
00:06:20,640 --> 00:06:22,420
au moins 2 signes égal.

110
00:06:22,420 --> 00:06:26,790
C'est lorsque vous utilisez
pour des contrôles d'égalité.

111
00:06:26,790 --> 00:06:31,990
donc si la tête est égale à 8 et je passe
juste quelques minutes sur ceci

112
00:06:32,310 --> 00:06:36,510
parce que je crains, je sais que
tu vas faire cette erreur.

113
00:06:36,510 --> 00:06:40,980
Si vous êtes un débutant en fait, je fais de
temps en temps cette erreur jusqu'à ce jour.

114
00:06:40,980 --> 00:06:43,550
Donc, c'est une erreur commune à faire,

115
00:06:43,550 --> 00:06:47,770
ne vous inquiétez pas à ce sujet, mais je veux
que vous sachiez que cela est une source

116
00:06:47,800 --> 00:06:50,820
de nombreuses erreurs,
en particulier pour les débutants.

117
00:06:50,820 --> 00:06:51,620
D'accord,

118
00:06:51,620 --> 00:06:55,140
donc si la tête est égale à 8, nous allons
retourner vrai sinon nous retournons

119
00:06:55,140 --> 00:06:56,170
faux.

120
00:06:56,170 --> 00:06:57,230
Donc, qu'est ce qui est vrai.

121
00:06:57,230 --> 00:06:58,500
Et qu'est ce qui est faux.

122
00:06:58,500 --> 00:07:02,070
Eh bien, cela est en fait le 3ème type
de variable que nous

123
00:07:02,070 --> 00:07:03,590
rencontrons dans JavaScript.

124
00:07:03,590 --> 00:07:05,520
Jusqu'à présent, nous avons
rencontré 2 types,

125
00:07:05,520 --> 00:07:13,010
à savoir simplement les numéros
10, 0, 0,5 et ainsi de suite.

126
00:07:13,010 --> 00:07:21,090
Un autre type de variable que nous avons
rencontré était celui d'une chaîne.

127
00:07:21,090 --> 00:07:25,870
Rappelez-vous en utilisant le double guillemets ou
un guillemet ou simplement une chaîne de caractères

128
00:07:25,870 --> 00:07:29,080
et maintenant nous avons
un troisième type et qui est le

129
00:07:29,080 --> 00:07:33,720
lingot et les lingots
peut être vrai ou faux.

130
00:07:33,720 --> 00:07:35,660
Un seul de ces 2 options.

131
00:07:35,660 --> 00:07:40,200
Et ces sont les seules 2 façons correctes de
l'orthographe de ces valeurs dans JavaScript.

132
00:07:40,200 --> 00:07:42,680
Vrai ou Faux.

133
00:07:42,680 --> 00:07:44,930
Bien.

134
00:07:44,930 --> 00:07:49,770
Maintenant, ce que nous pouvons faire
c'est de définir cette fonction,

135
00:07:49,780 --> 00:07:52,430
Je vais supprimer cette ligne ici.

136
00:07:52,430 --> 00:07:54,380
Nous pouvons effectivement l'appeler.

137
00:07:54,380 --> 00:07:58,120
Donc, nous pourrions simplement appeler
cette fonction lancer pièce de monnaie et il

138
00:07:58,190 --> 00:08:03,220
retournera vrai si dans cette expérience de
lancer des pièces de monnaie on trouve 8 têtes

139
00:08:03,220 --> 00:08:04,190
il renvoie faux.

140
00:08:04,190 --> 00:08:05,880
Si ce n'est pas le cas.

141
00:08:05,880 --> 00:08:06,530
Donc, en effet,

142
00:08:06,530 --> 00:08:09,940
ce que nous pouvons faire maintenant
c'est appeler cette fonction plusieurs fois

143
00:08:10,350 --> 00:08:16,240
puis essentiellement garder une trace
de la fréquence que vrai a été retourné.

144
00:08:16,240 --> 00:08:16,870
En d'autres mots,

145
00:08:16,870 --> 00:08:20,950
combien de fois nous avons effectivement
lancer 8 têtes et deux queues

146
00:08:20,950 --> 00:08:24,030
Donc,allons-y et faisons cela ci-dessous ici.

147
00:08:24,040 --> 00:08:28,390
Donc, je vais faire quelque chose
plusieurs fois,

148
00:08:28,390 --> 00:08:30,950
à savoir que je vais appeler
cette fonction plusieurs fois.

149
00:08:30,950 --> 00:08:32,940
Donc, je vais utiliser la boucle 4.

150
00:08:32,940 --> 00:08:34,170
D'accord.

151
00:08:34,170 --> 00:08:35,240
Alors d'abord,

152
00:08:35,240 --> 00:08:39,940
Je vais définir combien de répétitions
je veux effectuer ici.

153
00:08:39,940 --> 00:08:43,390
Donc, je vais définir
cette variable de répétitions

154
00:08:43,390 --> 00:08:47,740
Je vais le mettre à disons 100.000.

155
00:08:47,740 --> 00:08:48,890
Ok.

156
00:08:48,890 --> 00:08:52,840
et puis je vais

157
00:08:52,840 --> 00:09:00,120
garder une trace de la fréquence que vrai sera
retourné avec ce compteur variable,

158
00:09:00,120 --> 00:09:04,240
que je vais mettre à zéro.

159
00:09:04,240 --> 00:09:07,970
Maintenant, nous allons
mettre en œuvre la boucle.

160
00:09:07,970 --> 00:09:11,830
Vous savez maintenant exactement comment
nous mettons en œuvre la boucle, d'accord.

161
00:09:11,830 --> 00:09:14,840
Donc, je vais avoir cette initialiseur
quand il est égale à zéro.

162
00:09:14,840 --> 00:09:19,540
Ici, je vais dire qu'il est plus petit
que le nombre de répétitions.

163
00:09:19,540 --> 00:09:24,030
Et puis bien sûr les incréments
par un, afin d'éviter

164
00:09:24,030 --> 00:09:25,830
des boucles infinies.

165
00:09:25,830 --> 00:09:32,360
Bon, alors qu'est-ce que je veux faire
dans ce cas 10.000 fois ou

166
00:09:32,360 --> 00:09:34,830
100.000 fois.

167
00:09:34,830 --> 00:09:42,080
Eh bien, ce que je voudrais faire c'est d'appeler
cette fonction lancer des pièces de monnaie .

168
00:09:45,060 --> 00:09:46,220
D'accord.

169
00:09:47,390 --> 00:09:53,470
Maintenant, si cela était tout ce que je fais,
il lancera  simplement les pièces de monnaie

170
00:09:53,470 --> 00:09:57,230
Qu'il fera10 fois et100.000 fois,

171
00:09:57,230 --> 00:10:01,370
il irait à 100.000 de ces expériences
de lance de pièce.

172
00:10:03,230 --> 00:10:07,210
Mais je ne voudrais pas garder une trace
de quelque chose, donc je dois stocker cette

173
00:10:07,210 --> 00:10:10,210
variable de cette valeur
de retour quelque part.

174
00:10:10,210 --> 00:10:14,320
Et puis, je dois comprendre en quelque
sorte ce qui vient de se passer.

175
00:10:14,320 --> 00:10:19,060
Donc, tout ce que lancer pièces de monnaie
retourn qu'il soit vrai ou faux.

176
00:10:19,060 --> 00:10:23,510
Je vais le stocker dans
une variable que je vais appeler.

177
00:10:23,510 --> 00:10:26,190
Eh bien, appelons-le résultat souhaité.

178
00:10:26,190 --> 00:10:29,520
Car il est essentiellement
le résultat souhaité.

179
00:10:29,520 --> 00:10:31,600
Que ce soit vrai ou faux.

180
00:10:31,600 --> 00:10:33,210
Si vraiment cela est réellement,

181
00:10:33,210 --> 00:10:37,320
n'a pas souhaité les résultats
des 8 têtes ou non.

182
00:10:37,320 --> 00:10:41,090
Donc, cette fonction sera appelé
la valeur de retour vrai ou faux

183
00:10:41,090 --> 00:10:48,230
elle sera stocké dans ceci ici. Et maintenant,
je ne peux tout simplement vérifier la

184
00:10:48,230 --> 00:10:51,370
valeur de cette variable de résultat désiré.

185
00:10:51,370 --> 00:10:56,590
Donc, je peux simplement
dire si le résultat souhaité

186
00:10:56,590 --> 00:11:02,270
Et maintenant, je pourrais
dire simplement si elle est égale à vrai

187
00:11:02,280 --> 00:11:10,640
alors en effet nous avons juste
jeté 10 points et 8 fois la tête est venu.

188
00:11:10,650 --> 00:11:11,520
Donc ceci est,

189
00:11:11,520 --> 00:11:12,350
Ouais,

190
00:11:12,350 --> 00:11:12,860
bon.

191
00:11:12,860 --> 00:11:17,120
Il est venu il est arrivé la façon dont nous
voulions que cela se produise alors j'augmente

192
00:11:17,200 --> 00:11:22,610
le compteur par un.
Le compteur est égal à compteur plus un

193
00:11:22,610 --> 00:11:26,050
et bien je vais faire rien,

194
00:11:26,050 --> 00:11:28,910
donc il n'y a pas d'autre ici
je n'ai pas besoin d'avoir un autre.

195
00:11:28,910 --> 00:11:34,120
Je pourrais bien sûr avoir un autre
et puis faire pratiquement rien, mais c'est

196
00:11:34,160 --> 00:11:36,100
inutile, je vais m'en débarrasser

197
00:11:38,280 --> 00:11:44,160
et d'autres choses, toutes
ces déclarations si et autre  ici,

198
00:11:44,420 --> 00:11:45,690
en fonction des conditions.

199
00:11:45,690 --> 00:11:51,090
Donc, si une certaine condition est vraie
si le math aléatoire est inférieur ou

200
00:11:51,090 --> 00:11:57,720
égale à ,5 ici si la tête
est égale à 8 ou ici si le résultat désiré

201
00:11:57,770 --> 00:12:02,280
est égal à vrai tous s' évaluent
à quelque chose qui est soit

202
00:12:02,280 --> 00:12:04,060
Vrai ou faux?

203
00:12:04,060 --> 00:12:06,950
Ils évaluent en fait à
la valeur du lingot et

204
00:12:06,950 --> 00:12:10,290
donc c'est en fait redondante.

205
00:12:10,290 --> 00:12:13,290
Vous pouvez le laisser si vous voulez,

206
00:12:13,290 --> 00:12:19,220
mais nous pouvons aussi ecrit si le résultat souhaité parce que si

207
00:12:19,270 --> 00:12:22,870
le résultat désiré est égal vrai
il s'évaluera dans le

208
00:12:22,870 --> 00:12:24,180
lingots de toute façon.

209
00:12:24,180 --> 00:12:25,650
Et nous avons déjà un lingot.

210
00:12:25,650 --> 00:12:28,180
Cela est déjà vrai ou faux.

211
00:12:28,180 --> 00:12:31,340
Donc, vous pouvez simplement dire si  résultat désiré,

212
00:12:31,340 --> 00:12:37,230
nous pouvons essentiellement exécuter
cela, maintenant nous calculons tout.

213
00:12:37,230 --> 00:12:39,840
mais nous mettons rien
dans la console nous allons donc.

214
00:12:39,890 --> 00:12:41,790
Allons-y et faisons le bien,

215
00:12:41,790 --> 00:12:45,470
nous allons continuer sur la même
console log,

216
00:12:48,120 --> 00:12:51,840
tu sais que je vais juste dire
obtenir 8 têtes.

217
00:12:54,730 --> 00:12:56,420
Et 2 queues.

218
00:13:00,950 --> 00:13:01,990
Maintenant.

219
00:13:03,190 --> 00:13:07,420
Je dois calculer le pourcentage
ici que je vais faire

220
00:13:07,420 --> 00:13:10,740
en une minute et je vais dire

221
00:13:10,740 --> 00:13:14,460
le pourcentage du temps.

222
00:13:14,460 --> 00:13:19,150
Alors, comment puis-je calculer
ce qu'il faut mettre ici.

223
00:13:19,150 --> 00:13:22,960
Comment puis-je calculer ce pourcentage,
bien il c'est simplement

224
00:13:24,060 --> 00:13:27,700
le nombre du compteur ou
la valeur que nous avons

225
00:13:27,700 --> 00:13:31,490
rencontré quand le compteur garde la trace de
la fréquence dont cela se produit souvent.

226
00:13:31,490 --> 00:13:32,460
Ok.

227
00:13:32,460 --> 00:13:37,990
divisé par le nombre total que nous avons
exécuté cette expérience qui est

228
00:13:38,250 --> 00:13:42,980
stockés dans des répétitions
et qui nous donne la fraction et pour

229
00:13:43,030 --> 00:13:46,000
transformer une fraction en
un pourcentage bien sûr, nous devons

230
00:13:46,000 --> 00:13:48,550
simplement multiplier par 100.

231
00:13:51,010 --> 00:13:52,310
Très bien.

232
00:13:52,310 --> 00:13:57,380
Alors maintenant, nous avons tout mis en place,
nous pouvons enregistrer cela et nous pouvons nous déplacer

233
00:13:57,380 --> 00:14:00,580
vers le navigateur et voir
si cela fonctionne.

234
00:14:00,580 --> 00:14:04,050
Voici donc notre console montrant
toujours les résultats précédent

235
00:14:04,270 --> 00:14:07,710
de têtes et les queues de lance
de pièce je vais recharger cela.

236
00:14:08,800 --> 00:14:14,120
Et ici, il dit avoir 8 têtes à 2 queues
4.4-3 8 et quelques

237
00:14:14,120 --> 00:14:14,710
erreur d'arrondi.

238
00:14:14,710 --> 00:14:16,060
Le pourcentage du temps.

239
00:14:16,060 --> 00:14:21,500
Donc, ceci est en fait assez proche
de 4,3 9% que nous avons calculé dans

240
00:14:21,500 --> 00:14:28,360
une leçon précédante. Permettez-moi
de recharger cela 4.3-5 1-4.3-6 9-4.3-6

241
00:14:29,150 --> 00:14:29,860
etc...

242
00:14:29,860 --> 00:14:34,100
donc vous pouvez voir il plane autour
de cette valeur avec un peu

243
00:14:34,100 --> 00:14:38,190
peu de variance bien sûr.
Il semble être assez rapide.

244
00:14:38,190 --> 00:14:41,450
Donc, revenons à notre code et
augmentons ceci par un ordre

245
00:14:41,470 --> 00:14:42,410
d'ampleur de

246
00:14:42,410 --> 00:14:47,350
j'ai 100,000 ici donc simplement ajouter un autre 0,

247
00:14:47,350 --> 00:14:50,040
et encore si vous pouvez le faire ou pas
dépend un peu sur le

248
00:14:50,040 --> 00:14:52,370
vitesse de la machine,

249
00:14:52,370 --> 00:14:56,070
vous utilisez, ici il semble être
très vite enregistrer cela

250
00:14:56,070 --> 00:15:02,180
je vais me déplacer et recharger ceci 4.3-9 3-6  est très

251
00:15:02,180 --> 00:15:05,110
proche, 4,4-0;

252
00:15:05,110 --> 00:15:10,310
Vous pouvez voir qu'il est en vol stationnaire
4.4-3 un peu autour de cette valeur, mais

253
00:15:10,490 --> 00:15:13,880
la variance autour de cette valeur est maintenant
un peu plus petite plus

254
00:15:13,880 --> 00:15:18,920
près maintenant comme nous le désirons, parce que
nous exécutons beaucoup plus d'expériences.

255
00:15:18,920 --> 00:15:22,920
Permettez-moi de revenir une fois de plus,
il semble y avoir une certaine marge

256
00:15:23,690 --> 00:15:27,930
à augmenter ce nombre par un autre ordre
de grandeur donc  maintenant j'exécute

257
00:15:27,930 --> 00:15:30,600
cela 10 millions de fois.

258
00:15:30,600 --> 00:15:31,090
D'accord.

259
00:15:31,090 --> 00:15:35,550
Enregistrer cela et je vais recharger ceci
et cela est probablement ça va prendre

260
00:15:35,880 --> 00:15:37,220
quelques secondes.

261
00:15:37,220 --> 00:15:42,810
Mais vous pouvez voir ici 4.4 0 2
donc ceci est très proche de 4,39

262
00:15:42,810 --> 00:15:46,460
4.3-9 ce que nous obtenons ici.

263
00:15:46,460 --> 00:15:47,230
3ème fois.

264
00:15:51,750 --> 00:15:52,890
4.3-9.

265
00:15:56,090 --> 00:16:01,750
4.3-9 donc vous voyez cela vient
maintenant à peu près tous les

266
00:16:01,750 --> 00:16:02,150
temps.

267
00:16:02,150 --> 00:16:03,450
on est très proche de ça,

268
00:16:03,450 --> 00:16:06,890
Je ne l'augmenter pas par
un autre ordre de grandeur.

269
00:16:06,890 --> 00:16:09,030
Il prendra probablement trés long,

270
00:16:09,030 --> 00:16:13,080
mais vous pouvez voir ce code fonctionne
réellement maintenant et c'est maintenant un grand

271
00:16:13,080 --> 00:16:17,270
exemple parce que vous regardez ce code,
vous utilisez maintenant de nombreux

272
00:16:17,410 --> 00:16:22,790
éléments de JavaScript,
vous utilisez les fonctions

273
00:16:22,980 --> 00:16:27,180
vous utilisez des variables, les math
aléatoires, vous utilisez itération

274
00:16:27,490 --> 00:16:34,130
vous utilisez le flux de contrôle, si else,
les chaines,numéros de lingots

275
00:16:34,430 --> 00:16:38,500
vous utilisez toutes sortes de choses
donc bon travail,,

276
00:16:38,500 --> 00:16:43,460
si vous avez réussi et tout a bien fonctionné.

277
00:16:43,760 --> 00:16:44,400
ce que nous,

278
00:16:44,400 --> 00:16:48,280
ce que nous avons fait ici c'est de
mettre en œuvre cette lance de pièce

279
00:16:48,280 --> 00:16:52,780
on se trouve avec un code
JavaScript très simple

280
00:16:53,130 --> 00:16:58,900
démontrant que si vous jetez 10
pièces de monnaie, alors

281
00:16:59,490 --> 00:17:05,240
les têtes viennent 8 fois et
les queues 2 fois dans 4,39%

282
00:17:05,240 --> 00:17:10,210
des expériences.

283
00:17:10,210 --> 00:17:15,210
Maintenant, vous pouvez bien sûr argumenter
bien il semble comme un peu une perte

284
00:17:15,210 --> 00:17:19,330
de temps pour mettre en œuvre ce code
pour résourde cette question parce que nous avons

285
00:17:19,330 --> 00:17:24,530
l'avons fait mathématiquement beaucoup
plus rapide et bien sûr je ne pouvais pas

286
00:17:24,630 --> 00:17:25,820
discuter avec la logique.

287
00:17:25,820 --> 00:17:27,530
Il aurait tout à fait raison,

288
00:17:27,530 --> 00:17:29,250
mais cela n'a pas été le point ici.

289
00:17:29,250 --> 00:17:33,490
Le point c'est vraiment de montrer
comment vous pouvez faire cela parce que,

290
00:17:33,490 --> 00:17:38,370
comme nous le verrons dans le cours
on mettra en œuvre un grand nombre

291
00:17:38,370 --> 00:17:45,110
simulations complexes qui seront
très difficiles à suivre exactement

292
00:17:45,210 --> 00:17:48,660
avec les outils mathématiques maintenant ici
l'exemple de lance de pièce est

293
00:17:48,660 --> 00:17:50,090
est un exemple simple.

294
00:17:50,090 --> 00:17:54,060
Et ceci est quelque chose que vous pouvez
suivre très facilement avec les mathématiques simples.

295
00:17:54,070 --> 00:17:57,880
mais la plupart des modèles que nous allons
exécuter vous serez pas

296
00:17:57,880 --> 00:18:02,220
en mesure de le faire, mais vous avez
maintenant tous les outils en place pour

297
00:18:02,220 --> 00:18:08,490
mettre en œuvre essentiellement cette
stochastique Lee dans votre navigateur.

298
00:18:08,490 --> 00:18:12,320
En utilisant Javascript,

299
00:18:12,320 --> 00:18:13,810
excellent travail, un excellent travail.

300
00:18:13,810 --> 00:18:17,110
Si vous devez entendre et
si tout fonctionne maintenant si

301
00:18:17,140 --> 00:18:21,830
tout semble ne pas être claire des fois.

302
00:18:21,830 --> 00:18:22,120
Tu sais,

303
00:18:22,120 --> 00:18:22,760
Ne t'inquiètes pas.

304
00:18:22,760 --> 00:18:24,410
Ceci est tout à fait normal.

305
00:18:24,410 --> 00:18:28,340
Vous apprenez la programmation
et je jette beaucoup de matériel

306
00:18:29,140 --> 00:18:33,930
à vous, mais vous serez habitué avec les
mêmes concepts maintes et maintes reprises et

307
00:18:33,990 --> 00:18:39,200
encore il est tout à fait normal qu'il peut être

308
00:18:39,200 --> 00:18:41,650
un peu déroutant,

309
00:18:41,650 --> 00:18:43,990
vous aurez la main avec le temps.

310
00:18:44,930 --> 00:18:45,380
Très bien.

311
00:18:45,380 --> 00:18:49,990
Ceci conclut cette vidéo que nous avons
implémenté la lance de pièce en utilisant une

312
00:18:49,990 --> 00:18:54,090
simulation stochastique en JavaScript
et en utilisant toutes sortes de

313
00:18:54,090 --> 00:18:59,410
concepts est un excellent travail
si vous l'avez fait jusqu'ici dans

314
00:18:59,410 --> 00:19:01,980
la leçon suivante je vais aller
un peu plus loin dans une partie des

315
00:19:01,980 --> 00:19:06,010
détails techniques des nouveaux concepts
que nous avons appris ici.

316
00:19:06,010 --> 00:19:06,580
On se verra

