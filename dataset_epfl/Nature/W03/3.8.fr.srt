1
00:00:03,450 --> 00:00:07,082
Bienvenue à nouveau, <i>Nature, In Code.</i>
Nous en sommes au chapitre 3, Leçon 8.

2
00:00:07,362 --> 00:00:11,150
Ce cours constitue un moment-clé
de ce programme

3
00:00:11,150 --> 00:00:13,023
car nous commençons à présent, enfin,

4
00:00:13,023 --> 00:00:16,671
à visualiser les données
que nous générons,

5
00:00:16,671 --> 00:00:18,192
allez, on s'y met.

6
00:00:18,192 --> 00:00:21,291
Alors, ici, nous avons notre code,
comme nous l'avons développé.

7
00:00:21,951 --> 00:00:24,245
C'est <i>Dérive Génétique.</i> Il fonctionne.

8
00:00:24,245 --> 00:00:28,172
Donc notre but est maintenant
de modéliser ces valeurs.

9
00:00:28,172 --> 00:00:32,721
Nous sommes en train de générer
ces valeurs <i>p</i> et <i>q</i> dans la console,

10
00:00:33,661 --> 00:00:36,673
ensuite, si nous allons
dans notre navigateur,

11
00:00:36,673 --> 00:00:39,426
nous pouvons étudier ces valeurs, ici,

12
00:00:39,426 --> 00:00:42,446
et nous pouvons voir comme elles changent,

13
00:00:42,446 --> 00:00:46,201
mais c'est un travail assez laborieux
de faire défiler ces valeurs

14
00:00:46,201 --> 00:00:48,462
et d'essayer de comprendre
quelles sont les dynamiques.

15
00:00:48,462 --> 00:00:51,348
Donc la modélisation
va nous être utile ici.

16
00:00:51,941 --> 00:00:53,404
C'est parti.

17
00:00:53,404 --> 00:00:54,975
Alors comment modéliser ?

18
00:00:55,755 --> 00:00:59,984
Donc, nous allons modéliser
à l'aide d'une bibliothèque appelée <i>D3</i>,

19
00:00:59,984 --> 00:01:02,035
et si vous faites une recherche pour <i>D3</i>,

20
00:01:03,485 --> 00:01:07,167
alors vous arriverez sur ce site web, ici,

21
00:01:07,167 --> 00:01:11,632
<i>D3.js</i> ou <i>D3js.org</i>.

22
00:01:11,632 --> 00:01:14,495
Et <i>D3</i>, c'est cette bibliothèque
dont nous allons nous servir.

23
00:01:14,495 --> 00:01:17,411
<i>D3</i> veut dire Data-Driven Documents.

24
00:01:17,411 --> 00:01:20,445
Et comme vous pouvez
le voir sur cet écran,

25
00:01:20,445 --> 00:01:23,346
c'est une bibliothèque
extrêmement puissante

26
00:01:23,346 --> 00:01:27,160
capable faire des modélisations
absolument magnifiques.

27
00:01:27,160 --> 00:01:31,026
En conséquence, elle n'est
en fait pas vraiment triviale,

28
00:01:31,026 --> 00:01:35,058
et vous enseigner
les détails à propos de <i>D3</i>

29
00:01:35,058 --> 00:01:38,809
irait bien au-delà
de la portée de ce cours.

30
00:01:39,999 --> 00:01:42,897
Si ça vous intéresse, n'hésitez pas.

31
00:01:42,897 --> 00:01:46,926
Il y a une grande quantité d'exemples ici,
il y a toute la documentation.

32
00:01:47,206 --> 00:01:52,937
Il y a des livres entiers et des tutoriels
en ligne pour vous instruire sur <i>D3</i>.

33
00:01:52,937 --> 00:01:55,488
C'est un outil tout à fait fascinant,

34
00:01:55,488 --> 00:01:58,166
mais nous n'allons pas
nous étendre dessus dans ce cours.

35
00:01:58,166 --> 00:02:01,737
Ce que je vais faire, simplement,
c'est que je vais vous donner un code

36
00:02:01,737 --> 00:02:04,170
qui fait tout pour vous,

37
00:02:04,170 --> 00:02:09,602
et puis nous nous en servirons
pour modéliser nos résultats.

38
00:02:09,992 --> 00:02:12,653
Alors, ce que vous devez faire,
grosso modo,

39
00:02:12,653 --> 00:02:16,523
c'est que quand vous voulez utiliser <i>D3</i>,
vous devez charger cette bibliothèque,

40
00:02:16,523 --> 00:02:19,437
et voici les instructions,
comment vous pouvez faire ça.

41
00:02:19,437 --> 00:02:22,287
Donc vous pouvez soit
la charger localement,

42
00:02:22,287 --> 00:02:24,277
ou bien, si vous êtes
connecté à Internet,

43
00:02:24,277 --> 00:02:26,954
ce qui est le cas,
du moins vous l'avez certainement été,

44
00:02:26,954 --> 00:02:30,637
autrement, vous ne seriez pas
en mesure de voir cette vidéo,

45
00:02:30,637 --> 00:02:34,364
vous pouvez simplement vous servir
de cet extrait de code ici,

46
00:02:34,364 --> 00:02:37,356
qui est, vous l'avez remarqué,
une balise de script,

47
00:02:37,946 --> 00:02:39,993
mais qui a cet attribut de <i>source</i>.

48
00:02:39,993 --> 00:02:45,831
Ça veut dire qu'il charge
un fichier bien précis, ici,

49
00:02:45,831 --> 00:02:49,176
ça s'appelle <i>d3.v3.min.js</i>,

50
00:02:49,176 --> 00:02:51,623
depuis un serveur quelque part,
dans votre code.

51
00:02:51,623 --> 00:02:53,351
Donc voilà ce que nous allons faire.

52
00:02:53,351 --> 00:02:58,071
Et, au fait, si vous êtes curieux,
n'hésitez pas à copier cet URL ici

53
00:02:58,071 --> 00:03:02,870
et à le coller dans le navigateur
et vous verrez alors, en gros,

54
00:03:02,870 --> 00:03:04,686
à quoi ressemble cette bibliothèque.

55
00:03:04,686 --> 00:03:08,702
Donc voici la bibliothèque et, évidemment,
elle est extrêmement condensée.

56
00:03:08,702 --> 00:03:14,413
Vous pouvez à peine comprendre
ce que tout ça signifie.

57
00:03:14,413 --> 00:03:16,433
Je veux dire, moi je n'y comprends rien.

58
00:03:16,433 --> 00:03:19,004
Mais c'est l'intérêt, elle a été minifiée.

59
00:03:19,004 --> 00:03:22,133
Elle a été condensée
pour demander peu de bande passante,

60
00:03:22,133 --> 00:03:25,437
mais en gros,
la bibliothèque entière est juste là.

61
00:03:25,887 --> 00:03:28,173
Alors, allons-y.

62
00:03:28,173 --> 00:03:30,763
Nous allons copier cette balise ici.

63
00:03:31,947 --> 00:03:35,207
OK, et je vais copier ça,

64
00:03:35,207 --> 00:03:39,597
et puis nous allons nous rendre
dans notre code de <i>Dérive Génétique</i>, ici,

65
00:03:40,017 --> 00:03:43,179
et nous allons charger ça ici,
dans le <i>&lt;head&gt;</i>,

66
00:03:43,179 --> 00:03:46,173
en tant que balise de script à part,
comme ceci.

67
00:03:46,173 --> 00:03:48,485
Donc maintenant,
quand le navigateur voit ça,

68
00:03:49,335 --> 00:03:52,225
il charge ou il essaye,
du moins, de charger

69
00:03:52,225 --> 00:03:53,647
ce document depuis Internet,

70
00:03:53,647 --> 00:03:56,188
donc ça ne marchera
que si vous êtes connecté.

71
00:03:56,188 --> 00:03:59,186
Alors, l'autre chose
dont vous avez besoin à présent,

72
00:03:59,186 --> 00:04:03,204
donc ceci charge la bibliothèque,
mais nous n'avons pas encore écrit de code

73
00:04:03,204 --> 00:04:08,008
pour dire, en gros, à JavaScript
ce qu'il doit modéliser, et comment.

74
00:04:08,008 --> 00:04:10,274
Donc ce code, encore une fois,

75
00:04:10,274 --> 00:04:12,694
écrire ce code et le comprendre en détail,

76
00:04:12,694 --> 00:04:15,724
irait bien au-delà de la portée
de ce programme.

77
00:04:15,724 --> 00:04:19,004
Donc je vais vous donner ce fichier,

78
00:04:19,004 --> 00:04:20,335
ou ce code.

79
00:04:20,655 --> 00:04:25,784
Et, si vous regardez cette vidéo
dans le cadre du MOOC,

80
00:04:25,784 --> 00:04:27,924
sur la page où vous êtes,

81
00:04:27,924 --> 00:04:29,749
vous trouverez un lien

82
00:04:30,399 --> 00:04:35,690
pour télécharger ce code,
appelé : <i>draw_line_chart</i>.

83
00:04:35,690 --> 00:04:38,678
Alors, trouvez le
quelque part sur cette page.

84
00:04:38,678 --> 00:04:44,199
Si vous ne le trouvez pas, vous pouvez
aller sur le site de <i>Nature, In Code</i>,

85
00:04:44,199 --> 00:04:48,538
qui est à <i>natureincode.com</i>,

86
00:04:49,287 --> 00:04:51,619
et ça ressemble à ça,

87
00:04:51,619 --> 00:04:53,288
pour le moment en tout cas.

88
00:04:53,288 --> 00:04:55,497
Vous le savez, les sites web
changent constamment,

89
00:04:55,497 --> 00:04:58,772
donc au moment
où vous regarderez cette vidéo,

90
00:04:58,772 --> 00:05:00,707
il sera peut-être un peu différent.

91
00:05:00,707 --> 00:05:02,408
C'est bien possible.

92
00:05:02,408 --> 00:05:03,486
Néanmoins,

93
00:05:04,236 --> 00:05:11,086
vous trouverez le code ici, quelque part,
où vous voyez <i>See Code In Action</i>,

94
00:05:11,396 --> 00:05:15,397
et vous pourrez voir ensuite,
par exemple, ici, <i>Dérive Génétique</i>.

95
00:05:15,397 --> 00:05:20,242
Ici, si vous allez voir le code
de démonstration, vous pouvez y trouver

96
00:05:21,432 --> 00:05:23,884
la fonction <i>draw_line_chart</i>,

97
00:05:23,884 --> 00:05:27,003
qui est conçue avec <i>D3</i>,
et on peut la trouver ici.

98
00:05:27,003 --> 00:05:28,941
Donc voici la fonction <i>draw_line_chart</i>.

99
00:05:28,941 --> 00:05:33,072
Je répète, le site aura peut-être changé
d'ici à ce que vous regardiez cette vidéo,

100
00:05:33,072 --> 00:05:34,705
mais elle sera sur ce site web,

101
00:05:34,705 --> 00:05:37,358
et elle est sans doute aussi
sur le site web du MOOC,

102
00:05:37,358 --> 00:05:39,193
alors la trouver devrait être facile.

103
00:05:39,193 --> 00:05:41,520
Donc je vais simplement copier ce code.

104
00:05:41,520 --> 00:05:44,008
C'est un peu complexe,
comme vous pouvez le voir ici,

105
00:05:44,008 --> 00:05:46,251
mais encore une fois,
pas besoin de s'en soucier

106
00:05:46,251 --> 00:05:48,202
car ce n'est que du code pour modéliser.

107
00:05:48,202 --> 00:05:52,839
Mais copiez-le puis retournez
à votre document

108
00:05:53,498 --> 00:05:59,438
et ensuite, collez ce code ici,

109
00:05:59,438 --> 00:06:02,757
au-dessus de notre code <i>Dérive Génétique</i>.

110
00:06:02,757 --> 00:06:07,695
Donc collez-le simplement, et vous pouvez
le laisser comme ça si vous le voulez.

111
00:06:07,695 --> 00:06:14,140
Je vais le mettre un peu en retrait,
juste pour que ce soit présentable.

112
00:06:14,140 --> 00:06:18,588
Donc, mise en retrait, ici,
comme ça. Très bien.

113
00:06:19,468 --> 00:06:24,527
Alors, il y a une chose
qu'il nous reste à faire,

114
00:06:24,527 --> 00:06:27,748
ce code à présent,
ce code de modélisation,

115
00:06:28,408 --> 00:06:32,669
utilise nos éléments <i>body</i>
afin de mettre du contenu

116
00:06:32,669 --> 00:06:37,257
de façon dynamique dans le <i>body</i>,
voilà comment fonctionne la modélisation.

117
00:06:37,257 --> 00:06:40,787
Et, vous vous souvenez peut-être
que le <i>head</i> sert à avoir des informations

118
00:06:40,787 --> 00:06:44,901
comme des scripts génériques
ou sur la paternité de la page

119
00:06:44,901 --> 00:06:46,849
ou du titre entre autres.

120
00:06:46,849 --> 00:06:50,429
Et le <i>body</i>, c'est là où
nous montrons les choses visuelles.

121
00:06:50,429 --> 00:06:53,239
Donc cette balise
de script entière, en fait,

122
00:06:53,239 --> 00:06:57,410
avec la fonction <i>draw_line_chart</i>,
et avec nos codes,

123
00:06:57,410 --> 00:07:02,000
nous devons la déplacer dans le <i>body</i>,
sinon ça ne fonctionnera pas.

124
00:07:02,000 --> 00:07:07,830
Donc copiez la balise de script entière
pour ne plus avoir que cette ligne <i>D3</i>,

125
00:07:08,540 --> 00:07:12,517
et déplacez la simplement ici,
dans le <i>body</i>,

126
00:07:12,517 --> 00:07:13,892
et c'est à peu près tout.

127
00:07:13,892 --> 00:07:16,136
Donc je vais juste copier ça,

128
00:07:16,136 --> 00:07:21,021
et nous sommes désormais prêts
à modéliser ce code.

129
00:07:21,931 --> 00:07:25,392
Donc vous pouvez voir ici
que nous avons la balise de script

130
00:07:25,392 --> 00:07:28,427
qui charge le <i>D3</i>,
on peut très bien la laisser dans le <i>head</i>.

131
00:07:28,427 --> 00:07:33,613
Mais ici, l'autre balise de script où nous
utilisons cette fonction <i>draw_line_chart</i>,

132
00:07:33,613 --> 00:07:38,272
et puis aussi tout en bas,
notre code <i>Dérive Génétique</i>,

133
00:07:38,412 --> 00:07:41,302
cette balise de script doit
à présent être dans le <i>body</i>.

134
00:07:41,302 --> 00:07:43,669
OK. Bien.

135
00:07:43,949 --> 00:07:47,502
Alors, sommes-nous prêts
à modéliser tout ça ? Presque.

136
00:07:47,502 --> 00:07:51,244
Et bien, d'abord, nous devons
nous débarrasser de certaines choses.

137
00:07:51,244 --> 00:07:54,263
Tout d'abord, nous n'avons plus
besoin de ce <i>console.log</i>,

138
00:07:54,263 --> 00:07:57,498
car nous ne voulons plus
le générer dans la console.

139
00:07:57,498 --> 00:07:59,002
Enfin, vous pourriez le garder.

140
00:07:59,002 --> 00:08:02,733
Vous pouvez, bien sûr, générer
des valeurs à la fois dans la console

141
00:08:02,733 --> 00:08:07,301
et les visualiser dans le navigateur,
mais je vais me contenter de l'enlever.

142
00:08:07,971 --> 00:08:09,002
Bien.

143
00:08:09,682 --> 00:08:12,242
Et aussi, ce <i>round_number</i>, en conséquence,

144
00:08:12,242 --> 00:08:14,152
ne sera plus nécessaire,

145
00:08:14,152 --> 00:08:15,989
donc je vais m'en débarrasser aussi,

146
00:08:15,989 --> 00:08:19,091
juste pour garder notre code assez propre.

147
00:08:20,511 --> 00:08:23,243
Donc ce qu'il me reste à faire maintenant,

148
00:08:23,243 --> 00:08:27,963
c'est de nommer cette fonction
<i>draw_line_chart</i>.

149
00:08:29,190 --> 00:08:33,969
Et maintenant, si on remonte et qu'on
regarde cette fonction <i>draw_line_chart</i>,

150
00:08:35,209 --> 00:08:38,181
nous pouvons voir, ici, la voilà,

151
00:08:38,181 --> 00:08:41,992
qu'elle a une quantité
de paramètres définis,

152
00:08:42,972 --> 00:08:46,980
on appelle ça des <i>données</i>,
<i>x_label</i>, <i>y_label</i>,

153
00:08:46,980 --> 00:08:51,877
<i>legend_values</i>,
<i>x_max</i> et <i>y_max_flex</i>.

154
00:08:51,877 --> 00:08:53,759
Alors à quoi ces choses
correspondent-elles ?

155
00:08:53,759 --> 00:08:55,430
Que veulent-elles dire ?

156
00:08:55,430 --> 00:09:00,203
En gros, ce qu'elles signifient,
c'est que je dois transmettre les données

157
00:09:00,203 --> 00:09:01,949
que je veux modéliser,

158
00:09:01,949 --> 00:09:06,221
puis je dois transmettre deux chaînes,
un <i>x_label</i> et un <i>y_label</i>, pour notre axe.

159
00:09:06,221 --> 00:09:09,481
Et si je veux une légende,
je dois transmettre quelques valeurs, ici,

160
00:09:09,481 --> 00:09:12,050
à cette fonction, en tant qu'argument.

161
00:09:12,420 --> 00:09:15,981
Ce deux-là sont des paramètres
que j'expliquerai un peu plus tard.

162
00:09:15,981 --> 00:09:18,491
Nous n'en avons pas besoin pour l'instant.

163
00:09:18,491 --> 00:09:21,087
Nous n'allons pas
transmettre ces paramètres,

164
00:09:21,087 --> 00:09:23,261
et en fait, la fonction
s'occupe déjà du fait

165
00:09:23,261 --> 00:09:25,470
que vous ne transmettez rien ici.

166
00:09:25,470 --> 00:09:28,811
Mais celles-ci vont être les valeurs
que nous aurons besoin de fournir.

167
00:09:28,811 --> 00:09:31,251
Donc ça, ça sera
une chaîne de caractères, ça aussi.

168
00:09:31,621 --> 00:09:35,023
Ça, ça va être un mélange,
je vous expliquerai tout à l'heure.

169
00:09:35,023 --> 00:09:38,687
Mais ici, ce sont les données,
c'est ça qu'on veut modéliser.

170
00:09:38,687 --> 00:09:41,441
Alors, qu'est-ce que c'est
que nous voulons modéliser ?

171
00:09:41,721 --> 00:09:44,733
Et bien, ce que nous voudrions modéliser,
ce sont ces valeurs <i>p</i>,

172
00:09:44,733 --> 00:09:47,171
comment elles évoluent avec le temps.

173
00:09:47,631 --> 00:09:50,309
Donc, ce que je dois faire,

174
00:09:50,309 --> 00:09:53,495
c'est que je dois conserver
toutes ces valeurs,

175
00:09:53,495 --> 00:09:55,952
les <i>p</i> changeant, avec le temps.

176
00:09:56,946 --> 00:10:00,675
Et ensuite, je dois
transmettre toutes ces valeurs

177
00:10:00,675 --> 00:10:03,387
à cette fonction <i>draw_line_chart</i>.

178
00:10:03,387 --> 00:10:07,576
Alors comment vais-je stocker
temporairement un grand nombre de valeurs,

179
00:10:07,576 --> 00:10:11,755
concrètement, 1 000 valeurs,
temporairement ?

180
00:10:11,755 --> 00:10:15,696
Et bien, il y a un type de variable
très pratique dans JavaScript,

181
00:10:15,696 --> 00:10:17,256
et on appelle ça un <i>array</i>.

182
00:10:17,256 --> 00:10:18,876
Et un <i>array</i>, en fait,

183
00:10:18,876 --> 00:10:23,052
c'est potentiellement la structure
la plus importante de JavaScript,

184
00:10:23,052 --> 00:10:27,716
et je vais parler de ça, en détails,
dans le prochain cours.

185
00:10:27,716 --> 00:10:30,995
Pour l'instant, vous n'avez besoin
de savoir que certaines choses.

186
00:10:30,995 --> 00:10:35,030
D'abord, je vais ajouter une variable ici.
Je vais l'appeler <i>data</i>,

187
00:10:36,400 --> 00:10:42,034
et je vais l'initialiser
avec ces deux crochets.

188
00:10:42,034 --> 00:10:45,032
Ouvert et fermé. Donc c'est vide, en gros.

189
00:10:45,982 --> 00:10:48,641
Ce type de crochet

190
00:10:48,641 --> 00:10:51,613
est utilisé pour indiquer un <i>array</i>.

191
00:10:51,943 --> 00:10:54,029
Donc c'est un <i>array</i> vide.

192
00:10:54,489 --> 00:10:57,503
Alors, un <i>array</i>, en gros,
c'est juste un ensemble de valeurs.

193
00:10:57,503 --> 00:11:00,691
Il peut être vide
s'il n'y a pas de valeur dedans,

194
00:11:00,691 --> 00:11:03,462
mais il peut contenir beaucoup de valeurs.

195
00:11:03,462 --> 00:11:06,901
C'est assez pratique car les variables,
comme vous le voyez ici,

196
00:11:06,901 --> 00:11:10,004
ne vous permettent
de stocker qu'une seule valeur.

197
00:11:10,004 --> 00:11:13,243
Celle-ci stocke une valeur,
celle-là stocke une valeur,

198
00:11:13,243 --> 00:11:15,032
celle-ci stocke une valeur.

199
00:11:15,032 --> 00:11:17,502
Il n'y a aucun moyen
de stocker plusieurs valeurs.

200
00:11:17,502 --> 00:11:20,199
Voilà ce que l'<i>array</i> peut faire.

201
00:11:20,199 --> 00:11:23,752
Donc ceci est un <i>array</i>,
il peut stocker des valeurs multiples.

202
00:11:23,752 --> 00:11:27,362
Alors, ici, après que j'aie
calculé le nouveau <i>p</i>,

203
00:11:28,112 --> 00:11:32,863
je vais dire : <i>data.push(p)</i>.

204
00:11:33,413 --> 00:11:38,512
Ce qui va se passer, c'est qu'il va
pousser la valeur <i>p</i> dans l'<i>array data</i>.

205
00:11:38,512 --> 00:11:42,406
Encore une fois, on en reparlera
en détails dans le prochain cours.

206
00:11:42,406 --> 00:11:45,354
Pour l'instant, il vous suffit
de savoir que ceci est un <i>array</i>

207
00:11:45,354 --> 00:11:47,215
qui peut contenir
des valeurs multiples.

208
00:11:47,215 --> 00:11:50,874
Et ici, nous poussons des valeurs <i>p</i>
dans cet <i>array data</i>.

209
00:11:51,684 --> 00:11:54,707
OK, alors, et à la fin,
une fois que nous avons terminé ici,

210
00:11:54,707 --> 00:11:59,665
d'appeler la <i>next_generation</i>
à de nombreuses reprises,

211
00:11:59,665 --> 00:12:01,965
1 000 fois pour le moment,

212
00:12:01,965 --> 00:12:07,170
nous voudrions visualiser
ces données, à présent.

213
00:12:07,170 --> 00:12:13,297
Alors nous allons maintenant appeler
cette méthode <i>draw_line_chart</i>,

214
00:12:13,907 --> 00:12:16,705
et nous allons lui transmettre
plusieurs arguments.

215
00:12:16,705 --> 00:12:18,879
Donc le premier est ce <i>array data</i>,

216
00:12:18,879 --> 00:12:21,254
je transmets à présent cet <i>array</i>

217
00:12:21,254 --> 00:12:25,524
qui est maintenant rempli
avec 1 000 valeurs.

218
00:12:26,434 --> 00:12:28,614
Et ensuite, le deuxième,

219
00:12:28,614 --> 00:12:33,606
si vous remontez jusqu'à
la définition de cette fonction,

220
00:12:36,696 --> 00:12:40,104
le deuxième argument que nous devons
transmettre est le <i>x_label</i>,

221
00:12:40,104 --> 00:12:41,811
le troisième est le <i>y_label</i>,

222
00:12:41,811 --> 00:12:44,395
et puis les valeurs
que nous voudrions dans la légende.

223
00:12:44,395 --> 00:12:46,187
Alors revenons ici

224
00:12:46,187 --> 00:12:50,987
et mettons-y le <i>x_label</i>.

225
00:12:50,987 --> 00:12:55,818
Donc sur l'axe x, nous aurons le temps,
ou grosso modo les générations.

226
00:12:55,818 --> 00:13:00,545
Donc, ici, je vais juste taper <i>Generation</i>.

227
00:13:00,545 --> 00:13:04,143
Ça sera mon <i>x_label</i>,
mon étiquette sur l'axe x.

228
00:13:05,870 --> 00:13:08,771
Ce que j'aimerais faire,
c'est que j'aimerais avoir

229
00:13:09,681 --> 00:13:13,392
juste la lettre <i>p</i> sur l'axe y,

230
00:13:13,392 --> 00:13:17,181
parce que ça va être la fréquence
de l'<i>allèle a1</i>, ou <i>p</i>,

231
00:13:17,181 --> 00:13:19,431
alors que nous la calculons ici.

232
00:13:19,891 --> 00:13:26,431
Et puis, la légende elle-même,
en fait, doit être un <i>array</i>,

233
00:13:26,431 --> 00:13:29,261
et vous pouvez simplement
taper ceci avec moi,

234
00:13:29,261 --> 00:13:33,533
mais je vais transmettre, ici,
un <i>array</i> à cette fonction

235
00:13:33,533 --> 00:13:37,692
et il a quatre valeurs, pour être précis,
l'étiquette <i>Population Size</i>.

236
00:13:43,952 --> 00:13:47,178
La taille effective de la population,
qui est stockée dans <i>N</i>.

237
00:13:47,743 --> 00:13:51,763
En fait, permettez-moi d'ajouter
deux points ici, c'est un peu plus joli.

238
00:13:52,243 --> 00:13:55,670
Et ensuite, le nombre
de générations comme étiquette,

239
00:13:55,670 --> 00:13:57,792
donc je vais juste dire <i>Generations</i>.

240
00:13:59,672 --> 00:14:01,999
Et puis, bien sûr,
le nombre de générations,

241
00:14:01,999 --> 00:14:04,728
qui est stocké actuellement
dans <i>Generations</i>.

242
00:14:04,998 --> 00:14:10,109
Alors nous allons à présent appeler
cette fonction, et ça devrait fonctionner.

243
00:14:10,109 --> 00:14:14,499
Donc, sauvegardons ça et espérons
que tout ait bien fonctionné.

244
00:14:14,499 --> 00:14:16,594
Revenons à notre navigateur.

245
00:14:18,420 --> 00:14:20,589
Je vais fermer ces onglets ici,

246
00:14:20,909 --> 00:14:24,138
et je suis toujours ici
à mon exemple de <i>Dérive Génétique</i>,

247
00:14:24,138 --> 00:14:26,701
donc je n'aurai plus besoin
de la console ici.

248
00:14:26,701 --> 00:14:30,640
Alors je vais fermer ça,
et je vais recharger ce document,

249
00:14:30,640 --> 00:14:31,960
et boum !

250
00:14:31,960 --> 00:14:34,630
Voici notre première modélisation.

251
00:14:34,630 --> 00:14:35,841
Regardez ça.

252
00:14:35,841 --> 00:14:38,839
Alors, ici, nous avons
le nombre de Générations.

253
00:14:40,529 --> 00:14:43,210
Ici, vous voyez <i>p</i>,
la fréquence d'<i>allèle a1</i>

254
00:14:43,210 --> 00:14:45,161
entre zéro et un.

255
00:14:45,161 --> 00:14:47,357
Et ici, vous voyez
son évolution avec le temps.

256
00:14:47,357 --> 00:14:48,755
Et ça, c'est la légende.

257
00:14:48,755 --> 00:14:50,487
C'est ce que nous avons transmis,

258
00:14:50,487 --> 00:14:53,546
la chaîne de caractères
<i>Population Size</i> et <i>Generations</i>,

259
00:14:53,546 --> 00:14:55,667
et ces deux valeurs.

260
00:14:55,667 --> 00:14:57,746
Vous pouvez à présent la recharger,

261
00:14:57,746 --> 00:15:01,154
et cette simulation
va changer immédiatement.

262
00:15:01,584 --> 00:15:02,911
C'est pas cool, ça ?

263
00:15:02,911 --> 00:15:04,719
En fait, revenons au code,

264
00:15:05,979 --> 00:15:10,182
et nous allons maintenant réduire
un petit peu la taille de la population.

265
00:15:10,182 --> 00:15:16,171
Je vais simplement taper ici :
N = 500 au lieu de 1 000.

266
00:15:16,171 --> 00:15:19,836
Donc cette population est maintenant
réduite de moitié par rapport à avant.

267
00:15:19,836 --> 00:15:21,552
Alors, on enregistre, on y retourne.

268
00:15:21,552 --> 00:15:23,201
Ici, vous pouvez
voir deux choses :

269
00:15:23,201 --> 00:15:25,243
Première chose,
alors bien sûr, avant tout,

270
00:15:25,243 --> 00:15:28,272
cette légende a été mise à jour
automatiquement et correctement.

271
00:15:28,672 --> 00:15:30,321
Et l'autre chose que vous voyez,

272
00:15:30,321 --> 00:15:34,132
c'est que vous voyez ici,
une simulation de fixation.

273
00:15:34,132 --> 00:15:38,238
Ici, <i>p</i> connait des hauts et des bas,
mais globalement, il monte,

274
00:15:38,238 --> 00:15:40,244
et il finit par arriver à fixation.

275
00:15:40,244 --> 00:15:41,672
Alors rechargeons ça.

276
00:15:42,102 --> 00:15:43,972
Ici, il a perdu.

277
00:15:44,332 --> 00:15:46,002
D'abord, c'est très intéressant.

278
00:15:46,002 --> 00:15:49,318
Donc, d'abord, il monte et atteint 80 %,

279
00:15:49,318 --> 00:15:52,684
donc ça a l'air de se passer
vraiment bien pour l'<i>allèle a1</i>,

280
00:15:52,684 --> 00:15:54,024
mais ensuite il s'effondre.

281
00:15:54,024 --> 00:15:58,531
Il disparaît presque de la population,
récupère un petit peu,

282
00:15:58,531 --> 00:16:03,542
mais ensuite, vers la génération 900,
il disparaît complètement de la population

283
00:16:03,542 --> 00:16:07,267
et ça, bien sûr, ça veut dire
que l'<i>allèle a2</i> va arriver à fixation.

284
00:16:07,267 --> 00:16:09,510
Donc on pourrait en principe
placer l'<i>allèle a2</i>

285
00:16:09,510 --> 00:16:14,563
mais ce ne serait que l'exacte courbe
inverse parce que <i>q</i> et <i>p</i>,

286
00:16:14,563 --> 00:16:18,104
ou les fréquences a1 et a2,
finissent toujours par totaliser un.

287
00:16:18,104 --> 00:16:19,644
Rechargeons ça à nouveau.

288
00:16:19,924 --> 00:16:21,777
Oui, il est presque arrivé à fixation.

289
00:16:22,617 --> 00:16:24,623
Celle-ci est très intéressante, regardez.

290
00:16:25,963 --> 00:16:28,214
<i>p</i> baisse, donc la fréquence de l'<i>allèle a1</i>

291
00:16:28,214 --> 00:16:31,774
baisse jusqu'à quelques petits points
de pourcentage , à la génération 5,

292
00:16:31,774 --> 00:16:36,234
mais il finit par effectuer
un retour à plus de 50 %,

293
00:16:36,234 --> 00:16:38,925
et qui sait ce qui va
se passer à l'avenir.

294
00:16:38,925 --> 00:16:40,503
Donc c'est vraiment passionnant.

295
00:16:40,503 --> 00:16:45,014
Vous pouvez recharger ça quelques fois
et vous pouvez observer deux choses :

296
00:16:45,014 --> 00:16:49,230
La première, ces simulations sont
des simulations stochastiques, aléatoires,

297
00:16:49,230 --> 00:16:52,353
de ce fait, aucune simulation
ne sera identique à une autre.

298
00:16:52,923 --> 00:16:55,023
Vous pouvez aussi observer que parfois,

299
00:16:55,973 --> 00:16:58,486
la fréquence d'un <i>allèle</i>
atteindra zéro ou un,

300
00:16:58,486 --> 00:17:01,433
comme nous l'avons observé
précédemment dans le <i>console.log</i>.

301
00:17:01,433 --> 00:17:04,178
Et ça veut dire
que si un allèle arrive à fixation,

302
00:17:04,178 --> 00:17:08,650
vous perdez la variation génétique,
parce que vous n'avez plus qu'un allèle,

303
00:17:08,650 --> 00:17:10,285
vous n'avez plus de variation.

304
00:17:10,285 --> 00:17:11,906
Et l'autre chose que vous noterez,

305
00:17:11,906 --> 00:17:14,227
c'est que c'est rapide
comme l'éclair, pas vrai ?

306
00:17:14,227 --> 00:17:18,151
Enfin, nous traitons
de 1 000 générations ici,

307
00:17:18,151 --> 00:17:21,302
et c'est visualisé instantanément.

308
00:17:21,302 --> 00:17:25,027
Donc voilà pourquoi c'est si bien,
selon moi, de le faire dans le navigateur.

309
00:17:25,027 --> 00:17:28,875
C'est tellement rapide
et c'est si facile à faire.

310
00:17:28,875 --> 00:17:31,855
Et vous pouvez à présent voir ça
sur n'importe quel navigateur,

311
00:17:31,855 --> 00:17:34,190
aussi bien sur un téléphone,
que sur une tablette,

312
00:17:34,190 --> 00:17:37,260
sur un ordinateur de bureau
ou encore un ordinateur portable.

313
00:17:37,500 --> 00:17:38,850
Donc il y a à ce jour

314
00:17:38,850 --> 00:17:42,355
quelques milliards d'appareils
capables de faire tourner ce code

315
00:17:42,355 --> 00:17:44,165
et je trouve ça plutôt fascinant.

316
00:17:44,165 --> 00:17:46,680
Voilà qui conclut cette vidéo.
Félicitations.

317
00:17:46,680 --> 00:17:52,695
Vous avez modélisé la <i>Dérive Génétique</i>
dans un navigateur et ça, c'est génial.

318
00:17:52,695 --> 00:17:56,495
Nous allons nous servir de cette
fonctionnalité <i>D3</i>, cette bibliothèque,

319
00:17:56,495 --> 00:18:01,990
pour faire des graphiques, pour modéliser
des choses en profondeur à l'avenir.

320
00:18:01,990 --> 00:18:05,324
Le fait de copier et coller du code
vous a peut-être paru un peu lourd,

321
00:18:05,324 --> 00:18:06,885
et on ne fait pas ça d'habitude,

322
00:18:06,885 --> 00:18:10,485
mais, comme je le disais,
ce n'est pas grave, ici,

323
00:18:10,485 --> 00:18:12,786
parce que je voulais juste
vous donner ce code,

324
00:18:12,786 --> 00:18:16,406
plutôt que vous ayez à comprendre
le <i>D3</i> en partant de zéro.

325
00:18:16,406 --> 00:18:18,936
Et il s'avère que j'ai développé ce code

326
00:18:18,936 --> 00:18:20,287
de façon très générique,

327
00:18:20,287 --> 00:18:23,848
donc nous serons en mesure de l'utiliser
pour bien d'autres graphiques.

328
00:18:23,848 --> 00:18:28,910
Alors, dans la prochaine vidéo,
j'aimerais évoquer brièvement

329
00:18:28,910 --> 00:18:33,038
et étudier ce concept d'<i>array</i>
que nous avons découvert aujourd'hui.

330
00:18:33,038 --> 00:18:37,317
C'est un outil très puissant
dans votre arsenal JavaScript

331
00:18:37,317 --> 00:18:40,036
et nous l'évoquerons en détails
dans le prochain cours.

332
00:18:40,036 --> 00:18:41,117
On se retrouve là-bas.
