1
00:00:03,570 --> 00:00:06,590
Welcome back Nature, In Code.
This is Chapter three, lecture three.

2
00:00:06,590 --> 00:00:10,660
In this video will implement 
the coin tossing example in JavaScript

3
00:00:10,660 --> 00:00:11,630
and as we do this,

4
00:00:11,630 --> 00:00:14,490
we'll learn about a very important 
concept in programing,

5
00:00:14,490 --> 00:00:16,440
namely that of control flow.

6
00:00:16,440 --> 00:00:17,500
So let's get going.

7
00:00:17,500 --> 00:00:22,390
So here we have our code from last time 
essentially using math random,

8
00:00:22,390 --> 00:00:24,600
demonstrating math random

9
00:00:24,600 --> 00:00:29,850
as this method that returns 
a random number between zero and one

10
00:00:29,850 --> 00:00:33,099
and it's going to be very handy for us
in the future.

11
00:00:33,620 --> 00:00:36,485
So, let's go ahead and implement 
our coin toss.

12
00:00:36,740 --> 00:00:40,030
So I'm going do is I'm just going 
to take this cold here,

13
00:00:40,030 --> 00:00:41,300
I'm going to get rid of it,

14
00:00:41,300 --> 00:00:43,060
and then I'm going to <i>Save As</i>.

15
00:00:43,060 --> 00:00:44,220
So don't <i>Save</i>,

16
00:00:44,220 --> 00:00:47,610
otherwise you will overwrite your file.

17
00:00:47,610 --> 00:00:50,900
<i>Save As</i> and I'm going to name this--

18
00:00:51,230 --> 00:00:56,781
I'm going to call this file 
"Coin Tossing."

19
00:00:57,060 --> 00:00:58,475
Okay "Coin Tossing."

20
00:00:59,440 --> 00:01:00,570
All right.

21
00:01:02,580 --> 00:01:07,652
What we did in the previous lectures is
to look at the probability

22
00:01:08,510 --> 00:01:13,143
of throwing 10 coins--
flipping 10 coins

23
00:01:14,980 --> 00:01:19,503
this resulting in eight heads coming up 
and two tails coming up

24
00:01:19,530 --> 00:01:22,678
and we calculated this as 4.39%.

25
00:01:23,390 --> 00:01:25,050
And now we want to do,

26
00:01:25,050 --> 00:01:28,870
rather than calculating it is 
we actually want to throw 10 coins

27
00:01:28,900 --> 00:01:30,140
many, many times

28
00:01:30,140 --> 00:01:35,350
and calculate how often, actually, 
this particular result,

29
00:01:35,350 --> 00:01:38,200
eight heads and two tales 
does indeed come up.

30
00:01:38,200 --> 00:01:39,976
So how can we do this in JavaScript?

31
00:01:40,810 --> 00:01:42,157
Well, first of all,

32
00:01:42,650 --> 00:01:44,800
let's define some variables 
to set things up.

33
00:01:44,800 --> 00:01:47,870
So I'm going to define this of <i>var coins</i>

34
00:01:47,870 --> 00:01:49,840
and we're going to set it to 10.

35
00:01:49,840 --> 00:01:51,370
So this variable is basically

36
00:01:51,370 --> 00:01:54,820
going to contain 
the number of coins that I have

37
00:01:54,820 --> 00:01:56,544
and we said we want have 10

38
00:01:57,340 --> 00:02:02,130
and then I need to keep track of
how many heads and tails will come up.

39
00:02:02,130 --> 00:02:04,290
So I'm going to define two variables,

40
00:02:04,290 --> 00:02:07,328
one that I'm going to name, whoops, <i>heads</i>,

41
00:02:08,360 --> 00:02:10,100
and then I'm going to initialize at zero

42
00:02:11,000 --> 00:02:15,514
and the other I'm going to call <i>tails</i> 
and I'm going to initialize at zero as well.

43
00:02:16,800 --> 00:02:17,830
All right.

44
00:02:17,830 --> 00:02:20,140
So now what I'd like to do is

45
00:02:20,140 --> 00:02:25,400
I'd like to throw 10 coins,

46
00:02:26,120 --> 00:02:31,120
which means I basically 
have to call this math random

47
00:02:31,640 --> 00:02:36,078
10 times or however many 
times I have in coins.

48
00:02:36,730 --> 00:02:39,020
So I have to do something repeatedly.

49
00:02:39,020 --> 00:02:44,250
This of course is the signal 
for iteration, for loop

50
00:02:44,250 --> 00:02:46,240
and in particular we're going 
to use the for loop.

51
00:02:46,240 --> 00:02:50,260
So I'm going build here a for loop,
as we have before,

52
00:02:50,260 --> 00:02:52,630
so <i>var i = 0</i>

53
00:02:52,630 --> 00:02:54,963
This is our initialization.

54
00:02:56,950 --> 00:03:01,560
The condition will be <i>i</i> smaller than 
whatever I have coins

55
00:03:01,560 --> 00:03:03,470
and the final expression here is

56
00:03:03,470 --> 00:03:07,406
simply the increment of <i>i</i> by one.

57
00:03:07,700 --> 00:03:10,550
So basically the exact same thing 
as before

58
00:03:10,550 --> 00:03:13,240
and we're going to use this construct 
over and over again.

59
00:03:14,090 --> 00:03:19,340
Good; so I like to call 
math random in here.

60
00:03:19,340 --> 00:03:21,360
All right, but what I'm going 
to do with this?

61
00:03:21,360 --> 00:03:24,130
I mean, how can I now 
go from this math random,

62
00:03:24,130 --> 00:03:30,321
which will return any random number 
between zero and one to a fair coin?

63
00:03:31,200 --> 00:03:37,870
Well, basically we can now use the fact 
that each number between zero and one

64
00:03:37,870 --> 00:03:42,130
comes up with equal probability 
when calling math random.

65
00:03:42,570 --> 00:03:45,880
So what I can say here, for example, is

66
00:03:45,880 --> 00:03:47,920
and I'm going now using new statement.

67
00:03:47,920 --> 00:03:50,730
So you just have to follow me.
I'll explain this in great detail.

68
00:03:51,630 --> 00:03:55,895
<i>if (math.random ()</i>

69
00:03:56,320 --> 00:03:59,028
I'm going to get rid here of this semicolon--

70
00:03:59,640 --> 00:04:03,395
is smaller or equal to 0.5

71
00:04:05,160 --> 00:04:10,254
I'm going to close parentheses here--
then in curly brackets,

72
00:04:11,090 --> 00:04:13,640
I'm going to do something.

73
00:04:13,640 --> 00:04:15,850
So what this means, again,

74
00:04:15,850 --> 00:04:17,180
we'll talk about the statement,

75
00:04:17,180 --> 00:04:22,270
but you can clearly I think understand 
what this does, <i>if</i>

76
00:04:24,060 --> 00:04:28,220
this math random call returns a number

77
00:04:28,220 --> 00:04:32,810
that is smaller or equal than 0.5

78
00:04:32,810 --> 00:04:34,900
then I'm going to do something.

79
00:04:34,900 --> 00:04:36,640
So what this means is

80
00:04:36,640 --> 00:04:43,083
this will essentially be let's say the 
the throwing of a coin and heads comes up.

81
00:04:43,580 --> 00:04:46,150
So what I'm going to do in that case is

82
00:04:46,150 --> 00:04:51,533
I'm simply going to increase 
the heads variable by one

83
00:04:53,130 --> 00:04:55,130
and if this is not the case,

84
00:04:55,130 --> 00:05:01,760
so if math random has actually returned 
a number that is greater than 0.5

85
00:05:02,560 --> 00:05:07,634
and for that I can use 
the <i>else</i> statement, so <i>else</i>.

86
00:05:08,120 --> 00:05:14,140
Well in this case tails came up,
so tails equals plus one.

87
00:05:14,480 --> 00:05:17,510
So this is how we read it,

88
00:05:17,510 --> 00:05:18,740
right.

89
00:05:18,740 --> 00:05:23,130
We're going to call this math random 
if it brings up a number

90
00:05:23,130 --> 00:05:27,180
that's smaller or equal to 0.5.

91
00:05:27,180 --> 00:05:29,650
Then were going to increased is heads by one

92
00:05:29,650 --> 00:05:33,609
'cause then we're going to assume 
the coin came up heads

93
00:05:35,130 --> 00:05:38,340
otherwise we're going to assume tails came up

94
00:05:38,340 --> 00:05:42,300
and so we're going 
to increase tails by one.

95
00:05:42,680 --> 00:05:46,386
And so this is now essentially 
our coin tosser

96
00:05:46,950 --> 00:05:50,080
because we can simply 
call this method here and say,

97
00:05:50,080 --> 00:05:52,810
"Well, you know, 
in exactly half of the time,

98
00:05:52,810 --> 00:05:56,007
the result here is going to be 
smaller or equal to 0.5

99
00:05:56,290 --> 00:05:58,510
and in exactly half of the time,

100
00:05:58,510 --> 00:06:00,950
the result is going to be 
greater than 0.5."

101
00:06:00,950 --> 00:06:04,580
So this is exactly the same 
probability distribution,

102
00:06:04,580 --> 00:06:06,830
if you will, as a fair coin.

103
00:06:08,050 --> 00:06:12,750
So all we have to do now 
basically is to say

104
00:06:12,750 --> 00:06:16,950
or to output into the console 
how often things happen here.

105
00:06:16,950 --> 00:06:19,930
So what I'm going to do is 
I'm going to write

106
00:06:19,930 --> 00:06:23,053
<i>console.log(heads</i>

107
00:06:23,840 --> 00:06:25,460
I'm just going to say heads.

108
00:06:27,850 --> 00:06:28,980
And

109
00:06:30,730 --> 00:06:34,020
tails the number and <i>tails</i>.

110
00:06:35,880 --> 00:06:39,160
Okay, so this will output the value 
that we have in the variable,

111
00:06:39,160 --> 00:06:43,200
then the string heads 
the value that we have a variable tails

112
00:06:43,200 --> 00:06:45,010
and then the string tails.

113
00:06:45,010 --> 00:06:51,370
So let's save this and let's go over 
to the browser and open this file.

114
00:06:51,370 --> 00:06:55,190
So here's our previous random HTML file.

115
00:06:55,190 --> 00:06:57,104
So I'm going to be in the same directory.

116
00:06:57,370 --> 00:06:58,773
So I'm just going to say

117
00:06:58,920 --> 00:07:03,247
<i>cointossing.html</i>

118
00:07:04,420 --> 00:07:09,834
All right, and here's our result:
so six heads, four tails.

119
00:07:10,040 --> 00:07:12,010
So that's pretty nice.

120
00:07:12,010 --> 00:07:13,920
Let's reload this.

121
00:07:13,950 --> 00:07:16,487
Five heads, five tails, 
five heads, five tails,

122
00:07:16,800 --> 00:07:20,280
three and seven, four and six, 
two and eight.

123
00:07:20,280 --> 00:07:23,710
So you can see this is basically 
exactly what this web page did

124
00:07:23,710 --> 00:07:25,872
that we recently looked at with the coins.

125
00:07:27,280 --> 00:07:32,930
it mostly brings up five/five and four/six
but occasionally there's a seven/three.

126
00:07:32,930 --> 00:07:33,912
Here's a two/eight.

127
00:07:34,470 --> 00:07:38,860
If we will keep doing this for a long time 
we would get a one/nine.

128
00:07:38,860 --> 00:07:41,960
But as you can see that is fairly rare.

129
00:07:41,960 --> 00:07:44,080
In any case, this works.

130
00:07:44,080 --> 00:07:46,440
So let's go back to the code.

131
00:07:46,440 --> 00:07:51,800
Now this is our coin flipping example 
and this works fine.

132
00:07:51,800 --> 00:07:55,670
So we'll talk in greater detail about this

133
00:07:55,670 --> 00:07:59,393
but just for now essentially 
how this works is

134
00:07:59,560 --> 00:08:03,178
you have this <i>if</i> statement 
and then you need parentheses

135
00:08:04,510 --> 00:08:07,227
and in those parentheses 
you need to have a condition

136
00:08:07,410 --> 00:08:09,870
and if this condition--
so for example here,

137
00:08:09,870 --> 00:08:14,530
math random needs to be 
smaller than or equal to 0.5.

138
00:08:14,530 --> 00:08:16,420
If this evaluates to <i>true</i>

139
00:08:17,080 --> 00:08:21,581
then whatever follows here 
in the curly brackets will be executed.

140
00:08:23,050 --> 00:08:24,800
And if not,

141
00:08:24,800 --> 00:08:29,700
so this <i>else</i> then this statement,

142
00:08:29,700 --> 00:08:31,740
or these statements here 
in the curly brackets

143
00:08:31,740 --> 00:08:33,986
following the <i>else</i> will be executed.

144
00:08:34,520 --> 00:08:36,430
And this is super handy.

145
00:08:36,430 --> 00:08:38,200
Now, couple of things, first of all,

146
00:08:38,200 --> 00:08:41,060
you actually don't need 
an <i>else</i> at all times.

147
00:08:41,060 --> 00:08:42,860
I mean, here we need it,

148
00:08:42,860 --> 00:08:47,380
but it's perfectly correct 
from a syntax perspective

149
00:08:47,380 --> 00:08:49,710
to have simply an <i>if</i> statement

150
00:08:49,710 --> 00:08:52,280
and say well, "If something is true,

151
00:08:52,280 --> 00:08:56,242
then I'm going to execute 
these lines of code, without an <i>else</i>"

152
00:08:56,460 --> 00:08:59,350
But sometimes you have 
an <i>if else</i> situation

153
00:08:59,350 --> 00:09:01,513
and then this <i>else</i> comes in quite handy.

154
00:09:01,560 --> 00:09:07,207
So if this is true,then do this, 
if it's not true, so <i>else</i>, then do this.

155
00:09:08,030 --> 00:09:11,660
There is also a third element 
that you could add,

156
00:09:11,660 --> 00:09:16,900
namely the combined <i>else.if</i> some condition

157
00:09:17,030 --> 00:09:18,347
and then some statement

158
00:09:18,560 --> 00:09:21,430
and we'll be talking about this 
in another lecture

159
00:09:21,430 --> 00:09:25,750
but I just want you do know for now 
that this exists.

160
00:09:25,750 --> 00:09:27,278
All right, I'm going to remove this.

161
00:09:28,730 --> 00:09:32,090
All right, so one one word of warning

162
00:09:32,090 --> 00:09:33,900
that I want to mention here as well

163
00:09:33,900 --> 00:09:36,920
if you actually look at real world 
JavaScript code,

164
00:09:36,920 --> 00:09:39,574
sometimes you see something like this.

165
00:09:41,250 --> 00:09:45,984
You see an <i>if</i> statement
case something like,

166
00:09:46,160 --> 00:09:50,090
for example, <i>if (math.random)</i>

167
00:09:50,090 --> 00:09:52,278
smaller than 0.1-- 
doesn't matter--

168
00:09:52,740 --> 00:09:57,366
then you know heads equals one 
or something.

169
00:09:58,090 --> 00:10:02,030
It doesn't exactly matter 
what the content of this line is

170
00:10:02,690 --> 00:10:03,820
what is crucial here

171
00:10:03,820 --> 00:10:07,230
is that you can see the <i>if</i> statement 
then you can see the condition.

172
00:10:07,230 --> 00:10:08,780
Okay, if this is true

173
00:10:08,780 --> 00:10:11,464
and then immediately following on the same line

174
00:10:12,270 --> 00:10:14,880
one line of code that has to be executed.

175
00:10:14,880 --> 00:10:19,212
Now this is technically correct JavaScript.

176
00:10:19,560 --> 00:10:22,480
Okay you don't need the curly brackets.

177
00:10:22,480 --> 00:10:26,630
But again you haven't heard this from me
because my very strong advice to you is

178
00:10:26,630 --> 00:10:27,960
don't ever do this.

179
00:10:28,730 --> 00:10:33,170
This will lead to all kinds of
bugs down the road if you're not careful

180
00:10:34,110 --> 00:10:38,010
and I'm going to explain in another lecture 
what those bugs look like

181
00:10:38,290 --> 00:10:40,580
and why that's a problem.

182
00:10:40,580 --> 00:10:41,880
So don't do this

183
00:10:41,880 --> 00:10:44,370
but it is principle technically correct.

184
00:10:44,370 --> 00:10:49,110
Do it instead like this: <i>if</i> the condition,
then curly brackets.

185
00:10:49,110 --> 00:10:51,956
And if you need an <i>else</i>,
<i>else</i> curly brackets

186
00:10:52,180 --> 00:10:57,488
and all this conditional code here 
in those curly brackets.

187
00:10:57,770 --> 00:11:01,010
And now you can also see 
why this is called control flow

188
00:11:01,010 --> 00:11:05,050
because you're essentially 
controlling the flow of your code

189
00:11:05,050 --> 00:11:07,070
depending on certain conditions

190
00:11:07,070 --> 00:11:08,070
and as you can imagine

191
00:11:08,070 --> 00:11:11,520
this will come in extremely handy 
down the line

192
00:11:11,520 --> 00:11:14,380
and we'll use this construct <i>if else</i>

193
00:11:14,380 --> 00:11:17,070
very heavily throughout 
the rest of the course.

194
00:11:17,400 --> 00:11:18,923
All right, this concludes this video.

195
00:11:19,110 --> 00:11:21,890
You just learned about 
the <i>if else</i> statement,

196
00:11:21,890 --> 00:11:24,460
a very important statement 
in programing

197
00:11:24,460 --> 00:11:30,590
and we used the math random method 
to implement a coin tosser.

198
00:11:30,590 --> 00:11:33,530
In the next lecture we're going to 
take this a step further.

199
00:11:33,530 --> 00:11:34,300
I'll see you there.
