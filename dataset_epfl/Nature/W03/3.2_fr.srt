1
00:00:03,250 --> 00:00:04,640
Bienvenue la nature, dans le Code.

2
00:00:04,640 --> 00:00:07,090
Nous sommes dans le chapitre 3, leçon 2.

3
00:00:07,090 --> 00:00:11,380
Dans la dernière vidéo, nous avons
développé une intuition pour pile ou face

4
00:00:11,380 --> 00:00:15,540
et la probabilité des résultats
de ces expériences lance d'une piécet.

5
00:00:15,540 --> 00:00:16,670
Dans cette vidéo,

6
00:00:16,670 --> 00:00:19,720
nous allons consolider cela
un peu plus quantitativement,

7
00:00:19,720 --> 00:00:22,780
et puis nous allons en fait
mettre en œuvre cela en JavaScript.

8
00:00:22,780 --> 00:00:27,040
Donc, ceci est la distribution binomiale comme
nous l'avons vu dans la dernière leçon,

9
00:00:27,040 --> 00:00:29,420
et voici le résultat possible

10
00:00:29,420 --> 00:00:34,020
lorsque vous lancez la pièce,
une pièce de monnaie, dix fois.

11
00:00:34,020 --> 00:00:38,040
Donc, ici, nous pourrions dire que
ce sont le nombre de queues qu'on aura,

12
00:00:38,040 --> 00:00:44,000
et ce serait la probabilité de
ce nombre de queues à venir

13
00:00:44,000 --> 00:00:46,340
si vous avez fait ceci
beaucoup, beaucoup de fois.

14
00:00:46,350 --> 00:00:50,200
Et maintenant, nous pouvons en sorte
zoomer dans une de ces résultats.

15
00:00:50,200 --> 00:00:53,470
Donc, disons, par exemple,
nous allons faire un zoom sur celui-ci.

16
00:00:53,470 --> 00:00:57,480
Donc, celui-ci signifie que exactement
deux queues sont venus.

17
00:00:57,480 --> 00:01:02,030
Donc, nous pouvons maintenant calculer
quelle est la probabilité que cela se produise.

18
00:01:02,040 --> 00:01:06,490
Alors, quelle est la probabilité que lorsque
vous retournez une pièce de monnaie dix fois,

19
00:01:06,500 --> 00:01:11,850
vous obtenez exactement deux queues,
et donc exactement huit têtes?

20
00:01:11,850 --> 00:01:13,660
Donc, nous allons maintenant calculer cela,

21
00:01:13,660 --> 00:01:17,180
puis nous allons l'implémenter
dans JavaScript.

22
00:01:17,180 --> 00:01:21,110
Ainsi, nous pouvons très facilement calculer
cela, nous pouvons dire fondamentalement

23
00:01:21,110 --> 00:01:26,340
nous allons lancer dix pièces,
1-2-3-4-5-6-7-8-9-10,

24
00:01:26,340 --> 00:01:28,480
nous avons donc dix emplacements.

25
00:01:28,480 --> 00:01:31,530
Chacune de ces fentes peut avoir
l'un des deux résultats:

26
00:01:31,530 --> 00:01:33,790
à savoir têtes ou queues.

27
00:01:34,430 --> 00:01:37,000
Et maintenant, nous pouvons
nous demander essentiellement

28
00:01:37,000 --> 00:01:41,510
quelle est la probabilité que
nous obtenons exactement deux queues?

29
00:01:42,150 --> 00:01:44,030
Donc, tout d'abord, nous devons savoir

30
00:01:44,030 --> 00:01:47,460
combien les résultats possibles
sont là en premier lieu.

31
00:01:47,460 --> 00:01:51,080
C'est relativement simple à calculer.

32
00:01:51,080 --> 00:01:55,330
Je veux dire, si nous considérons
que lancer une pièce de monnaie,

33
00:01:55,330 --> 00:01:57,460
combien de résultats pourrions-nous avoir?

34
00:01:57,460 --> 00:01:59,030
Eh bien, au fond deux, non?

35
00:01:59,030 --> 00:02:03,900
Deux résultats possibles car
il pourrait être soit pile ou face.

36
00:02:03,900 --> 00:02:06,950
Maintenant, imaginons que nous lançons
une pièce de monnaie à deux reprises,

37
00:02:06,950 --> 00:02:09,990
combien résultats possibles
pourrions-nous avoir maintenant?

38
00:02:09,990 --> 00:02:14,010
Eh bien, la réponse est <i> 2 X 2 </ i>,
qui est, bien sûr, <i> 4 </ i>.

39
00:02:14,010 --> 00:02:17,770
A savoir, nous pourrions avoir
la tête deux fois,

40
00:02:17,770 --> 00:02:20,140
nous aurions pu premières
têtes puis queues.

41
00:02:20,140 --> 00:02:22,400
Nous pourrions avoir
les premiers queues puis têtes,

42
00:02:22,400 --> 00:02:25,410
et nous pourrions avoir deux queues.

43
00:02:26,210 --> 00:02:31,090
Si vous lancez trois fois, ce qui est
le nombre de résultats maintenant?

44
00:02:31,090 --> 00:02:33,180
Eh bien, pour exactement la même logique,

45
00:02:33,180 --> 00:02:36,790
le nombre de résultats
est maintenant <i> 2 X 2 X 2 </ i>,

46
00:02:36,790 --> 00:02:43,320
qui est, bien sûr, <i> 8 </ i>, à savoir,
<i> HHH, HHT </ i>, et ainsi de suite.

47
00:02:43,320 --> 00:02:45,520
Je ne vais pas définir ceux-ci maintenant,

48
00:02:45,520 --> 00:02:51,580
mais vous pouvez, bien sûr, facilement voir que
vous pouvez obtenir huit résultats possibles.

49
00:02:51,580 --> 00:02:54,590
Et ainsi de suite, et ainsi, fondamentalement,
si vous le faites dix fois,

50
00:02:54,590 --> 00:02:57,480
alors vous avez tout simplement
à multiplier 2 dix fois,

51
00:02:57,480 --> 00:02:59,970
en d'autres termes,
2 à la puissance de 10,

52
00:02:59,980 --> 00:03:04,830
et cela est 1.024 possibilités.

53
00:03:04,830 --> 00:03:09,130
Il existe 1.024 résultats distincts

54
00:03:09,790 --> 00:03:14,140
de lancer une pièce,
une pièce de monnaie dix fois.

55
00:03:14,140 --> 00:03:16,560
Donc, c'est l'ensemble des possibilités.

56
00:03:16,560 --> 00:03:21,880
Maintenant, nous devons nous demander combien
pouvons-nous avoir d'exactement deux queues?

57
00:03:21,880 --> 00:03:24,420
Ainsi, en d'autres termes,

58
00:03:24,420 --> 00:03:29,810
combien de ces combinaisons
ont exactement deux queues?

59
00:03:29,810 --> 00:03:32,530
Pas moins et pas plus.

60
00:03:32,530 --> 00:03:36,460
Et puis cela nous donne
la fraction ou la probabilité

61
00:03:36,460 --> 00:03:40,150
que nous obtenons exactement deux queues.

62
00:03:40,150 --> 00:03:42,650
Ainsi, nous pouvons facilement
calculer cela.

63
00:03:42,650 --> 00:03:44,770
Donc, ce sont les dix emplacements
possibles,

64
00:03:44,780 --> 00:03:47,700
et vous allez les remplir en lançant
une pièce de monnaie,

65
00:03:47,700 --> 00:03:51,030
et vous obtenez soit une pile ou face.

66
00:03:51,030 --> 00:03:55,510
Donc, maintenant, nous allons
essentiellement les préremplir,

67
00:03:55,510 --> 00:03:57,880
de sorte que nous allons dire,
nous voulons avoir, à la fin,

68
00:03:57,880 --> 00:04:01,440
nous voulons avoir deux queues ici,
et huit têtes.

69
00:04:01,440 --> 00:04:05,670
Donc, nous allons faire les deux queues
et alors nous pouvons simplement remplir le reste.

70
00:04:05,670 --> 00:04:10,100
Donc, la première queue, vous pouvez
choisir l'une de ces dix emplacements.

71
00:04:10,100 --> 00:04:12,290
Vous pourriez, par exemple la mettre ici.

72
00:04:12,290 --> 00:04:17,310
Mais, fondamentalement, vous avez
dix options pour remplir cette fente,

73
00:04:17,310 --> 00:04:19,920
ou de mettre le <i> T </ i>
dans l'un des emplacements libres.

74
00:04:19,920 --> 00:04:24,300
Donc, dix options, vous pourriez
mettre dans l'un d'eux.

75
00:04:24,310 --> 00:04:28,180
Alors maintenant, vous avez besoin
de mettre le second,où allez-vous la mettre?

76
00:04:28,180 --> 00:04:29,770
Eh bien, vous pouvez la mettre partout,

77
00:04:29,770 --> 00:04:32,770
sauf si vous venez de mettre la premiére,

78
00:04:32,770 --> 00:04:35,460
Donc, disons que vous allez la mettre ici.

79
00:04:35,460 --> 00:04:40,090
Très bien, alors essentiellement
vous aviez neuf emplacements possibles.

80
00:04:41,290 --> 00:04:45,320
Bon, alors que cela veut dire qu'il
ya 90 combinaisons possibles?

81
00:04:45,320 --> 00:04:48,850
Non, nous devons corriger
cela pour un seul facteur.

82
00:04:49,610 --> 00:04:52,900
Vous pourriez d'abord avoir choisi
cet emplacement pour les premières queues

83
00:04:52,900 --> 00:04:55,970
et la seconde fente pour les secondes queues,

84
00:04:55,970 --> 00:04:58,570
et cela aurait été le même résultat exact,

85
00:04:58,570 --> 00:05:00,950
à savoir un
<i> T </ i> ici et <i> T </ i> ici.

86
00:05:00,950 --> 00:05:04,980
Donc, il y a deux façons
de mettre celles-ci.

87
00:05:04,980 --> 00:05:07,400
La première option c'est de
le mettre ici et là,

88
00:05:07,400 --> 00:05:10,660
la deuxième option est
de le mettre à ici et là,

89
00:05:10,660 --> 00:05:14,330
et ceux-ci sont tous deux inclus
dans ce numéro 90,

90
00:05:14,330 --> 00:05:16,220
mais ils sont évidemment le même résultat.

91
00:05:16,220 --> 00:05:19,520
Et le tout ici doit être divisé par 2,

92
00:05:19,520 --> 00:05:24,230
et que bien sûr nous donne
45 façons possibles

93
00:05:24,230 --> 00:05:28,450
de mettre deux <i> Ts </ i>
dans ces dix emplacements ici.

94
00:05:28,450 --> 00:05:33,270
Ainsi, en d'autres termes,
de 1,024 résultats possibles,

95
00:05:33,270 --> 00:05:38,240
45 seront exactement contenis
deux <i> Ts </ i>.

96
00:05:38,240 --> 00:05:44,370
Alors, faisons le calcul ici:
45 divisé par 1,024,

97
00:05:44,370 --> 00:05:46,200
vous pouvez mettre cela
dans une calculatrice

98
00:05:46,200 --> 00:05:51,550
et vous obtiendrez quelque
chose comme 0,0439.

99
00:05:51,550 --> 00:05:58,310
Ou, en d'autres termes,
4,39% notre probabilité

100
00:05:58,310 --> 00:06:05,060
que nous obtenons exactement deux queues
quand nous lançons  une pièce de monnaie dix fois.

101
00:06:05,590 --> 00:06:09,540
C'est donc le calcul derrière elle,
cela est la probabilité de base.

102
00:06:09,540 --> 00:06:13,550
Et maintenant, nous allons mettre en œuvre
le lancement de pièces en JavaScript,

103
00:06:13,550 --> 00:06:17,930
et nous allons voir combien de fois
quand nous faisons cela stochastiquement.

104
00:06:17,930 --> 00:06:20,720
Donc, en lançant au hasard
ces pièces de nombreuses fois,

105
00:06:20,720 --> 00:06:24,170
lançant au hasard dix pièces
de monnaie, de nombreuses fois,

106
00:06:24,170 --> 00:06:29,130
combien de fois nous obtenons
ces deux <i> Ts </ i>, ces deux queues?

107
00:06:29,130 --> 00:06:30,730
Et si nous le faisons correctement,

108
00:06:30,730 --> 00:06:37,170
nous devrions en effet obtenir un nombre
qui est extrêmement proche de 4,39%.

109
00:06:37,170 --> 00:06:39,200
Donc, nous allons continuer et faire cela.

110
00:06:39,200 --> 00:06:43,340
D'accord, je suis de retour ici dans
mon éditeur de texte, TextWrangler,

111
00:06:43,340 --> 00:06:47,470
et je voudrais maintenant
mettre en œuvre une lance de pièce.

112
00:06:47,470 --> 00:06:48,880
Alors, comment vais-je faire cela?

113
00:06:48,880 --> 00:06:52,360
Tout d'abord, je dois avoir
une certaine notion de hasard,

114
00:06:52,360 --> 00:06:56,580
Je dois avoir un moyen
de générer l'aléa dans le code.

115
00:06:56,580 --> 00:07:00,160
Eh bien, il se trouve que JavaScript
vient en fait avec une méthode très pratique

116
00:07:00,160 --> 00:07:02,290
qu'on appelle <i> Math.random () </ i>.

117
00:07:02,290 --> 00:07:06,840
Donc ce que je vais faire en premier ici,
je vais mettre en place un nouveau document,

118
00:07:06,840 --> 00:07:11,640
donc <i> & lt; DOCTYPE html & gt; </ i>,

119
00:07:11,640 --> 00:07:17,440
et puis je vais créer ma balise
html: <i> & lt; html & gt; </ i>,

120
00:07:17,440 --> 00:07:20,530
et je vais fermer tout de suite.

121
00:07:22,260 --> 00:07:28,150
Encore une fois, je vais structurer avec
une balise de tête que je vais fermer,

122
00:07:28,150 --> 00:07:32,840
et une balise de corps que
je vais aussi fermer tout de suite.

123
00:07:32,840 --> 00:07:37,060
Et puis ici dans la tête que
nous aurons notre balise script.

124
00:07:37,060 --> 00:07:39,130
Ceci est exactement la façon
dont nous l'avons fait auparavant.

125
00:07:39,130 --> 00:07:43,400
Si vous faites cela une ou deux fois,
il deviendra très vite une seconde nature.

126
00:07:43,400 --> 00:07:48,280
Bon,maintenant ici,
je vais développer mon code.

127
00:07:48,280 --> 00:07:53,700
Donc, la méthode que je viens de parler
est appelé <i> Math.random () </ i>,

128
00:07:53,700 --> 00:07:57,050
donc le capital M Math.random
puis les parenthèses.

129
00:07:57,050 --> 00:07:59,080
Ainsi, cette méthode est très pratique

130
00:07:59,080 --> 00:08:04,700
car il renvoie un nombre
aléatoire entre 0 et 1.

131
00:08:04,700 --> 00:08:07,970
Donc, nous allons jeter un coup d'oeil
à la façon dont cela fonctionne.

132
00:08:07,970 --> 00:08:13,910
première sortie de quelque nombre
<i> Math.random () </ i> renvoie ici

133
00:08:13,910 --> 00:08:16,950
en utilisant la méthode <i> console.log</ i>.

134
00:08:16,950 --> 00:08:20,250
Je vais donc appeler <i> console.log </ i>,

135
00:08:20,250 --> 00:08:24,350
et puis je vais passer dans
ce que retourns <i> Math.random () </ i> ici

136
00:08:24,350 --> 00:08:28,870
qui est censé être un nombre
aléatoire entre 0 et 1.

137
00:08:28,870 --> 00:08:32,340
Alors permettez-moi d'enregistrer
cela, <i> Enregistrer sous </ i>,

138
00:08:32,340 --> 00:08:36,220
et puis je vais appeler
cette <i> random.html </ i>.

139
00:08:36,220 --> 00:08:37,490
Bon, enregistrer.

140
00:08:37,490 --> 00:08:42,120
D'accord, nous avons obtenu le codage
couleur ici correct, la coloration syntaxique.

141
00:08:42,120 --> 00:08:45,590
Donc, maintenant que j'ai enregistré,
je vais aller sur le navigateur,

142
00:08:45,590 --> 00:08:49,940
et je vais ouvrir ce document,
donc <i> Ouvrir un fichier </ i>.

143
00:08:49,940 --> 00:08:50,940
Um, où est-il?

144
00:08:50,940 --> 00:08:53,990
Je ne l'ai pas sauvé dans
le bon emplacement.

145
00:08:53,990 --> 00:08:59,810
Encore une fois, <i> Enregistrer sous </ i>, pas dans <i> Documents </ i>,
mais en fait dans <i> Exemples de code </ i>.

146
00:08:59,810 --> 00:09:01,600
Ok, <i> Enregistrer </ i>.

147
00:09:01,600 --> 00:09:08,390
Okay, se déplaçant vers le navigateur,
<i> Ouvrir un fichier </ i>.

148
00:09:08,390 --> 00:09:10,820
Ici, il est <i> random.html </ i>.

149
00:09:10,820 --> 00:09:14,290
D'accord, donc ouvrir le, et bien sûr,
nous ne voyons rien ici;

150
00:09:14,290 --> 00:09:17,110
encore une fois, nous devons
jeter un oeil à la console JavaScript

151
00:09:17,110 --> 00:09:18,470
dans Chrome, vous le trouverez ici

152
00:09:18,470 --> 00:09:22,330
sous <i> Voir & gt; Développeur & gt;
JavaScript Console </ i> comme avant.

153
00:09:22,330 --> 00:09:24,710
Et ici, nous voyons un nombre aléatoire.

154
00:09:24,710 --> 00:09:27,450
Maintenant, vous savez,
si vous regardez ce nombre

155
00:09:27,450 --> 00:09:29,980
il est difficile de dire si il est
en fait vraiment aléatoire

156
00:09:29,980 --> 00:09:33,120
car il est assez proche de 1,
mais, bien sûr, cela pourrait arriver.

157
00:09:33,120 --> 00:09:37,320
Donc, nous allons recharger ce document
et nous allons continuer à regarder le nombre ici:

158
00:09:37,320 --> 00:09:40,770
0,91, 0,92 - wow, beaucoup de 0.92s,

159
00:09:40,770 --> 00:09:45,850
0.61, 0.2, 0.7, 0.4, etc..

160
00:09:45,850 --> 00:09:47,840
Ainsi, vous pouvez faire
cela une ou deux fois

161
00:09:47,840 --> 00:09:50,010
et, vous le savez, il peut sembler

162
00:09:50,010 --> 00:09:54,980
comme s'il y a une sorte
de parti pris en faveur de 0,9,

163
00:09:54,980 --> 00:09:59,550
mais il semble assez aléatoire,

164
00:10:00,350 --> 00:10:04,480
et je peux en fait vous garantir
qu'il est aléatoire,

165
00:10:04,480 --> 00:10:08,370
et chaque numéro que
vous voyez ici à venir

166
00:10:08,370 --> 00:10:10,160
arrive avec des probabilités égales.

167
00:10:10,160 --> 00:10:13,150
Donc, tous les numéros
sont également répartis entre 0 et 1,

168
00:10:13,150 --> 00:10:16,080
en termes de la probabilité d
e se présenter.

169
00:10:16,080 --> 00:10:18,230
Donc, si nous revenons au code,

170
00:10:18,230 --> 00:10:23,160
nous avons maintenant ce concept
d'un nombre aléatoire entre 0 et 1.

171
00:10:23,160 --> 00:10:27,810
Donc, s'il est vrai que tous apparaissent
avec une probabilité égale,

172
00:10:27,810 --> 00:10:30,990
alors si nous faisons cela plusieurs fois,

173
00:10:30,990 --> 00:10:34,310
la moyenne de ces chiffres
devrait être de 0,5.

174
00:10:34,310 --> 00:10:38,940
Alors, pourquoi ne pas continuer
et tester cela?

175
00:10:38,940 --> 00:10:42,770
Je vais donc mettre en œuvre ceci
maintenant en JavaScript, cette idée.

176
00:10:42,770 --> 00:10:47,590
Donc ce que je vais faire est que
je vais dessiner des nombres aléatoires

177
00:10:47,590 --> 00:10:50,900
à l'aide de méthode<i> Math.random () </ i>
beaucoup, beaucoup de fois,

178
00:10:50,900 --> 00:10:52,530
et puis je vais les additionner,

179
00:10:52,530 --> 00:10:55,140
et je vais les diviser par
le nombre de tirages

180
00:10:55,140 --> 00:10:57,430
et voir ce que cette moyenne est.

181
00:10:57,430 --> 00:10:59,210
Ainsi, afin de le faire,

182
00:10:59,210 --> 00:11:02,640
nous allons d'abord définir combien de fois
nous allons vraiment tirer ces chiffres.

183
00:11:02,640 --> 00:11:07,120
Et je vais stocker cette valeur
dans une variable

184
00:11:07,120 --> 00:11:11,490
que je vais appeler <i> Répétitions </ i>,
je vais le mettre à dire, 100.

185
00:11:13,030 --> 00:11:19,980
Et maintenant ce que je vais faire
c'est que je voudrais avoir mon code

186
00:11:19,980 --> 00:11:26,570
de telle sorte que <i> Math.random () </ i>
est tiré ou est appelé une centaine de fois.

187
00:11:26,570 --> 00:11:29,940
Donc, cela semble être un travail
pour <i>une boucle pour </ i>.

188
00:11:29,940 --> 00:11:32,140
Je vais donc mettre en œuvre
une <i> boucle pour </ i> ici.

189
00:11:32,140 --> 00:11:37,610
Ok, donc <i> for (var i = 0; </ i>

190
00:11:37,610 --> 00:11:40,740
ceci est notre étape d'initialisation.

191
00:11:41,370 --> 00:11:44,800
Alors maintenant, <i> i </ i> devrait simplement
être plus petit que <i> répétitions </ i>,

192
00:11:45,490 --> 00:11:52,230
et enfin l'expression finale qui est
simplement l'incrément de <i> i </ i> par 1,

193
00:11:52,230 --> 00:11:55,100
de sorte que nous ne disposons
pas d'une boucle infinie.

194
00:11:55,880 --> 00:11:59,450
Donc ici, je peux appeler
<i> Math.random () </ i>

195
00:12:01,530 --> 00:12:05,570
exactement 100 fois ou tout ce que
j'ai défini ici <i> répétitions </ i>;

196
00:12:05,570 --> 00:12:07,410
au moment où il est 100.

197
00:12:07,410 --> 00:12:10,010
Mais bien sûr, je ne veux pas
simplement attirer ces chiffres.

198
00:12:10,010 --> 00:12:12,240
Je veux maintenant les additionner,

199
00:12:12,240 --> 00:12:16,260
donc je dois garder une trace
de la somme en quelque sorte.

200
00:12:16,260 --> 00:12:18,390
Donc ce que je vais faire,
en fait pour le faire,

201
00:12:18,390 --> 00:12:23,210
c'est que je vais créer
une variable appelée ici <i> sum </ i>

202
00:12:23,210 --> 00:12:25,550
que je vais initialiser à zéro,

203
00:12:25,550 --> 00:12:28,740
parce qu'au début, la somme est nulle.

204
00:12:28,740 --> 00:12:31,880
Et puis je vais effectivement
stocker cette valeur,

205
00:12:31,880 --> 00:12:37,160
Je vais ajouter cette valeur que
<i> Math.random () </ i> revient à deux <i> sum </ i>.

206
00:12:37,160 --> 00:12:43,390
Donc, semblable à ici où nous prenons
une valeur, nous ajoutons quelque chose,

207
00:12:43,390 --> 00:12:48,150
puis le résultat de cela sera stocké
de nouveau dans la valeur.

208
00:12:48,150 --> 00:12:49,890
Je vais utiliser la même idée ici,

209
00:12:49,890 --> 00:12:54,990
Je vais dire:
<i> sum = sum + Math.random () </ i>.

210
00:12:54,990 --> 00:12:57,390
Donc ce que cela fait
fondamentalement à nouveau,

211
00:12:57,390 --> 00:13:02,270
rappelons que le côté droit ici
est exécuté en premier.

212
00:13:02,270 --> 00:13:05,430
Donc, nous allons prendre tout
ce que nous avons dans <i> sum </ i>,

213
00:13:05,430 --> 00:13:08,800
puis nous allons ajouter
ce que <i> Math.random () </ i> retourne,

214
00:13:08,800 --> 00:13:13,490
et cette nouvelle <i> sum </ i>, nous allons maintenant
la stocker de nouveau dans le <i> sum </ i> variable.

215
00:13:13,490 --> 00:13:18,410
Alors maintenant, cette variable
<i> sum </ i>, la valeur va augmenter

216
00:13:18,410 --> 00:13:24,430
chaque itération par tous les <i> Math.random () </ i>
retourne dans toute itération particulière.

217
00:13:25,130 --> 00:13:28,900
Et pour que, à la fin,
nous pouvons calculer la moyenne

218
00:13:29,850 --> 00:13:34,560
en utilisant ces deux valeurs;
donc je vais dire maintenant:

219
00:13:34,560 --> 00:13:39,020
<I> moyenne var = </ i> - eh bien,
tout ce que nous avons dans <i> sum </ i> -

220
00:13:39,020 --> 00:13:42,630
divisé par le nombre de <i> répétitions </ i>,

221
00:13:42,630 --> 00:13:46,400
parce que c'est
la définition de la moyenne.

222
00:13:47,020 --> 00:13:49,150
Le total, la somme de toutes ces valeurs,

223
00:13:49,150 --> 00:13:54,260
divisé par autant de fois nous itérons.

224
00:13:54,860 --> 00:13:58,740
Et tout ce qui reste à faire maintenant est
essentiellement la production de ces valeurs.

225
00:13:58,740 --> 00:14:02,870
Je vais dire: <i> console.log </ i>
et je vais dire ici:

226
00:14:03,520 --> 00:14:05,880
<I> La moyenne est </ i>

227
00:14:06,760 --> 00:14:12,660
et je vais mettre fin
à la chaîne: <i>, moyenne </ i>.

228
00:14:13,290 --> 00:14:17,470
Donc, ceci est maintenant fondamentalement
en fait utiliser les mêmes types de concepts

229
00:14:17,470 --> 00:14:20,070
que nous avons appris dans le chapitre 2.

230
00:14:20,070 --> 00:14:22,470
Nous initialisons les variables,

231
00:14:23,310 --> 00:14:26,450
nous mettons en place
une boucle qui permet d'itérer;

232
00:14:26,450 --> 00:14:28,820
nous utilisons cette nouvelle
méthode <i> Math.random () </ i>,

233
00:14:28,820 --> 00:14:30,670
puis nous faisons un calcul,

234
00:14:30,670 --> 00:14:33,470
et à la fin on sort le résultat.

235
00:14:33,470 --> 00:14:36,290
Donc, nous allons poursuivre et le faire,
nous allons enregistrer ce document.

236
00:14:36,290 --> 00:14:37,370
D'accord, je l'ai enregistré,

237
00:14:37,370 --> 00:14:39,100
Je vais aller sur le navigateur,

238
00:14:39,100 --> 00:14:42,770
et nous allons recharger ce document
ici et regarder dans la console.

239
00:14:42,770 --> 00:14:45,910
Donc, ici, il dit que la moyenne
est de 0,46.

240
00:14:45,910 --> 00:14:47,440
Permettez-moi de recharger cela.

241
00:14:47,440 --> 00:14:52,240
Maintenant, c'est 0,52, 0,53, 0,49, 0,48.

242
00:14:52,240 --> 00:14:56,140
D'accord, il oscille autour de 0,5,
donc cela semble fonctionner

243
00:14:56,140 --> 00:14:59,940
et il semble être vrai que
la moyenne est proche de 0,5.

244
00:15:00,580 --> 00:15:02,530
En fait, nous allons revenir au code ici

245
00:15:02,530 --> 00:15:08,230
et nous allons le faire peut-être une millier de fois,
plutôt que seulement une centaine de fois.

246
00:15:08,230 --> 00:15:14,020
Donc, si nous avons fait cela,
revenons au navigateur, rechargez cela,

247
00:15:14,020 --> 00:15:15,430
et maintenant c'est un peu plus près,

248
00:15:15,430 --> 00:15:19,590
voyons ici nous sommes
en train d'arriver très proche de 0,5.

249
00:15:19,590 --> 00:15:22,550
Ceci est 0,49999, et ainsi de suite.

250
00:15:22,550 --> 00:15:28,640
Nous sommes donc en général
dans la région de 0,49 ou 0,51.

251
00:15:29,980 --> 00:15:31,730
Allons dans l'autre sens, en fait,

252
00:15:31,730 --> 00:15:36,700
nous allons faire cela seulement
dix fois; enregistrer, revenir en arrière.

253
00:15:36,700 --> 00:15:39,910
Maintenant, vous pouvez voir que
c'est un peu partout sur la carte,

254
00:15:39,910 --> 00:15:44,040
il converge toujours vers 0,5,

255
00:15:44,040 --> 00:15:47,990
mais nous voyons maintenant
autour de valeurs de 0,6,

256
00:15:47,990 --> 00:15:52,580
nous voyons maintenant
autour de valeurs de 0,4, 0,3,

257
00:15:52,580 --> 00:15:56,090
ici même 0,28
ce qui est très faible.

258
00:15:56,090 --> 00:15:59,290
Et donc vous pouvez voir comme
dans l'exemple des pièces de monnaie jeter

259
00:15:59,290 --> 00:16:03,020
la variance ici dans les résultats
est en réalité beaucoup plus grande,

260
00:16:03,020 --> 00:16:08,150
parce que nous obtenons
parfois ces valeurs plutôt extrêmes.

261
00:16:08,890 --> 00:16:09,940
Mais en gros,

262
00:16:09,940 --> 00:16:16,030
nous sommes toujoursdans la zone
de cette moyenne de 0,5.

263
00:16:16,530 --> 00:16:22,170
Alors, allons rapidement en arriére
et nous allons faire un autre extrême,

264
00:16:22,170 --> 00:16:24,070
nous allons le faire un million de fois.

265
00:16:24,070 --> 00:16:28,980
A 100 000 et un million ici.

266
00:16:28,980 --> 00:16:30,870
Enregistrer.

267
00:16:30,870 --> 00:16:31,950
Recharger.

268
00:16:31,950 --> 00:16:33,940
Maintenant, deux choses:

269
00:16:33,940 --> 00:16:39,500
la première vous avez vu c'était incroyablement rapide,
il était juste essentiellement instantanée.

270
00:16:39,500 --> 00:16:40,890
L'autre chose que vous voyez ici,

271
00:16:40,890 --> 00:16:45,210
c'est extrêmement proche
maintenant précisément à 0,5.

272
00:16:45,210 --> 00:16:48,330
Maintenant, vos valeurs
peuvent être légèrement différent,

273
00:16:48,330 --> 00:16:50,380
Je veux dire que je peux
recharger ceci plusieurs fois,

274
00:16:50,380 --> 00:16:55,360
mais vous pouvez voir maintenant, nous sommes
toujours dans le genre de 0.4999 zone

275
00:16:55,360 --> 00:17:00,420
ou dans la zone de 0,500 quelque chose,
alors nous sommes extrêmement proches.

276
00:17:01,100 --> 00:17:04,920
Augementant cela à nouveau
par un autre facteur 10,

277
00:17:04,920 --> 00:17:08,900
de sorte que nous faisons maintenant
10 millions; revenir ici, recharger.

278
00:17:08,900 --> 00:17:13,480
Il y a un peu de retard, mais vous pouvez
dire que ceci est très rapide.

279
00:17:13,480 --> 00:17:19,030
En fait, nous allons revenir en arrière et faire cela,
juste pour le plaisir, 100 millions de fois.

280
00:17:19,030 --> 00:17:20,560
Alors maintenant, quand
vous rechargez cela,

281
00:17:20,560 --> 00:17:24,990
et cela dépend un peu de la
puissance de votre ordinateur,

282
00:17:24,990 --> 00:17:29,110
si vous rechargez cela,
il faut quelques secondes,

283
00:17:29,110 --> 00:17:34,320
peut-être deux ou trois secondes,
en fait un peu plus ici.

284
00:17:35,800 --> 00:17:40,650
Mais il peut prendre
entre deux et dix secondes

285
00:17:40,650 --> 00:17:44,250
Et encore cela peut dépendre
de votre navigateur,

286
00:17:45,270 --> 00:17:47,410
mais très proche de 0,5.

287
00:17:47,410 --> 00:17:53,880
Le point de l'être, nous faisons ici
100 millions d'itérations

288
00:17:53,880 --> 00:17:57,030
et le navigateur calcule
essentiellement un peu

289
00:17:57,030 --> 00:18:00,380
et ça va prendre un certain temps,
mais il est super rapide.

290
00:18:00,380 --> 00:18:03,610
Il est incroyablement rapide, et ceci est
bien sûr la puissance des ordinateurs;

291
00:18:03,610 --> 00:18:06,450
nous pouvons faire des
choses maintenant à l'échelle

292
00:18:06,450 --> 00:18:12,500
que, même dans un navigateur
aléatoire, dans un PC aléatoire,

293
00:18:12,500 --> 00:18:15,950
qui est tout simplement stupéfiante.

294
00:18:15,960 --> 00:18:17,860
Ainsi, le message à retenir ici

295
00:18:17,860 --> 00:18:23,910
c'est que nous pouvons avoir
un générateur de nombres aléatoires

296
00:18:23,910 --> 00:18:28,080
en utilisant cette méthode
<i> Math.random () </ i> ; c'est très pratique.

297
00:18:28,080 --> 00:18:33,870
Et maintenant, nous avons tous les outils
en place pour effectivement générer une lance de pièces,

298
00:18:33,870 --> 00:18:38,460
quelque chose où deux événements,
deux résultats sont possibles,

299
00:18:38,460 --> 00:18:42,170
et ils se produisent exactement
avec 50% de probabilité.

300
00:18:42,170 --> 00:18:47,720
Et voici ce que nous allons faire
dans la vidéo suivante dans la leçon 3.

301
00:18:47,730 --> 00:18:50,850
Donc, dans cette vidéo, nous avons appris
une méthode extrêmement important

302
00:18:50,850 --> 00:18:55,830
appelé <i> Math.random () </ i> qui nous permet
vraiment de générer le hasard dans notre code,

303
00:18:55,830 --> 00:19:00,250
et nous allons l'utiliser largement
dans tout le reste de ce cours, en fait.

304
00:19:00,250 --> 00:19:05,830
Et dans la vidéo suivante, nous allons l'utiliser
pour mettre en œuvre une lance de pièces en JavaScript.

305
00:19:05,830 --> 00:19:07,101
Nous allons vous voir là-bas.

