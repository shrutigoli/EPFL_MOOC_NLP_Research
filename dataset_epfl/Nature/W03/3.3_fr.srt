1
00:00:03,570 --> 00:00:06,590
Bienvenue dans la nature, dans le code.
Ceci est le chapitre trois, leçon trois.

2
00:00:06,590 --> 00:00:10,660
Dans cette vidéo on mettra en œuvre
l'exemple de tirage au sort en JavaScript

3
00:00:10,660 --> 00:00:11,630
et comme nous le faisons,

4
00:00:11,630 --> 00:00:14,490
nous allons en apprendre davantage sur
un concept très important dans la programmation,

5
00:00:14,490 --> 00:00:16,440
à savoir celle de l'écoulement de commande.

6
00:00:16,440 --> 00:00:17,500
Alors allons-y.

7
00:00:17,500 --> 00:00:22,390
Nous avons donc ici notre code de la dernière fois
en utilisant essentiellement les mathématiques au hasard,

8
00:00:22,390 --> 00:00:24,600
démontrant les mathématiques aléatoires

9
00:00:24,600 --> 00:00:29,850
car cette méthode qui renvoie
un nombre aléatoire entre zéro et un,

10
00:00:29,850 --> 00:00:33,099
et ça va être très pratique
pour nous dans l'avenir.

11
00:00:33,620 --> 00:00:36,485
Donc, nous allons continuer
et mettre en œuvre notre tirage au sort.

12
00:00:36,740 --> 00:00:40,030
Donc, ce que je vais faire c'est que
je vais juste prendre ce froid ici,

13
00:00:40,030 --> 00:00:41,300
Je vais m'en débarrasser,

14
00:00:41,300 --> 00:00:43,060
et puis je vais <i> Enregistrer sous </ i>.

15
00:00:43,060 --> 00:00:44,220
Donc, ne pas <i> Enregistrer </ i>,

16
00:00:44,220 --> 00:00:47,610
sinon vous allez remplacer votre fichier.

17
00:00:47,610 --> 00:00:50,900
<I> Enregistrer sous </ i>
et je vais nommer ceci

18
00:00:51,230 --> 00:00:56,781
Je vais appeler ce fichier "Coin Tossing."

19
00:00:57,060 --> 00:00:58,475
Okay "Coin Tossing."

20
00:00:59,440 --> 00:01:00,570
Très bien.

21
00:01:02,580 --> 00:01:07,652
Ce que nous avons fait dans les leçons
précédentes c'était de regarder la probabilité

22
00:01:08,510 --> 00:01:13,143
de jeter 10 pièces, lancer 10 pièces

23
00:01:14,980 --> 00:01:19,503
ceci résultante dans huit têtes
et deux queues

24
00:01:19,530 --> 00:01:22,678
et nous avons calculé ceci à 4,39%.

25
00:01:23,390 --> 00:01:25,050
Et maintenant, nous voulons faire,

26
00:01:25,050 --> 00:01:28,870
plutôt que de le calculer nous voulons
réellement jeter 10 pièces

27
00:01:28,900 --> 00:01:30,140
plusieurs fois

28
00:01:30,140 --> 00:01:35,350
et calculer combien de fois,
en fait, ce résultat particulier,

29
00:01:35,350 --> 00:01:38,200
huit têtes et deux queues
viennent en effet.

30
00:01:38,200 --> 00:01:39,976
Alors, comment pouvons-nous
le faire en JavaScript?

31
00:01:40,810 --> 00:01:42,157
Eh bien, tout d'abord,

32
00:01:42,650 --> 00:01:44,800
nous allons définir quelques variables
pour mettre en place les choses.

33
00:01:44,800 --> 00:01:47,870
Je vais donc définir ceci <i>  var monnaies</ i>

34
00:01:47,870 --> 00:01:49,840
et nous allons le mettre à 10.

35
00:01:49,840 --> 00:01:51,370
Si cette variable fondamentalement

36
00:01:51,370 --> 00:01:54,820
contiendra le nombre de pièces que j'ai

37
00:01:54,820 --> 00:01:56,544
et nous avons dit que nous voulons avoir 10

38
00:01:57,340 --> 00:02:02,130
et puis je dois garder une trace de combien
de têtes et les queues viendront.

39
00:02:02,130 --> 00:02:04,290
Je vais donc définir deux variables,

40
00:02:04,290 --> 00:02:07,328
un que je vais nommer, <i> têtes </ i>,

41
00:02:08,360 --> 00:02:10,100
et puis je vais initialiser à zéro

42
00:02:11,000 --> 00:02:15,514
et l'autre, je vais appeler <i> queues </ i>
et je vais initialiser à zéro aussi bien.

43
00:02:16,800 --> 00:02:17,830
Très bien.

44
00:02:17,830 --> 00:02:20,140
Alors maintenant,
ce que je voudrais faire c'est

45
00:02:20,140 --> 00:02:25,400
je voudrais jeter 10 pièces,

46
00:02:26,120 --> 00:02:31,120
ce qui signifie que je dois
essentiellement appeler ceci math aléatoire

47
00:02:31,640 --> 00:02:36,078
10 fois ou autant de fois
que j'ai en pièces de monnaie.

48
00:02:36,730 --> 00:02:39,020
Donc, je dois faire quelque chose
à plusieurs reprises.

49
00:02:39,020 --> 00:02:44,250
Bien sûr, cela est le signal
pour l'itération, pour la boucle

50
00:02:44,250 --> 00:02:46,240
et en particulier,
nous allons utiliser la boucle pour.

51
00:02:46,240 --> 00:02:50,260
Donc, je vais construire ici une boucle,
comme nous l'avons avant,

52
00:02:50,260 --> 00:02:52,630
donc <i> var i = 0 </ i>

53
00:02:52,630 --> 00:02:54,963
Ceci est notre initialisation.

54
00:02:56,950 --> 00:03:01,560
La condition sera <i> i </ i> plus petit que
ce que j'ai en pièces de monnaie

55
00:03:01,560 --> 00:03:03,470
et l'expression finale ici c'est

56
00:03:03,470 --> 00:03:07,406
tout simplement l'incrément de <i> i </ i> par un.

57
00:03:07,700 --> 00:03:10,550
Donc, fondamentalement,
la même chose que précédemment

58
00:03:10,550 --> 00:03:13,240
et nous allons utiliser cette
construction maintes et maintes fois.

59
00:03:14,090 --> 00:03:19,340
Bien; donc je tiens à appeler
le math au hasard ici.

60
00:03:19,340 --> 00:03:21,360
Très bien,
mais ce que je vais faire avec ça?

61
00:03:21,360 --> 00:03:24,130
Je veux dire, comment puis-je aller
maintenant à partir de ce calcul aléatoire,

62
00:03:24,130 --> 00:03:30,321
qui retournera un nombre aléatoire
entre zéro et un à une pièce de monnaie?

63
00:03:31,200 --> 00:03:37,870
Eh bien, nous pouvons maintenant utiliser
le fait que chaque nombre entre zéro et un

64
00:03:37,870 --> 00:03:42,130
arrive avec une probabilité égale
lorsequ''on appel math aléatoire.

65
00:03:42,570 --> 00:03:45,880
Donc ce que je peux dire ici,
par exemple, c'est

66
00:03:45,880 --> 00:03:47,920
et je vais maintenant utiliser
une nouvelle déclaration.

67
00:03:47,920 --> 00:03:50,730
Donc, vous avez juste à me suivre.
Je vais vous expliquer cela en détail.

68
00:03:51,630 --> 00:03:55,895
<I> if (math.random () </ i>,

69
00:03:56,320 --> 00:03:59,028
je vais m'en débarrasser ici de ce point-virgule,

70
00:03:59,640 --> 00:04:03,395
est inférieur ou égal à 0,5

71
00:04:05,160 --> 00:04:10,254
Je vais fermer entre parenthèses
ici puis entre accolades,

72
00:04:11,090 --> 00:04:13,640
Je vais faire quelque chose.

73
00:04:13,640 --> 00:04:15,850
Donc, ce que cela signifie, encore,

74
00:04:15,850 --> 00:04:17,180
nous parlerons d'énoncé.

75
00:04:17,180 --> 00:04:22,270
mais vous pouvez clairement
je crois comprendre ce que cela fait, <i> si </ i>

76
00:04:24,060 --> 00:04:28,220
cet appel math aléatoire renvoie un nombre

77
00:04:28,220 --> 00:04:32,810
qui est inférieure ou égale à 0,5,

78
00:04:32,810 --> 00:04:34,900
alors je vais faire quelque chose.

79
00:04:34,900 --> 00:04:36,640
Alors cela signifie que,

80
00:04:36,640 --> 00:04:43,083
ce sera essentiellement le lancement
de la pièce de monnaie et on a les têtes.

81
00:04:43,580 --> 00:04:46,150
Donc ce que je vais faire dans ce cas c'est,

82
00:04:46,150 --> 00:04:51,533
je vais simplement augmenter
la variable de têtes par un

83
00:04:53,130 --> 00:04:55,130
et si cela est le cas,

84
00:04:55,130 --> 00:05:01,760
donc si le math aléatoire a effectivement
retourné un nombre qui est supérieur à 0,5

85
00:05:02,560 --> 00:05:07,634
et que je peux utiliser le <i> autre </ i>
déclaration, donc <i> autre </ i>.

86
00:05:08,120 --> 00:05:14,140
Eh bien dans ce cas, on a eu la queue,
donc la queue est égale à plus un.

87
00:05:14,480 --> 00:05:17,510
Voilà donc comment nous le lisons,

88
00:05:17,510 --> 00:05:18,740
Okay.

89
00:05:18,740 --> 00:05:23,130
Nous allons appeler ce math aléatoire
si elle apporte un certain nombre

90
00:05:23,130 --> 00:05:27,180
qui est inférieur ou égal à 0,5.

91
00:05:27,180 --> 00:05:29,650
Ensuite, on va à l'augmentation
de tête par un,

92
00:05:29,650 --> 00:05:33,609
parce que nous allons supposer
la pièce a donné de têtes

93
00:05:35,130 --> 00:05:38,340
sinon nous allons supposer que
c'est la queue

94
00:05:38,340 --> 00:05:42,300
et nous allons augmenter la queue par un.

95
00:05:42,680 --> 00:05:46,386
Et ceci est essentiellement notre
lancer de pièces de monnaie

96
00:05:46,950 --> 00:05:50,080
parce que nous pouvons simplement
appeler cette méthode ici et dire,

97
00:05:50,080 --> 00:05:52,810
"Eh bien, vous savez, exactement
la moitié du temps,

98
00:05:52,810 --> 00:05:56,007
ici le résultat va être inférieur
ou égal à 0,5

99
00:05:56,290 --> 00:05:58,510
et exactement la moitié du temps,

100
00:05:58,510 --> 00:06:00,950
le résultat va être supérieure à 0,5."

101
00:06:00,950 --> 00:06:04,580
Donc, c'est exactement
la même distribution de probabilité,

102
00:06:04,580 --> 00:06:06,830
si vous voulez, comme une pièce de monnaie.

103
00:06:08,050 --> 00:06:12,750
Donc tout ce que nous avons à faire
maintenant essentiellement c'est de dire

104
00:06:12,750 --> 00:06:16,950
ou sortir dans la console combien
de fois les choses se passent ici.

105
00:06:16,950 --> 00:06:19,930
Donc ce que je vais faire
c'est que je vais écrire

106
00:06:19,930 --> 00:06:23,053
<I> console.log (têtes </ i>

107
00:06:23,840 --> 00:06:25,460
Je vais juste dire têtes.

108
00:06:27,850 --> 00:06:28,980
Et

109
00:06:30,730 --> 00:06:34,020
queues, le nombre et <i> queues </ i>.

110
00:06:35,880 --> 00:06:39,160
D'accord, donc ceci sortira la valeur
que nous avons dans la variable,

111
00:06:39,160 --> 00:06:43,200
alors la tête de chaîne,
la valeur que nous avons une variable de queue

112
00:06:43,200 --> 00:06:45,010
puis les queues de chaîne.

113
00:06:45,010 --> 00:06:51,370
Donc, nous allons enregistrer cela et
nous allons passer au navigateur et ouvrez ce fichier.

114
00:06:51,370 --> 00:06:55,190
Voici donc notre fichier HTML
aléatoire précédent.

115
00:06:55,190 --> 00:06:57,104
Donc, je serai dans le même répertoire.

116
00:06:57,370 --> 00:06:58,773
Donc, je vais juste dire

117
00:06:58,920 --> 00:07:03,247
<I> cointossing.html </ i>

118
00:07:04,420 --> 00:07:09,834
Très bien, et voici notre résultat:
donc six têtes, quatre queues.

119
00:07:10,040 --> 00:07:12,010
Voilà donc c'est assez agréable.

120
00:07:12,010 --> 00:07:13,920
Nous allons recharger cela.

121
00:07:13,950 --> 00:07:16,487
Cinq têtes, cinq queues, cinq têtes,
cinq queues,

122
00:07:16,800 --> 00:07:20,280
trois et sept, quatre et six, deux et huit.

123
00:07:20,280 --> 00:07:23,710
Donc vous pouvez voir ceci est
exactement ce que cette page web a fait

124
00:07:23,710 --> 00:07:25,872
que nous avons récemment
examiné avec les pièces de monnaie.

125
00:07:27,280 --> 00:07:32,930
il apporte la plupart du temps jusqu'à cinq / cinq
et quatre / six, mais parfois il y a sept / trois.

126
00:07:32,930 --> 00:07:33,912
Voici un deux / huit.

127
00:07:34,470 --> 00:07:38,860
Si nous allons continuer à le faire pendant
longtemps nous aurons un un / neuf.

128
00:07:38,860 --> 00:07:41,960
Mais comme vous pouvez le voir
cela est assez rare.

129
00:07:41,960 --> 00:07:44,080
Dans tous les cas, cela fonctionne.

130
00:07:44,080 --> 00:07:46,440
Alors revenons au code.

131
00:07:46,440 --> 00:07:51,800
Maintenant, ceci est notre exemple de lancement
de pièce et cela fonctionne très bien.

132
00:07:51,800 --> 00:07:55,670
Donc, nous allons parler plus en détail
sur ceci,

133
00:07:55,670 --> 00:07:59,393
mais juste pour l'instant essentiellement
la façon dont cela fonctionne est

134
00:07:59,560 --> 00:08:03,178
vous avez cette <i> si </ i> déclaration
et alors vous avez besoin des parenthèses

135
00:08:04,510 --> 00:08:07,227
et dans ces parenthèses,
vous devez avoir une condition

136
00:08:07,410 --> 00:08:09,870
et si cette condition, donc par exemple ici,

137
00:08:09,870 --> 00:08:14,530
calcul aléatoire doit être inférieur
ou égal à 0,5.

138
00:08:14,530 --> 00:08:16,420
Si cela s'évalue à <i> vrai</ i>

139
00:08:17,080 --> 00:08:21,581
alors tout ce que suit ici dans
les accolades sera exécuté.

140
00:08:23,050 --> 00:08:24,800
Et sinon,

141
00:08:24,800 --> 00:08:29,700
donc cet <i> autre </ i> puis cette déclaration,

142
00:08:29,700 --> 00:08:31,740
ou ces déclarations ici dans les accolades

143
00:08:31,740 --> 00:08:33,986
après le <i> autre </ i> sera exécutée.

144
00:08:34,520 --> 00:08:36,430
Et cela est super pratique.

145
00:08:36,430 --> 00:08:38,200
Maintenant, deux choses, tout d'abord,

146
00:08:38,200 --> 00:08:41,060
vous n'avez pas besoin d'un <i> autre </ i>
en tout temps.

147
00:08:41,060 --> 00:08:42,860
Je veux dire, ici nous en avons besoin,

148
00:08:42,860 --> 00:08:47,380
mais c'est tout à fait correct du point
de vue de la syntaxe

149
00:08:47,380 --> 00:08:49,710
d'avoir simplement un énoncé <i> si </ i>

150
00:08:49,710 --> 00:08:52,280
et dire ainsi: «Si quelque chose est vrai,

151
00:08:52,280 --> 00:08:56,242
alors je vais exécuter ces lignes
de code, sans <i> autre </ i> "

152
00:08:56,460 --> 00:08:59,350
Mais parfois, vous avez
une situation<i> si autre</ i>

153
00:08:59,350 --> 00:09:01,513
et puis cette <i> autre </ i>
devient assez pratique.

154
00:09:01,560 --> 00:09:07,207
Donc, si cela est vrai, alors fait-le, si ce n'est pas vrai,
donc <i> autre </ i>, puis faire ceci.

155
00:09:08,030 --> 00:09:11,660
Il y a aussi un troisième élément
que vous pouvez ajouter,

156
00:09:11,660 --> 00:09:16,900
à savoir la combinaison
d'une condition<i> si.autre </ i>

157
00:09:17,030 --> 00:09:18,347
puis certaines déclarations

158
00:09:18,560 --> 00:09:21,430
et nous allons parler de cela
dans une autre leçons

159
00:09:21,430 --> 00:09:25,750
mais je veux juste que vous saviez
maintenant que cela existe.

160
00:09:25,750 --> 00:09:27,278
D'accord, je vais retirer cela.

161
00:09:28,730 --> 00:09:32,090
Très bien, alors un seul mot d'avertissement

162
00:09:32,090 --> 00:09:33,900
que je veux mentionner ici aussi

163
00:09:33,900 --> 00:09:36,920
si vous regardez vraiment
à de code JavaScript réel,

164
00:09:36,920 --> 00:09:39,574
parfois vous voyez quelque chose comme ça.

165
00:09:41,250 --> 00:09:45,984
Vous voyez une déclaration<i> si </ i>
cas quelque chose comme,

166
00:09:46,160 --> 00:09:50,090
par exemple, <i> if (math.random) </ i>

167
00:09:50,090 --> 00:09:52,278
plus petit que 0.1-- ne le fait pas,

168
00:09:52,740 --> 00:09:57,366
alors vous savez la tête est égal à un
ou quelque chose.

169
00:09:58,090 --> 00:10:02,030
Il n'a pas d'importance ce que exactement
le contenu de cette ligne est,

170
00:10:02,690 --> 00:10:03,820
ce qui est crucial ici,

171
00:10:03,820 --> 00:10:07,230
c'est que vous pouvez voir la déclaration <i> si </ i>
alors vous pouvez voir la condition.

172
00:10:07,230 --> 00:10:08,780
D'accord, si cela est vrai

173
00:10:08,780 --> 00:10:11,464
puis immédiatement après sur la même ligne,

174
00:10:12,270 --> 00:10:14,880
une ligne de code qui doit être exécuté.

175
00:10:14,880 --> 00:10:19,212
Maintenant cela est JavaScript
techniquement correct.

176
00:10:19,560 --> 00:10:22,480
D'accord, vous n'avez pas besoin
des accolades.

177
00:10:22,480 --> 00:10:26,630
Mais encore une fois si vous ne l'avez pas entendu
de moi parce que ma forte conseil pour vous est

178
00:10:26,630 --> 00:10:27,960
ne jamais faire ceci.

179
00:10:28,730 --> 00:10:33,170
Cela conduira à toutes sortes de tourbières
sur la route si vous ne faites pas attention

180
00:10:34,110 --> 00:10:38,010
et je vais vous expliquer dans une autre
leçons ce que ces tourbières ressemblent

181
00:10:38,290 --> 00:10:40,580
et pourquoi cela est un problème.

182
00:10:40,580 --> 00:10:41,880
Donc, ne le fait pas,

183
00:10:41,880 --> 00:10:44,370
mais c'est techniquement correct.

184
00:10:44,370 --> 00:10:49,110
Faites-le à la place comme-ci: <i> si </ i>
la condition, puis bouclés.

185
00:10:49,110 --> 00:10:51,956
Et si vous avez besoin d'un <i> autre </ i>,
<i> autre </ i> accolades

186
00:10:52,180 --> 00:10:57,488
et tout ce code conditionnel
ici dans ces accolades.

187
00:10:57,770 --> 00:11:01,010
Et maintenant, vous pouvez également
voir pourquoi cela est appelé flux de contrôle,

188
00:11:01,010 --> 00:11:05,050
parce que vous controllez
essentiellement le flux de votre code

189
00:11:05,050 --> 00:11:07,070
en fonction de certaines conditions

190
00:11:07,070 --> 00:11:08,070
et comme vous pouvez l'imaginer

191
00:11:08,070 --> 00:11:11,520
cela deviendra extrêmement
pratique sur toute la ligne

192
00:11:11,520 --> 00:11:14,380
et nous allons utiliser cette construction <i> si autre </ i>

193
00:11:14,380 --> 00:11:17,070
très fortement dans le reste du cours.

194
00:11:17,400 --> 00:11:18,923
D'accord, je termine cette vidéo.

195
00:11:19,110 --> 00:11:21,890
Vous venez d'apprendre au sujet
de la déclaration<i> si autre  </ i> ,

196
00:11:21,890 --> 00:11:24,460
une déclaration très importante
dans la programmation

197
00:11:24,460 --> 00:11:30,590
et nous avons utilisé la méthode de math aléatoire
pour mettre en œuvre un lancement de pièces de monnaie.

198
00:11:30,590 --> 00:11:33,530
Dans la prochaine leçon,
nous allons aller un peu plus loin.

199
00:11:33,530 --> 00:11:34,300
On se verra là bas.

