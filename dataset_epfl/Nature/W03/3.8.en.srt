1
00:00:03,450 --> 00:00:07,082
Welcome back, <i>Nature, In Code</i>.
We're in Chapter 3, Lecture 8.

2
00:00:07,362 --> 00:00:11,150
This lecture is a pivotal moment 
in this course

3
00:00:11,150 --> 00:00:13,023
because we are now, finally,

4
00:00:13,023 --> 00:00:16,671
starting to visualize the data 
that we generate,

5
00:00:16,671 --> 00:00:18,192
so let's get going.

6
00:00:18,192 --> 00:00:21,291
So here we have our code
as we developed it.

7
00:00:21,951 --> 00:00:24,245
This is <i>Genetic Drift</i>. It's working.

8
00:00:24,245 --> 00:00:28,172
So now our goal 
is to visualize these values.

9
00:00:28,172 --> 00:00:32,721
We're currently outputting those values, 
<i>p</i> and <i>q</i>, in the console,

10
00:00:33,661 --> 00:00:36,673
and then if we go to our browser,

11
00:00:36,673 --> 00:00:39,426
we can look through these values here,

12
00:00:39,426 --> 00:00:42,446
and we can see how they change,

13
00:00:42,446 --> 00:00:46,201
but it's kind of cumbersome 
to scroll here through these values

14
00:00:46,201 --> 00:00:48,462
and try to understand 
what the dynamics are.

15
00:00:48,462 --> 00:00:51,348
So this is a case now, for visualization.

16
00:00:51,941 --> 00:00:53,404
So let's do this.

17
00:00:53,404 --> 00:00:54,975
So how do we visualize?

18
00:00:55,755 --> 00:00:59,984
So, we will visualize 
using a library called <i>D3</i>,

19
00:00:59,984 --> 00:01:02,035
and if you search for <i>D3</i>,

20
00:01:03,485 --> 00:01:07,167
then you will get to this website here,

21
00:01:07,167 --> 00:01:11,692
<i>D3.js</i> or <i>D3js.org</i>.

22
00:01:11,692 --> 00:01:14,495
And <i>D3</i> is this library 
that we'll be using.

23
00:01:14,495 --> 00:01:17,411
<i>D3</i> stands for Data-Driven Documents.

24
00:01:17,411 --> 00:01:20,445
And as you can see here 
from this screen,

25
00:01:20,445 --> 00:01:23,346
this is an extremely powerful library

26
00:01:23,346 --> 00:01:27,160
that can do absolutely 
magnificent visualizations.

27
00:01:27,160 --> 00:01:31,026
Correspondingly, 
it's actually not very trivial,

28
00:01:31,026 --> 00:01:35,058
and it would be beyond 
the scope of this course

29
00:01:35,058 --> 00:01:38,809
to teach you the details of <i>D3</i>.

30
00:01:39,999 --> 00:01:42,897
If you're interested, please go ahead.

31
00:01:42,897 --> 00:01:46,926
There's many, many examples here,
there's the whole documentation.

32
00:01:47,206 --> 00:01:52,937
There's entire books and tutorials online
where you can learn <i>D3</i>.

33
00:01:52,937 --> 00:01:55,488
It's an absolutely fascinating tool,

34
00:01:55,488 --> 00:01:58,166
but we're not going to cover that 
in this course.

35
00:01:58,166 --> 00:02:01,737
What I'm simply going to do
is I'm going to hand you some code

36
00:02:01,737 --> 00:02:04,170
that does everything for you,

37
00:02:04,170 --> 00:02:09,602
and then we'll just use this
to visualize our results.

38
00:02:09,992 --> 00:02:12,653
So, what you have to do is, basically,

39
00:02:12,653 --> 00:02:16,523
when you want to use <i>D3</i>,
you have to load this library,

40
00:02:16,523 --> 00:02:19,437
and here's the instruction,
how you do this.

41
00:02:19,437 --> 00:02:22,407
So you can either load it locally--

42
00:02:22,407 --> 00:02:24,237
or if you're connected to the internet,

43
00:02:24,237 --> 00:02:26,924
which you are now, 
otherwise you probably,

44
00:02:26,924 --> 00:02:30,637
or you certainly have been, 
otherwise you wouldn't see this video--

45
00:02:30,637 --> 00:02:34,364
you can simply use this code snippet here,

46
00:02:34,364 --> 00:02:37,356
which is, as you recognize, a <i>script</i> tag,

47
00:02:37,946 --> 00:02:39,993
but which has this <i>source</i> attribute.

48
00:02:39,993 --> 00:02:45,831
It means it loads a particular file here--

49
00:02:45,831 --> 00:02:49,176
it's called <i>d3.v3.min.js</i>--

50
00:02:49,176 --> 00:02:51,903
from a server somewhere, into your code.

51
00:02:51,903 --> 00:02:53,161
So this is what we'll do.

52
00:02:53,161 --> 00:02:58,071
And, by the way, if you're curious,
feel free to copy this URL here

53
00:02:58,071 --> 00:03:02,870
and paste it into the browser
and then you will see, basically,

54
00:03:02,870 --> 00:03:04,686
what this library looks like.

55
00:03:04,686 --> 00:03:08,702
So this is the library and it's, obviously,
extremely condensed.

56
00:03:08,702 --> 00:03:14,413
You can barely understand 
what this all means.

57
00:03:14,413 --> 00:03:16,433
I mean, I certainly don't.

58
00:03:16,433 --> 00:03:19,004
But that's the point, it has been minified.

59
00:03:19,004 --> 00:03:22,133
It has been condensed 
so that it takes a little bandwidth,

60
00:03:22,133 --> 00:03:25,437
but this is essentially 
the entire library right here.

61
00:03:25,887 --> 00:03:28,173
So, let's go ahead and do this.

62
00:03:28,173 --> 00:03:30,763
So let's copy this tag here.

63
00:03:31,947 --> 00:03:35,207
Okay, and I'm going to copy this,

64
00:03:35,207 --> 00:03:39,597
and then we're going 
to go our <i>Genetic Drift</i> code here,

65
00:03:40,017 --> 00:03:43,179
and we're going to load this here, 
in the <i>head</i>,

66
00:03:43,179 --> 00:03:46,173
as a separate <i>script</i> tag, like this.

67
00:03:46,173 --> 00:03:48,485
So now when the browser sees this,

68
00:03:49,335 --> 00:03:52,225
it' loading--it's trying to load, at least,--

69
00:03:52,225 --> 00:03:53,647
this document from the web,

70
00:03:53,647 --> 00:03:56,188
so this will only work if you're online.

71
00:03:56,188 --> 00:03:59,186
Now, the other thing that you need now--

72
00:03:59,186 --> 00:04:03,204
So this loads the library,
but we haven't written any code yet

73
00:04:03,204 --> 00:04:08,008
to basically tell JavaScript what exactly 
to visualize and how.

74
00:04:08,008 --> 00:04:10,274
So that code, again,

75
00:04:10,274 --> 00:04:12,694
to write this code 
and understand it in detail,

76
00:04:12,694 --> 00:04:15,724
would be beyond the scope
of this course.

77
00:04:15,724 --> 00:04:19,004
So I'm going to hand you 
this file, basically,

78
00:04:19,004 --> 00:04:20,335
or this code.

79
00:04:20,655 --> 00:04:25,784
And, if you're looking at this video 
in the context of the MOOC,

80
00:04:25,784 --> 00:04:27,924
on the page that you currently are,

81
00:04:27,924 --> 00:04:29,749
you will find a link

82
00:04:30,399 --> 00:04:35,690
to the download of this code, 
<i>draw_line_chart</i>.

83
00:04:35,690 --> 00:04:38,678
So, find it somewhere on this page.

84
00:04:38,678 --> 00:04:44,199
If you can't find it, you can always 
go to the website of <i>Nature, In Code</i>,

85
00:04:44,199 --> 00:04:48,538
which is at <i>natureincode.com</i>,

86
00:04:49,287 --> 00:04:51,619
and it looks like this--

87
00:04:51,619 --> 00:04:53,288
or at least at the moment
it looks like this.

88
00:04:53,288 --> 00:04:55,497
As you know, websites are changing 
all the time,

89
00:04:55,497 --> 00:04:58,772
so at the moment 
where you're watching this video,

90
00:04:58,772 --> 00:05:00,707
it might actually look a little different.

91
00:05:00,707 --> 00:05:02,408
That's quite possible.

92
00:05:02,408 --> 00:05:03,486
Nevertheless,

93
00:05:04,236 --> 00:05:11,086
you will find the code here, somewhere,
where we have See Code in Action,

94
00:05:11,396 --> 00:05:15,397
and then you can see, 
for example here, <i>Genetic Drift</i>.

95
00:05:15,397 --> 00:05:20,242
If you would go to the example code here,
you could find here,

96
00:05:21,432 --> 00:05:23,884
the <i>draw_line_chart</i> function,

97
00:05:23,884 --> 00:05:27,003
which is built with <i>D3</i>,
and it can be found here.

98
00:05:27,003 --> 00:05:28,941
So, this is the <i>draw_line_chart</i> function.

99
00:05:28,941 --> 00:05:33,072
Again, this might look a little different
by the time you watch this video,

100
00:05:33,072 --> 00:05:34,705
but it will be on this website,

101
00:05:34,705 --> 00:05:37,498
and it's certainly also 
on the MOOC website,

102
00:05:37,498 --> 00:05:39,193
so it should be easy to find.

103
00:05:39,193 --> 00:05:42,000
So I'm just going to go ahead
and I'm going to copy this code.

104
00:05:42,000 --> 00:05:44,228
It's a bit complex, as you can see here,

105
00:05:44,228 --> 00:05:46,121
but again, we don't need 
to worry about this

106
00:05:46,121 --> 00:05:48,202
because this is just code to visualize it.

107
00:05:48,202 --> 00:05:52,839
But copy it and then go back 
to your document

108
00:05:53,498 --> 00:05:59,438
and then paste this code here,

109
00:05:59,438 --> 00:06:02,757
above our <i>Genetic Drift</i> code.

110
00:06:02,757 --> 00:06:07,695
So just paste it, and you can 
leave it like that if you want to.

111
00:06:07,695 --> 00:06:14,140
I'm going to indent it a little bit,
just so that it looks nice.

112
00:06:14,140 --> 00:06:18,588
So, indent here, like this. All right.

113
00:06:19,468 --> 00:06:24,527
So there's one more thing 
that we have to do and that is,

114
00:06:24,527 --> 00:06:27,748
this code now, this visualization code,

115
00:06:28,408 --> 00:06:32,669
uses our <i>body</i> elements to basically

116
00:06:32,669 --> 00:06:37,417
dynamically put content into the <i>body</i>,
that's how visualization works.

117
00:06:37,417 --> 00:06:42,407
And, as you may recall, the <i>head</i>
is for information like generic scripts

118
00:06:42,407 --> 00:06:45,761
and information about the authorship 
of the page or the title,

119
00:06:45,761 --> 00:06:46,849
things like that.

120
00:06:46,849 --> 00:06:50,429
And the <i>body</i> is where we actually
show the visual things.

121
00:06:50,429 --> 00:06:53,239
So, this entire <i>script</i> tag here, actually,

122
00:06:53,239 --> 00:06:57,410
with the <i>draw_line_chart</i> function,
and with our codes,

123
00:06:57,410 --> 00:07:02,000
we have to move it into the <i>body</i>,
otherwise this is not going to work.

124
00:07:02,000 --> 00:07:07,830
So copy the entire <i>script</i> tag here
so that you have only this <i>D3</i> line left,

125
00:07:08,540 --> 00:07:12,517
and just move it here, into the body,

126
00:07:12,517 --> 00:07:13,892
and that's pretty much it.

127
00:07:13,892 --> 00:07:16,136
So I'm just going to copy this here,

128
00:07:16,136 --> 00:07:21,021
and now, we're essentially 
ready to visualize this code.

129
00:07:21,931 --> 00:07:25,392
So, you can see now here,
we have the <i>script</i> tag

130
00:07:25,392 --> 00:07:28,427
that loads the <i>D3</i>, 
this we can absolutely put in the head.

131
00:07:28,427 --> 00:07:33,613
But here, the other <i>script</i> tag,
where we use this <i>draw_line_chart</i> function,

132
00:07:33,613 --> 00:07:38,272
and then also at the bottom,
our <i>Genetic Drift</i> code,

133
00:07:38,412 --> 00:07:41,302
this <i>script</i> tag now, 
has to be in the <i>body</i>.

134
00:07:41,302 --> 00:07:43,669
Okay. Good.

135
00:07:43,949 --> 00:07:47,502
So, are we ready 
to visualize this? Almost.

136
00:07:47,502 --> 00:07:51,244
Well, first we have to get rid of 
a couple of things.

137
00:07:51,244 --> 00:07:54,263
So first of all, we don't need 
this <i>console.log</i> anymore,

138
00:07:54,263 --> 00:07:57,498
because we don't actually want 
to output it into the console anymore.

139
00:07:57,498 --> 00:07:59,002
I mean, you could keep it if you want to.

140
00:07:59,002 --> 00:08:02,733
You can, of course, output values 
both into the console

141
00:08:02,733 --> 00:08:07,301
and visualize them in the browser,
but I'm just going to remove this.

142
00:08:07,971 --> 00:08:09,002
Good.

143
00:08:09,682 --> 00:08:12,242
And also, this <i>round_number</i>, 
correspondingly,

144
00:08:12,242 --> 00:08:14,152
won't be necessary any more,

145
00:08:14,152 --> 00:08:15,989
so I'm going to get rid of that 
here as well,

146
00:08:15,989 --> 00:08:19,091
just to keep our code quite clean.

147
00:08:20,511 --> 00:08:23,243
So now what I have to do though is,

148
00:08:23,243 --> 00:08:27,963
I have to call 
this <i>draw_line_chart</i> function.

149
00:08:29,190 --> 00:08:33,969
And now, if we go up and take a look 
at this <i>draw_line_chart</i> function,

150
00:08:35,209 --> 00:08:38,181
we can see here, here it is,

151
00:08:38,181 --> 00:08:41,992
that it actually has a number 
of parameters defined,

152
00:08:42,972 --> 00:08:46,980
and those are called <i>data</i>, 
<i>x_label</i>, <i>y_label</i>,

153
00:08:46,980 --> 00:08:51,877
<i>legend_values</i>,
<i>x_max</i>, and <i>y_max_flex</i>.

154
00:08:51,877 --> 00:08:53,759
So, what do those stand for?

155
00:08:53,759 --> 00:08:55,430
What do they mean?

156
00:08:55,430 --> 00:09:00,203
Well, basically, what they mean is
that I have to pass on the data

157
00:09:00,203 --> 00:09:01,949
that I want to visualize,

158
00:09:01,949 --> 00:09:06,221
then I have to pass on two strings, 
an <i>x_label</i> and a <i>y_label</i>, for our axes.

159
00:09:06,221 --> 00:09:09,481
And if I want a legend, 
I have to pass some values here,

160
00:09:09,481 --> 00:09:12,050
to this function, as an argument.

161
00:09:12,420 --> 00:09:15,981
These are two parameters 
that I'll explain a bit later.

162
00:09:15,981 --> 00:09:18,491
We don't need this here, at the moment.

163
00:09:18,491 --> 00:09:21,087
We're not going to pass these parameters,

164
00:09:21,087 --> 00:09:23,261
and the function, actually, 
all ready takes care of the fact

165
00:09:23,261 --> 00:09:25,700
that you're not passing anything here.

166
00:09:25,700 --> 00:09:28,991
But these will be the values 
that we will need to provide.

167
00:09:28,991 --> 00:09:31,251
So this will be a string, this will be a string.

168
00:09:31,621 --> 00:09:35,023
This will be a mix, I'll explain that in a bit.

169
00:09:35,023 --> 00:09:38,687
But here, this is the data,
this is what we want to visualize.

170
00:09:38,687 --> 00:09:41,441
So, what is it, actually, 
that we want to visualize?

171
00:09:41,721 --> 00:09:44,733
Well, what we'd like to visualize
are these <i>p</i> values,

172
00:09:44,733 --> 00:09:47,171
how they change over time.

173
00:09:47,631 --> 00:09:50,309
So, what I have to do is,

174
00:09:50,309 --> 00:09:53,495
I somehow have to store 
all of those values,

175
00:09:53,495 --> 00:09:55,952
the changing <i>p</i> 's, over time.

176
00:09:56,946 --> 00:10:00,675
And then, I have to pass 
all of these values

177
00:10:00,675 --> 00:10:03,387
to this function, <i>draw_line_chart</i>.

178
00:10:03,387 --> 00:10:07,576
So how am I going to temporarily store
many, many values,

179
00:10:07,576 --> 00:10:11,755
concretely, 1000 values, temporarily?

180
00:10:11,755 --> 00:10:15,696
Well, there's a really handy 
variable type in JavaScript,

181
00:10:15,696 --> 00:10:17,256
and it's called an array.

182
00:10:17,256 --> 00:10:18,876
And an array is, in fact,

183
00:10:18,876 --> 00:10:23,052
potentially, the most important 
construct in JavaScript,

184
00:10:23,052 --> 00:10:27,716
and I'll talk about this, in detail,
in the next lecture.

185
00:10:27,716 --> 00:10:30,995
For now, there's just a few things 
that you need to know.

186
00:10:30,995 --> 00:10:35,030
First, I'm going to add here a variable,
I'm going to call it <i>data</i>,

187
00:10:36,400 --> 00:10:42,034
and I'm going to initialize it 
with these two square brackets.

188
00:10:42,034 --> 00:10:45,032
Open and close, so it's empty, basically.

189
00:10:45,982 --> 00:10:48,641
These brackets here, this type of bracket,

190
00:10:48,641 --> 00:10:51,613
is used to denote an array.

191
00:10:51,943 --> 00:10:54,029
So this is an empty array.

192
00:10:54,489 --> 00:10:57,503
So an array is basically 
just a set of values.

193
00:10:57,503 --> 00:11:00,691
It can be empty 
if there's no value in there,

194
00:11:00,691 --> 00:11:03,462
but it can have many, many values.

195
00:11:03,462 --> 00:11:06,901
That's quite handy because variables,
as you can see here,

196
00:11:06,901 --> 00:11:10,004
only allow you to store one value.

197
00:11:10,004 --> 00:11:13,243
This one stores one value,
this one here stores one value,

198
00:11:13,243 --> 00:11:15,032
this one here stores one value.

199
00:11:15,032 --> 00:11:17,502
There's no way to store multiple values.

200
00:11:17,502 --> 00:11:20,199
That's what the <i>array</i> can do.

201
00:11:20,199 --> 00:11:23,752
So this is an array--
it can store multiple values.

202
00:11:23,752 --> 00:11:27,362
So, down here, 
after I've calculated the new <i>p</i>,

203
00:11:28,112 --> 00:11:32,863
I'm going to say, <i>data.push(p)</i>.

204
00:11:33,413 --> 00:11:38,512
So what this does is,
it pushes the <i>p</i> value into the <i>data</i> array.

205
00:11:38,512 --> 00:11:42,556
Again, we're gonna talk about this,
in detail, in the next lecture.

206
00:11:42,556 --> 00:11:45,454
For now, you just need to understand
that this is an array

207
00:11:45,454 --> 00:11:47,055
which can contain multiple values.

208
00:11:47,055 --> 00:11:50,874
And here, we're pushing <i>p</i> values
into this <i>data</i> array.

209
00:11:51,684 --> 00:11:54,707
And then, at the end, once we're done here

210
00:11:54,707 --> 00:11:59,665
with calling <i>next_generation</i>
however many times--

211
00:11:59,665 --> 00:12:01,965
1000 times at the moment--

212
00:12:01,965 --> 00:12:07,170
we would like to visualize now, this data.

213
00:12:07,170 --> 00:12:13,297
So we're going to now call 
this <i>draw_line_chart</i> method,

214
00:12:13,907 --> 00:12:16,705
and we're going to pass it now
a couple of arguments.

215
00:12:16,705 --> 00:12:18,879
So the first is this <i>data</i> array,

216
00:12:18,879 --> 00:12:21,254
so I'm now passing this array

217
00:12:21,254 --> 00:12:25,524
which is now filled 
with, currently, 1000 values.

218
00:12:26,434 --> 00:12:28,614
And then, the second,

219
00:12:28,614 --> 00:12:33,606
if you go back up here 
to the definition of this function,

220
00:12:36,696 --> 00:12:40,104
the second argument 
that we need to pass is the <i>x_label</i>,

221
00:12:40,104 --> 00:12:42,041
the third is the <i>y_label</i>,

222
00:12:42,041 --> 00:12:44,395
and then the values 
we'd like to have in the legend.

223
00:12:44,395 --> 00:12:46,187
So let's go back here,

224
00:12:46,187 --> 00:12:50,987
and let's pass in the <i>x_label</i>.

225
00:12:50,987 --> 00:12:55,818
So on the x-axis we will have the time,
or basically, the generations.

226
00:12:55,818 --> 00:13:00,545
So, I'm just here 
going to type <i>Generation</i>.

227
00:13:00,545 --> 00:13:04,143
That's going to be my <i>x_label</i>,
my label on the x-axis.

228
00:13:05,870 --> 00:13:08,771
What I would like to do is,
I would like to have

229
00:13:09,681 --> 00:13:13,392
just the letter <i>p</i> on the y-axis,

230
00:13:13,392 --> 00:13:17,181
because that's going to be the frequency 
of the <i>a1 allele</i>, or <i>p</i>,

231
00:13:17,181 --> 00:13:19,431
as we're calculating it here.

232
00:13:19,891 --> 00:13:26,431
And then, the legend itself, 
in fact, has to be an array--

233
00:13:26,431 --> 00:13:29,261
and you can just type this with me--

234
00:13:29,261 --> 00:13:33,533
but I'm going to pass here, 
an array to this function

235
00:13:33,533 --> 00:13:37,692
and it has four values, namely, 
the label <i>Population Size</i>.

236
00:13:43,952 --> 00:13:47,178
The actual population size,
which is stored in <i>N</i>.

237
00:13:47,743 --> 00:13:51,763
Actually, let me add a colon here,
it's a little nicer.

238
00:13:52,243 --> 00:13:55,670
And then, the number 
of generations as a label,

239
00:13:55,670 --> 00:13:57,792
so I'm just going to say <i>Generations</i>.

240
00:13:59,672 --> 00:14:01,999
And then, of course,
the number of generations,

241
00:14:01,999 --> 00:14:04,728
which is currently stored in <i>Generations</i>.

242
00:14:04,998 --> 00:14:10,109
So now we're calling this function,
and this should now, essentially, work.

243
00:14:10,109 --> 00:14:14,499
So, let's save this 
and let's hope everything worked.

244
00:14:14,499 --> 00:14:16,594
Let's go back to our browser.

245
00:14:18,420 --> 00:14:20,589
I'm going to close these tabs here,

246
00:14:20,909 --> 00:14:24,138
and I'm still back here 
at my <i>Genetic Drift</i> example,

247
00:14:24,138 --> 00:14:26,701
so I won't need 
the console here anymore.

248
00:14:26,701 --> 00:14:30,640
So I'm going to close this,
and I'm going to reload this document,

249
00:14:30,640 --> 00:14:31,960
and boom--

250
00:14:31,960 --> 00:14:34,630
Here is our first visualization.

251
00:14:34,630 --> 00:14:35,841
Look at this.

252
00:14:35,841 --> 00:14:38,839
So, here we have 
the number of Generations.

253
00:14:40,529 --> 00:14:43,210
Here, you can see <i>p</i>, 
the <i>a1 allele</i> frequency

254
00:14:43,210 --> 00:14:45,161
between zero and one.

255
00:14:45,161 --> 00:14:47,357
And here, you can see 
how it changes over time.

256
00:14:47,357 --> 00:14:48,755
And this is the legend.

257
00:14:48,755 --> 00:14:50,487
This is what we passed in,

258
00:14:50,487 --> 00:14:53,546
the string <i>Population Size</i>
and <i>Generations</i>,

259
00:14:53,546 --> 00:14:55,667
and those two values.

260
00:14:55,667 --> 00:14:57,746
You can now reload this,

261
00:14:57,746 --> 00:15:01,154
and this simulation 
will immediately change.

262
00:15:01,584 --> 00:15:02,911
Isn't that cool?

263
00:15:02,911 --> 00:15:04,719
Actually, let's go back to the code,

264
00:15:05,979 --> 00:15:10,182
and let's reduce, now,
the population size a little bit.

265
00:15:10,182 --> 00:15:16,171
I'm going to just type here: 
N = 500 instead of 1000.

266
00:15:16,171 --> 00:15:20,166
So this population is now half the size
of what it was before.

267
00:15:20,166 --> 00:15:22,022
So save it, go back.

268
00:15:22,022 --> 00:15:23,481
So here, you can now see two things:

269
00:15:23,481 --> 00:15:25,243
Number one, so first of all, of course,

270
00:15:25,243 --> 00:15:27,882
this legend got automatically, 
correctly updated.

271
00:15:28,672 --> 00:15:30,321
And the other thing that you see is,

272
00:15:30,321 --> 00:15:34,132
you actually see here,
a fixation simulation.

273
00:15:34,132 --> 00:15:38,238
<i>p</i> now goes here, a little bit up and down,
but by and large it goes up,

274
00:15:38,238 --> 00:15:40,244
and it eventually goes to fixation.

275
00:15:40,244 --> 00:15:41,672
So let's reload this.

276
00:15:42,102 --> 00:15:43,972
Here, it's actually lost.

277
00:15:44,332 --> 00:15:46,002
First, that's really interesting here.

278
00:15:46,002 --> 00:15:49,318
So first, it goes up and it reaches 80%,

279
00:15:49,318 --> 00:15:52,684
so it's looking, actually, 
really good for the <i>a1 allele</i>,

280
00:15:52,684 --> 00:15:54,024
but then it crashes.

281
00:15:54,024 --> 00:15:58,531
It almost gets lost from the population,
makes a bit of recovery,

282
00:15:58,531 --> 00:16:03,542
but then around generation 900,
gets completely lost from the population.

283
00:16:03,542 --> 00:16:07,487
And that, of course, 
means that the <i>a2 allele</i> goes to fixation.

284
00:16:07,487 --> 00:16:09,510
So we could, in principle,
plot the <i>a2 allele</i>,

285
00:16:09,510 --> 00:16:14,563
but it would just be the exact 
mirrored curve because <i>q</i> and <i>p</i>,

286
00:16:14,563 --> 00:16:18,104
or the a1 and the a2 frequencies, 
always add up to one.

287
00:16:18,104 --> 00:16:19,644
Let's reload this again.

288
00:16:19,984 --> 00:16:21,777
Yeah, it almost went to fixation.

289
00:16:22,707 --> 00:16:24,623
This is a really interesting one,
look at this.

290
00:16:25,963 --> 00:16:28,214
<i>p</i> goes down, so the <i>a1 allele</i> frequency

291
00:16:28,214 --> 00:16:31,774
goes down to a few percentage points 
here, at generation 5,

292
00:16:31,774 --> 00:16:36,234
but it actually stages a comeback 
to more than 50%,

293
00:16:36,234 --> 00:16:38,925
and who knows what's going to happen 
here, in the future.

294
00:16:38,925 --> 00:16:40,503
So, this is really exciting.

295
00:16:40,503 --> 00:16:45,014
You can reload this a couple of times,
and you can observe two things:

296
00:16:45,014 --> 00:16:49,230
Number one, these are stochastic, 
random simulations,

297
00:16:49,230 --> 00:16:52,353
so no two simulations 
will look the same.

298
00:16:52,923 --> 00:16:55,023
You can also observe that sometimes

299
00:16:55,973 --> 00:16:58,666
the <i>allele</i> frequency 
will go to zero or one,

300
00:16:58,666 --> 00:17:01,433
as we observed in the <i>console.log</i> before.

301
00:17:01,433 --> 00:17:04,178
And that means, 
one of the allele goes to fixation,

302
00:17:04,178 --> 00:17:08,650
and you lose genetic variation, basically,
because now you just have one allele,

303
00:17:08,650 --> 00:17:10,365
you have no more variation.

304
00:17:10,605 --> 00:17:11,986
And the other thing 
that you'll notice is that

305
00:17:11,986 --> 00:17:14,227
this is actually blazingly fast.

306
00:17:14,227 --> 00:17:18,151
I mean, we're running 
at 1000 generations here,

307
00:17:18,151 --> 00:17:21,502
and it's just being visualized instantly.

308
00:17:21,502 --> 00:17:25,027
So this is why I think this is so cool 
to do this in the browser.

309
00:17:25,027 --> 00:17:29,005
It's so fast, and it's just so easy to do.

310
00:17:29,005 --> 00:17:31,855
And you can now 
look at this in any browser,

311
00:17:31,855 --> 00:17:34,190
whether it's on 
a mobile phone or a tablet,

312
00:17:34,190 --> 00:17:37,260
or on a desktop computer or laptop.

313
00:17:37,500 --> 00:17:38,850
So, essentially,

314
00:17:38,850 --> 00:17:42,355
a couple of billion devices right now
who can run this code,

315
00:17:42,355 --> 00:17:44,165
and I think that's quite fascinating.

316
00:17:44,165 --> 00:17:46,680
So this concludes this video. 
Congratulations.

317
00:17:46,680 --> 00:17:52,695
You visualized <i>Genetic Drift</i> in a browser,
and that's quite amazing.

318
00:17:52,695 --> 00:17:56,495
We're going to use 
this <i>D3</i> functionality, this library,

319
00:17:56,495 --> 00:18:02,160
to plot things, to visualize things, 
quite extensively in the future.

320
00:18:02,160 --> 00:18:05,404
It may have felt a little cumbersome
to copy and paste code--

321
00:18:05,404 --> 00:18:06,885
and normally we don't do this--

322
00:18:06,885 --> 00:18:10,485
but, as I said, it's okay here

323
00:18:10,485 --> 00:18:12,786
because I just wanted 
to hand you this code,

324
00:18:12,786 --> 00:18:16,406
rather than you having 
to understand <i>D3</i> from scratch.

325
00:18:16,406 --> 00:18:18,936
And it turns out, the way 
I actually developed this code--

326
00:18:18,936 --> 00:18:20,287
it's very generic--

327
00:18:20,287 --> 00:18:23,848
so we'll be able to use this
for many, many different plots.

328
00:18:23,848 --> 00:18:28,910
So, in the next video,
I'd like to briefly speak a little bit

329
00:18:28,910 --> 00:18:33,038
and investigate this concept of an <i>array</i>
that we encountered here.

330
00:18:33,038 --> 00:18:37,317
It's a very powerful tool 
in your JavaScript arsenal,

331
00:18:37,317 --> 00:18:40,036
and we'll talk about it in detail
in the next lecture.

332
00:18:40,036 --> 00:18:41,117
So I'll see you there.
