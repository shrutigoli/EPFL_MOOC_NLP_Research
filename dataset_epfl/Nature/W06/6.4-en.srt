1
00:00:02,849 --> 00:00:06,849
Welcome back, Nature In Code
we're in Chapter, Lecture four.

2
00:00:07,013 --> 00:00:10,356
In the previous lecture we learned
about three types of selection

3
00:00:10,537 --> 00:00:12,073
Namely directional selection,

4
00:00:12,247 --> 00:00:14,830
Balancing selection and
disruptive selection.

5
00:00:15,010 --> 00:00:16,913
So, in this lecture
and the following

6
00:00:17,007 --> 00:00:20,294
We are actually going to implement
these three types in Java script

7
00:00:20,470 --> 00:00:23,163
and we'll see that they have
very different dynamics.

8
00:00:23,340 --> 00:00:25,633
So just as a reminder,
this is the situation, here

9
00:00:25,798 --> 00:00:27,185
we have the three genotypes.

10
00:00:27,345 --> 00:00:30,914
We defined A one A one
to have a fitness of one

11
00:00:31,075 --> 00:00:35,174
and A two A two to have a reduced
fitness namely, one minus S, 

12
00:00:35,339 --> 00:00:38,031
where S is the selection
co-efficient.

13
00:00:38,435 --> 00:00:41,209
And then we said okay the
intermediary genotype

14
00:00:41,381 --> 00:00:42,531
the hetero zygote

15
00:00:42,698 --> 00:00:45,648
is going to have fitness 1-hs
and so depending on

16
00:00:45,828 --> 00:00:50,578
the value of these ages we get
different types of landscapes here.

17
00:00:50,764 --> 00:00:55,317
So if h is larger than one then
we get this fitness value in

18
00:00:55,487 --> 00:00:58,900
in the sense that the header zygote
has the lowest fitness of all three.

19
00:00:59,087 --> 00:01:01,915
If H is smaller than zero
we get this fitness peak

20
00:01:02,094 --> 00:01:04,606
the hetero zygote
has the highest fitness

21
00:01:04,770 --> 00:01:07,770
of the three genotypes.
And in the intermediary case

22
00:01:07,937 --> 00:01:10,875
where H is between zero and one 

23
00:01:11,952 --> 00:01:17,475
we have the hetero zygote
fitness to be somewhere in between

24
00:01:17,814 --> 00:01:21,103
so somewhere in between
one and one minus S

25
00:01:21,280 --> 00:01:24,055
and this will then generate
a kind of a slope

26
00:01:24,239 --> 00:01:26,248
and we said okay these
are the three types

27
00:01:26,412 --> 00:01:28,825
the slope will cause
directional selection

28
00:01:28,986 --> 00:01:31,616
the peak would cause
balancing selection and

29
00:01:31,757 --> 00:01:34,308
the value would cause
disruptive selection.

30
00:01:34,494 --> 00:01:36,963
So what we are going to do now is
that we are now going

31
00:01:37,124 --> 00:01:39,355
 to implement these three
types of selections.

32
00:01:39,521 --> 00:01:40,853
And how are we gonna do this? 

33
00:01:41,026 --> 00:01:43,626
So what are we exactly
going to measure or plot?

34
00:01:43,796 --> 00:01:45,267
So here is what
we are gonna do.

35
00:01:45,430 --> 00:01:47,796
We gonna plot actually two things

36
00:01:47,958 --> 00:01:52,888
the first is that we are gonna plot
delta P so to change

37
00:01:53,054 --> 00:01:57,892
in a leo frequency
of of M one as a function of P.

38
00:01:58,256 --> 00:02:01,931
So given any P here
between zero and one.

39
00:02:02,679 --> 00:02:05,679
What will the change
in a leo frequency be?

40
00:02:06,965 --> 00:02:09,698
The other thing that we are
gonna plot is something that

41
00:02:09,867 --> 00:02:12,867
we are more familiar
with which essentially

42
00:02:13,433 --> 00:02:16,063
is P as it changes overtime.

43
00:02:16,255 --> 00:02:20,413
This is similar to what we
did in a drift chapter

44
00:02:20,592 --> 00:02:23,517
where we plotted P
as it changed overtime.

45
00:02:24,153 --> 00:02:27,730
So we are gonna do these two things
importantly of course we have

46
00:02:27,906 --> 00:02:30,431
no stochastic effects here anymore

47
00:02:30,607 --> 00:02:34,108
remember, we went back to the
assumption of infinite population

48
00:02:34,264 --> 00:02:38,627
size so that we can study the effect
of selection in isolation.

49
00:02:38,830 --> 00:02:41,077
So what we are gonna do now is
gonna go ahead and

50
00:02:41,241 --> 00:02:44,241
create these two plots
in Java script.

51
00:02:44,647 --> 00:02:48,424
There is one thing we need to be a
bit careful about when we

52
00:02:48,596 --> 00:02:50,971
implement this plot here.

53
00:02:51,150 --> 00:02:55,342
So far we haven't really spoken
much about the X- axis here 

54
00:02:55,509 --> 00:02:58,571
we just assumed that we are going to
plot each time stamp here

55
00:02:58,741 --> 00:03:00,666
on the X-axis.

56
00:03:00,832 --> 00:03:04,982
Here these are not time steps
these are in fact, many values

57
00:03:05,170 --> 00:03:07,795
between zero and one, perhaps
you know, in increments

58
00:03:07,994 --> 00:03:10,006
of point zero one.

59
00:03:10,181 --> 00:03:13,461
 So we'll have to be, we'll have
to be a bit careful that we

60
00:03:13,627 --> 00:03:16,340
implement this correctly but
i'll walk you through this

61
00:03:16,498 --> 00:03:21,483
and the draw line chart function
that we keep on using

62
00:03:21,647 --> 00:03:23,822
already has you covered.

63
00:03:23,986 --> 00:03:27,512
Alright, so let's go ahead and
implement this in Java script.

64
00:03:27,713 --> 00:03:32,200
Alright we have here our drift and
selection file from previous lectures

65
00:03:32,369 --> 00:03:35,369
Let's just go ahead and
use this as a template.

66
00:03:35,566 --> 00:03:38,528
So here you have the code
of drift and selection.

67
00:03:38,692 --> 00:03:43,785
Up here you have all the three
code, the function draw line chart, 

68
00:03:43,934 --> 00:03:46,605
but we don't wanna touch that
so just delete anything

69
00:03:46,773 --> 00:03:48,573
but the draw line chart function

70
00:03:48,734 --> 00:03:51,734
so delete this part here.

71
00:03:52,158 --> 00:03:55,939
Okay, so now we can
start coding here

72
00:03:56,213 --> 00:04:02,839
Before we do this let's be sure that
we save this as a new file so save

73
00:04:03,044 --> 00:04:07,385
and here i am gonna make sure I
store this in the codec samples

74
00:04:07,567 --> 00:04:10,280
and i'm gonna call this

75
00:04:10,456 --> 00:04:16,405
Delta P vs P, cause that's what
we are essentially plotting.

76
00:04:16,567 --> 00:04:18,609
Delta P vs P.

77
00:04:19,321 --> 00:04:23,544
I'm gonna save this and now
I can start coding here.

78
00:04:23,719 --> 00:04:24,776
So what are we gonna do?

79
00:04:24,941 --> 00:04:29,590
Well first of all, we need to define
those two important values

80
00:04:29,597 --> 00:04:32,809
the selection co-efficient
and the heterozygous effect

81
00:04:33,106 --> 00:04:35,942
so we gonna set this to
point zero one.

82
00:04:36,606 --> 00:04:40,397
This is a very strong selection
co-efficient but you know

83
00:04:40,584 --> 00:04:43,172
you can later change
this if you want to.

84
00:04:43,345 --> 00:04:46,807
And then we gonna set the hetero
zyogote effect to well anything

85
00:04:46,988 --> 00:04:49,263
between zero and one we said.

86
00:04:49,439 --> 00:04:52,439
So you know let's set it to
point two for example.

87
00:04:53,735 --> 00:04:54,675
Good.

88
00:04:54,951 --> 00:04:56,416
So now what are we gonna do?

89
00:04:56,591 --> 00:05:02,035
Well we would like to calculate
Delta P, for many many steps

90
00:05:02,207 --> 00:05:04,794
for many values of P and then
we would like to plot this.

91
00:05:04,967 --> 00:05:08,197
So what we gonna do is we going to
calculate this for many values of P

92
00:05:08,349 --> 00:05:11,581
and then we are gonna push it into
an array and then we are gonna hand

93
00:05:11,756 --> 00:05:15,648
that array over to the draw line
chart function essentially as we did

94
00:05:15,837 --> 00:05:19,617
in Chapter 3. So I'm gonna
set up this variable here.

95
00:05:19,799 --> 00:05:24,001
Data that will contain the data
that we want to plot in particular

96
00:05:24,196 --> 00:05:26,421
here is gonna be the Delta Ps

97
00:05:26,670 --> 00:05:28,984
and then i'm gonna
set up a for loop.

98
00:05:29,914 --> 00:05:33,052
So this is now going to look
slightly different, so I am gonna

99
00:05:33,221 --> 00:05:38,321
start at zero, but now i would
like this loop to stop at one.

100
00:05:38,879 --> 00:05:41,754
So I wanna go from zero
to one with my values.

101
00:05:41,933 --> 00:05:46,933
So here i'm going to say, okay I as
long as it's smaller or equal to one

102
00:05:47,122 --> 00:05:50,122
it's fine, but that's when i stop.

103
00:05:51,625 --> 00:05:55,891
And then what i am going to do
is I'm going to say now i would like

104
00:05:56,041 --> 00:06:01,104
to increment my I not by one but by
point zero one

105
00:06:01,839 --> 00:06:05,824
Okay, so what this does is that this
loop goes from zero

106
00:06:06,022 --> 00:06:10,472
to one in steps of point zero one.

107
00:06:11,608 --> 00:06:15,660
So my I is essentially exactly what
I want for my P, so i can say here

108
00:06:15,834 --> 00:06:20,734
var P is, this is essentially
the value that I have in I.

109
00:06:21,197 --> 00:06:27,209
So i'm now incrementing the P value
or the I value by steps of

110
00:06:27,393 --> 00:06:30,393
point zero one, going from zero
to one and that's exactly what

111
00:06:30,583 --> 00:06:32,508
we're gonna have on the X axis.

112
00:06:30,593 --> 00:06:33,593


113
00:06:32,691 --> 00:06:37,203
Correspondingly my Q is as always
one minus P

114
00:06:39,014 --> 00:06:42,335
And so now I'm going to implement
this formula that we have just

115
00:06:42,510 --> 00:06:45,510
developed earlier in this
chapter for Delta P.

116
00:06:46,969 --> 00:06:52,342
And so this formula if you
remember it, or look it up, it is

117
00:06:53,484 --> 00:06:58,959
okay, Delta p equals, first of all
we have here, so we have a term

118
00:06:59,131 --> 00:07:00,606
divided by another term.

119
00:07:00,746 --> 00:07:03,430
So i'm just going to set up
those parentheses right away.

120
00:07:03,689 --> 00:07:12,542
So here we have in the numerator
we have P times Q times S

121
00:07:13,860 --> 00:07:33,864
times, and now we have here P times
H plus Q times, something which is

122
00:07:34,048 --> 00:07:41,373
one minus H, and now I want to make
sure I'm closing the parentheses

123
00:07:41,559 --> 00:07:44,559
here that i opened here.

124
00:07:45,018 --> 00:07:49,205
Quite a few parenthesis but you can
easily follow that this is correct.

125
00:07:49,434 --> 00:07:52,988
So here we have one opening
parenthesis, we have the second

126
00:07:53,150 --> 00:07:58,112
and then we have the third
so and here we close

127
00:07:58,245 --> 00:08:00,395
one, two, three, so
that's correct.

128
00:08:00,561 --> 00:08:02,010
Alright lets move over here.

129
00:08:02,221 --> 00:08:08,547
Here its more straight forward,
it's one minus, two times P times

130
00:08:08,723 --> 00:08:20,223
Q times H times,
S minus two, times Q times S.

131
00:08:20,953 --> 00:08:22,268
So this is the formula.

132
00:08:22,438 --> 00:08:25,141
As I said previously a bit of
a beast but as you can see thi

133
00:08:25,304 --> 00:08:27,541
is totally easy to implement here.

134
00:08:27,696 --> 00:08:32,475
You just have to make sure that
you keep track of the parentheses.

135
00:08:33,353 --> 00:08:35,450
But all looking good here.

136
00:08:36,140 --> 00:08:39,078
Alright, so this is essentially what
we want to calculate and

137
00:08:39,278 --> 00:08:44,128
what we want to plot on the Y-axis
so we are gonna push this value here

138
00:08:44,394 --> 00:08:52,376
into data. So data push
to delta P, oops P.

139
00:08:54,557 --> 00:08:55,172
Good!

140
00:08:55,347 --> 00:08:59,085
So basically job done here, so all
we need to do is we need to plot

141
00:08:59,281 --> 00:09:01,844
these now and so we gonna do is

142
00:09:01,999 --> 00:09:09,316
we're gonna say here draw line chart
and then we gonna pass, as before

143
00:09:09,494 --> 00:09:16,444
first at data, then the X-axis label
so that's gonna be P.

144
00:09:16,985 --> 00:09:19,317
And then the Y-axis label.

145
00:09:19,509 --> 00:09:21,464
That's gonna be Delta P.

146
00:09:24,585 --> 00:09:27,527
And legend, actually don't want
a legend but still have to pass

147
00:09:27,707 --> 00:09:30,469
something so i'm just going to
pass the empty array here.

148
00:09:30,632 --> 00:09:34,709
Before here we plotted effective,
well we labelled here

149
00:09:34,870 --> 00:09:37,732
the effective population size,
and things like that.

150
00:09:37,895 --> 00:09:41,020
But now we don't need that, so I'm
just going to pass in an empty array

151
00:09:41,176 --> 00:09:45,076
so nothing will be,
there will be no legend.

152
00:09:45,516 --> 00:09:48,973
By the way, if you want to be a bit
fancier here, we can use

153
00:09:49,143 --> 00:09:51,506
the Greek letter for Delta.

154
00:09:51,674 --> 00:09:55,974
So this, to do this we will need to
use the Unicode symbol

155
00:09:56,127 --> 00:10:02,252
which happens to be "\u0394"

156
00:10:02,422 --> 00:10:08,000
that's essentially the
Unicode code for Greek delta.

157
00:10:09,392 --> 00:10:14,589
Okay, let's save this and now let's
go to the browser and

158
00:10:14,750 --> 00:10:18,575
here we still have our drift and
selection so let's open the file

159
00:10:18,766 --> 00:10:26,415
here that we just created,
which we called, Delta P vs P.

160
00:10:26,591 --> 00:10:31,311
You can of cause also open this file
from the menu here. File. Open.

161
00:10:32,552 --> 00:10:34,471
Alright, so what do we have here?

162
00:10:34,601 --> 00:10:40,553
Well, we have here something that's
interesting namely we have some

163
00:10:40,737 --> 00:10:44,346
kind of curve, but first of all it's
very flat and it's showing Delta P

164
00:10:44,526 --> 00:10:48,067
so that works and it's showing P, but
there are a couple of problems here.

165
00:10:48,253 --> 00:10:52,251
So the first problem here is that
this seems to be going from zero

166
00:10:52,421 --> 00:10:55,787
to one hundred, but that's kinda
weird because we said, hey we

167
00:10:55,947 --> 00:10:58,922
want this to go from zero to one.

168
00:10:59,479 --> 00:11:03,492
Well it's because by default this
function just essentially plots

169
00:11:03,645 --> 00:11:09,007
the array indices, and if we
go back to the code here

170
00:11:09,489 --> 00:11:13,377
If we go back to this draw line
chart function where it's defined

171
00:11:14,986 --> 00:11:18,440
we can actually see here that the
fifth parameter that we so far 

172
00:11:18,632 --> 00:11:21,107
ignored is this "x_max value"

173
00:11:21,336 --> 00:11:26,909
where we can essentially say, look
we don't want this X-axis to be

174
00:11:27,063 --> 00:11:30,738
between zero and the number
of elements in the array.

175
00:11:30,893 --> 00:11:33,893
We actually want it to be
between zero and a particular value.

176
00:11:34,120 --> 00:11:36,994
So here our particular
value would be one.

177
00:11:37,145 --> 00:11:40,791
So we would have to pass in one,
so let's go ahead and do this.

178
00:11:40,947 --> 00:11:45,672
So, let's just add the fifth
parameter here, the 5th argument

179
00:11:46,121 --> 00:11:48,054
that we are passing as one.

180
00:11:48,402 --> 00:11:53,848
We are gonna save this and we are
gonna reload this and now this is

181
00:11:54,018 --> 00:11:57,018
correct.this goes from zero to one.

182
00:11:57,782 --> 00:12:01,747
So the other problem is it still
looks very flat and that's because

183
00:12:01,930 --> 00:12:06,855
this axis here is also fixed from
zero to one by default

184
00:12:07,145 --> 00:12:11,165
and that made sense before, when we
plotted P over time, because P was

185
00:12:11,328 --> 00:12:14,903
 always the value between zero and
one, but now it doesn't make sense.

186
00:12:15,051 --> 00:12:20,402
Delta P can be anything, so we kind
of need to change the code here.

187
00:12:20,545 --> 00:12:26,055
So let's go back to the code, and
again let's scroll up to this

188
00:12:26,212 --> 00:12:30,637
function here we can see here that
the sixth parameter is called

189
00:12:30,790 --> 00:12:32,942
"y_max_flex".
What does it do?

190
00:12:33,310 --> 00:12:37,096
I programmed it such that if you
don't pass this parameter then

191
00:12:37,261 --> 00:12:41,123
the Y-axis is going to
between zero and one.

192
00:12:41,357 --> 00:12:45,272
However, sometimes you want this to
be flexible and span a certain range

193
00:12:45,468 --> 00:12:50,768
that allows you to plot all the
values but that makes maximum

194
00:12:50,969 --> 00:12:56,174
use of the space. So you can do this
by just passing the bullion value

195
00:12:56,360 --> 00:12:59,110
true as the argument
for this parameter. 

196
00:12:59,281 --> 00:13:02,906
And this is exactly what we gonna
do and we going to set this to true

197
00:13:04,900 --> 00:13:06,437
and we gonna save this.

198
00:13:07,077 --> 00:13:08,729
We going to go back to the browser.

199
00:13:09,516 --> 00:13:12,340
Okay, let's reload this here,
and here we go.

200
00:13:12,540 --> 00:13:17,044
This now looks like a much better
use of space and you can see here

201
00:13:17,232 --> 00:13:21,619
that the Y-axis now spans from zero
to something like point

202
00:13:21,777 --> 00:13:24,777
zero one seven-ish or so.

203
00:13:25,322 --> 00:13:31,509
This is interesting, this work now,
we have the axis figured out, but 

204
00:13:31,791 --> 00:13:34,791
there is still a tiny little problem
here, if you notice here

205
00:13:36,763 --> 00:13:40,738
At zero, Delta P is zero, which is
correct, because you don't have any

206
00:13:40,942 --> 00:13:45,705
leo, it can go nowhere,
but here that's also a bit strange.

207
00:13:45,879 --> 00:13:48,959
Here, if P has actually
reached fixation one

208
00:13:49,100 --> 00:13:54,663
Delta P still seems to be slightly
positive and that's not possible.

209
00:13:54,863 --> 00:13:58,304
Because, P cannot go above one.

210
00:13:58,598 --> 00:14:00,234
So what is going on here?

211
00:14:00,972 --> 00:14:06,608
Well back at the code we can figure
this out, by plotting I

212
00:14:06,806 --> 00:14:12,369
here in the for loop.
Let's go ahead and plot I.

213
00:14:13,981 --> 00:14:16,981
Okay, console log I, save this.


214
00:14:18,221 --> 00:14:22,292
Okay, back in the browser, we reload
this of course nothing

215
00:14:22,467 --> 00:14:28,016
should change here, but now if we
open the Java script console here

216
00:14:28,158 --> 00:14:30,396
view developer Java script console

217
00:14:30,588 --> 00:14:35,313
We can see here that this increase
of point zero one by and large works

218
00:14:35,467 --> 00:14:39,704
but what you can also see here is
our old friend form chapters

219
00:14:39,872 --> 00:14:43,940
two and three,
the rounding error.

220
00:14:45,407 --> 00:14:49,234
And, what that means is that,
here you can see, we go up to

221
00:14:49,520 --> 00:14:54,858
point nine nine, bunch of zeroes,
and so on, seven.

222
00:14:54,972 --> 00:14:59,094
So now if we would add point zero
one in the loop again we would be

223
00:14:59,260 --> 00:15:04,510
at one point zero, and so on,
to something like zero seven

224
00:15:05,464 --> 00:15:09,065
at the very insignificant
position here.

225
00:15:09,468 --> 00:15:14,058
But, if we go back to code, we can
see that because of this condition

226
00:15:14,214 --> 00:15:19,501
This value one point, bunch of
zeroes, seven would actually

227
00:15:19,675 --> 00:15:23,312
mean that this condition
would not be true anymore

228
00:15:23,484 --> 00:15:24,558
and so it would stop.

229
00:15:24,706 --> 00:15:29,387
So because of this rounding error
we actually get tripped here and

230
00:15:29,559 --> 00:15:33,747
so in order to avoid this we need to
add a little bit of a buffer here.

231
00:15:33,909 --> 00:15:37,390
I'm gonna remove this console log,
well actually let me

232
00:15:37,549 --> 00:15:39,861
leave it in here for the time being

233
00:15:39,995 --> 00:15:43,603
but what I'm gonna do is I'm gonna
set up a variable here called

234
00:15:43,780 --> 00:15:48,542
I'm also going to call this "x_max"
as in the draw line chart function

235
00:15:48,718 --> 00:15:51,879
and i'm going to set this to one,
right, this should be our maximum

236
00:15:52,064 --> 00:15:54,552
value on the X-axis.

237
00:15:54,730 --> 00:15:59,537
Here i'm going to replace this one
with "x_max" and let me also replace

238
00:15:59,721 --> 00:16:01,483
it down here, because
that's the same.

239
00:16:01,644 --> 00:16:07,433
okay, here in the arguments that
we passed through draw line chart. 

240
00:16:07,889 --> 00:16:11,537
Okay, but now I'm going to add a bit
of a buffer, okay let me say

241
00:16:11,727 --> 00:16:14,240
we going to add something
very very  small.

242
00:16:14,468 --> 00:16:17,458
It doesn't matter how small it is,
it should just be obviously

243
00:16:17,655 --> 00:16:19,205
smaller than the
increment here.

244
00:16:19,394 --> 00:16:24,277
So, we could say for example say
point, three zeroes, five, but this

245
00:16:24,437 --> 00:16:27,337
could be even smaller, but now
essentially the condition is 

246
00:16:27,535 --> 00:16:33,423
I, smaller than or equal to,
one point zero zero five.

247
00:16:33,613 --> 00:16:37,710
So, if we save this and go back to
the browser and take a look here

248
00:16:37,875 --> 00:16:42,025
then we can see that
now this value is included.

249
00:16:42,342 --> 00:16:46,958
Now this value is included, and we
can ignore mathematically this is

250
00:16:47,137 --> 00:16:51,712
completely insignificant here,
but it doesn't trip our for loop.

251
00:16:51,995 --> 00:16:57,655
And indeed, if we now look here
at the plot then we can now see

252
00:16:57,816 --> 00:17:02,779
this is now correct at P equals one,
the value here for Delta P

253
00:17:02,917 --> 00:17:06,142
is plotted as exactly zero. 

254
00:17:06,572 --> 00:17:10,954
So now this fixes this issue and we
can now see what this curve

255
00:17:11,142 --> 00:17:16,267
this Delta P in response
to P looks like.

256
00:17:16,789 --> 00:17:19,185
And we can see that this
is always positive right.

257
00:17:19,377 --> 00:17:23,643
It doesn't matter, of cause when
the P is zero and one this means

258
00:17:23,862 --> 00:17:27,074
the fixation of one of the two allele
so there is no more evolution

259
00:17:27,261 --> 00:17:31,894
but any value in between delta P
is larger than zero and that means

260
00:17:32,077 --> 00:17:35,314
that P will always go to fixation.

261
00:17:35,573 --> 00:17:39,210
But, don't believe me lets implement
actually the second plot

262
00:17:39,366 --> 00:17:41,379
also in Java script.

263
00:17:41,547 --> 00:17:45,724
So back in the code here, I'm gonna
actually create another file.

264
00:17:45,901 --> 00:17:51,420
So I'm simply going to save this
file as, and now we would like to do

265
00:17:51,618 --> 00:17:54,156
P versus time.

266
00:17:54,358 --> 00:17:58,604
So we would like to have the time
on the X-axis now and P on

267
00:17:58,764 --> 00:18:02,739
Y-axis as we have seen, for
example, in the drift simulations.

268
00:18:03,215 --> 00:18:06,837
So i need to change a couple of
things here we gonna remain

269
00:18:07,027 --> 00:18:10,064
with these two values
here S and H

270
00:18:10,177 --> 00:18:14,450
and, of course, we gonna keep this
data array but one thing that I need

271
00:18:14,620 --> 00:18:18,922
first of all is, I need a P value
that starts somewhere, so

272
00:18:19,091 --> 00:18:23,204
I'm gonna set this here at the
initial value of point zero one

273
00:18:23,368 --> 00:18:24,930
for example.

274
00:18:25,074 --> 00:18:29,315
And then I need to keep track of the
generations. Okay, I need to keep

275
00:18:29,479 --> 00:18:32,479
track of generations
and I'm going to do this

276
00:18:32,989 --> 00:18:38,696
for example, down here, var
generations, let's say, I don't

277
00:18:38,897 --> 00:18:41,547
really need to keep track but
I need to define how many

278
00:18:41,712 --> 00:18:46,073
generations i want. I'm gonna run
this for four-hundred  generations.

279
00:18:46,902 --> 00:18:52,821
Now we need a different type of loop
now, so here we have for I going up

280
00:18:52,987 --> 00:18:56,050
to this value here and then
an increment by point zero one.

281
00:18:56,393 --> 00:19:00,019
Now we don't need this anymore, we
will simply do this as we have done

282
00:19:00,177 --> 00:19:05,377
 before in chapter 3, we simply say,
I is the generation counter

283
00:19:05,537 --> 00:19:09,432
so I'm gonna do this as long as
I is smaller than generations 

284
00:19:09,608 --> 00:19:13,589
and i'm gonna increase I by one. So
this was the default case that we

285
00:19:13,750 --> 00:19:16,285
had before, so I don't need these
"x_max" anymore here

286
00:19:16,453 --> 00:19:18,066
we won't have that issue.

287
00:19:18,231 --> 00:19:21,560
I don't need to console
log I either.

288
00:19:21,941 --> 00:19:25,935
What i need to say though,
so this P needs need to go

289
00:19:26,100 --> 00:19:29,712
because we have, it's not something
we are setting  it's something

290
00:19:29,890 --> 00:19:32,397
that we are actually
dynamically calculating.

291
00:19:32,575 --> 00:19:36,485
So i'm gonna remove
this line here as well.

292
00:19:36,882 --> 00:19:40,729
We still have Q equals one minus P,
so that's correct we are still

293
00:19:40,872 --> 00:19:43,809
calculating Delta P,
so nothing new here

294
00:19:43,980 --> 00:19:48,220
but now we are basically updating P
to be what it was before

295
00:19:48,397 --> 00:19:50,785
plus whatever it is Delta P is.

296
00:19:50,940 --> 00:19:53,697
Alright, cause that's exactly what
the Delta P is of course

297
00:19:53,848 --> 00:19:56,636
its simply the change
of P over generations

298
00:19:56,839 --> 00:20:00,122
so we simply need to update
the P here and then I don't

299
00:20:00,327 --> 00:20:05,102
want to push Delta P in here but P
because I want to plot

300
00:20:05,264 --> 00:20:07,976
P as it changes over time.

301
00:20:08,180 --> 00:20:12,131
So that's pretty much it we should
probably update the correct labels

302
00:20:12,314 --> 00:20:18,139
here so here on the X-axis
we have generation

303
00:20:18,363 --> 00:20:22,611
on the Y-axis we not plotting Delta P
we simply plotting P.

304
00:20:22,786 --> 00:20:26,603
We still don't want a legend
and these we can now get

305
00:20:26,764 --> 00:20:29,714
rid of, because because we are
back at the default cases

306
00:20:29,860 --> 00:20:31,560
that we had in chapter 3.

307
00:20:31,736 --> 00:20:34,184
So i'm gonna save this and now I'm
going to open this

308
00:20:34,347 --> 00:20:36,747
P versus time in the browser.

309
00:20:36,944 --> 00:20:40,795
I'm going to open a second tab
so that we can easily compare this 

310
00:20:41,263 --> 00:20:45,621
So i'm gonna open file here,
P versus time, here it is

311
00:20:45,774 --> 00:20:48,774
and he is our simulation.

312
00:20:49,221 --> 00:20:52,514
Now you can see here, P goes
from the initial value we said

313
00:20:52,671 --> 00:20:57,721
to point zero one very quickly
up to fixation and it fixes

314
00:20:57,913 --> 00:21:01,633
It's really hard to say, when
exactly it fixes because, remember

315
00:21:01,802 --> 00:21:07,977
we now have infinite population size
so it asymptotically goes to one.

316
00:21:08,532 --> 00:21:13,462
But, you know you can see here
around generation two-hundered

317
00:21:13,609 --> 00:21:17,709
you can basically say that it's now
gone to fixation and you can also 

318
00:21:17,895 --> 00:21:20,182
see that the fixation process

319
00:21:20,149 --> 00:21:24,776
itself happens very quickly
here in this period.

320
00:21:24,948 --> 00:21:25,678
Why is that?

321
00:21:25,894 --> 00:21:28,894
Well let's now simply compare
this to our Delta versus P.

322
00:21:29,343 --> 00:21:34,885
Here what this plot has shown
us is that, Delta P as a function

323
00:21:35,054 --> 00:21:39,867
of P is largest, when P is somewhere
in the middle and that's

324
00:21:40,040 --> 00:21:42,929
you know, here for example,
the maximum is somewhere

325
00:21:43,108 --> 00:21:45,183
between point three and point four.

326
00:21:45,358 --> 00:21:50,527
Now if you look at this graph here,
indeed here between point three and

327
00:21:50,681 --> 00:21:54,481
point four, that's when it's
mathematically steepest

328
00:21:54,682 --> 00:21:58,140
that's where you have the fastest
increase and then as you go over

329
00:21:58,294 --> 00:22:01,806
here the increase slows that's
because you are approaching

330
00:22:01,973 --> 00:22:03,560
now very high values of P

331
00:22:03,741 --> 00:22:09,192
point nine, and if you over here
again at point nine, the Delta P's

332
00:22:09,374 --> 00:22:12,887
 are getting smaller and smaller
and going to really small values

333
00:22:13,062 --> 00:22:14,500
and approaching zero.

334
00:22:14,680 --> 00:22:19,411
So that makes a lot of sense,
this is Delta P as a function of P

335
00:22:19,601 --> 00:22:23,288
and this is consequently
how P changes over time.

336
00:22:23,495 --> 00:22:27,007
And the key take home message here
is for directional selection

337
00:22:27,182 --> 00:22:29,844
and of course you can reload this
right, this is now not

338
00:22:29,997 --> 00:22:33,122
a stochastic simulation,
it's a deterministic simulation.

339
00:22:33,284 --> 00:22:36,473
There is no random effect here
anymore, there is no math

340
00:22:36,642 --> 00:22:38,205
random that we use in the code.

341
00:22:38,378 --> 00:22:41,777
So this is mathematically always
going to be of course  the exact

342
00:22:41,945 --> 00:22:46,007
same thing, and what you can see
here is that, P goes from

343
00:22:46,178 --> 00:22:50,003
very low values to fixation. Why?

344
00:22:50,191 --> 00:22:54,032
Because, over here  we can see Delta
P is always positive and that's

345
00:22:54,201 --> 00:22:56,876
a consequence of
directional selection.

346
00:22:57,047 --> 00:23:00,238
And that's also why it's called
directional selection in the first

347
00:23:00,406 --> 00:23:04,581
place because starting from any P
there is only one direction this

348
00:23:04,769 --> 00:23:11,391
will go, and in this case, because
there is a selection benefit it's up

349
00:23:11,565 --> 00:23:13,869
so it will go to fixation.

350
00:23:14,014 --> 00:23:18,082
So that is directional selection
and in the next lectures we'll

351
00:23:18,257 --> 00:23:21,482
take a look at balancing and
disruptive selection, which is not

352
00:23:21,645 --> 00:23:25,614
as straight forward in the
dynamics as directional selection.

353
00:23:25,789 --> 00:23:28,322
Alright, so with this code in
place we can now move to

354
00:23:28,497 --> 00:23:31,547
the next type of selection,
namely that of balancing selection.

355
00:23:31,702 --> 00:23:35,126
I'll see you in the next lecture.

