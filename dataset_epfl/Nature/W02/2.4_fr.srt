1
00:00:03,670 --> 00:00:06,760
Bienvenue. <I> Nature, dans le code </ i>.
Nous sommes dans le chapitre 2, leçon 4,

2
00:00:06,760 --> 00:00:09,680
et dans cette vidéo,
nous allons enfin commence à coder.

3
00:00:09,680 --> 00:00:11,130
Donc, pour récapituler,

4
00:00:11,130 --> 00:00:14,210
pourquoi est-ce que nous utilisons
JavaScript dans ce cours?

5
00:00:14,210 --> 00:00:16,450
Donc, il y a deux ou trois raisons.

6
00:00:16,450 --> 00:00:18,160
JavaScript étant très rapide,

7
00:00:18,160 --> 00:00:21,660
JavaScript étant un langage facile
à apprendre, à mon avis.

8
00:00:21,660 --> 00:00:25,150
Mais je pense que l'un des aspects
les plus importants de JavaScript

9
00:00:25,150 --> 00:00:28,010
est qu'il fonctionne dans
tous les navigateurs

10
00:00:28,010 --> 00:00:31,500
et c'est un véritable atout,
car tout ce que vous devez faire

11
00:00:31,500 --> 00:00:33,990
c'est que vous devez ouvrir
un éditeur de texte,

12
00:00:33,990 --> 00:00:36,220
vous pouvez commencer à écrire
un document JavaScript

13
00:00:36,220 --> 00:00:39,430
puis enregistrez cela
et le charger dans un navigateur.

14
00:00:39,430 --> 00:00:41,720
Et, c'est vraiment puissant
parce que cela signifie

15
00:00:41,720 --> 00:00:44,160
il n'y a rien que vous devez installer.

16
00:00:44,160 --> 00:00:48,170
Et, plus important encore,
en ce moment, il y a des milliards,

17
00:00:48,170 --> 00:00:51,730
littéralement, des milliards de dispositifs
qui peuvent exécuter votre code

18
00:00:51,730 --> 00:00:53,770
parce qu'ils viennent avec un navigateur,

19
00:00:53,770 --> 00:00:57,830
et les navigateurs ont toujours
JavaScript pré-installé.

20
00:00:57,830 --> 00:01:00,640
Et donc, pour moi,
c'est un grand, grand atout,

21
00:01:00,640 --> 00:01:03,250
et voilà pourquoi nous utilisons
JavaScript.

22
00:01:03,250 --> 00:01:05,410
Donc, nous allons commencer à coder.

23
00:01:05,410 --> 00:01:08,900
Donc la première chose que nous devons
faire c'est d'ouvrir une page web

24
00:01:08,900 --> 00:01:09,990
de votre choix.

25
00:01:09,990 --> 00:01:15,280
Je suis en fait ici sur la page
de se connecter de Google

26
00:01:15,280 --> 00:01:19,450
et laissez-moi simplement cliquez ici
sur À propos de Google.

27
00:01:19,450 --> 00:01:24,050
Cela nous donne une sorte
de page Web en moyenne.

28
00:01:24,050 --> 00:01:27,170
Ce n'est pas une forme de connexion,
mais il a des images,

29
00:01:27,170 --> 00:01:30,700
il a des liens, il a des textes,
et ainsi de suite,

30
00:01:30,700 --> 00:01:34,450
votre page web prototypique, ici.

31
00:01:34,450 --> 00:01:37,040
Maintenant, comment cela fonctionne?

32
00:01:37,040 --> 00:01:39,450
Quel est le code derrière cette page,

33
00:01:39,450 --> 00:01:43,250
et comment le navigateur sait
quoi faire avec elle?

34
00:01:43,250 --> 00:01:46,680
Eh bien, il se trouve que, chaque fois
que vous entrez une adresse ici,

35
00:01:46,680 --> 00:01:50,410
dans la barre d'URL,
puis appuyez sur <i> Entrée </ i>,

36
00:01:50,410 --> 00:01:53,410
ou vous avez réellement cliquez
sur un lien, comme je viens de le faire,

37
00:01:53,410 --> 00:01:57,110
puis une demande est faite

38
00:01:57,110 --> 00:01:59,890
pour un document HTML particulier.

39
00:02:00,730 --> 00:02:03,390
Et donc, votre navigateur fait
cette demande,

40
00:02:03,390 --> 00:02:06,490
et finalement, une machine quelque part
sur Internet appelé <i> serveur </ i>,

41
00:02:06,490 --> 00:02:08,180
renvoie ce document,

42
00:02:08,180 --> 00:02:12,100
puis votre navigateur rend
ce document pour vous.

43
00:02:12,100 --> 00:02:15,500
Donc, nous allons jeter regarder à quoi
cela ressemble, en fait, dans les coulisses.

44
00:02:15,500 --> 00:02:17,290
Voici donc, en chrome,

45
00:02:17,290 --> 00:02:22,500
vous pouvez aller à
<i> Voir & gt; Développeur & gt; Afficher la source </ i>.

46
00:02:22,500 --> 00:02:27,420
Maintenant, vous devriez avoir un menu
similaire dans le navigateur que vous utilisez,

47
00:02:27,420 --> 00:02:30,670
si vous ne l'utilisez Chrome.

48
00:02:30,670 --> 00:02:33,190
L'alternative c'est que la plupart
des navigateurs ont cette fonctionnalité

49
00:02:33,190 --> 00:02:37,410
où vous pouvez
<i> cliquer à droit </ i> sur le document,

50
00:02:37,410 --> 00:02:40,410
puis ici, disons, <i> Voir la page Source </ i>.

51
00:02:40,410 --> 00:02:44,490
Mais, oui, tous les navigateurs viennent
avec cette fonctionnalité intégrée,

52
00:02:44,490 --> 00:02:49,400
donc dans Chrome c'est
<i> Voir & gt; Développeur & gt; Afficher la source </ i>.

53
00:02:49,400 --> 00:02:52,180
Et ici, on voir effectivement
le code source,

54
00:02:52,180 --> 00:02:54,670
une source HTML de ce document.

55
00:02:54,670 --> 00:02:59,710
Et, si vous défilez à travers ce document,
vous pouvez voir un peu d'une structure ici.

56
00:02:59,710 --> 00:03:05,860
Cette structure est, en fait, le HTML.
<I> HTML </ i> signifie Hypertext Markup Language.

57
00:03:05,860 --> 00:03:10,100
Maintenant, on ne va pas apprendre
HTML dans ce cours.

58
00:03:10,100 --> 00:03:14,450
Nous allons juste apprendre
les bases que nous avons besoin.

59
00:03:14,450 --> 00:03:17,180
La première chose à noter
c'est que la première ligne ici,

60
00:03:17,180 --> 00:03:20,170
définit que c'est un document HTML.

61
00:03:20,170 --> 00:03:22,410
Ce n'est pas réellement nécessaire,

62
00:03:22,410 --> 00:03:28,400
mais c'est une convention et on va
l'utiliser tout au long du parcours.

63
00:03:28,400 --> 00:03:31,280
Et puis vous avez,
vous pouvez voir ces crochets ici.

64
00:03:31,280 --> 00:03:32,110
Quels sont ceux-la?

65
00:03:32,110 --> 00:03:36,160
Eh bien, ce sont en fait soi-disant
<i> balises HTML </ i>,

66
00:03:36,160 --> 00:03:42,010
et presque toutes les balises HTML
ont la structure suivante:

67
00:03:42,010 --> 00:03:46,420
Il y a un mot qui définit la balise. Donc,
cela, par exemple, est <i>la tête</ i> de balise.

68
00:03:46,420 --> 00:03:51,660
Et puis, beaucoup de ceux-là contiennent en fait
d'autres balises ou tout autre type de contenu

69
00:03:51,660 --> 00:03:54,620
puis, par la suite, cette balise est fermée.

70
00:03:54,620 --> 00:03:59,050
Donc,<i>la tête</ i> de balise est fermée,
ici-bas, avec cette barre oblique.

71
00:03:59,050 --> 00:04:00,950
Et donc, ceci est un exemple typique

72
00:04:00,950 --> 00:04:03,680
et vous serez en mesure de voir ceci
tout au long de ces documents

73
00:04:03,680 --> 00:04:08,620
que certaines balises contiennent d'autres
balises qui contiennent d'autres balises,

74
00:04:08,620 --> 00:04:11,810
puis, par la suite, ces étiquettes
sont fermées.

75
00:04:11,810 --> 00:04:16,200
Donc, ceci est un type
de <i> nidification </ i> que HTML permet.

76
00:04:16,200 --> 00:04:18,690
Maintenant, nous n'utiliserons
pas cela beaucoup,

77
00:04:18,690 --> 00:04:21,750
mais c'est juste généralement important
de le savoir.

78
00:04:23,030 --> 00:04:25,850
Maintenant, où est le JavaScript?

79
00:04:25,850 --> 00:04:29,400
Donc, JavaScript est effectivement
utilisé assez fortement sur cette page,

80
00:04:29,400 --> 00:04:30,970
qui peut être surprenant.

81
00:04:30,970 --> 00:04:35,010
Mais, l'utilisation la plus évidente
de JavaScript est ici.

82
00:04:35,010 --> 00:04:38,470
Et, par ailleurs, n'ayez pas peur
de ceci, d'accord?

83
00:04:38,470 --> 00:04:41,600
Ceci est un code JavaScript très compliqué.

84
00:04:41,600 --> 00:04:46,170
Je regarde ce code, et je n'ai franchement
aucune idée de ce que ce code faire.

85
00:04:46,170 --> 00:04:48,240
Je pourrais, bien sûr, l'analyser

86
00:04:48,240 --> 00:04:49,990
et je voudrais éventuellement
comprendre ce qu'elle est,

87
00:04:49,990 --> 00:04:52,930
mais cela est extrêmement
un code <i> laconique </ i>.

88
00:04:52,930 --> 00:04:56,180
Et il est <i> laconique </ i>
pas qu'il soit facile à lire pour nous,

89
00:04:56,180 --> 00:04:59,220
mais pour qu'il ne consomme pas
beaucoup de bande passante.

90
00:04:59,220 --> 00:05:03,430
Mais en tout cas, le point est,
n'ayez pas peur de cela.

91
00:05:03,430 --> 00:05:07,230
Nous allons écrire de code beaucoup
plus clair et beaucoup plus beau.

92
00:05:09,450 --> 00:05:11,500
Non pas parce que Google
ne pouvait pas faire cela,

93
00:05:11,500 --> 00:05:15,960
mais parce que nous ne sommes pas
réellement limités par la bande passante, à ce stade.

94
00:05:15,960 --> 00:05:18,830
Mais, en tout cas, cela est
le code JavaScript.

95
00:05:18,830 --> 00:05:23,000
Ainsi, vous remarquerez également que,
voici une balise de  <i> script </ i> qui est s'ouvre

96
00:05:23,000 --> 00:05:25,550
puis il se ferme ici.

97
00:05:26,440 --> 00:05:28,030
En fait, ici, vous voyez autre chose.

98
00:05:28,030 --> 00:05:30,720
Vous voyez une balise de <i> script </ i>
s'ouvrir et se fermer,

99
00:05:30,720 --> 00:05:33,400
mais il n'y a pas de code
JavaScript au sein,

100
00:05:33,400 --> 00:05:36,635
mais il y a une référence à un fichier.

101
00:05:36,635 --> 00:05:39,830
Et cela, est aussi
un fichier JavaScript ici,

102
00:05:39,830 --> 00:05:44,080
qui sera chargé dans ce document.

103
00:05:44,080 --> 00:05:48,410
Nous allons utiliser cette technologie
très rarement.

104
00:05:48,410 --> 00:05:52,780
Nous allons, en général, écrire directement
dans le document, comme nous le faisons ici.

105
00:05:52,780 --> 00:05:55,920
D'ailleurs, ici, il y a un peu plus
de JavaScript.

106
00:05:55,920 --> 00:05:58,430
Voici deux autres fichiers
qui sont chargés.

107
00:05:58,430 --> 00:06:01,110
Et puis, si nous revenons vers le haut,

108
00:06:01,110 --> 00:06:03,660
voici une seule ligne de JavaScript

109
00:06:03,660 --> 00:06:08,510
qui est écrit à droite dans ce document, ici.

110
00:06:09,310 --> 00:06:12,410
Et puis, nous avons une autre ligne,
par exemple, ici,

111
00:06:12,410 --> 00:06:16,350
et vous remarquerez encore, la balise de
<i> script </ i> , puis le <i> / script </ i>.

112
00:06:16,350 --> 00:06:18,560
En fait, un peu plus JavaScript ici,
encore,

113
00:06:18,560 --> 00:06:20,730
chargé à partir d'un fichier externe.

114
00:06:20,730 --> 00:06:25,130
Le point étant, il y a un peu de JavaScript

115
00:06:25,130 --> 00:06:30,200
sur toute la carte ici,
et c'est un exemple très typique.

116
00:06:30,200 --> 00:06:32,680
Donc, afin de le faire nous-mêmes,

117
00:06:32,680 --> 00:06:36,160
nous devons maintenant écrire
notre premier document HTML,

118
00:06:36,160 --> 00:06:40,000
et dans ce document, nous allons écrire
notre première ligne de JavaScript.

119
00:06:40,000 --> 00:06:43,390
Maintenant, pour le faire,
nous avons besoin d'un éditeur de texte.

120
00:06:43,390 --> 00:06:48,150
J'utilise, ici, un programme appelé
TextWrangler.

121
00:06:49,160 --> 00:06:51,140
Je l'aime assez. C'est gratuit.

122
00:06:51,140 --> 00:06:56,660
Il a beaucoup de fonctionnalités, mais
il n'est pas trop compliqué à utiliser.

123
00:06:56,660 --> 00:06:59,910
Mais vous pouvez utiliser
un éditeur de texte que vous voulez,

124
00:06:59,910 --> 00:07:03,990
que ce soit gratuit, ou si vous utilisez
déjà un que vous avez acheté.

125
00:07:03,990 --> 00:07:09,650
C'est à vous, aussi longtemps qu'il est facile
pour vous de travailler avec.

126
00:07:09,650 --> 00:07:13,400
Et pour moi, TextWrangler est très facile
de travailler avec.

127
00:07:13,400 --> 00:07:15,970
En outre, votre contexte particulier
peut être différent,

128
00:07:15,970 --> 00:07:18,420
vous pouvez avoir un fond blanc.

129
00:07:18,420 --> 00:07:21,190
J'utilise ce thème un peu plus sombre ici,

130
00:07:21,190 --> 00:07:24,460
mais vous pouvez utiliser un thème,
le look que vous voulez.

131
00:07:24,460 --> 00:07:25,710
Ceci n'est pas vraiment le point.

132
00:07:25,710 --> 00:07:30,960
Le point est que vous avez un éditeur
de texte que vous vous sentez à l'aise avec.

133
00:07:30,960 --> 00:07:34,000
Si vous êtes sur un Mac,
je recommande TextWrangler.

134
00:07:34,740 --> 00:07:36,550
C'est un outil gratuit
et il est assez agréable.

135
00:07:37,480 --> 00:07:39,150
Très bien, nous allons donc commencer.

136
00:07:39,150 --> 00:07:41,670
Écrivons notre premier document

137
00:07:41,670 --> 00:07:43,930
et je vais aller avec la convention ici,

138
00:07:43,930 --> 00:07:48,780
et je vais commencer avec
ce <i> DOCTYPE html </ i>.

139
00:07:49,670 --> 00:07:53,730
Whoops, je devrais écrire réellement
<i> DOCTYPE </ i>, pas <i> SOCTYPE </ i>.

140
00:07:53,730 --> 00:07:56,190
Ok, <i> DOCTYPE html </ i>,

141
00:07:56,190 --> 00:08:00,650
une ligne qui indique au navigateur que
c'est un document HTML.

142
00:08:00,650 --> 00:08:04,160
Mais encore une fois, en fait,
le code pourrait fonctionner sans cela,

143
00:08:04,160 --> 00:08:07,420
mais je vais juste aller avec
la convention ici, et être gentil.

144
00:08:07,420 --> 00:08:11,400
Bien. Ensuite, un document HTML

145
00:08:11,400 --> 00:08:16,160
est presque toujours contenue
par cette balise <i> HTML </ i>.

146
00:08:16,160 --> 00:08:19,970
Donc, je vais écrire cette balise <i> HTML </ i>,
et puis je vais le fermer à nouveau.

147
00:08:19,970 --> 00:08:25,470
Et maintenant, dans cette balise ici,
Je vais maintenant créer ma page HTML.

148
00:08:26,740 --> 00:08:30,010
Une autre chose qui est généralement
fait c'est qu'une page HTML

149
00:08:30,010 --> 00:08:35,400
est structuré par programmation en deux parties:
une <i>tête</ i> et le <i> corps </ i>.

150
00:08:35,400 --> 00:08:37,820
Donc, je vais continuer
et créer ces deux balises.

151
00:08:37,820 --> 00:08:39,660
D'accord, il y a la balise de <i> tête </ i>

152
00:08:39,660 --> 00:08:41,520
vous avez peut-être vu ceci avant

153
00:08:42,430 --> 00:08:45,630
puis, <i> / tête </ i>, je vais le fermer
tout de suite.

154
00:08:45,630 --> 00:08:48,170
Et puis, le soi-disant
balise de <i> corps </ i>,

155
00:08:48,170 --> 00:08:50,560
que je vais aussi ouvrir et fermer

156
00:08:50,560 --> 00:08:54,230
whoops, barre, fermer, tout de suite.

157
00:08:55,000 --> 00:08:57,440
Et, d'ailleurs c'est juste quelque chose
que je suis habitué à au fil des ans.

158
00:08:57,440 --> 00:09:02,410
Quand j'ouvre une balise, je le ferme
immédiatement pour ne pas oubliez plus tard.

159
00:09:02,410 --> 00:09:04,660
Ok, donc une autre chose que
je vais faire maintenant,

160
00:09:04,660 --> 00:09:07,480
c'est, je vais tiret ces deux balises

161
00:09:07,480 --> 00:09:10,700
et ici dans TextWrangler, j'utilise
le <i> Tab </ i>.

162
00:09:10,700 --> 00:09:14,230
Vous pouvez aussi utiliser <i> Espace </ i>,
comme vous le voulez.

163
00:09:14,230 --> 00:09:18,340
Et, vous savez, en fonction
de votre éditeur de texte un petit peu.

164
00:09:18,340 --> 00:09:20,160
Alors, qu'est-ce ceci? Est-ce nécessaire?

165
00:09:20,160 --> 00:09:22,940
Non, ce n'est pas théoriquement nécessaire.

166
00:09:22,940 --> 00:09:28,410
En fait, vous pourriez avoir un document
HTML entier sur une seule ligne,

167
00:09:28,410 --> 00:09:30,930
mais il serait très difficile à lire.

168
00:09:30,930 --> 00:09:32,630
Et comme nous l'avons vu avant

169
00:09:33,160 --> 00:09:36,910
En fait, si nous revenons
à cette <i> code source </ i> ici,

170
00:09:36,910 --> 00:09:40,970
vous pouvez voir que Google, lui-même
fait l'indentation, d'accord,

171
00:09:40,970 --> 00:09:42,560
et qui le rend tout simplement plus facile.

172
00:09:42,560 --> 00:09:45,540
Vous pouvez, en quelque sorte,
comprendre le niveau d'imbrication.

173
00:09:45,540 --> 00:09:51,590
Vous pouvez comprendre que cette classe<i> div </ i>,
cette balise <i> div </ i>, désolé, ferme ici

174
00:09:51,590 --> 00:09:55,900
et celui-ci se ferme ici,
et celui-ci se ferme ici,

175
00:09:55,900 --> 00:09:57,740
et celui-ci correspond à celui-ci.

176
00:09:57,740 --> 00:10:02,460
Ainsi, il rend les choses beaucoup
plus facile à comprendre, visuellement.

177
00:10:02,460 --> 00:10:06,720
Mais vous pouvez, en principe,
tous ce document HTML

178
00:10:06,720 --> 00:10:08,710
dans une seule ligne,

179
00:10:08,710 --> 00:10:12,830
mais ce sera un cauchemar
complet pour travailler avec.

180
00:10:12,830 --> 00:10:16,230
Très bien, permettez-moi de revenir
à l'éditeur de texte.

181
00:10:16,230 --> 00:10:19,650
Donc, nous avons ici la balise <i>tête </ i> et nous avons le <i> corps </ i>.

182
00:10:19,650 --> 00:10:21,000
Alors, ils sont pour quoi?

183
00:10:21,000 --> 00:10:23,300
Eh bien, normalement, dans la tête,

184
00:10:23,300 --> 00:10:27,400
vous avez toutes sortes d'informations
sur le document,

185
00:10:27,400 --> 00:10:30,620
comme le titre, peut-être,
le sujet du document,

186
00:10:30,620 --> 00:10:33,680
certains mots-clés, des choses comme ça.

187
00:10:33,680 --> 00:10:37,860
Il est également typique de mettre
le code JavaScript ici

188
00:10:37,860 --> 00:10:40,640
et nous allons faire cela beaucoup.

189
00:10:40,640 --> 00:10:41,960
La balise de <i> corps </ i> est pour?

190
00:10:41,960 --> 00:10:44,670
Eh bien, le corps contient typiquement

191
00:10:44,670 --> 00:10:48,800
toutes ces balises qui sont effectivement
utilisés pour montrer pour rendre le contenu

192
00:10:50,440 --> 00:10:51,690
sur une page Web.

193
00:10:51,690 --> 00:10:55,510
Donc, les choses visuelles, celles-là
feraient normalement partie du corps.

194
00:10:55,510 --> 00:10:59,610
Et très généralement,
le corps est en fait 90%, voire plus,

195
00:10:59,610 --> 00:11:01,430
de tout votre code HTML.

196
00:11:01,430 --> 00:11:05,880
Dans notre cas, ce n'est pas normalement
ce que nous allons faire.

197
00:11:05,880 --> 00:11:07,730
Parce que nous apprenons JavaScript ici,

198
00:11:07,730 --> 00:11:12,080
la plupart de notre code sera le code JavaScript,
et ils seront ici, dans la tête.

199
00:11:12,550 --> 00:11:18,370
Donc, je vais continuer
et ajouter un peu de JavaScript ici.

200
00:11:18,370 --> 00:11:21,050
En fait, avant de le faire, nous allons
ajouter quelque chose au corps,

201
00:11:21,050 --> 00:11:22,160
juste pour être sûr, d'accord?

202
00:11:22,160 --> 00:11:25,630
Donc, nous allons simplement écrire:
"Bonjour tout le monde."

203
00:11:29,040 --> 00:11:32,730
puis enregistrez le document
et voir ce que cela ressemble réellement.

204
00:11:32,730 --> 00:11:36,210
Donc, nous allons continuer
et enregistrer ce document,

205
00:11:36,210 --> 00:11:39,450
et vous pouvez enregistrer ce partout
où vous voulez.

206
00:11:39,450 --> 00:11:42,660
Je vais enregistrer ceci dans un dossier
que j'ai préparé déjà,

207
00:11:42,660 --> 00:11:44,640
appelé <i> exemples de code </ i>.

208
00:11:44,640 --> 00:11:48,430
Vous pouvez l'enregistrer où
vous voulez sur votre machine,

209
00:11:48,430 --> 00:11:50,680
rappelez-vous juste où
vous l'avez enregistré.

210
00:11:50,680 --> 00:11:55,280
Et je vais appeler ceci
<i> premier_exemple </ i>.

211
00:11:55,280 --> 00:12:01,010
Et puis, être sûr de terminer cela avec <i> .html </ i>,
ou <i> .htm </ i> est aussi une option,

212
00:12:01,010 --> 00:12:02,810
mais je vais utiliser <i> .html </ i>.

213
00:12:03,670 --> 00:12:08,010
D'accord. Je vais l'enregistrer, et maintenant,
deux choses se sont produites.

214
00:12:08,010 --> 00:12:12,190
Tout d'abord, nous avons enregistré le document,
et nous allons l'ouvrir dans une seconde.

215
00:12:12,190 --> 00:12:13,460
L'autre chose qui se produit ici,

216
00:12:13,460 --> 00:12:18,660
parce que j'utilise ceci <i> .html </ i>
pou la fin de nom du fichier,

217
00:12:18,660 --> 00:12:22,960
TextWrangler a automatiquement reconnu
que c'est maintenant un fichier HTML

218
00:12:22,960 --> 00:12:25,750
et a coloré les choses en conséquence.

219
00:12:25,750 --> 00:12:27,750
Voici donc, comme j'ai configurer cela,

220
00:12:27,750 --> 00:12:30,930
vous pouvez voir que cette première ligne
ici est codée en rouge,

221
00:12:30,930 --> 00:12:34,670
puis les balises appropriées sont codées
en une sorte d'un gris,

222
00:12:34,670 --> 00:12:38,430
puis, le texte est en blanc.

223
00:12:38,430 --> 00:12:41,220
Encore une fois,
cela peut être différent pour vous,

224
00:12:41,220 --> 00:12:45,260
et voilà pourquoi j'aime utiliser
un éditeur approprié

225
00:12:45,260 --> 00:12:51,050
parce que cette syntaxe de couleur
vous aide vraiment avec le code,

226
00:12:51,050 --> 00:12:54,970
surtout quand votre code devient
plus compliqué. D'accord.

227
00:12:54,970 --> 00:13:00,280
Donc, nous irons vers le navigateur et
nous ouvrirons maintenant ce document.

228
00:13:00,280 --> 00:13:04,170
Donc, je vais fermer tout cela
et juste laisser un ouvert.

229
00:13:04,170 --> 00:13:06,560
Et je vais maintenant
<i> Ouvrir un fichier </ i>.

230
00:13:06,560 --> 00:13:11,360
Et encore, cela peut-être à un endroit différent
selon le navigateur que vous utilisez,

231
00:13:11,360 --> 00:13:16,230
mais je suis confiant que vous parvenez
à ouvrir un fichier dans votre navigateur.

232
00:13:16,230 --> 00:13:20,560
Il suffit donc de trouver un <i> Ouvrir </ i> ou
<i> Ouvrir un fichier </ i> quelque part dans votre navigateur.

233
00:13:20,560 --> 00:13:23,710
Ici, dans Chrome, c'est ici sous
<i> Fichier & gt; Ouvrir le fichier </ i>.

234
00:13:23,710 --> 00:13:28,240
Et puis aller à la <i> exemples de code </ i>
<i> premier_exemple </ i> ici,

235
00:13:28,240 --> 00:13:30,610
puis <i> Ouvrir </ i> le fichier.

236
00:13:30,610 --> 00:13:32,240
Et donc, ce que vous pouvez voir ici

237
00:13:32,240 --> 00:13:38,240
est l'emplacement sur ma machine où
cela est stocké,

238
00:13:38,240 --> 00:13:41,680
Ce sera, de toute évidence,
un aspect légèrement différent pour vous,

239
00:13:41,680 --> 00:13:44,590
mais ce que vous devriez voir ici
c'est Bonjour tout le monde.

240
00:13:45,440 --> 00:13:47,670
Et encore,
cela peut paraître un peu différent

241
00:13:47,670 --> 00:13:49,870
en fonction des paramètres
de votre navigateur,

242
00:13:49,870 --> 00:13:54,140
mais vous devriez voir rien d'autre que
ce Bonjour tout le monde.

243
00:13:54,140 --> 00:13:56,130
Donc, si cela a fonctionné,
alors félicitations.

244
00:13:56,130 --> 00:13:59,930
Vous avez maintenant, créé
votre premier fichier HTML.

245
00:13:59,930 --> 00:14:01,750
Donc, revenons à ce fichier.

246
00:14:02,770 --> 00:14:05,170
D'accord. Ici, nous sommes,
de retour à ce fichier.

247
00:14:05,170 --> 00:14:06,420
D'accord, donc cela fonctionne.

248
00:14:06,420 --> 00:14:08,410
Maintenant, ce que nous allons faire est,

249
00:14:08,410 --> 00:14:10,420
nous allons faire quelque chose
de légèrement différent,

250
00:14:10,420 --> 00:14:13,960
et nous arrivons au point, qui est
d'écrire du code JavaScript.

251
00:14:14,660 --> 00:14:17,160
Donc, je vais ajouter
une balise <i> script </ i>ici.

252
00:14:17,160 --> 00:14:23,690
Encore, parce que la balise <i> script </ i>
est imbriqué dans la balise <i>tête</ i>,

253
00:14:23,690 --> 00:14:26,730
Je vais faire l'indentation un peu.

254
00:14:26,730 --> 00:14:30,620
Vous ne devez pas, mais
je trouve cela plus agréable visuellement.

255
00:14:31,680 --> 00:14:35,720
D'accord. Alors maintenant,
je vais écrire JavaScript.

256
00:14:35,720 --> 00:14:38,940
Donc, si vous êtes à ce stade,

257
00:14:38,940 --> 00:14:42,200
s'il vous plaît suivez-moi
en tapant ce qui suit:

258
00:14:42,200 --> 00:14:44,930
<I> console.log </ i>

259
00:14:46,220 --> 00:14:48,360
parenthèses ouvertes

260
00:14:49,690 --> 00:14:51,490
doubles guillemets

261
00:14:51,490 --> 00:14:56,650
Bonjour le Monde à partir de JavaScript.

262
00:14:57,450 --> 00:14:58,590
D'accord.

263
00:14:58,590 --> 00:14:59,840
Les doubles guillemets à nouveau,

264
00:15:00,910 --> 00:15:04,480
fermeture des parenthèses, puis virgule.

265
00:15:04,480 --> 00:15:05,650
Et encore une fois, ne vous inquiétez pas.

266
00:15:05,650 --> 00:15:09,770
Nous marchons à travers cette ligne
et bien d'autres lignes

267
00:15:09,770 --> 00:15:14,640
et vous comprendrez exactement
ce qui est, dans peu de temps.

268
00:15:14,640 --> 00:15:17,150
Pour l'instant,
il suffit d'écrire cette ligne:

269
00:15:17,150 --> 00:15:18,870
<I> console.log </ i>

270
00:15:18,870 --> 00:15:21,430
ouverture entre parenthèses,
puis entre guillemets,

271
00:15:21,430 --> 00:15:23,610
Bonjour  le Monde à partir de JavaScript,

272
00:15:23,610 --> 00:15:27,980
puis fermez les parenthèses,
et un point-virgule à la fin de la ligne.

273
00:15:27,980 --> 00:15:30,630
Si vous avez fait cela,
enregistrez votre fichier.

274
00:15:30,630 --> 00:15:34,400
Encore une fois, allez
à <i> Fichier & gt; Enregistrer </ i>.

275
00:15:34,400 --> 00:15:39,230
Ou, vous pouvez également utiliser un raccourci
de clavier, que je ferai à partir de maintenant.

276
00:15:39,230 --> 00:15:43,000
D'accord, je vais juste dire,
je vais enregistrer le fichier,

277
00:15:43,000 --> 00:15:46,620
et puis vous pouvez me faire confiance
que j'ai réellement enregistré le fichier.

278
00:15:47,440 --> 00:15:49,930
D'accord. Maintenant, nous allons
passer au navigateur.

279
00:15:49,930 --> 00:15:52,390
Ce document ici est encore ouvert.
C'est génial.

280
00:15:52,390 --> 00:15:55,390
Alors maintenant, ce que nous pouvons faire
c'est de recharger le document.

281
00:15:55,390 --> 00:15:56,840
Il y a beaucoup de façons de le faire.

282
00:15:56,840 --> 00:15:59,720
Vous pouvez cliquer sur ceci
<i> Recharger catégorie </ i> ici,

283
00:15:59,720 --> 00:16:03,900
encore, cela peut être différent
selon le navigateur que vous utilisez.

284
00:16:03,900 --> 00:16:08,190
Vous pouvez aller à <i> Fichier </ i>
Je pense qu'il est <i> Fichier </ i>

285
00:16:08,190 --> 00:16:09,540
“Et ensuite, que s’est-il passé?”

286
00:16:12,460 --> 00:16:15,480
Est-ce c'est<i> Affichage </ i>? <I> Recharger </ i>.
C'est sous <i> Voir & gt; Recharger cette page </ i>.

287
00:16:15,480 --> 00:16:20,620
Et vous pouvez dire de mon incertitude
que je ne le fais jamais comme ça

288
00:16:20,620 --> 00:16:24,620
parce qu'il ya, en fait,
un raccourci très pratique

289
00:16:24,620 --> 00:16:29,150
que je pense est le même dans tous
les navigateurs, qui est <i> Commande + R </ i>.

290
00:16:29,150 --> 00:16:33,110
Et encore, quand je dis, ok,
je vais recharger la page,

291
00:16:33,110 --> 00:16:34,850
Je ne vais pas passer par le menu ici,

292
00:16:34,850 --> 00:16:38,250
Je vais juste effectivement
recharger avec le raccourci.

293
00:16:38,250 --> 00:16:40,410
Ok, donc je rechargé le document

294
00:16:40,410 --> 00:16:41,960
et je recharger ceci plusieurs fois ici,

295
00:16:41,960 --> 00:16:44,570
mais rien ne semble se produire.

296
00:16:44,570 --> 00:16:45,880
Pourquoi ça ?

297
00:16:45,880 --> 00:16:47,830
Eh bien, si nous revenons au code,

298
00:16:49,030 --> 00:16:51,660
ce que nous allons effectivement
voir ici est que

299
00:16:51,660 --> 00:16:53,410
ce qui se passe ici c'est que je...

300
00:16:53,410 --> 00:16:56,770
Ceci est un <i> string </ i>, d'accord,
un ensemble de caractères,

301
00:16:57,650 --> 00:17:02,680
et je connecte cela, ou le sort,
dans soi-disant la console.

302
00:17:02,680 --> 00:17:03,770
D'accord ?

303
00:17:03,770 --> 00:17:06,740
Et, ce que vous voyez ici,
dans le navigateur.

304
00:17:06,740 --> 00:17:08,660
toute cette chose ici,
la fenêtre du navigateur,

305
00:17:08,660 --> 00:17:10,400
ce n'est pas la console.

306
00:17:10,400 --> 00:17:13,150
La console est en fait caché,

307
00:17:13,150 --> 00:17:16,430
et vous auriez besoin d'aller à

308
00:17:16,430 --> 00:17:22,230
<I> Affichage </ i> & gt; Développeur & gt;
JavaScript Console *, dans Chrome.

309
00:17:22,230 --> 00:17:26,410
Encore une fois, dans votre navigateur,
ce sera légèrement différente

310
00:17:26,410 --> 00:17:28,120
si vous ne l'utilisez Chrome.

311
00:17:28,120 --> 00:17:31,920
Et, il est probablement
dans un cadre similaire

312
00:17:31,920 --> 00:17:34,710
quelque part dans le menu,
dans <i> Affichage </ i>.

313
00:17:34,710 --> 00:17:38,190
Vous pouvez également rechercher
sur internet si vous n'êtes pas sûr,

314
00:17:38,190 --> 00:17:40,970
mais je suis sûr que vous le trouverez.

315
00:17:40,970 --> 00:17:45,320
Si vous êtes sur Chrome, c'est
<i> Affichage& gt; Développeur & gt; JavaScript Console </ i>.

316
00:17:45,920 --> 00:17:49,640
Maintenant, si je clique sur ce point,
ce qui se passe est ici,

317
00:17:49,640 --> 00:17:51,180
la console est ouverte.

318
00:17:51,180 --> 00:17:53,420
Vous pouvez voir ici,
il dit <i> Console </ i> et il est souligné,

319
00:17:53,420 --> 00:17:54,790
Nous sommes donc dans la console.

320
00:17:54,790 --> 00:17:58,480
Et en effet, voici notre texte
que nous avons connecté,

321
00:17:58,480 --> 00:18:02,130
ou que nous fournissons
en sortie dans la console,

322
00:18:02,130 --> 00:18:03,830
qui est appelé Bonjour le Monde
à partir de JavaScript.

323
00:18:03,830 --> 00:18:06,330
Donc, en effet, cela a fonctionné.

324
00:18:06,330 --> 00:18:11,240
Maintenant, si vous, dans votre navigateur,
voyez cette ligne dans la console,

325
00:18:11,240 --> 00:18:12,710
alors félicitations.

326
00:18:12,710 --> 00:18:17,820
Ce que vous venez de faire c'est écrire
votre première ligne de code JavaScript.

327
00:18:18,610 --> 00:18:21,530
Encore une fois, félicitations
à cette réalisation.

328
00:18:21,530 --> 00:18:25,660
Vous avez enregistré
et créé un document HTML

329
00:18:25,660 --> 00:18:29,800
avec un peu de JavaScript intégré
dans le document HTML.

330
00:18:29,800 --> 00:18:32,920
Et puis, si tout fonctionnait,
vous auriez dû voir cette ligne:

331
00:18:32,920 --> 00:18:35,660
Bonjour le Monde à partir de JavaScript.

332
00:18:35,660 --> 00:18:37,530
Si vous avez réussi à le faire, très bien.

333
00:18:37,530 --> 00:18:41,760
Il y a maintenant plus rien dans
le chemin entre vous et JavaScript.

334
00:18:41,760 --> 00:18:46,760
Et dans la vidéo suivante, nous utiliserons
ce type de programmation

335
00:18:46,760 --> 00:18:52,460
pour mettre en œuvre ce que nous avons appris
dans les vidéos précédentes de ce chapitre,

336
00:18:52,460 --> 00:18:55,460
qui est de mettre en œuvre
le principe de Hardy-Weinberg,

337
00:18:55,460 --> 00:18:56,640
dans JavaScript

338
00:18:56,640 --> 00:18:58,020
Je vous verrai dans la prochaine vidéo.

