1
00:00:03,194 --> 00:00:06,393
Welcome back, <i>Nature, In Code</i>,
we're in Chapter 2, Lecture 5.

2
00:00:06,393 --> 00:00:09,988
In the previous video, 
you wrote your first line of JavaScript.

3
00:00:09,988 --> 00:00:12,154
Congrats, if everything worked well.

4
00:00:12,154 --> 00:00:14,422
So, in this video,
we will now implement

5
00:00:14,422 --> 00:00:17,022
the <i>Hardyâ€“Weinberg principle</i>
in JavaScript.

6
00:00:17,022 --> 00:00:18,711
So, in order to do that,

7
00:00:18,711 --> 00:00:22,004
let me just recap on one slide
what we learned so far

8
00:00:22,004 --> 00:00:24,047
and how we're going to start this.

9
00:00:24,047 --> 00:00:25,962
All right, so where's what we know:

10
00:00:25,962 --> 00:00:28,995
We know that we're going 
to need, somehow,

11
00:00:28,995 --> 00:00:31,584
to define the frequency of the A1 allele.

12
00:00:31,584 --> 00:00:33,754
And this, actually, 
we're going to do with a variable

13
00:00:33,754 --> 00:00:35,235
that we're going to call <i>p</i>.

14
00:00:35,235 --> 00:00:39,243
So <i>p</i> from now on,
for the rest of this course, in fact,

15
00:00:39,243 --> 00:00:42,363
will denote the frequency 
of the A1 allele.

16
00:00:43,433 --> 00:00:48,665
The frequency of the A2 allele
we're going to denote with <i>q</i>.

17
00:00:48,665 --> 00:00:51,906
Now, because you know
that these two need to add up,

18
00:00:51,906 --> 00:00:55,235
<i>q</i> simply equals <i>1 - p</i>.

19
00:00:55,235 --> 00:01:00,425
And, of course, vice versa,
and <i>p</i> simply equals <i>1 - q</i>.

20
00:01:01,442 --> 00:01:06,681
Now, we can calculate 
the frequencies of the genotypes

21
00:01:06,681 --> 00:01:10,065
following these allele frequencies.

22
00:01:10,065 --> 00:01:12,670
And we did this before 
with concrete numbers.

23
00:01:12,670 --> 00:01:16,762
In the examples in the slides before
we used 40% and 60%,

24
00:01:16,762 --> 00:01:21,952
but we're now going to express this
more generically with these two variables.

25
00:01:21,952 --> 00:01:26,104
So, the probability 
that we generate in A1 A1 allele,

26
00:01:26,104 --> 00:01:31,132
is the frequency of this A1 allele
times the frequency of the A1 allele,

27
00:01:31,132 --> 00:01:33,953
because those are the probabilities 
that we picked those alleles

28
00:01:33,953 --> 00:01:36,125
from the infinitely-sized gamete pool,

29
00:01:36,125 --> 00:01:38,469
and so that's, of course, 
simply <i>p^2</i>.

30
00:01:39,729 --> 00:01:43,890
Vice versa, I'm going 
to do the A2 A2 first here,

31
00:01:43,890 --> 00:01:50,063
and that's, of course, now
simply, <i>q x q</i>, so <i>q^2</i>,

32
00:01:50,063 --> 00:01:53,733
<i>q</i> being the probability 
that I pick an A2 allele,

33
00:01:53,733 --> 00:01:56,973
because <i>q</i> is the frequency 
of the A2 allele.

34
00:01:56,973 --> 00:02:01,002
And for the A1 A2 genotype,

35
00:02:01,002 --> 00:02:04,493
we learned that there are 
two ways that we can do this:

36
00:02:04,493 --> 00:02:07,333
First, we can pick an A1 allele,

37
00:02:07,333 --> 00:02:09,903
and then we can pick an A2 allele,

38
00:02:09,903 --> 00:02:12,433
so the probabilities are <i>p</i> and <i>q</i>.

39
00:02:12,433 --> 00:02:15,423
Or we can do it the other way around--

40
00:02:15,423 --> 00:02:20,907
so first pick an A2 allele
and then pick an A1 allele.

41
00:02:20,907 --> 00:02:23,273
And that's, of course, 
the exact same term,

42
00:02:23,273 --> 00:02:27,572
so the total here is <i>2 p q</i>.

43
00:02:28,202 --> 00:02:31,153
And so these are the three frequencies--

44
00:02:31,153 --> 00:02:34,684
<i>p^2</i>, <i>2 p q</i>, and <i>q^2</i>--

45
00:02:34,684 --> 00:02:36,436
of the three genotypes.

46
00:02:36,436 --> 00:02:39,253
And just like the two 
allele frequencies need to add up,

47
00:02:39,253 --> 00:02:40,942
those need to add up.

48
00:02:40,942 --> 00:02:46,012
So, basically, 
<i>p^2 + 2 p q</i>

49
00:02:46,693 --> 00:02:51,173
<i>+ q^2 = 1.</i>

50
00:02:51,703 --> 00:02:56,323
So, this is how we'll do it,
this is how we'll start the whole program,

51
00:02:56,323 --> 00:02:58,717
and now we're going 
to go over to the text editor,

52
00:02:58,717 --> 00:03:01,726
and we are going 
to implement this <i>in</i> JavaScript.

53
00:03:02,217 --> 00:03:04,532
Now that we have this all figured out,

54
00:03:04,532 --> 00:03:06,566
let's go back here to our code.

55
00:03:06,566 --> 00:03:11,026
So, we're still here 
in our <i>first_example.html</i> file.

56
00:03:11,736 --> 00:03:14,017
We can simply reuse this

57
00:03:14,017 --> 00:03:16,377
and we can get rid of 
the "Hello World" here in the body.

58
00:03:16,377 --> 00:03:18,219
We don't need this anymore.

59
00:03:18,219 --> 00:03:22,237
We can also get rid of the <i>console.log
("Hello World from JavaScript")</i>.

60
00:03:22,237 --> 00:03:26,226
We don't need this anymore either,
so let's get rid of this.

61
00:03:26,226 --> 00:03:29,485
So, now, what I'd like to do is,

62
00:03:29,485 --> 00:03:32,215
I'd like to write three lines of code,

63
00:03:32,215 --> 00:03:35,462
where I'm actually going 
to initialize the genotype frequencies.

64
00:03:35,462 --> 00:03:38,191
Now, I'm asking you simply to follow me--

65
00:03:38,191 --> 00:03:39,599
type these three lines as well--

66
00:03:39,599 --> 00:03:43,944
and then we'll walk through 
what they mean and how they're set up.

67
00:03:43,944 --> 00:03:46,253
So the first line is going to be

68
00:03:46,253 --> 00:03:55,233
<i>var a1a1 = 0.5;</i>

69
00:03:56,666 --> 00:04:00,152
And then, on a new line,

70
00:04:00,152 --> 00:04:04,098
I'm going to say <i>var a2a2</i>--

71
00:04:04,098 --> 00:04:07,179
so the other homozygote--

72
00:04:07,179 --> 00:04:13,440
equals, and this we defined as 0.35,

73
00:04:13,440 --> 00:04:16,498
and then, end the line with a semicolon.

74
00:04:16,498 --> 00:04:20,996
And now, I'm going to write <i>var a1a2</i>,

75
00:04:23,456 --> 00:04:25,500
that is now the heterozygote.

76
00:04:25,500 --> 00:04:28,710
Now, we know this to be 0.5,

77
00:04:28,710 --> 00:04:32,930
but I'm now simply, actually,
going to calculate this

78
00:04:32,930 --> 00:04:38,511
by saying this is one minus 
the sum of these two numbers,

79
00:04:38,511 --> 00:04:40,981
and I have already stored 
these two numbers,

80
00:04:40,981 --> 00:04:46,661
so I'm simply going to say, 
<i>a1a1 + a2a2</i>.

81
00:04:46,661 --> 00:04:49,832
Now, I'm going to close it, semicolon.

82
00:04:49,832 --> 00:04:54,075
So, now, a couple of interesting things 
are happening here,

83
00:04:54,075 --> 00:04:56,654
and I want you to understand those
because they're pretty basic,

84
00:04:56,654 --> 00:05:00,612
and it's important that we get 
the basics sorted out, of course.

85
00:05:00,612 --> 00:05:04,089
So, the first thing 
that you note here, is this <i>var</i>.

86
00:05:05,189 --> 00:05:08,511
<i>var</i> is a keyword in JavaScript
and it simply means:

87
00:05:09,331 --> 00:05:11,251
You're now defining a variable.

88
00:05:11,251 --> 00:05:14,071
So, we'll use this quite heavily.

89
00:05:14,711 --> 00:05:16,852
Then, you're actually 
giving this variable a name.

90
00:05:16,852 --> 00:05:20,823
Here, in this case,
we're giving it the name <i>a1a1</i>.

91
00:05:20,823 --> 00:05:26,828
Now, you can be pretty liberal
with giving variables names.

92
00:05:27,688 --> 00:05:29,861
There's a few rules.

93
00:05:29,861 --> 00:05:34,955
The first rule is: You're not allowed
to use any keyword in JavaScript,

94
00:05:35,595 --> 00:05:37,623
such as, for example, <i>var</i>.

95
00:05:37,623 --> 00:05:38,877
There are a few.

96
00:05:38,877 --> 00:05:42,361
As we'll go through the course,
you'll learn many, many of those

97
00:05:42,361 --> 00:05:48,933
and should you ever get into the situation
where you use a keyword as a variable,

98
00:05:48,933 --> 00:05:51,881
you'll notice, probably, 
fairly quickly.

99
00:05:51,881 --> 00:05:54,853
So, this is probably a mistake
you won't really make.

100
00:05:54,853 --> 00:05:57,695
In general, as a general rule,

101
00:05:57,695 --> 00:06:01,063
try to give variables meaningful names,

102
00:06:01,063 --> 00:06:06,654
and then it's very unlikely that you'll 
ever get in conflict with this rule.

103
00:06:06,654 --> 00:06:12,146
So, the second consideration 
is that you cannot start it with a number,

104
00:06:12,146 --> 00:06:14,815
so that's an important rule.

105
00:06:14,815 --> 00:06:17,035
In fact, the actual rule is that:

106
00:06:17,035 --> 00:06:21,925
It can start with a dollar sign,
and underscore, or any letter.

107
00:06:21,925 --> 00:06:23,704
But for practical purposes,

108
00:06:23,704 --> 00:06:27,496
simply start with a letter 
and you'll be fine.

109
00:06:27,496 --> 00:06:29,894
So here this is a perfectly legal name,

110
00:06:29,894 --> 00:06:32,985
it starts with a letter and then it has
numbers and letters,

111
00:06:32,985 --> 00:06:35,230
so <i>a1a1</i>, that's fine.

112
00:06:35,230 --> 00:06:38,613
Or, of course, <i>a2a2</i>, <i>a1a2</i>, just as fine.

113
00:06:39,703 --> 00:06:44,323
Now, this is, actually,
the most irrelevant part here,

114
00:06:44,323 --> 00:06:46,728
and this is a source of confusion,

115
00:06:46,728 --> 00:06:49,861
especially, by people 
who have never coded before,

116
00:06:49,861 --> 00:06:52,706
so this is, obviously, 
the equals sign.

117
00:06:52,706 --> 00:06:55,889
But, it's important not to think 
of this term now, here,

118
00:06:55,889 --> 00:06:58,566
of this expression, as an equation.

119
00:06:58,566 --> 00:07:04,045
This is, in fact, the <i>assignment operator</i>
because it assigns values to variables.

120
00:07:04,045 --> 00:07:07,526
Not just in JavaScript, but, actually,
in many programming languages.

121
00:07:08,226 --> 00:07:10,333
And, the way to think about this is that,

122
00:07:10,333 --> 00:07:13,196
here, on the right-hand side,
you have this number.

123
00:07:13,196 --> 00:07:18,185
This is now going to get assigned 
to this variable <i>a1a1</i>.

124
00:07:18,185 --> 00:07:22,966
So, <i>a1a1</i> here is like a <i>container</i>,
and it can contain many things.

125
00:07:22,966 --> 00:07:24,387
In this particular line,

126
00:07:24,387 --> 00:07:27,266
we're assigning a number 
to this <i>container</i>.

127
00:07:28,126 --> 00:07:29,918
And so that's really important 
to understand,

128
00:07:29,918 --> 00:07:33,297
that this is not, in fact,
a mathematical equation,

129
00:07:33,297 --> 00:07:35,236
it's simply an <i>assignment</i>.

130
00:07:35,236 --> 00:07:38,446
And the reason why this is important 
is because, otherwise,

131
00:07:38,446 --> 00:07:40,657
it could get confusing down the line.

132
00:07:40,657 --> 00:07:43,160
So, we're doing 
the same, actually, down here.

133
00:07:43,160 --> 00:07:45,607
We're, again, initializing a variable.

134
00:07:45,607 --> 00:07:47,246
We're naming it <i>a2a2</i>,

135
00:07:47,246 --> 00:07:51,278
and then we're assigning 
the value 0.35 to this variable.

136
00:07:51,278 --> 00:07:55,157
And then, here, on the third line,
we're doing something slightly different.

137
00:07:55,157 --> 00:08:00,407
We're, again, creating a variable,
we're naming it <i>a1a2</i>,

138
00:08:00,407 --> 00:08:02,447
and we're, again, 
assigning it a value,

139
00:08:02,447 --> 00:08:04,888
but we're not simply typing the value,

140
00:08:04,888 --> 00:08:10,488
we're actually letting JavaScript 
calculate the value using minus and plus,

141
00:08:10,488 --> 00:08:11,516
and these parentheses--

142
00:08:11,516 --> 00:08:14,556
you can use just like 
you would use them in math--

143
00:08:14,556 --> 00:08:17,427
to simply group things together.

144
00:08:17,427 --> 00:08:21,098
And so the way to read this
when you see this equals sign

145
00:08:21,098 --> 00:08:24,987
is that, first, the right-hand side 
of the equals sign

146
00:08:24,987 --> 00:08:27,856
gets interpreted, gets executed,
gets calculated,

147
00:08:27,856 --> 00:08:32,890
and then the result of that
gets stored into whatever is here,

148
00:08:32,890 --> 00:08:36,124
or assigned, 
on the left-hand side.

149
00:08:36,684 --> 00:08:39,836
So in this case we simply add 
these two numbers together

150
00:08:39,836 --> 00:08:42,261
that are currently stored here, 
in these two variables,

151
00:08:42,261 --> 00:08:45,349
and then we subtract that sum from one.

152
00:08:45,349 --> 00:08:48,240
And, this is another important thing here:

153
00:08:48,840 --> 00:08:53,299
Statements end, in JavaScript, 
with the semicolon.

154
00:08:53,299 --> 00:08:58,950
Okay, so, always terminate your lines,
when it's a statement, with a semicolon.

155
00:08:59,690 --> 00:09:05,137
Now I'm going to do 
something else, which is:

156
00:09:05,137 --> 00:09:09,020
I would like to calculate 
the allele frequencies

157
00:09:09,020 --> 00:09:12,428
based on those genotype frequencies,
and we've done this before.

158
00:09:12,428 --> 00:09:15,315
And we've just seen 
this <i>p</i> and <i>q</i> notation,

159
00:09:15,315 --> 00:09:18,509
so let's assign two variables.

160
00:09:18,509 --> 00:09:20,963
Let's create them first--
<i>p</i> and <i>q</i>--

161
00:09:20,963 --> 00:09:23,738
and then assign values to those.

162
00:09:23,738 --> 00:09:27,584
So, how do we calculate 
the allele frequency of A1,

163
00:09:27,584 --> 00:09:29,370
given those genotype frequencies?

164
00:09:29,370 --> 00:09:33,527
And, of course, we've done this now,
a couple of times in the previous videos.

165
00:09:33,527 --> 00:09:37,656
It is simply, the frequency 
of the <i>a1a1</i> genotype

166
00:09:37,656 --> 00:09:42,077
because all the alleles 
of that genotype are, in fact, of type A1,

167
00:09:42,077 --> 00:09:46,906
plus, half of the <i>a1a2</i>.

168
00:09:46,906 --> 00:09:49,608
So <i>a1a2 / 2</i>.

169
00:09:50,598 --> 00:09:53,195
Divided by two because 
only half of the alleles

170
00:09:53,195 --> 00:09:56,535
in the heterozygote genotype 
are, in fact, A1.

171
00:09:57,287 --> 00:09:59,828
And we can now do the same with <i>q</i>,

172
00:09:59,828 --> 00:10:03,237
but we're going to save us some time,
and we're simply going to say,

173
00:10:03,237 --> 00:10:06,518
this is <i>1 - p</i>

174
00:10:06,518 --> 00:10:10,093
because we know that <i>p</i> and <i>q</i>
must add up to one.

175
00:10:10,093 --> 00:10:12,401
So we've got this code in place.

176
00:10:12,401 --> 00:10:16,778
Let's <i>Save</i> it
and let's go back to the browser,

177
00:10:16,778 --> 00:10:20,072
and let's take a look 
at what this looks like.

178
00:10:20,616 --> 00:10:23,693
Here, this is still the old version:
"Hello World from JavaScript,"

179
00:10:23,693 --> 00:10:28,243
so let's reload this,
and there's nothing here.

180
00:10:28,703 --> 00:10:30,941
So, why is there nothing here?

181
00:10:30,941 --> 00:10:33,768
Is the code not working?
Is it not executing?

182
00:10:33,768 --> 00:10:37,793
Well, it is probably working
because if there were some error--

183
00:10:38,953 --> 00:10:40,943
some syntax error or something like that--

184
00:10:40,943 --> 00:10:43,494
the console would actually 
show you an error here.

185
00:10:43,494 --> 00:10:48,045
So, this indicates, or at least suggests,
that the code is probably working,

186
00:10:48,045 --> 00:10:50,748
so, why is it not outputting anything?

187
00:10:50,748 --> 00:10:54,725
Well, let's go back to our code,
and, of course, we'll notice here,

188
00:10:54,725 --> 00:10:59,025
well, we're not actually instructing
JavaScript to output anything.

189
00:10:59,705 --> 00:11:02,516
And this is just 
the general rule, of course,

190
00:11:02,516 --> 00:11:05,018
that's true in every programming language:

191
00:11:06,468 --> 00:11:09,505
You need to instruct 
the language to do something,

192
00:11:09,505 --> 00:11:12,876
otherwise, things will not 
just simply happen automatically.

193
00:11:12,876 --> 00:11:17,002
So, we're assigning these values
by <i>direct assignment</i>

194
00:11:17,002 --> 00:11:20,807
or by <i>indirect assignment</i>
through calculation,

195
00:11:21,407 --> 00:11:22,672
as we do down here.

196
00:11:22,672 --> 00:11:25,926
And here, this all works correctly,

197
00:11:25,926 --> 00:11:29,446
but we're not actually 
outputting the values here.

198
00:11:29,446 --> 00:11:31,989
So, we'll do this in the next video.

199
00:11:31,989 --> 00:11:36,706
In this video, it was just important to me
that you get this notation down:

200
00:11:36,706 --> 00:11:41,518
How we assign values 
to variables that we initiate.

201
00:11:41,518 --> 00:11:44,508
And then, here, you can see,
you can use some basic math,

202
00:11:44,508 --> 00:11:48,726
pretty simple: 
plus, divided by, minus,

203
00:11:48,726 --> 00:11:52,137
and you could use the asterisks
to do multiplication.

204
00:11:52,137 --> 00:11:56,865
So, those are some pretty elementary 
JavaScript elements.

205
00:11:57,449 --> 00:12:00,454
So, in the next video
we'll output these values,

206
00:12:00,454 --> 00:12:02,899
and then we'll calculate 
the genotype frequencies,

207
00:12:02,899 --> 00:12:05,346
in the next generation,
so I'll see you there.
