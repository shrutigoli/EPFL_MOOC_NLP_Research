1
00:00:00,000 --> 00:00:05,370
Parlons maintenant de systèmes

2
00:00:05,370 --> 00:00:10,835
logiques qui permettent de construire des
machines spécialisées, et en particulier

3
00:00:10,835 --> 00:00:15,489
des microcontrôleurs.
Les éléments de base sont des

4
00:00:15,489 --> 00:00:20,558
portes que l'on peut assembler pour former

5
00:00:20,558 --> 00:00:25,716
des blocs intermédiaires, que l'on
assemblera eux-mêmes

6
00:00:25,716 --> 00:00:30,660
pour faire des machines.
Alors, le premier élément que l'on a déjà,

7
00:00:30,660 --> 00:00:35,690
euh, trouvé, c'est l'inverseur logique qui
a en fait

8
00:00:35,690 --> 00:00:40,805
deux états.
L'entrée peut valoir zéro et

9
00:00:40,805 --> 00:00:45,990
un.
La sortie est tout simplement l'inverse,

10
00:00:45,990 --> 00:00:50,820
si c'est un zéro, on a un; si c'est un,
c'est un zéro.

11
00:00:50,820 --> 00:00:56,790
L'élément suivant que tout le monde
connaît, c'est la porte ET,

12
00:00:56,790 --> 00:01:02,432
avec quatre possibilités, je note A, B, je

13
00:01:02,432 --> 00:01:08,473
pourrais continuer, s'il y avait plus
d'entrées; j'ai une sortie S.

14
00:01:08,473 --> 00:01:15,072
Les combinaisons possibles, on les note
selon la numérotation binaire,

15
00:01:15,072 --> 00:01:16,280
habituellement.

16
00:01:16,280 --> 00:01:24,015
Et puis, la sortie est à un, si les deux
entrées sont à un.

17
00:01:24,015 --> 00:01:29,380
Donc, voilà la table de vérité de la

18
00:01:29,380 --> 00:01:34,376
fonction ET, que l'on peut réaliser avec
des

19
00:01:34,376 --> 00:01:39,574
transistors, qui s'appellent le, euh,
porte ET,

20
00:01:39,574 --> 00:01:44,880
euh, et traditionnellement, euh, on écrit
A fois

21
00:01:44,880 --> 00:01:50,073
B, pour cette porte ET.
La porte OU est aussi bien connue;

22
00:01:50,073 --> 00:01:55,318
je vous laisse faire la table de vérité.
On utilise le signe

23
00:01:55,318 --> 00:02:00,612
plus, et le dernier élément de base, c'est

24
00:02:00,612 --> 00:02:05,410
la porte OU exclusif,

25
00:02:05,410 --> 00:02:10,138
en anglais, XOR, qui dit

26
00:02:10,138 --> 00:02:15,172
l'un ou l'autre, mais

27
00:02:15,172 --> 00:02:20,512
pas les deux.
Il y a d'autres

28
00:02:20,512 --> 00:02:26,080
portes, puisque on voit qu'il pourrait y
avoir d'autres tables de vérité.

29
00:02:26,080 --> 00:02:30,531
Mais, c'est là que les systèmes logiques
montrent que

30
00:02:30,531 --> 00:02:35,712
toutes ces portes peuvent être générées, à
partir

31
00:02:35,712 --> 00:02:41,420
uniquement de l'inverseur et de la porte
ET.

32
00:02:41,420 --> 00:02:47,450
Mais, il faut quand même avoir bien
présent dans l'esprit, l'existence de ces

33
00:02:47,450 --> 00:02:51,662
quatre fonctions, que l'on va retrouver

34
00:02:51,662 --> 00:02:55,694
en programmation mais avec des notations
naturellement

35
00:02:55,694 --> 00:03:00,632
qui ne sont pas inspirées de l'âge où on
pouvait taper avec la machine à écrire, un

36
00:03:00,632 --> 00:03:05,710
O par-dessus un plus.
Un C, on a le

37
00:03:05,710 --> 00:03:11,302
tilde pour dire que c'est l'inverse
logique.

38
00:03:11,302 --> 00:03:16,385
On a le ET logique, c'est normal.
On a la barre verticale

39
00:03:16,385 --> 00:03:20,911
qui veut dire le OU, et puis le petit
chapeau qui veut

40
00:03:20,911 --> 00:03:23,210
dire OU exclusif.

41
00:03:23,210 --> 00:03:29,620
Alors, un élément un peu plus complexe
serait un aiguillage.

42
00:03:29,620 --> 00:03:32,329
Alors, on connaît bien les, les

43
00:03:32,329 --> 00:03:36,180
aiguillages électriques, hein, qui
permettent d'amener

44
00:03:36,180 --> 00:03:41,670
le courant de deux sources différentes,
avec un interrupteur mécanique qui bouge.

45
00:03:41,670 --> 00:03:45,954
Et bien, on peut, euh, on a besoin de la
même fonction, dans le fond, au niveau

46
00:03:45,954 --> 00:03:50,180
des circuits logiques.
Vous avez une entrée A, une entrée B; on

47
00:03:50,180 --> 00:03:55,110
aimerait envoyer sur la sortie S, soit A,
si I

48
00:03:55,110 --> 00:04:00,689
vaut zéro, soit ET si I vaut

49
00:04:00,689 --> 00:04:06,147
un.
Et dans ce, cette nouvelle figure que j'ai

50
00:04:06,147 --> 00:04:11,140
agrandie d'une page d'un catalogue de
circuit intégré, et bien,

51
00:04:11,140 --> 00:04:17,620
euh, vous voyez que c'est utilisé pour
écrire le comportement,

52
00:04:17,620 --> 00:04:22,830
euh, de l'interface, euh, le processeur va
recevoir un signal qui

53
00:04:22,830 --> 00:04:28,158
vient de cette source ou de celle-là, en
fonction d'une condition, d'une

54
00:04:28,158 --> 00:04:33,720
condition logique, et ce signal va être
réutilisé plus loin.

55
00:04:33,720 --> 00:04:36,077
Euh, c'est le langage,

56
00:04:36,077 --> 00:04:40,290
dans le fond, pour comprendre le schéma
logique.

57
00:04:40,290 --> 00:04:44,395
Donc, comment est-ce que je peux, euh,
convertir la description

58
00:04:44,395 --> 00:04:48,500
verbale que j'ai fait tout à l'heure sous
forme d'une équation?

59
00:04:48,500 --> 00:04:54,940
Et bien je vais écrire S est égal à,

60
00:04:54,940 --> 00:05:01,170
si I vaut zéro, c'est I barre qui est
actif,

61
00:05:01,170 --> 00:05:07,378
fois un, condition ET plus, si I est un
un, on va

62
00:05:07,378 --> 00:05:13,390
prendre le signal B fois B.

63
00:05:13,390 --> 00:05:18,392
Et là, on va trouver une porte ET dans une
porte, se trouve une porte OU.

64
00:05:18,392 --> 00:05:23,520
C'est le dessin qui est ici, I a été
transposé en I barre.

65
00:05:23,520 --> 00:05:26,432
Si on ne veut pas

66
00:05:26,432 --> 00:05:32,408
dessiner l'inverseur, on peut mettre un
petit rond, directement avec I.

67
00:05:32,408 --> 00:05:34,194
Ici, on aura I barre.

68
00:05:34,194 --> 00:05:38,894
Voilà, nous voyons un autre exemple de, de
notation.

69
00:05:38,894 --> 00:05:44,985
Les multiplexeurs sont les aiguillages à
plus d'entrées, et si vous

70
00:05:44,985 --> 00:05:51,504
imaginez une mémoire de un gigabite, et
bien, il faut un aiguillage de un mégabite

71
00:05:51,504 --> 00:05:56,781
position pour choisir le mot mémoire qui
vous intéresse.

72
00:05:56,781 --> 00:05:59,175
Naturellement, ça va se construire d'une
façon

73
00:05:59,175 --> 00:06:01,650
électronique un petit peu plus astucieuse,
et,

74
00:06:01,650 --> 00:06:03,442
et, plus rapide que avec les systèmes

75
00:06:03,442 --> 00:06:06,997
logiques, euh, que, que l'on vient d'é,
d'évoquer.

76
00:06:06,997 --> 00:06:11,865
Les dimé, démultiplexeurs vont en sens
inverse;

77
00:06:11,865 --> 00:06:16,390
c'est des aiguillages en pointe, des EF
FF.

78
00:06:16,390 --> 00:06:20,863
Vous avez encore des décodeurs, euh, le
décodeur, c'est le segment qui

79
00:06:20,863 --> 00:06:25,794
permet de convertir un, un nombre, un
groupe de bits dans l'affiche

80
00:06:25,794 --> 00:06:31,701
d'un serment de segment, est un exemple
bien connu, et tous ces éléments sont

81
00:06:31,701 --> 00:06:39,070
appelés des éléments combinatoires; vous
les retrouverez dans la prochaine leçon.

82
00:06:39,070 --> 00:06:41,506
Evoquons maintenant les éléments

83
00:06:41,506 --> 00:06:49,502
séquentiels, et je vous remontre deux
inverseurs, l'un derrière l'autre.

84
00:06:49,502 --> 00:06:51,872
Si j'ai un zéro sur l'entrée de cet

85
00:06:51,872 --> 00:06:56,350
inverseur, on va trouver un un à sa
sortie.

86
00:06:56,350 --> 00:07:00,080
Le un va être de nouveau inversé, on aura
un zéro.

87
00:07:00,080 --> 00:07:06,420
Si j'ai par exemple, par contre, un un, et
bien, inversé, ça va devenir un zéro,

88
00:07:06,420 --> 00:07:08,121
et on va retrouver un un.

89
00:07:08,121 --> 00:07:13,454
Et étant donné que j'ai à chaque fois la
même chose en entrée et en sortie, et

90
00:07:13,454 --> 00:07:19,930
bien, je peux boucler cet élément, et il
sera stable.

91
00:07:19,930 --> 00:07:26,845
En l'enclenchant, je ne sais pas quelle,
quelle valeur il va prendre.

92
00:07:26,845 --> 00:07:31,702
C'est l'élément mémoire le plus simple que
l'on peut réaliser sous

93
00:07:31,702 --> 00:07:38,370
forme électronique, que l'on peut dessiner
avec les inverseurs, comme cela, que l'on

94
00:07:38,370 --> 00:07:45,310
peut dessiner encore, en faisant aparaître
un certaine symétrie.

95
00:07:45,310 --> 00:07:51,318
Ici, la symétrie est meilleure, et elles
nous prépare, dans le fond, à, à dire,

96
00:07:51,318 --> 00:07:56,880
mais cet élément mémoire, j'aimerais
pouvoir le faire modifier.

97
00:07:56,880 --> 00:08:01,610
Si j'ai un un, ici, et bien, j'aimerais
avoir un zéro, par exemple, ou l'inverse.

98
00:08:01,610 --> 00:08:07,020
Donc, si maintenant, vous considérez cette
porte OU,

99
00:08:07,020 --> 00:08:10,151
si vous avez un zéro sur ces entrées,

100
00:08:10,151 --> 00:08:14,540
la porte OU avec cette petite inversion,
devant,

101
00:08:14,540 --> 00:08:19,030
c'est exactement l'équivalent de
l'inverseur qu'on a vu, ici.

102
00:08:19,030 --> 00:08:22,101
Mais l'intérêt de la porte I, où c'est que

103
00:08:22,101 --> 00:08:27,330
si maintenant vous insérez, vous forcez un
état logique un,

104
00:08:27,330 --> 00:08:32,360
sur cette entrée, à travers la porte OU,
vous allez trouver un un.

105
00:08:32,360 --> 00:08:36,610
Vous vous trouvez, ici, avec un un, mais
un zéro de ce côté.

106
00:08:36,610 --> 00:08:41,210
Zéro zéro, sur une porte OU, ça fait un
zéro.

107
00:08:41,210 --> 00:08:47,390
Le zéro vient, ici, et on retrouve un un,
ce qui veut dire que

108
00:08:47,390 --> 00:08:53,582
lorsque le signal set aura disparu, et
bien, vous

109
00:08:53,582 --> 00:08:59,420
aurez toujours le serpent qui se mord la
queue, toujours la porte qui reste stable.

110
00:08:59,420 --> 00:09:03,440
Donc, ça, c'est la bascule la plus fameuse

111
00:09:03,440 --> 00:09:08,536
du début des, des ordinateurs, des
systèmes logiques.

112
00:09:08,536 --> 00:09:12,491
La bascule RS, on ne s'intéresse plus à
savoir comment elle

113
00:09:12,491 --> 00:09:16,450
est câblée, et avec des portes ET, des
portes OU, des inverseurs.

114
00:09:16,450 --> 00:09:22,079
On a une fonction bascule avec deux
sorties, une

115
00:09:22,079 --> 00:09:27,590
sortie Q et puis la sortie inverse Q
barre,

116
00:09:27,590 --> 00:09:32,798
une entrée de mise à un, une entrée de
remise à zéro, qu'on appelle reset

117
00:09:32,798 --> 00:09:37,844
ou clear, et cette bascule, on peut
représenter son

118
00:09:37,844 --> 00:09:43,060
comportement sous forme d'un diagramme
d'état.

119
00:09:43,060 --> 00:09:48,076
Il y a deux équilibres possible, Q égal
zéro, Q égal

120
00:09:48,076 --> 00:09:53,140
un.
Il y a une entrée S, ici, qui si

121
00:09:53,140 --> 00:09:58,122
elle à zéro, et bien, elle ne va pas
influencer l'état, mais

122
00:09:58,122 --> 00:10:03,077
si S est égal à un, on va basculer, on va
passer dans l'état

123
00:10:03,077 --> 00:10:06,996
Q égal un, ou on va, euh, rester, que ce
que

124
00:10:06,996 --> 00:10:10,636
l'on ait, S égal zéro, ou que l'on ait S

125
00:10:10,636 --> 00:10:14,390
égal un.
Et puis maintenant, si on veut faire champ

126
00:10:14,390 --> 00:10:21,650
d'état, et bien, il faudra agir sur
l'entrée R qui par défaut, elle

127
00:10:21,650 --> 00:10:28,145
est à zéro, et de nouveau, et bien on va
attérrir de l'autre côté,

128
00:10:28,145 --> 00:10:32,580
avec un état R qui est indifférent égal
zéro ou égal à un.

129
00:10:32,580 --> 00:10:37,140
Donc, ce qui nous intéresse, et bien c'est
de savoir,

130
00:10:37,140 --> 00:10:40,440
euh, qu'avec l'état S égal un, R égal un,
on peut

131
00:10:40,440 --> 00:10:45,321
faire basculer, et puis maintenant, si on
posait la question, que

132
00:10:45,321 --> 00:10:50,360
se passe-t-il si on agit simultanément sur
S et sur R?

133
00:10:50,360 --> 00:10:52,852
Et bien, on ne doit pas le faire.

134
00:10:52,852 --> 00:10:58,942
Comme avec une bascule d'enfant, vous la
faite basculer d'un côté ou de l'autre.

135
00:10:58,942 --> 00:11:02,063
Si vous agissez des deux côtés à la fois,
vous

136
00:11:02,063 --> 00:11:05,835
la cassez, et on vous dit qu'il ne fallait
pas faire.

137
00:11:05,835 --> 00:11:07,930
Voilà pour une explication.

138
00:11:07,930 --> 00:11:13,242
Alors, encore un aspect de cette bascule,
c'est que elle va être réalisée

139
00:11:13,242 --> 00:11:18,134
avec de l'électronique, et puis,
l'électronique a toujours

140
00:11:18,134 --> 00:11:24,435
un certain temps de retard.
Donc, au moment où on agit sur la

141
00:11:24,435 --> 00:11:30,494
sortie S, statiquement vous

142
00:11:30,494 --> 00:11:36,801
avez la sortie qui va passer à l'état un,
et y rester

143
00:11:36,801 --> 00:11:42,240
jusqu'à ce que, euh, il y ait, euh, un
autre, une autre réaction de l'autre côté.

144
00:11:42,240 --> 00:11:42,975
Alors,

145
00:11:42,975 --> 00:11:47,180
vu à l'oscilloscope, si vous avez un
signal,

146
00:11:47,180 --> 00:11:51,760
euh, d'entrée,

147
00:11:51,760 --> 00:11:57,450
cette qui est aussi parfait que ça;
souvent, il y a des petits arrondis.

148
00:11:57,450 --> 00:12:03,230
Et bien, la sortie va évoluer avec un
certain retard,

149
00:12:03,230 --> 00:12:08,455
et si vous regardez à très haute
fréquence, et bien, vous verrez

150
00:12:08,455 --> 00:12:14,177
toujours un arrondi, dû à des capacités
parasites qui existent

151
00:12:14,177 --> 00:12:19,860
partout, et puis que, que l'on essaye de
minimaliser, euh,

152
00:12:19,860 --> 00:12:22,996
où il faut faire attention uniquement
quand on travaille à

153
00:12:22,996 --> 00:12:27,000
très haute fréquence, ce qui n'est pas
notre, euh, préoccupation.

154
00:12:27,000 --> 00:12:32,756
On vient de voir une première bascule dit
stable, la bascule RS.

155
00:12:32,756 --> 00:12:33,674
En système

156
00:12:33,674 --> 00:12:39,282
logique, il existe plusieurs types de
bascules, on va se contenter

157
00:12:39,282 --> 00:12:44,255
d'en étudier une seule, la bascule D, avec
laquelle on peut déjà faire

158
00:12:44,255 --> 00:12:49,524
beaucoup de choses, en particulier des
registres à décalage et des compteurs.

159
00:12:49,524 --> 00:12:52,210
À quoi ressemble une bascule D?

160
00:12:52,210 --> 00:12:58,744
Et bien, c'est une bascule RS, dans
laquelle on a rajouté de la

161
00:12:58,744 --> 00:13:03,924
logique pour avoir un signal qui s'appelle
clock, et qui

162
00:13:03,924 --> 00:13:08,990
a une caractéristique nouvelle.
Ce signal n'est pas

163
00:13:08,990 --> 00:13:13,910
statique comme on l'a vu pour le set et le
reset.

164
00:13:13,910 --> 00:13:18,737
C'est un signal qui est dynamique, qui va
être

165
00:13:18,737 --> 00:13:23,789
sensible à une transition.
C'est lorsque le signal

166
00:13:23,789 --> 00:13:28,806
passe de l'état un à l'état zéro que
l'entrée D va être

167
00:13:28,806 --> 00:13:35,090
échantillonnée et copiée sur la sortie.

168
00:13:35,090 --> 00:13:38,294
Donc, le diagramme des temps montre cette

169
00:13:38,294 --> 00:13:41,828
fonctionnalité, au moment du flanc montant
de

170
00:13:41,828 --> 00:13:46,015
l'horloge, l'entrée D est échantillonnée;
il faut

171
00:13:46,015 --> 00:13:49,196
qu'elle soit un petit peu stable avant,

172
00:13:49,196 --> 00:13:51,380
à un petit peu stable après.

173
00:13:51,380 --> 00:13:56,290
Mais c'est des microsecondes ou des
nanosecondes, même actuellement.

174
00:13:56,290 --> 00:14:00,290
Entre temps, la valeur peut être
quelconque.

175
00:14:00,290 --> 00:14:04,131
C'est, autre prochaine instant d'horloge
que

176
00:14:04,131 --> 00:14:08,524
la nouvelle valeur sera échantillonnée et
transférée.

177
00:14:08,524 --> 00:14:14,444
Alors, ici, on avait un zéro, ce zéro est
transféré sur la sortie.

178
00:14:14,444 --> 00:14:19,463
Ici, on avait un un, il est transféré sur
la sortie.

179
00:14:19,463 --> 00:14:24,195
Ici, on avait de nouveau un un, l'état est
maintenu à un.

180
00:14:24,195 --> 00:14:29,564
Donc, on voit qu'il y a des concepts très
importants, le concept

181
00:14:29,564 --> 00:14:34,445
d'éléments statiques qui va être dominant.
L'horloge

182
00:14:34,445 --> 00:14:39,462
dynamique qui agit à une transition, et
puis les signaux

183
00:14:39,462 --> 00:14:44,900
qui sont échantillonnés, qui doivent juste
exister, être valables

184
00:14:44,900 --> 00:14:49,776
à l'instant du transfert.
Plusieurs de ces bascules

185
00:14:49,776 --> 00:14:54,470
côte à côte, et bien, on a ce qu'on
appelle un registre parallèle.

186
00:14:54,470 --> 00:14:59,486
Si vous avez, par exemple, la formation
un, un zéro un sur les entrées, à

187
00:14:59,486 --> 00:15:04,540
l'instant d'horloge, vous allez retrouver
cette information un

188
00:15:04,540 --> 00:15:09,370
zéro un sur les sorties et l'information
peut changer

189
00:15:09,370 --> 00:15:13,428
sur les entrées, ça n'aura pas d'effets
sur les sorties.

190
00:15:13,428 --> 00:15:17,940
Alors, c'est vraiment un élément mémoire
que l'on va retrouver partout.

191
00:15:17,940 --> 00:15:23,320
On ne va pas le dessiner avec des
bascules, on va dessiner un

192
00:15:23,320 --> 00:15:28,700
rectangle, un faisceau d'entrée huit bits,
mais ça pourrait être, euh,

193
00:15:28,700 --> 00:15:33,645
différent, un faisceau de ligne en sortie
et cette

194
00:15:33,645 --> 00:15:38,086
fameuse horloge qui va faire le transfert
de

195
00:15:38,086 --> 00:15:43,202
l'entrée sur la sortie.
On peut aussi brancher

196
00:15:43,202 --> 00:15:48,565
ces bascules l'une derrière l'autre, et ce
qui va se

197
00:15:48,565 --> 00:15:53,920
passer, c'est que au premier instant
d'horloge qui

198
00:15:53,920 --> 00:16:01,499
se répète partout, et bien, l'entrée va
être copiée sur la sortie.

199
00:16:01,499 --> 00:16:06,891
L'entrée de la bascule suivante, on ne le
connaît pas, puisque, euh, je

200
00:16:06,891 --> 00:16:12,400
ne vous ai pas dit que toutes les bascules
avaient été remises à zéro, initialement.

201
00:16:12,400 --> 00:16:18,690
Ça va être copié tel quel sur la sortie,
et de même sur Q trois.

202
00:16:18,690 --> 00:16:23,560
Alors, l'information que l'on a assigné,
elle

203
00:16:23,560 --> 00:16:28,310
va se propager petit à petit d'une

204
00:16:28,310 --> 00:16:33,650
bascule à l'autre, et puis ensuite, on
avait programmé

205
00:16:33,650 --> 00:16:38,955
un un, qui va aussi se propager d'une
bascule à l'autre, et on va retrouver

206
00:16:38,955 --> 00:16:44,270
en sortie, en fait, la séquence que l'on a
entrée,

207
00:16:44,270 --> 00:16:47,058
euh, trois impulsions dans l'âge, plus
tôt.

208
00:16:47,058 --> 00:16:52,285
Donc, c'est un élément, ça, euh, que l'on
retrouvera beaucoup, pour transmettre de

209
00:16:52,285 --> 00:16:58,580
l'information en particulier, puisqu'il
suffit d'avoir deux lignes seulement,

210
00:16:58,580 --> 00:17:03,840
pour transférer des mos, d'une longueur
absolument quelconque.

211
00:17:03,840 --> 00:17:08,150
Voilà une autre réalisation intéressante
avec la bascule dit stable.

212
00:17:08,150 --> 00:17:09,695
On a une horloge,

213
00:17:09,695 --> 00:17:14,622
comme d'habitude; la sortie Q est
connectée à l'entrée.

214
00:17:14,622 --> 00:17:16,910
Qu'est-ce que ça veut dire?

215
00:17:16,910 --> 00:17:22,479
Si j'ai un zéro sur cette bascule, la
sortie Q barre est inversée, on

216
00:17:22,479 --> 00:17:28,038
trouve cette valeur inversée sur l'entrée.
Donc, au prochain

217
00:17:28,038 --> 00:17:33,893
coup d'horloge, il va y avoir un transfert
sur la sortie,

218
00:17:33,893 --> 00:17:39,783
inversion.
Et puis, on a une bascule qui mérite son

219
00:17:39,783 --> 00:17:47,079
nom de bascule, puisqu'elle va changer
d'état à chaque transition de l'horloge.

220
00:17:47,079 --> 00:17:53,094
Donc, on a fait, en fait, un, un diviseur
par deux, et si on sait faire un

221
00:17:53,094 --> 00:17:59,330
diviseur par deux, et bien, on va faire un
petit train de diviseur par deux

222
00:17:59,330 --> 00:18:03,640
et connecter ça de façon à faire un
compteur binaire.

223
00:18:03,640 --> 00:18:11,126
Donc, la première bascule passe à un au
premier coup d'horloge.

224
00:18:11,126 --> 00:18:15,260
Elle passe à zéro au deuxième coup
d'horloge, et c'est

225
00:18:15,260 --> 00:18:18,970
à ce moment-là que la bascule suivante
devrait être activée.

226
00:18:18,970 --> 00:18:23,850
Donc, la sortie, ça fait un montant, qui
active la bascule.

227
00:18:23,850 --> 00:18:27,555
Donc, sur la sortie, ici, Q un, on a un
flanc

228
00:18:27,555 --> 00:18:33,700
descendant, mais sur la sortie inverse, on
a un flanc montant.

229
00:18:33,700 --> 00:18:39,604
Donc, le diagramme des temps, ici, vous
montre que à chaque flanc descendant, on

230
00:18:39,604 --> 00:18:45,571
a action sur l'étage suivant, et on va
compter en binaire.

231
00:18:45,571 --> 00:18:48,628
Donc, on a fait un compteur binaire.

232
00:18:48,628 --> 00:18:52,710
Ces valeurs décimales ne nous intéressent
en fait pas.

233
00:18:52,710 --> 00:18:57,904
Ce qui est intéressant de remarquer, c'est
que au moment où on

234
00:18:57,904 --> 00:19:03,190
à l'état un, un, un, et qu'on envoie une
impulsion d'horloge, la

235
00:19:03,190 --> 00:19:06,549
première bascule change, agit sur
l'horloge,

236
00:19:06,549 --> 00:19:08,829
la suivante, qui change, agit sur

237
00:19:08,829 --> 00:19:13,150
la suivante qui change pour qu'on lise le
zéro qui apparaît, ici,

238
00:19:13,150 --> 00:19:14,820
ensuite là, ensuite là.

239
00:19:14,820 --> 00:19:20,268
Mais vous voyez qu'il y a un certain
retard, un temps de propagation, euh, qui

240
00:19:20,268 --> 00:19:22,824
n'est pas du tout souhaitable, parce que

241
00:19:22,824 --> 00:19:25,500
ça va ralentir, en fait, le, le
processeur.

242
00:19:25,500 --> 00:19:30,184
Donc, c'est là que les systèmes logiques
interviennent pour trouver des solutions

243
00:19:30,184 --> 00:19:36,340
un petit peu plus élégantes, un peu plus
efficaces pour enregistrer un décalage.

244
00:19:36,340 --> 00:19:38,377
Un petit exercice, pour

245
00:19:38,377 --> 00:19:39,370
terminer.

246
00:19:39,370 --> 00:19:41,610
On a câblé deux bascules; vous
reconnaissez,

247
00:19:41,610 --> 00:19:43,975
ici, un petit élément de registre en
décalage.

248
00:19:43,975 --> 00:19:48,580
Vous reconnaissez, ici, la rétroaction du
compteur par deux.

249
00:19:48,580 --> 00:19:52,072
Euh, comment va, ce système va évoluer?

250
00:19:52,072 --> 00:19:57,458
L'habitude, c'est de noter les états
successifs, et puis, quand on recommence

251
00:19:57,458 --> 00:20:02,405
au début, et bien, on ne va pas réécrire,
hein, toute la séquence des états.

252
00:20:02,405 --> 00:20:03,575
Donc ici, il y a trois

253
00:20:03,575 --> 00:20:04,680
états successifs.

254
00:20:04,680 --> 00:20:09,562
Là, il y a quatre états successifs, et
bien, réfléchissons un

255
00:20:09,562 --> 00:20:14,950
petit peu, et répondez à la question.

256
00:20:19,920 --> 00:20:21,264
Où est la réponse?

257
00:20:21,264 --> 00:20:27,095
Et bien, si on essaye de l'analyser un
petit peu, ici, le zéro de la

258
00:20:27,095 --> 00:20:33,060
première bascule, c'est un un sur la
bascule suivante.

259
00:20:33,060 --> 00:20:41,228
Donc, le Q un va se recopier sur la
bascule Q deux, et là, déjà,

260
00:20:41,228 --> 00:20:45,233
on voit que c'est manifestement faux.
Par contre,

261
00:20:45,233 --> 00:20:51,220
la sortie Q deux qui était à zéro, est
effectivement copiée

262
00:20:51,220 --> 00:20:56,500
sous la forme d'un un, euh, sur la bascule
Q un.

263
00:20:56,500 --> 00:21:01,920
Donc, cette séquence est correcte.
Ici, le transfert est correct.

264
00:21:01,920 --> 00:21:07,340
Ensuite, le zéro qui est inversé se
retrouve sous forme d'un un.

265
00:21:07,340 --> 00:21:10,595
Le un est inversé, se retrouve sous forme

266
00:21:10,595 --> 00:21:11,660
d'un zéro.

267
00:21:11,660 --> 00:21:16,971
Le un inversé, va se trouver au début de
la séquence, de

268
00:21:16,971 --> 00:21:21,024
même que le zéro, et on a fait la boucle,
on a un

269
00:21:21,024 --> 00:21:26,834
compteur par quatre, selon une séquence
que l'on retrouvera aussi, puisque on

270
00:21:26,834 --> 00:21:30,990
peut remarquer qu'il y a un seul bit qui
change à chaque transition.

271
00:21:30,990 --> 00:21:35,721
Voilà, on a une petite idée de ce qu'on
peut faire avec des systèmes

272
00:21:35,721 --> 00:21:41,218
logiques, et maintenant, il nous faudra
continuer la complexité pour arriver à un

273
00:21:41,218 --> 00:21:46,920
microprocesseur et un microcontrôleur.