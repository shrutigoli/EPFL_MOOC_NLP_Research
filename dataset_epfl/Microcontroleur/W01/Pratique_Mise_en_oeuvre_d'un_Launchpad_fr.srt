1
00:00:00,000 --> 00:00:07,360
Bonjour,

2
00:00:07,360 --> 00:00:12,155
je vais vous présenter aujourd'hui le
Launchpad MSP

3
00:00:12,155 --> 00:00:16,950
430, et son environnement de programmation
qui s'appelle Energia.

4
00:00:16,950 --> 00:00:20,490
Nous n'allons pas chercher à rentrer dans
le détail des programmes,

5
00:00:20,490 --> 00:00:24,942
c'est vraiment simplement la mise en
oeuvre que je souhaite vous montrer.

6
00:00:24,942 --> 00:00:28,364
Alors tout d'abord que fait ce petit
module?

7
00:00:28,364 --> 00:00:34,970
Vous voyez ici une première partie qui est
le programmateur du micro-contrôleur,

8
00:00:34,970 --> 00:00:40,772
pour marquer le connecteur USB qui permet
de se relier à l'ordinateur, et dans

9
00:00:40,772 --> 00:00:45,980
une deuxième partie, ici, vous voyez un
socle avec un microcontrôleur, il est

10
00:00:45,980 --> 00:00:48,092
également connecté à des pattes, qui

11
00:00:48,092 --> 00:00:50,650
permettent de se relier au monde
extérieur.

12
00:00:50,650 --> 00:00:53,050
On y trouve, et c'est extrêmement
pratique,

13
00:00:53,050 --> 00:00:55,002
un petit bouton poussoir, ici, et ce

14
00:00:55,002 --> 00:00:56,858
que vous ne voyez pas, en-bas, deux

15
00:00:56,858 --> 00:01:01,600
diodes lumineuses, qui nous permettront
d'interagir avec l'environnement.

16
00:01:01,600 --> 00:01:04,762
Pour la mise en oeuvre logicielle, nous

17
00:01:04,762 --> 00:01:09,050
allons utiliser un logiciel qui s'appelle
Energia.

18
00:01:09,050 --> 00:01:15,092
En fait c'est une version du programme
Arduino, bien connu, qui est lié à la

19
00:01:15,092 --> 00:01:21,860
carte Arduino extrêmement célèbre, et cet
environnement Arduino a été adapté

20
00:01:21,860 --> 00:01:26,882
pour le processeur MSP 430 qui se trouve
sur le Launchpad, donc vous

21
00:01:26,882 --> 00:01:32,254
voyez que l'allure générale du programme
est la même que le programme Arduino.

22
00:01:32,254 --> 00:01:35,870
Ceux qui le connaissent, vous avez
remarqué que la couleur

23
00:01:35,870 --> 00:01:39,575
était bleue pour l'Arduino, et ici que
c'est une couleur rouge.

24
00:01:39,575 --> 00:01:41,996
Alors ce logiciel existe pour Windows, il

25
00:01:41,996 --> 00:01:44,697
existe également pour Mac OS et pour
Linux.

26
00:01:44,697 --> 00:01:49,290
Si vous l'installez pour Windows, il ne
faudra pas oublier d'installer les pilotes

27
00:01:49,290 --> 00:01:54,784
correspondants, vous trouverez toutes ces
informations sur le site energia point nu.

28
00:01:54,784 --> 00:01:57,886
En ce qui concerne Linux, vous n'aurez pas
de problème

29
00:01:57,886 --> 00:02:02,974
particulier, sauf qu'il faudra vous donner
les droits de, administrateur sur

30
00:02:02,974 --> 00:02:06,716
l'USB, de telle manière que lorsque nous
allons tout à

31
00:02:06,716 --> 00:02:10,880
l'heure brancher notre Launchpad, il
puisse être utilisé par le programme.

32
00:02:10,880 --> 00:02:15,440
Alors notre objectif aujourd'hui n'est pas
d'écrire un programme, il est simplement

33
00:02:15,440 --> 00:02:24,246
de reprendre un programme existant, nous
allons aller dans File puis Examples, puis

34
00:02:24,246 --> 00:02:28,160
Basics, puis Blink, donc on prend

35
00:02:28,160 --> 00:02:30,702
un exemple, un exemple extrêmement basique
qui

36
00:02:30,702 --> 00:02:32,875
est le fameux clignotant qu'on réalise

37
00:02:32,875 --> 00:02:36,255
toujours comme premier programme avec un
microcontrôleur,

38
00:02:36,255 --> 00:02:39,100
c'est un peu le HelloWord des
microcontrôleurs.

39
00:02:39,100 --> 00:02:43,187
L'objectif n'est donc pas de comprendre ce
programme mais simplement

40
00:02:43,187 --> 00:02:47,259
de comprendre comment est-ce qu'on met un
programme dans un microcontrôleur.

41
00:02:47,259 --> 00:02:51,657
Nous allons maintenant brancher notre
Launchpad, ici avec

42
00:02:51,657 --> 00:02:56,506
le connecteur mini USB, ici avec le
connecteur USB.

43
00:02:56,506 --> 00:02:57,962
S'il y avait déjà un programme

44
00:02:57,962 --> 00:03:00,594
qui s'exécute, peut-être qu'il se passera
quelque

45
00:03:00,594 --> 00:03:05,330
chose sur les diodes lumineuses sur votre
comptage, ici rien ne se passe.

46
00:03:05,330 --> 00:03:11,154
Cet environnement Energia est extrêmement
simple, il y a essentiellement

47
00:03:11,154 --> 00:03:17,040
deux boutons, le bouton qui s'appelle
Verify, et le bouton qui s'appelle Upload.

48
00:03:17,040 --> 00:03:22,750
Alors le nom savant pour Verify, c'est
Compile, compiler, et on voit

49
00:03:22,750 --> 00:03:27,790
ici qu'il y a toute une série d'opération
qui vont transformer le programme que nous

50
00:03:27,790 --> 00:03:30,792
avons écrit, dans le langage de
programmation

51
00:03:30,792 --> 00:03:32,840
C, et il sera donc transformé en

52
00:03:32,840 --> 00:03:38,330
bianaire, et c'est ce binaire qui va être
transféré sur la carte à microcontrôleur.

53
00:03:38,330 --> 00:03:44,654
La deuxième touche s'appelle Upload, et il
suffira de cliquer dessus pour que,

54
00:03:44,654 --> 00:03:47,918
ici on l'a vu, le microcontrôleur soit

55
00:03:47,918 --> 00:03:52,990
effacé, Erasing, puis ensuite soit
programmé, Programming,

56
00:03:52,990 --> 00:03:55,134
et on voit maintenant que le programme

57
00:03:55,134 --> 00:03:58,420
effectivement s'exécute, et que notre
lampe clignote

58
00:03:58,420 --> 00:04:03,434
Pour vous convaincre que c'est bien nous
qui avons écrit ce programme, je vais

59
00:04:03,434 --> 00:04:09,900
retourner dans le source du programme, ici
avec des commandes habituelles

60
00:04:09,900 --> 00:04:16,890
d'édition je vais modifier le temps
d'attente du clignotement, et il

61
00:04:16,890 --> 00:04:23,015
me suffira de recliquer sur Upload pour
que le programme soit

62
00:04:23,015 --> 00:04:28,850
compilé puis transféré, et le clignotement
va maintenant trois fois plus rapidement.

63
00:04:28,850 --> 00:04:32,130
Voyez que c'est un environnement
extrêmement

64
00:04:32,130 --> 00:04:35,092
simple, et nous allons l'utiliser pour
faire

65
00:04:35,092 --> 00:04:42,080
beaucoup de choses, il est très puissant,
mais il est simple à utiliser.