1
00:00:04,595 --> 00:00:09,190
Bonjour, nous continuons le cours
"Comprendre les microcontrôleurs".

2
00:00:09,190 --> 00:00:13,926
Et cette fois, enfin, nous allons vraiment
parler de microcontrôleurs.

3
00:00:13,926 --> 00:00:19,915
Nous allons même pouvoir définir
précisément de quoi il s'agit.

4
00:00:19,915 --> 00:00:21,987
En effet dans ce module, nous allons
donner

5
00:00:21,987 --> 00:00:24,830
une définition précise de ce qu'est un
microcontrôleur.

6
00:00:24,830 --> 00:00:27,514
Nous allons également regarder comment
nous allons

7
00:00:27,514 --> 00:00:30,259
pouvoir le mettre en oeuvre au niveau
électronique,

8
00:00:30,259 --> 00:00:33,284
donner le schéma de mise en oeuvre et on
parlera également de

9
00:00:33,284 --> 00:00:35,526
l'environnement de développement dont on a

10
00:00:35,526 --> 00:00:38,110
besoin pour mettre en oeuvre un
microcontrôleur.

11
00:00:38,110 --> 00:00:39,742
Plutôt que de faire tomber du

12
00:00:39,742 --> 00:00:43,142
ciel une définition de microcontrôleur,
permettez-moi

13
00:00:43,142 --> 00:00:44,706
de revenir un tout petit peu

14
00:00:44,706 --> 00:00:50,350
en arrière sur l'architecture des systèmes
informatiques.

15
00:00:50,350 --> 00:00:55,060
On avait vu qu'un système informatique
contient un processeur,

16
00:00:55,060 --> 00:01:01,080
qu'il contient une mémoire de programme,
qu'il contient une mémoire vive.

17
00:01:01,080 --> 00:01:03,868
Puis évidemment qu'il contient de quoi

18
00:01:03,868 --> 00:01:07,810
dialoguer avec l'extérieur : des
entrées/sorties.

19
00:01:07,810 --> 00:01:11,040
Il y a évidemment une horloge ici qui
permet de

20
00:01:11,040 --> 00:01:16,040
cadencer, le fonctionnement du processeur
et donc de l'ensemble du système.

21
00:01:16,040 --> 00:01:20,352
Notez que ce schéma d'un système
informatique peut correspondre

22
00:01:20,352 --> 00:01:23,820
à beaucoup de systèmes informatiques
différents.

23
00:01:23,820 --> 00:01:27,980
Prenons un exemple concret : la carte-mère
d'un ordinateur individuel.

24
00:01:27,980 --> 00:01:33,930
Celui que vous avez l'habitude d'utiliser.
Cette carte-mère contient un processeur,

25
00:01:33,930 --> 00:01:39,741
ce sera par exemple un processur du type
P4, pentium 4, ou

26
00:01:39,741 --> 00:01:45,900
encore, ce sera peut-être si vous êtes
euh, fortuné un I7, la dernière

27
00:01:45,900 --> 00:01:51,348
génération 2013.
Ce processeur sera cadencé par une horloge

28
00:01:51,348 --> 00:01:56,290
peut-être de trois gigaHertz ou un petit
peu plus, ou un petit peu moins.

29
00:01:56,290 --> 00:02:01,841
Vous aurez certainement des barrettes de
mémoire, sur votre système.

30
00:02:01,841 --> 00:02:05,572
Peut-être aurez-vous 4 GB de barrettes de
mémoire.

31
00:02:05,572 --> 00:02:08,600
Vous aurez certainement des entrées et des
sorties.

32
00:02:08,600 --> 00:02:10,923
Par exemple, un clavier,

33
00:02:10,923 --> 00:02:14,344
par exemple, une souris pour les entrées.

34
00:02:14,344 --> 00:02:19,500
Vous aurez certainement un écran et bien
d'autres choses pour les sorties.

35
00:02:19,500 --> 00:02:24,700
Petite question : est-ce que vous aurez
une ROM dans votre système?

36
00:02:24,700 --> 00:02:27,542
C'est vrai qu'on n'en a peut-être moins
conscience,

37
00:02:27,542 --> 00:02:29,900
des fois les fabriquants n'en parlent pas
mais

38
00:02:29,900 --> 00:02:32,930
tout système informatique a une mémoire
morte pour

39
00:02:32,930 --> 00:02:36,002
que le programme puisse s'exécuter au
démarrage et dans

40
00:02:36,002 --> 00:02:39,255
le cas d'un système informatique, d'une
carte-mère.

41
00:02:39,255 --> 00:02:41,855
Il s'agit de ce qu'on appelle le BIOS pour
ceux

42
00:02:41,855 --> 00:02:45,040
qui ont un petit peu fait de la
maintenance informatique.

43
00:02:45,040 --> 00:02:51,260
Et bien, figurez-vous qu'un
microcontrôleur peut répondre exactement

44
00:02:51,260 --> 00:02:54,728
au même schéma bloc que tout à l'heure.

45
00:02:54,728 --> 00:02:59,340
J'ai pris le même dessin, j'ai pris les
mêmes expressions.

46
00:02:59,340 --> 00:03:01,042
Il ne s'agit toutefois pas

47
00:03:01,042 --> 00:03:06,804
tout à fait du même dispositif.
Peut-être que nous aurons un

48
00:03:06,804 --> 00:03:12,698
processeur cadencé à une fréquence de 8
megaHertz.

49
00:03:12,698 --> 00:03:17,760
On est loin des 3 gigaHertz de tout à
l'heure.

50
00:03:17,760 --> 00:03:21,452
Le processeur sera certainement beaucoup
moins puissant que

51
00:03:21,452 --> 00:03:25,156
votre Pentium 4 ou que votre I5, ou I7.

52
00:03:25,156 --> 00:03:26,460
La taille

53
00:03:26,460 --> 00:03:31,283
de la mémoire, dans un microcontrôleur
qu'on

54
00:03:31,283 --> 00:03:36,200
va utiliser, on trouvera 512.
Tiens, 512 quoi?

55
00:03:36,200 --> 00:03:41,580
Simplement 512 Bytes, 512 Octets.

56
00:03:41,580 --> 00:03:46,602
On est bien, bien loin des quatre GB que
vous avez peut-être sur

57
00:03:46,602 --> 00:03:51,730
votre ordinateur.
On a une mémoire de programme d'une

58
00:03:51,730 --> 00:03:55,970
certaine taille.
Par exemple, 16 kB.

59
00:03:55,970 --> 00:04:00,194
Ça veut dire, pour un certain nombre de
systèmes, qu'on va pouvoir mettre

60
00:04:00,194 --> 00:04:04,030
environ 8000 instructions, ce qui est déjà
intéressant.

61
00:04:04,030 --> 00:04:10,633
Finalement, les entrées/sorties, ce sera
effectivement des entrées/sorties

62
00:04:10,633 --> 00:04:16,924
binaires avec possibilité de sortir ou
d'entrer des zéros ou

63
00:04:16,924 --> 00:04:21,546
des 1.
Mais ce qui est intéressant, c'est que

64
00:04:21,546 --> 00:04:30,612
tout ce système informatique peut tenir
dans un seul circuit intégré.

65
00:04:30,612 --> 00:04:36,311
On va avoir ici un seul circuit intégré
qui

66
00:04:36,311 --> 00:04:41,928
va contenir tout ce système informatique.
Un circuit

67
00:04:41,928 --> 00:04:48,490
intégré, en aglais "integrated circuit".
Alors évidemment, la

68
00:04:48,490 --> 00:04:54,970
comparaison structurelle peut être faite
avec un ordinateur, tel qu'un PC.

69
00:04:54,970 --> 00:04:58,561
D'autres comparaisons sont un petit peu
plus difficiles à faire.

70
00:04:58,561 --> 00:05:01,396
On a beaucoup moins de mémoire, on a
beaucoup moins de

71
00:05:01,396 --> 00:05:06,945
puissance de calcul, mais on a aussi un
système qui coûte beaucoup

72
00:05:06,945 --> 00:05:12,254
moins cher puisqu'on trouve de nombreux
microcontrôleurs dont le prix

73
00:05:12,254 --> 00:05:17,350
est inférieur à 1 euro.

74
00:05:17,350 --> 00:05:21,370
Donc je peux maintenant me lancer dans une
définition de microcontrôleur.

75
00:05:21,370 --> 00:05:24,880
Le microcontrôleur est un circuit intégré

76
00:05:24,880 --> 00:05:28,312
qui contient un petit système
informatique.

77
00:05:28,312 --> 00:05:31,670
Donc c'est à la fois un circuit intégré
euh,

78
00:05:31,670 --> 00:05:35,870
c'est donc un composant électronique
élémentaire, peu coûteux.

79
00:05:35,870 --> 00:05:38,699
Mais il contient tout un système
informatique.

80
00:05:38,699 --> 00:05:40,631
On va retrouver à l'intérieur un

81
00:05:40,631 --> 00:05:43,742
processeur, on va retrouver à l'intérieur
des

82
00:05:43,742 --> 00:05:46,020
mémoires de programme et de données

83
00:05:46,020 --> 00:05:49,050
et également des circuits d'entrées et
sorties.

84
00:05:49,050 --> 00:05:52,970
Étant donné que c'est un circuit intégré,
il y

85
00:05:52,970 --> 00:05:56,836
a une mise en oeuvre électronique qui doit
être faite.

86
00:05:56,836 --> 00:05:59,812
Et étant donné que c'est un système
informatique, il va

87
00:05:59,812 --> 00:06:03,420
falloir le programmer, donc faire une mise
en oeuvre logicielle.

88
00:06:03,420 --> 00:06:07,334
Essayons de regarder un petit peu plus en
détail comment

89
00:06:07,334 --> 00:06:12,970
le schéma électronique utilisant un
microcontrôleur va pouvoir être dessiné.

90
00:06:12,970 --> 00:06:17,416
Ici, j'ai pris simplement le composant
microcontrôleur,

91
00:06:17,416 --> 00:06:19,648
il n'y a pas de symbole spécifique.

92
00:06:19,648 --> 00:06:22,168
Donc, j'ai mis simplement un rectangle

93
00:06:22,168 --> 00:06:27,580
ou un carré et là où j'en avais envie,
j'ai mis les pattes dont j'aurai besoin.

94
00:06:27,580 --> 00:06:32,990
Il y a évidemment ici une patte pour le,
la référence électrique, le zéro Volt.

95
00:06:32,990 --> 00:06:38,047
Il y le fameux VCC, qui permet d'alimenter
notre microcontrôleur en 5V,

96
00:06:38,047 --> 00:06:43,443
peut-être même pour d'autres modèles en 3V
ou encore d'autres tensions plus basses.

97
00:06:43,443 --> 00:06:47,856
On a également un, une patte qui s'appelle
"reset"

98
00:06:47,856 --> 00:06:53,580
ici qui va permettre le redémarrage au
début du programme.

99
00:06:53,580 --> 00:06:55,697
C'est donc une patte qui existe en

100
00:06:55,697 --> 00:06:58,959
principe sur tous les microcontrôleurs et
qui permet

101
00:06:58,959 --> 00:07:01,581
de relancer l'exécution du programme qui
se

102
00:07:01,581 --> 00:07:04,220
trouve à l'intérieur à partir de son
début.

103
00:07:04,220 --> 00:07:08,060
Ici, on a encore une mystérieuse patte qui
s'appelle "test" dont je vous

104
00:07:08,060 --> 00:07:12,190
dirai quelques mots tout à l'heure, qui va
être utile pour la programmation.

105
00:07:12,190 --> 00:07:13,492
Et finalement,

106
00:07:13,492 --> 00:07:18,455
j'ai ici représenté une seule patte
d'entrée et sortie que je vais

107
00:07:18,455 --> 00:07:22,140
utiliser dans ce cas-là comme une sortie
dans l'exemple qu'on va prendre.

108
00:07:22,140 --> 00:07:26,230
Pour compléter mon schéma, et bien il faut
que je signale que la masse

109
00:07:26,230 --> 00:07:29,254
était effectivement connectée au zéro V,
qu'il

110
00:07:29,254 --> 00:07:33,680
va falloir fournir une alimentation sur le
VCC.

111
00:07:33,680 --> 00:07:38,830
On va mettre ici une résistance de rappel.
On a entendu

112
00:07:38,830 --> 00:07:44,502
parler de ces résistances de pull up, une
résistance de rappel sur le reset.

113
00:07:44,502 --> 00:07:47,823
De telle manière que le reset ne se trouve
pas dans

114
00:07:47,823 --> 00:07:52,576
un état indéterminé, une entrée en l'air
prend un état indéterminé.

115
00:07:52,576 --> 00:07:55,930
Ici, il est nécessaire de lui donner un
état précis.

116
00:07:55,930 --> 00:08:00,061
Comme le reset est actif à zéro, ce que
montre ce petit rond,

117
00:08:00,061 --> 00:08:04,098
et bien il va falloir tirer vers le haut
ce signal de telle manière

118
00:08:04,098 --> 00:08:05,826
que le reset ne s'exécute pas en

119
00:08:05,826 --> 00:08:09,450
permanence et que le programme puisse
s'exécuter normalement.

120
00:08:09,450 --> 00:08:13,659
Je signale quand même que, à l'intérieur
du microcontrôleur, il y a un

121
00:08:13,659 --> 00:08:18,139
système qui fait que lorsqu'on met la
tension sur le VCC, je devrais

122
00:08:18,139 --> 00:08:22,598
dire entre la masse et le VCC, on a un
reset automatique qui

123
00:08:22,598 --> 00:08:24,736
s'exécute de telle manière que le

124
00:08:24,736 --> 00:08:27,520
programme puisse commencer dans de bonnes
conditions.

125
00:08:27,520 --> 00:08:29,260
Il faut encore ajouter un composant

126
00:08:29,260 --> 00:08:31,090
qui est ici un petit condensateur.

127
00:08:31,090 --> 00:08:34,335
Un condensateur qui n'est pas de très
grande valeur mais qui doit être

128
00:08:34,335 --> 00:08:36,975
de bonne qualité, c'est-à-dire avec une
résistance

129
00:08:36,975 --> 00:08:39,482
interne qui soit aussi faible que
possible.

130
00:08:39,482 --> 00:08:41,626
On appelle ce type de condensateur des

131
00:08:41,626 --> 00:08:46,032
condensateurs de découplage euh,
"decoupling capacitor" en anglais.

132
00:08:46,032 --> 00:08:50,600
Il y a d'autres termes qui sont également
utilisés : "bypass capacitor".

133
00:08:50,600 --> 00:08:52,504
Je pourrais vous donner une explication

134
00:08:52,504 --> 00:08:54,800
très simple sur l'utilité de ce
condensateur,

135
00:08:54,800 --> 00:08:59,348
c'est une petite réserve d'électricité qui
permet, lorsqu'il y a une demande

136
00:08:59,348 --> 00:09:04,040
instantanée importante de faire face à
cette demande de courant au niveau

137
00:09:04,040 --> 00:09:08,346
donc des alimentations puisqu'il est
connecté ici au plus et ici au

138
00:09:08,346 --> 00:09:12,900
moins, on doit le mettre le plus proche
possible du circuit intégré.

139
00:09:12,900 --> 00:09:19,861
Je vais continuer à compléter mon montage
en rajoutant ici, un connecteur sur lequel

140
00:09:19,861 --> 00:09:24,874
il y aura la patte "reset", sur lequel il
y aura cette patte

141
00:09:24,874 --> 00:09:30,249
"test" et sur lequel il y aura au moins la
masse, qui est donc le point commun.

142
00:09:30,249 --> 00:09:33,542
J'ai, assez souvent, on met
l'alimentation, ce sera

143
00:09:33,542 --> 00:09:38,110
ainsi la possibilité d'alimenter notre
montage par ce connecteur.

144
00:09:38,110 --> 00:09:40,926
Alors, en fait, ce connecteur va être
utilisé pour

145
00:09:40,926 --> 00:09:45,942
la programmation, donc pour cette étape de
mise à l'intérieur

146
00:09:45,942 --> 00:09:52,210
de la mémoire morte du microcontrôleur, du
programme qu'on a l'intention d'exécuter.

147
00:09:52,210 --> 00:09:53,617
J'ai presque terminé.

148
00:09:53,617 --> 00:09:56,985
Je peux maintenant très simplement
compléter mon montage

149
00:09:56,985 --> 00:10:00,300
en rajoutant ici par exemple, une diode
lumineuse.

150
00:10:00,300 --> 00:10:03,958
Ce sera la seule sortie de mon système qui
n'aura même pas d'entrée.

151
00:10:03,958 --> 00:10:07,510
On pourra, par exemple, faire clignoter
cette diode lumineuse.

152
00:10:07,510 --> 00:10:10,873
C'est quelque chose qui n'est peut-être
pas très sophistiqué,

153
00:10:10,873 --> 00:10:12,879
mais si on peut faire clignoter une diode

154
00:10:12,879 --> 00:10:15,860
lumineuse et faire varier euh, d'un
programme à l'autre

155
00:10:15,860 --> 00:10:18,380
son, sa vitesse de clignotement, on aura
déjà la

156
00:10:18,380 --> 00:10:22,120
conviction qu'on a réussi à faire
fonctionner notre microcontrôleur.

157
00:10:22,120 --> 00:10:25,113
Un tel montage n'est pas compliqué à
réaliser.

158
00:10:25,113 --> 00:10:27,084
Vous connaissez ces plaques que

159
00:10:27,084 --> 00:10:30,580
l'on appelle parfois des plaques
d'expérimentation

160
00:10:30,580 --> 00:10:35,390
en français, ou des "breadboards" ou des
"project boards" en anglais.

161
00:10:35,390 --> 00:10:35,926
Et bien,

162
00:10:35,926 --> 00:10:40,214
ces plaques d'expérimentations permettent
très simplement de connecter

163
00:10:40,214 --> 00:10:42,820
selon le schéma qu'on a mis tout à
l'heure.

164
00:10:42,820 --> 00:10:44,850
On voit ici le circuit intégré, on

165
00:10:44,850 --> 00:10:48,000
voit ici sur la patte correspondante, la
résistance

166
00:10:48,000 --> 00:10:53,710
de rappel pour le reset qui est connectée
au plus, donc à la bande rouge ici.

167
00:10:53,710 --> 00:10:58,150
On voit ici l'alimentation, les deux
alimentations du processeur,

168
00:10:58,150 --> 00:11:01,170
on voit ici la connexion d'une patte à une
diode

169
00:11:01,170 --> 00:11:05,026
lumineuse euh, avec une résistance qui va
jusqu'à la masse.

170
00:11:05,026 --> 00:11:10,108
Ici j'ai rajouté ces quelques fils
pourqu'on puisse avoir effectivement

171
00:11:10,108 --> 00:11:13,517
des deux côtés le moins et des deux côtés
le

172
00:11:13,517 --> 00:11:18,512
plus de telle manière que ce connecteur
ici permette d'alimenter le

173
00:11:18,512 --> 00:11:23,610
montage et ce connecteur-là le complète
pour la programmation.

174
00:11:23,610 --> 00:11:26,275
Notez que ce dessin a été fait avec un
logiciel qui

175
00:11:26,275 --> 00:11:32,350
s'appelle Fritzing donc que vous pouvez
trouver sur ce site internet Fritzing.org.

176
00:11:32,350 --> 00:11:34,900
J'ai donc maintenant mon schéma, il va

177
00:11:34,900 --> 00:11:39,025
falloir trouver un environnement de
développement, un système

178
00:11:39,025 --> 00:11:41,734
de développement qui va me permettre de

179
00:11:41,734 --> 00:11:46,050
mettre le programme à l'intérieur de mon
microcontrôleur.

180
00:11:46,050 --> 00:11:52,720
Je vais utiliser pour ceci un PC et ici ce
qu'on appelle un programmateur.

181
00:11:52,720 --> 00:11:54,992
Alors, plutôt bonne nouvelle : le PC

182
00:11:54,992 --> 00:11:58,470
n'a pas besoin d'être un PC extrêmement
sophistiqué.

183
00:11:58,470 --> 00:12:02,040
On a des environnement de développement de
logiciel dont on parlera tout à l'heure

184
00:12:02,040 --> 00:12:05,598
et dans les prochains modules qui ne sont
pas trop lourds, pas trop complexes.

185
00:12:05,598 --> 00:12:08,990
Pour les programmateurs, et bien certains
sont plus ou moins compliqués.

186
00:12:08,990 --> 00:12:13,990
En voici quelques-uns.
Celui-ci permet de programmer un Pick.

187
00:12:13,990 --> 00:12:18,121
Celui-ci permet de programmer un AVR, il y
a naturellement

188
00:12:18,121 --> 00:12:20,280
beaucoup d'autres modèles.

189
00:12:20,280 --> 00:12:22,289
Celui-là est quelque chose d'un petit peu
plus

190
00:12:22,289 --> 00:12:24,700
sophistiqué pour des systèmes un petit peu
plus coûteux.

191
00:12:24,700 --> 00:12:26,502
Ici, on a un programmateur extrêmement

192
00:12:26,502 --> 00:12:29,070
simple, qui n'a pratiquement pas
d'électronique.

193
00:12:29,070 --> 00:12:31,905
Malheureusement, il utilise le port LPT

194
00:12:31,905 --> 00:12:34,437
des ordinateurs qui ne sont plus
disponibles.

195
00:12:34,437 --> 00:12:36,621
Sur des ordinateurs mordernes, on
préférera les

196
00:12:36,621 --> 00:12:40,092
solutions utilisant des connecteurs de
type USB.

197
00:12:40,092 --> 00:12:44,250
Il existe également plusieurs cartes
électroniques,

198
00:12:44,250 --> 00:12:48,900
généralement de petit format, telles que
l'Arduino, que vous avez ici

199
00:12:48,900 --> 00:12:52,969
sous vos yeux, qui contiennent à la fois
le microcontrôleur, avec

200
00:12:52,969 --> 00:12:57,242
des connecteurs pour relier les pattes
d'entrées et sorties, mais également

201
00:12:57,242 --> 00:13:01,300
le programmateur et vous reconnaissez sur
cette image le connecteur USB.

202
00:13:01,300 --> 00:13:05,643
Un autre exemple, c'est le LaunchPad
proposé par

203
00:13:05,643 --> 00:13:09,310
Texas Instruments, qui est aussi un, une
carte

204
00:13:09,310 --> 00:13:13,408
très intéressante qui contient le
programmateur dans la partie

205
00:13:13,408 --> 00:13:14,883
supérieure, qui contient le

206
00:13:14,883 --> 00:13:17,420
microcrontrôleur avec également des
connecteurs

207
00:13:17,420 --> 00:13:20,630
latéraux et nous allons abondamment
utiliser cette carte pour

208
00:13:20,630 --> 00:13:24,900
faire des démonstrations durant ce cours
"comprendre les microcontrôleurs".

209
00:13:24,900 --> 00:13:28,250
Une chose est l'aspect matériel.

210
00:13:28,250 --> 00:13:31,260
Une autre chose est l'aspect logiciel.

211
00:13:31,260 --> 00:13:35,190
Vous voyez ici des environnement de
développement.

212
00:13:35,190 --> 00:13:39,040
Celui-ci correspond à l'environnement du,
de l'Arduino.

213
00:13:39,040 --> 00:13:42,911
Celui-ci correspond à l'environnement du
MSP430.

214
00:13:42,911 --> 00:13:46,578
Vous voyez qu'ils sont extrêmement
similaires l'un à l'autre.

215
00:13:46,578 --> 00:13:49,360
On a même pratiquement le même programme
qui est écrit.

216
00:13:49,360 --> 00:13:54,756
Et ces logiciels donc, vont permettre
d'écrire des programmes, de les convertir

217
00:13:54,756 --> 00:14:00,570
en langage machine et ensuite de les
envoyer sur la mémoire du microcontrôleur.

218
00:14:00,570 --> 00:14:04,825
Il existe aussi des environnements plus
sophistiqués.

219
00:14:04,825 --> 00:14:10,800
Ici, par exemple, l'environnement qui
s'appelle Code Composer Studio qui est

220
00:14:10,800 --> 00:14:16,850
proposé avec les processeurs de Texas
Instruments, entre autres les MSP430.

221
00:14:16,850 --> 00:14:20,850
On utilisera aussi durant ce cours ce
logiciel de telle

222
00:14:20,850 --> 00:14:25,680
manière qu'on puisse apprendre à utiliser
un certain nombre de fonctionnalités

223
00:14:25,680 --> 00:14:29,004
avancées, en particulier qui se cachent
derrière

224
00:14:29,004 --> 00:14:32,285
ici, cette touche "debug", la possibilité
de

225
00:14:32,285 --> 00:14:34,826
voir, en quelque sorte, à l'écran de

226
00:14:34,826 --> 00:14:39,240
l'ordinateur les instructions s'exécuter à
l'intérieur du microcontrôleur.

227
00:14:39,240 --> 00:14:44,137
Nous avons donc appris aujourd'hui ce
qu'est un microcontrôleur.

228
00:14:44,137 --> 00:14:47,368
Je rappelle cette définition : c'est un
petit

229
00:14:47,368 --> 00:14:51,330
système informatique contenu dans un seul
circuit intégré.

230
00:14:51,330 --> 00:14:55,730
On a également vu comment dessiner le
schéma pour la mise en oeuvre

231
00:14:55,730 --> 00:14:59,990
de ce microcontrôleur.
Et on a effleuré quelques solutions

232
00:14:59,990 --> 00:15:05,700
matérielles et logicielles qui vont servir
de système de développement, qui vont donc

233
00:15:05,700 --> 00:15:12,400
permettre de développer des applications à
base de microcontrôleur.