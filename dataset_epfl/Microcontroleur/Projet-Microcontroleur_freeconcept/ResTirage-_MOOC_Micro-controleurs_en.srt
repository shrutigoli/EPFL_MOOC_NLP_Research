1
00:00:03,950 --> 00:00:04,987
Hello!

2
00:00:05,187 --> 00:00:08,299
We continue the course
"Understanding Micro-Controllers".

3
00:00:09,361 --> 00:00:12,573
And today, we'll talk of

4
00:00:12,773 --> 00:00:13,936
drawing resistances.

5
00:00:14,473 --> 00:00:16,298
What is that odd word?

6
00:00:16,498 --> 00:00:18,823
Maybe you already know
them under the name

7
00:00:19,023 --> 00:00:20,974
Pull up resistor.

8
00:00:21,174 --> 00:00:22,311
We will recall

9
00:00:22,511 --> 00:00:24,511
the principle and the usefulness

10
00:00:24,711 --> 00:00:26,474
of these pulling resistors.

11
00:00:27,098 --> 00:00:29,611
We will then speak in more detail

12
00:00:29,786 --> 00:00:31,936
pull up resistors which are integrated

13
00:00:32,136 --> 00:00:34,461
in a large number of microcontrollers.

14
00:00:35,223 --> 00:00:37,411
Then, we will look in more details

15
00:00:37,611 --> 00:00:39,136
how it is implemented

16
00:00:39,336 --> 00:00:42,086
on the AVR and on the MSP430.

17
00:00:42,911 --> 00:00:44,398
Once is not a custom,

18
00:00:44,598 --> 00:00:47,336
we will begin this lesson with a quiz.

19
00:00:49,574 --> 00:00:51,573
You have this diagram.

20
00:00:51,836 --> 00:00:53,061
It is very simple.

21
00:00:53,248 --> 00:00:55,848
It seems to you perhaps
a little odd since this leg

22
00:00:56,398 --> 00:00:58,511
is connected to nothing at all.

23
00:00:58,723 --> 00:01:00,061
It's in the air.

24
00:01:00,498 --> 00:01:02,336
Here, we simply

25
00:01:02,536 --> 00:01:05,473
have an LED as we're used to using them.

26
00:01:06,511 --> 00:01:08,223
The program therefore corresponds

27
00:01:08,423 --> 00:01:10,123
in its set-up part

28
00:01:11,036 --> 00:01:13,136
but the red LED

29
00:01:13,336 --> 00:01:15,186
in output,

30
00:01:15,386 --> 00:01:17,148
we are accustomed to this syntax.

31
00:01:17,973 --> 00:01:19,586
In the main loop,

32
00:01:20,136 --> 00:01:21,736
we have a variable

33
00:01:21,936 --> 00:01:23,236
which is the value

34
00:01:23,648 --> 00:01:26,386
which is read on the digitalRead

35
00:01:26,586 --> 00:01:29,073
on the entry and underlined 3

36
00:01:29,273 --> 00:01:31,598
and this same value val

37
00:01:31,798 --> 00:01:34,736
is copied with a digital Read

38
00:01:34,936 --> 00:01:36,636
on the light emitting diode.

39
00:01:36,836 --> 00:01:38,873
So we have a program that constantly

40
00:01:39,073 --> 00:01:41,923
copies the input to the output.

41
00:01:43,036 --> 00:01:44,236
So my question:

42
00:01:44,436 --> 00:01:46,486
with this setup and this program,

43
00:01:46,948 --> 00:01:49,473
what will we see on the LED?

44
00:01:49,911 --> 00:01:52,373
Do you think it will remain off ?

45
00:01:53,048 --> 00:01:55,498
Do you think it will, for example,
be turned on?

46
00:01:56,348 --> 00:01:57,998
Do you think it will rather

47
00:01:58,198 --> 00:01:59,411
be flashing

48
00:01:59,611 --> 00:02:01,398
or that it's condition will fluctuate?

49
00:02:02,411 --> 00:02:03,585
And if for once

50
00:02:03,785 --> 00:02:06,373
we let the material answer us?

51
00:02:06,573 --> 00:02:08,398
Watch this short video.

52
00:02:08,597 --> 00:02:11,485
So you notice the small wire
that is connected

53
00:02:11,685 --> 00:02:13,397
on the input P1.3.

54
00:02:14,210 --> 00:02:15,397
You notice that

55
00:02:15,572 --> 00:02:17,522
to a certain number of things,

56
00:02:17,697 --> 00:02:19,647
the light diode changes.

57
00:02:19,847 --> 00:02:21,172
We feel there are movements.

58
00:02:21,372 --> 00:02:23,910
These movements are seen
to be made by one hand.

59
00:02:24,110 --> 00:02:25,548
See here my finger.

60
00:02:25,748 --> 00:02:28,485
It approaches but does not touch

61
00:02:28,685 --> 00:02:29,698
this small wire

62
00:02:29,898 --> 00:02:31,935
and you see that the output changes

63
00:02:32,135 --> 00:02:33,260
at a certain time.

64
00:02:35,585 --> 00:02:38,198
Let's try to understand what happened.

65
00:02:38,960 --> 00:02:41,273
We're using microcontrollers

66
00:02:41,473 --> 00:02:43,998
which use C-MOS technology.

67
00:02:44,310 --> 00:02:47,985
And the C-MOS have high-impedance inputs.

68
00:02:49,135 --> 00:02:51,873
And therefore, an unconnected input

69
00:02:52,298 --> 00:02:54,660
captures all kinds of parasites,

70
00:02:54,860 --> 00:02:57,660
any kind of electromagnetic influences,

71
00:02:57,860 --> 00:03:00,960
any kind of static charges,
even very small ones

72
00:03:01,160 --> 00:03:03,848
Which will make it change state

73
00:03:04,048 --> 00:03:06,460
in a way that seems a bit random.

74
00:03:06,810 --> 00:03:08,998
It is therefore not possible to leave

75
00:03:09,198 --> 00:03:11,098
an unconnected input.

76
00:03:11,385 --> 00:03:14,623
It is essential to avoid
these entries in the air.

77
00:03:15,885 --> 00:03:18,998
What solution can be proposed
to solve this problem?

78
00:03:19,498 --> 00:03:21,660
What we are seeking is to diminish

79
00:03:21,860 --> 00:03:23,335
the impedance of the system

80
00:03:23,535 --> 00:03:25,348
and a resistor

81
00:03:25,698 --> 00:03:28,598
which must be linked
to one of the power supplies

82
00:03:29,410 --> 00:03:32,023
will ensure a known potential

83
00:03:32,223 --> 00:03:34,548
at the moment when
the entrance is in the air.

84
00:03:35,498 --> 00:03:37,723
Then, 2 diagrams are possible

85
00:03:37,923 --> 00:03:39,348
since there are 2 feeds.

86
00:03:40,185 --> 00:03:43,010
The solution with the pull-up

87
00:03:43,210 --> 00:03:44,835
in English pull-up

88
00:03:45,335 --> 00:03:48,335
and it can be seen that the resistor
is connected to the positive

89
00:03:48,535 --> 00:03:49,360
power supply.

90
00:03:50,198 --> 00:03:52,560
And the solution with the pull down,

91
00:03:52,935 --> 00:03:54,610
pull-down in English.

92
00:03:54,810 --> 00:03:57,235
It can be seen that
the resistor is connected

93
00:03:57,435 --> 00:03:59,248
towards the 0 volt towards the ground.

94
00:03:59,448 --> 00:04:00,835
In both cases,

95
00:04:01,035 --> 00:04:01,848
between

96
00:04:02,385 --> 00:04:04,185
a supply point

97
00:04:05,548 --> 00:04:08,035
and the entrance of our system,

98
00:04:08,235 --> 00:04:09,948
we have a resistance

99
00:04:10,148 --> 00:04:12,198
which avoids this problem

100
00:04:12,398 --> 00:04:14,860
of high input impedance

101
00:04:15,973 --> 00:04:17,360
of our micro-controllers.

102
00:04:17,923 --> 00:04:21,360
In fact, this technique is well known
to electronics technicians.

103
00:04:22,185 --> 00:04:24,285
and it remains for us to ask
ourselves the question

104
00:04:24,485 --> 00:04:25,623
is there

105
00:04:25,998 --> 00:04:29,148
between these 2 pull-up
and pull-down solutions

106
00:04:29,348 --> 00:04:31,723
one that is preferable to the other?

107
00:04:32,235 --> 00:04:33,198
So,

108
00:04:33,385 --> 00:04:35,835
right away, I will tell you
that the one that is most used

109
00:04:36,010 --> 00:04:38,210
and by far, is the pull-up.

110
00:04:39,060 --> 00:04:41,173
How can I justify the fact

111
00:04:41,373 --> 00:04:43,935
that we should use a pull-up
rather than a pull-down?

112
00:04:44,135 --> 00:04:45,973
Consider the simple case

113
00:04:46,173 --> 00:04:48,498
of an end-of-travel switch

114
00:04:48,698 --> 00:04:51,148
which is going to be at
a certain physical distance

115
00:04:51,335 --> 00:04:54,060
of the electronic board
containing the micro-controller.

116
00:04:54,373 --> 00:04:55,473
We thus have:

117
00:04:55,673 --> 00:04:56,960
a push button

118
00:04:57,810 --> 00:05:01,010
and this push-button must be connected

119
00:05:01,210 --> 00:05:03,048
to our electronic card

120
00:05:03,248 --> 00:05:04,748
with in this case

121
00:05:04,948 --> 00:05:06,898
a connection to the input

122
00:05:07,073 --> 00:05:09,098
and an earth connection.

123
00:05:10,048 --> 00:05:11,473
In the other case,

124
00:05:11,673 --> 00:05:13,685
we always have our push button.

125
00:05:14,610 --> 00:05:16,985
We always have a connection

126
00:05:17,385 --> 00:05:18,673
towards the entrance.

127
00:05:18,873 --> 00:05:21,223
And this time, the second connection

128
00:05:21,423 --> 00:05:24,010
must be towards the most.

129
00:05:24,648 --> 00:05:26,048
Admitting

130
00:05:26,373 --> 00:05:27,910
that this cable

131
00:05:28,398 --> 00:05:31,360
or that this cable are relatively long cables

132
00:05:32,060 --> 00:05:33,348
and that they move

133
00:05:33,548 --> 00:05:35,735
along the frame of our machine,

134
00:05:36,535 --> 00:05:38,473
which solution will we prefer?

135
00:05:39,185 --> 00:05:41,285
Transfer the signal

136
00:05:41,560 --> 00:05:43,435
and the positive voltage

137
00:05:43,635 --> 00:05:46,173
or on the contrary transfer the signal

138
00:05:46,373 --> 00:05:48,210
and the negative voltage,

139
00:05:48,410 --> 00:05:49,548
that is, the earth.

140
00:05:49,748 --> 00:05:51,310
And we prefer this solution

141
00:05:51,510 --> 00:05:54,198
since generally the earth is actually

142
00:05:54,398 --> 00:05:56,798
connected to the machine frame

143
00:05:56,998 --> 00:05:59,310
and electronic technicians have the habit

144
00:05:59,510 --> 00:06:01,810
of using this pattern.

145
00:06:02,010 --> 00:06:04,748
Moreover, a number of microcontrollers

146
00:06:04,948 --> 00:06:06,210
offer

147
00:06:06,410 --> 00:06:09,523
built-in pull-up resistors

148
00:06:09,723 --> 00:06:11,810
whereas they are more rare those that

149
00:06:12,010 --> 00:06:13,635
offer both

150
00:06:13,835 --> 00:06:15,373
a pull-up resistor or

151
00:06:15,573 --> 00:06:17,660
a pull-down resistance.

152
00:06:18,823 --> 00:06:19,710
Indeed,

153
00:06:19,910 --> 00:06:23,347
many manufacturers incorporate
draft resistances directly

154
00:06:23,547 --> 00:06:24,960
in micro-controllers.

155
00:06:25,160 --> 00:06:27,122
The value of this resistance

156
00:06:27,322 --> 00:06:29,847
is generally about 50 kOhm.

157
00:06:30,047 --> 00:06:31,897
So we see here on this diagram

158
00:06:32,097 --> 00:06:34,822
that the resistance is
not placed here on the outside

159
00:06:35,022 --> 00:06:37,210
but is placed inside.

160
00:06:37,410 --> 00:06:38,460
Of course,

161
00:06:38,660 --> 00:06:41,222
it must not be permanently connected

162
00:06:41,422 --> 00:06:43,835
and it will be necessary
to find a mechanism

163
00:06:44,035 --> 00:06:45,422
to engage

164
00:06:45,622 --> 00:06:46,822
or trigger

165
00:06:47,022 --> 00:06:48,960
this pull resistance.

166
00:06:50,122 --> 00:06:51,885
Unfortunately, there is not

167
00:06:52,085 --> 00:06:53,222
a single method

168
00:06:53,422 --> 00:06:55,897
to engage these pull resistors.

169
00:06:56,572 --> 00:06:58,060
Each manufacturer

170
00:06:58,260 --> 00:06:59,760
proposes a technique.

171
00:07:00,260 --> 00:07:03,572
I will take the example for AVR processors

172
00:07:03,772 --> 00:07:05,172
of the company Atmail.

173
00:07:05,635 --> 00:07:07,310
I think you remember

174
00:07:07,510 --> 00:07:08,672
this table.

175
00:07:08,872 --> 00:07:09,897
We talked about it

176
00:07:10,097 --> 00:07:12,560
when we talked about inputs and outputs.

177
00:07:12,760 --> 00:07:14,285
You recall that

178
00:07:14,485 --> 00:07:16,135
In the Dir register

179
00:07:16,335 --> 00:07:17,572
for each leg,

180
00:07:17,772 --> 00:07:19,435
the respective bit

181
00:07:19,635 --> 00:07:21,685
is used either to

182
00:07:22,297 --> 00:07:23,872
have an entry

183
00:07:24,072 --> 00:07:25,260
when it is at 0,

184
00:07:25,460 --> 00:07:27,747
either to have an output

185
00:07:27,947 --> 00:07:29,335
when it is at 1.

186
00:07:29,535 --> 00:07:33,022
In this case, it is the OUT register
which allows the output to be set to 0

187
00:07:33,622 --> 00:07:36,147
and set the output to 1.

188
00:07:36,647 --> 00:07:39,485
On the other hand, it should
be noted that these two lines

189
00:07:39,685 --> 00:07:41,097
are the same

190
00:07:41,297 --> 00:07:44,297
and whether the OUT is 0 or 1,

191
00:07:44,497 --> 00:07:47,047
when the Dir is 0

192
00:07:47,247 --> 00:07:49,085
does not really matter.

193
00:07:49,285 --> 00:07:51,922
And some manufacturers
have just had the idea

194
00:07:52,122 --> 00:07:53,472
to distinguish

195
00:07:53,672 --> 00:07:55,860
these two cases by saying

196
00:07:56,172 --> 00:07:58,072
in the case where DDR is at 0,

197
00:07:58,272 --> 00:07:59,972
if PORT is at 0,

198
00:08:00,172 --> 00:08:02,747
then this is a normal input
with high impedance.

199
00:08:02,947 --> 00:08:05,497
On the other hand, if PORT is 1,

200
00:08:06,197 --> 00:08:07,822
always with DDR

201
00:08:08,022 --> 00:08:09,047
which is at 0,

202
00:08:09,247 --> 00:08:10,910
then, we move to an entry

203
00:08:11,110 --> 00:08:12,485
with pull-up.

204
00:08:13,760 --> 00:08:15,597
To make it extremely easy

205
00:08:15,960 --> 00:08:17,472
to trigger the input,

206
00:08:17,672 --> 00:08:20,022
it will suffice to activate
the corresponding bit

207
00:08:20,222 --> 00:08:21,060
of the port

208
00:08:21,260 --> 00:08:22,260
as long as

209
00:08:22,460 --> 00:08:24,722
we have the DDR (INAUDIBLE) at  0.

210
00:08:24,922 --> 00:08:27,435
I remind you that on the Atmail,

211
00:08:27,635 --> 00:08:30,160
the direction PORT is called DDR

212
00:08:30,360 --> 00:08:31,785
(Data Direction Register)

213
00:08:31,972 --> 00:08:34,772
and the output PORT is simply called PORT

214
00:08:35,047 --> 00:08:36,247
so we would have

215
00:08:36,447 --> 00:08:37,685
for example

216
00:08:37,885 --> 00:08:40,985
D-D-R B

217
00:08:41,185 --> 00:08:42,160
if it is PORT B

218
00:08:42,360 --> 00:08:44,322
and then PORT B

219
00:08:44,710 --> 00:08:45,835
correspondent

220
00:08:46,797 --> 00:08:49,735
I could have shown you the internal diagram

221
00:08:49,997 --> 00:08:51,222
of the AVRs.

222
00:08:51,422 --> 00:08:53,522
It is very complicated

223
00:08:54,472 --> 00:08:56,847
but we still recognize it here

224
00:08:57,047 --> 00:08:58,760
this pull resistance.

225
00:08:58,960 --> 00:09:01,135
It is seen that it is operated

226
00:09:01,335 --> 00:09:03,322
by a transistor

227
00:09:03,522 --> 00:09:05,922
and connected at most.

228
00:09:06,122 --> 00:09:08,497
So we have a pull-up resistance

229
00:09:08,697 --> 00:09:10,322
which can be interlocked.

230
00:09:10,722 --> 00:09:11,459
Here,

231
00:09:11,659 --> 00:09:13,809
we have an inverter that matches

232
00:09:14,009 --> 00:09:15,359
to the inversion

233
00:09:15,559 --> 00:09:16,859
of this transistor.

234
00:09:17,059 --> 00:09:19,447
Here, then, we have a logical function,

235
00:09:19,622 --> 00:09:20,847
a door (INAUDIBLE).

236
00:09:21,022 --> 00:09:23,572
To get a 1 here

237
00:09:23,859 --> 00:09:26,072
and therefore the transistor

238
00:09:26,272 --> 00:09:27,297
conducts

239
00:09:27,497 --> 00:09:29,472
and the resistor is active,

240
00:09:29,672 --> 00:09:31,434
we must have here

241
00:09:31,634 --> 00:09:33,947
the value 1 since there is no small circle.

242
00:09:34,147 --> 00:09:37,147
We must have here the value 0

243
00:09:37,347 --> 00:09:39,547
where there must be a small circle.

244
00:09:40,622 --> 00:09:42,922
This value 1 here

245
00:09:43,409 --> 00:09:45,759
corresponds to PORT.

246
00:09:46,122 --> 00:09:48,722
This value 0 here

247
00:09:48,934 --> 00:09:51,372
corresponds to the DDR.

248
00:09:51,859 --> 00:09:53,422
So we are well

249
00:09:53,622 --> 00:09:55,872
in the logic I have just explained.

250
00:09:56,072 --> 00:09:58,772
When DDR

251
00:09:58,972 --> 00:10:01,097
the corresponding bit is 0

252
00:10:01,297 --> 00:10:03,672
and that the PORT bit

253
00:10:03,859 --> 00:10:05,647
corresponding is at 1,

254
00:10:05,847 --> 00:10:07,672
these two conditions,

255
00:10:07,872 --> 00:10:10,209
we have  (INAUDIBLE)triggers

256
00:10:10,409 --> 00:10:12,872
the intrlocking of our resistance

257
00:10:13,072 --> 00:10:14,897
of pull-up.

258
00:10:16,709 --> 00:10:18,547
Another micro-controller,

259
00:10:18,747 --> 00:10:20,984
a different way

260
00:10:21,184 --> 00:10:23,409
to manage the resistors.

261
00:10:23,609 --> 00:10:26,297
The MSP430, offers

262
00:10:27,159 --> 00:10:29,422
pull-up and pull-down

263
00:10:29,622 --> 00:10:31,172
on each leg.

264
00:10:31,959 --> 00:10:33,384
It's new.

265
00:10:33,834 --> 00:10:35,772
It is interesting in some cases.

266
00:10:35,972 --> 00:10:37,909
It is true that we
use much more often

267
00:10:38,084 --> 00:10:39,484
the pull-up as the pull-down

268
00:10:39,659 --> 00:10:41,397
but there are certainly applications

269
00:10:41,597 --> 00:10:43,409
interesting for the pull-down.

270
00:10:43,822 --> 00:10:46,559
In this case, an additional register,

271
00:10:46,759 --> 00:10:49,347
a special register was used.

272
00:10:49,547 --> 00:10:52,897
It has the particular name of REN

273
00:10:53,097 --> 00:10:53,984
which means

274
00:10:54,522 --> 00:10:57,184
Resistor Enable.

275
00:11:00,059 --> 00:11:01,559
So, interlocking

276
00:11:01,734 --> 00:11:03,247
of the resistance.

277
00:11:03,922 --> 00:11:07,022
And when we decided

278
00:11:07,222 --> 00:11:09,359
to interlock the resistor,

279
00:11:09,547 --> 00:11:12,159
we choose if it is a pull-up

280
00:11:12,947 --> 00:11:14,559
or a pull-down

281
00:11:14,759 --> 00:11:17,634
with the value of OUT.

282
00:11:18,034 --> 00:11:20,183
So I remind you in this table,

283
00:11:20,383 --> 00:11:22,058
when Dir is at 0,

284
00:11:22,246 --> 00:11:24,021
We always have an entrance.

285
00:11:24,221 --> 00:11:27,221
When Dir is at 1,
we always have an output.

286
00:11:27,421 --> 00:11:30,421
When it is an output, it can be at 0

287
00:11:30,683 --> 00:11:32,246
or at 1

288
00:11:32,796 --> 00:11:35,496
according to the OUT, nothing has changed.

289
00:11:35,696 --> 00:11:36,921
However,

290
00:11:37,121 --> 00:11:40,783
the input is at high impedance
and in the normal state

291
00:11:40,983 --> 00:11:42,758
when the OUT is 0

292
00:11:42,958 --> 00:11:45,471
and that the REN is also at 0,

293
00:11:45,671 --> 00:11:47,958
on the other hand,

294
00:11:48,158 --> 00:11:50,308
one or the other of the resistors

295
00:11:50,508 --> 00:11:52,658
with the REN to 1.

296
00:11:52,858 --> 00:11:54,708
This will be a pull-up

297
00:11:54,908 --> 00:11:56,246
with the 1,

298
00:11:56,446 --> 00:11:58,971
a pull-down with the 0.

299
00:11:59,171 --> 00:12:01,071
I would caution you

300
00:12:01,271 --> 00:12:03,558
if values ​​that are different

301
00:12:03,746 --> 00:12:04,671
of those

302
00:12:04,871 --> 00:12:07,083
cited in this sort of truth table

303
00:12:07,258 --> 00:12:08,633
that I have just drawn.

304
00:12:08,833 --> 00:12:10,133
Let's take an example .

305
00:12:10,333 --> 00:12:12,633
I did not mention the case
where we would have a 1

306
00:12:12,833 --> 00:12:16,008
on the Resistor Enable and a 1 on the Dir.

307
00:12:16,558 --> 00:12:19,433
And what will happen,
I can not give you the answer.

308
00:12:19,621 --> 00:12:22,196
The answer can be found in
the manufacturer's documentation.

309
00:12:22,396 --> 00:12:25,096
It will vary from one manufacturer
to another of course

310
00:12:25,296 --> 00:12:27,446
But be extremely careful

311
00:12:27,646 --> 00:12:30,533
To use the modes that
are provided by the manufacturer.

312
00:12:30,733 --> 00:12:33,208
Obviously, all this is described in

313
00:12:33,383 --> 00:12:35,308
the documents that
the manufacturers give us

314
00:12:35,508 --> 00:12:37,621
and which describe with great precision

315
00:12:37,821 --> 00:12:40,108
but in a very large number of pages

316
00:12:40,571 --> 00:12:43,358
the exact operation of all parts

317
00:12:43,558 --> 00:12:45,071
of micro-controllers.

318
00:12:45,758 --> 00:12:47,258
Let's take an example .

319
00:12:47,721 --> 00:12:49,971
In fact, we have already seen this program

320
00:12:50,171 --> 00:12:51,408
but there were 2 lines

321
00:12:51,608 --> 00:12:53,983
which had not been very clearly explained.

322
00:12:54,271 --> 00:12:56,858
Let us first read the second.

323
00:12:57,033 --> 00:12:59,421
Here in the register REN,

324
00:12:59,621 --> 00:13:02,046
I will activate the bit 2

325
00:13:02,246 --> 00:13:03,433
and bit 3.

326
00:13:03,633 --> 00:13:05,721
So I will interlock

327
00:13:05,921 --> 00:13:07,096
the resistors

328
00:13:07,296 --> 00:13:09,521
Now I decide by acting

329
00:13:09,921 --> 00:13:11,846
with a 7 bits

330
00:13:12,046 --> 00:13:14,671
also on bit 2 and on bit 3

331
00:13:14,871 --> 00:13:17,758
to select pull-up type resistors.

332
00:13:18,633 --> 00:13:20,546
Can't the Arduino

333
00:13:20,746 --> 00:13:23,021
not solve our problem?

334
00:13:23,221 --> 00:13:25,146
In a certain sense yes

335
00:13:25,346 --> 00:13:27,233
since the primitive

336
00:13:27,408 --> 00:13:30,296
that the pinMode function we know

337
00:13:30,721 --> 00:13:32,708
does not only allow

338
00:13:32,871 --> 00:13:35,471
a leg in the OUTPUT

339
00:13:35,671 --> 00:13:37,546
Or a leg on the input.

340
00:13:37,746 --> 00:13:40,258
But I tell you today,

341
00:13:40,458 --> 00:13:42,683
it is also possible to set it to the mode

342
00:13:42,871 --> 00:13:45,358
INPUT_PULLUP, that is, an input

343
00:13:45,558 --> 00:13:47,846
with a return resistor upwards.

344
00:13:48,071 --> 00:13:51,333
Unfortunately, they did not
anticipate the pull-down resistance.

345
00:13:51,533 --> 00:13:52,358
So,

346
00:13:52,558 --> 00:13:54,771
this line will work perfectly well

347
00:13:54,971 --> 00:13:56,621
on an AVR of Atmail,

348
00:13:56,821 --> 00:14:00,583
on an MSP430 with
the environment (INAUDIBLE)

349
00:14:00,783 --> 00:14:02,808
but we can not

350
00:14:03,033 --> 00:14:04,808
use the pull-down

351
00:14:05,008 --> 00:14:08,008
which is yet physically
available on an MSP430.

352
00:14:08,208 --> 00:14:09,708
And it's still interesting.

353
00:14:09,908 --> 00:14:11,896
This allows you to have a syntax that

354
00:14:12,183 --> 00:14:14,771
works on all micro-controllers

355
00:14:14,958 --> 00:14:16,733
which have resistors

356
00:14:16,933 --> 00:14:18,483
of recall at the top

357
00:14:18,683 --> 00:14:20,596
of the pull-up resistance.

358
00:14:20,983 --> 00:14:22,571
In summary

359
00:14:22,771 --> 00:14:25,446
we have just seen
that the pull resistances

360
00:14:25,646 --> 00:14:27,071
are essential

361
00:14:27,271 --> 00:14:30,308
whenever a leg is likely to be in the air.

362
00:14:31,058 --> 00:14:33,971
We have also seen that
many micro-controllers

363
00:14:34,171 --> 00:14:36,295
integrates these draw resistors

364
00:14:36,469 --> 00:14:38,420
within the integrated circuit.

365
00:14:38,620 --> 00:14:41,383
And we also noted that each manufacturer

366
00:14:41,583 --> 00:14:43,895
proposes its own implementation

367
00:14:44,095 --> 00:14:46,858
for these pull-up mechanisms

368
00:14:47,058 --> 00:14:48,833
and possibly pull-down.

