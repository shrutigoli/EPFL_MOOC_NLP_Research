1
00:00:00,000 --> 00:00:04,740
Hello, welcome to the MOOC:
Understanding Micro-controllers.

2
00:00:04,740 --> 00:00:07,316
I introduce to you Professor
Jean-Daniel Nicoud.

3
00:00:07,316 --> 00:00:09,412
>> And I'm with Pierre-Yves Rochat, we

4
00:00:09,412 --> 00:00:12,610
are here at the Federal Polytechnic
School of Lausanne.

5
00:00:12,610 --> 00:00:15,496
>> More precisely, we are at the Faculty

6
00:00:15,496 --> 00:00:19,844
of Computer Science and Communication
in the Bolo Museum room.

7
00:00:19,844 --> 00:00:25,080
This museum shows the history
and evolution of computer Science.

8
00:00:25,080 --> 00:00:28,380
>> Students Generations of FPSL learned

9
00:00:28,380 --> 00:00:31,910
the programming and
the interfaces with this equipment.

10
00:00:31,910 --> 00:00:36,656
A Smaky in network to edit programs, a

11
00:00:36,656 --> 00:00:42,002
Dauphin to run them, and
logidules to wire the inputs and

12
00:00:42,002 --> 00:00:46,910
outputs, and understand the
constraints of programming in real-time.

13
00:00:46,910 --> 00:00:52,310
The technologies have changed,
but not the educational needs.

14
00:00:52,310 --> 00:00:55,750
The Dolphin became a microcontroller board,

15
00:00:55,750 --> 00:00:59,290
and the logidules,
breadboard and grove module.

16
00:00:59,290 --> 00:01:00,826
>> If you are registered to our

17
00:01:00,826 --> 00:01:04,650
MOOC that means you wish to
understand the microcontrollers.

18
00:01:04,650 --> 00:01:07,431
However, this field is exactly on

19
00:01:07,431 --> 00:01:12,010
the border between electronics
and computer science.

20
00:01:12,010 --> 00:01:14,620
Take for example this display.

21
00:01:14,620 --> 00:01:18,670
You can see that it is composed of
electronic components,

22
00:01:18,670 --> 00:01:23,130
light-emitting diodes, transistors,
resistors, integrated circuits.

23
00:01:23,130 --> 00:01:28,360
It was necessary to assemble them, weld them,
it is necessary to be a little bit electronics.

24
00:01:28,360 --> 00:01:33,342
>> And it must also be computer scientist
to program the sequence

25
00:01:33,342 --> 00:01:38,740
of ignition and take account of
real time so that it does not blink.

26
00:01:38,740 --> 00:01:39,594
>> Let's be clear.

27
00:01:39,594 --> 00:01:43,140
We don't have the ambition to make you
electricians.

28
00:01:43,140 --> 00:01:47,115
But we will, during the first
week of MOOC, give

29
00:01:47,115 --> 00:01:51,100
some reminders to those who are already
familiar with this field.

30
00:01:51,100 --> 00:01:55,720
For the others, our explanation
will go maybe a little too fast.

31
00:01:55,720 --> 00:01:57,524
But do not give up.

32
00:01:57,524 --> 00:02:00,968
In fact, you can continue to learn the

33
00:02:00,968 --> 00:02:05,590
microcontrollers, because the important
thing, is to know how to program them.

34
00:02:05,590 --> 00:02:10,326
>> Understanding microcontrollers
is first being comfortable with

35
00:02:10,326 --> 00:02:14,710
the instructions, the manipulation
of variables and inputs and outputs.

36
00:02:14,710 --> 00:02:17,634
It also understanding
the internal architecture

37
00:02:17,634 --> 00:02:20,517
of the microcontroller, very rich,
and know

38
00:02:20,517 --> 00:02:23,950
what takes time, and space in memory.

39
00:02:23,950 --> 00:02:28,330
We are close to the assembler with
more comfortable notations.

40
00:02:28,330 --> 00:02:33,332
For those who have learned C with Python,
or C ++, it will be easier, but

41
00:02:33,332 --> 00:02:37,253
the mindset is rather different
when we works

42
00:02:37,253 --> 00:02:40,460
with equipment, and not simply on screen.

43
00:02:40,460 --> 00:02:42,332
>> Those who are familiar with

44
00:02:42,332 --> 00:02:46,060
programming will obviously have more ease.

45
00:02:46,060 --> 00:02:48,946
But we want to offer you

46
00:02:48,946 --> 00:02:52,890
progressive exercises that
are accessible even to beginners.

47
00:02:52,890 --> 00:02:56,202
Do you think you can imagine
being able to learn

48
00:02:56,202 --> 00:03:00,010
PC programming without
a computer available?

49
00:03:00,010 --> 00:03:02,890
Well in the same way,
it is not possible to

50
00:03:02,890 --> 00:03:05,582
truly learn microcontrollers

51
00:03:05,582 --> 00:03:08,490
programming without practice.

52
00:03:08,490 --> 00:03:11,590
>> The Arduino environment is well known.

53
00:03:11,590 --> 00:03:16,602
With Launchpad,
we'll use it for exercices.

54
00:03:16,602 --> 00:03:19,144
The programming will be done on PC, Mac

55
00:03:19,144 --> 00:03:22,260
or Unix, and the environment
is very friendly.

56
00:03:22,260 --> 00:03:23,888
>> But we must also of course

57
00:03:23,888 --> 00:03:27,570
connect the inputs and outputs of
the microcontroller.

58
00:03:27,570 --> 00:03:33,188
A breadboard lends itself quite well to
this type of installation, but you have

59
00:03:33,188 --> 00:03:35,795
to wire it properly if you want it to be

60
00:03:35,795 --> 00:03:40,650
reliable, and only the electronics
will know how to do it properly.

61
00:03:40,650 --> 00:03:46,824
>> To ensure this reliability,
we have developed a shield called LAN

62
00:03:46,824 --> 00:03:53,312
CeeBot that will allow you to focus
on the functionality

63
00:03:53,312 --> 00:03:59,390
to program in C, and not on a wiring to
be programmed with Arduino.

64
00:03:59,390 --> 00:04:06,130
>> The same exercises can be done
with the MSP430 Launchpad,

65
00:04:06,130 --> 00:04:12,126
And an equivalent CeeBot
LAN module may also be used.

66
00:04:12,126 --> 00:04:17,102
>> To give you attestations and
notes that have value,

67
00:04:17,102 --> 00:04:21,320
we had to be able to check at distance

68
00:04:21,320 --> 00:04:26,010
the programs and homeworks
you are going to perform.

69
00:04:26,010 --> 00:04:28,080
>> This is the reason why we

70
00:04:28,080 --> 00:04:31,420
have developed this automatic
correction system.

71
00:04:31,420 --> 00:04:33,604
There are two microcontrollers.

72
00:04:33,604 --> 00:04:37,300
You will drop your exercises on
the Coursera servers

73
00:04:37,300 --> 00:04:42,610
our system will resume your programs
and will compile them.

74
00:04:42,610 --> 00:04:46,310
Your program will run
on this microcontroller.

75
00:04:46,310 --> 00:04:51,328
This second microcontroller will observe
what happens, will work

76
00:04:51,328 --> 00:04:56,318
as if it were the user of your setup,
will try to judge what

77
00:04:56,318 --> 00:05:00,974
happened, will try to give you
a comment if it did

78
00:05:00,974 --> 00:05:05,800
not work properly, and in any
case, will give you a note.

79
00:05:05,800 --> 00:05:09,050
>> We invite you to watch the videos of
the MOOC.

80
00:05:09,050 --> 00:05:12,926
They are not perfect, we are not
professionals.

81
00:05:12,926 --> 00:05:16,770
The first week, you will have
electronic reminders.

82
00:05:16,770 --> 00:05:20,298
Some notions are
more important than others.

83
00:05:20,298 --> 00:05:25,676
You will, in time, complete your notions
by looking on the Internet.

84
00:05:25,676 --> 00:05:30,510
>> And remember that the MOOC,
is not just videos.

85
00:05:30,510 --> 00:05:35,761
Each week, we'll give you a page
with the supplements

86
00:05:35,761 --> 00:05:40,490
course, with many links for documents
and videos.

87
00:05:40,490 --> 00:05:45,865
You will also have weekly
free exercises that is to say,

88
00:05:45,865 --> 00:05:49,349
exercises that we will submit to you,
but we will

89
00:05:49,349 --> 00:05:54,451
also give you the solutions that will
allow you to understand

90
00:05:54,451 --> 00:05:58,010
the exercise to the end,
even if you have a little trouble.

91
00:05:58,010 --> 00:06:00,243
There will of course also have programming

92
00:06:00,243 --> 00:06:03,631
homework with the corrector we

93
00:06:03,631 --> 00:06:07,076
just spoke of now, and then finally, you

94
00:06:07,076 --> 00:06:11,240
can tackle the assessment of every week.

95
00:06:11,240 --> 00:06:14,878
>> The course will end
at the end of June, but the

96
00:06:14,878 --> 00:06:20,430
videos, documents, exercises will
remain online for several months.

97
00:06:20,430 --> 00:06:23,150
We encourage you to submite every week

98
00:06:23,150 --> 00:06:25,980
exercises and programming homework.

99
00:06:25,980 --> 00:06:31,287
You will thus earn points and
at the end of the course, if you have

100
00:06:31,287 --> 00:06:36,950
obtained 70% of maximum points,
you will get a certificate.

101
00:06:36,950 --> 00:06:42,240
Even if you got 90%,
then you will have a mention.

102
00:06:42,240 --> 00:06:46,454
But of course, videos and all
the course material

103
00:06:46,454 --> 00:06:51,345
will be available some months after
the end of the course.

104
00:06:51,345 --> 00:06:55,860
>> There is of course a forum for
feedback and questions.

105
00:06:55,860 --> 00:06:59,940
Use it in ways that benefit everyone.

106
00:06:59,940 --> 00:07:05,232
>> And so we wish you a good course.

107
00:07:05,232 --> 00:07:06,710
>> Good course.

