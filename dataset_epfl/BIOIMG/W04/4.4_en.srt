1
00:00:04,495 --> 00:00:09,603
Let's think about what kind of algorithm
is adapted to 1971's computing power.

2
00:00:09,873 --> 00:00:14,876
We first need to imagine
what is 1970's computing power.

3
00:00:15,412 --> 00:00:19,303
Take this. This is what we all, 
pretty much all of us,

4
00:00:19,303 --> 00:00:22,169
in one form or another 
have a smartphone

5
00:00:22,169 --> 00:00:24,392
or we have seen smartphones.

6
00:00:25,327 --> 00:00:32,017
The smartphones are so ubiquitous

7
00:00:32,017 --> 00:00:34,249
that we no longer think 
on what they are capable of.

8
00:00:34,249 --> 00:00:36,028
Imagine if you have a camera here.

9
00:00:36,028 --> 00:00:38,509
The camera has face recognition.

10
00:00:38,509 --> 00:00:41,138
It tells you when you take a picture
where's the face of the person.

11
00:00:41,138 --> 00:00:42,799
It can recognize faces.

12
00:00:43,129 --> 00:00:45,218
I sometimes play with chess.

13
00:00:45,538 --> 00:00:47,268
25 years ago, I used to play,

14
00:00:47,268 --> 00:00:51,654
beat almost any of the computers 
that play chess

15
00:00:51,654 --> 00:00:54,242
that were
with reasonable pricing available.

16
00:00:54,242 --> 00:00:57,145
This thing, I have to put it 
in a very low level,

17
00:00:57,145 --> 00:00:58,502
then I can still beat it.

18
00:00:58,502 --> 00:01:00,143
It's very powerful.

19
00:01:00,143 --> 00:01:04,465
By 1970 standard, 
this is a super computer.

20
00:01:04,935 --> 00:01:08,414
We've had to deal with the situation
in the 1970s

21
00:01:08,414 --> 00:01:12,533
that the computing power
was much more limited;

22
00:01:12,533 --> 00:01:14,263
memory was limited.

23
00:01:14,263 --> 00:01:19,803
I remember my first computer 
had a hard disk of 8 megabytes.

24
00:01:20,223 --> 00:01:21,539
Think about that.

25
00:01:21,539 --> 00:01:24,533
Now it's... today we would have it
in terabytes.

26
00:01:24,628 --> 00:01:28,621
So this is a super computer
by 1970 standard.

27
00:01:28,621 --> 00:01:32,739
We're looking for an algorithm
that a computer at the time

28
00:01:32,739 --> 00:01:34,696
could reasonably handle.

29
00:01:36,536 --> 00:01:41,214
The question here to you is,
what mathematical operations

30
00:01:41,214 --> 00:01:46,494
or what are the operations
that the computer does fast?

31
00:01:48,016 --> 00:01:49,470
Think about this for a moment:

32
00:01:49,988 --> 00:01:54,112
which operation is the fastest
in a computer?

33
00:01:57,241 --> 00:01:58,916
Did you guess it?

34
00:01:58,916 --> 00:02:00,297
Do you have some ideas?

35
00:02:00,297 --> 00:02:02,305
Well, let's discuss this.

36
00:02:02,949 --> 00:02:06,931
The simplest, fastest operation 
that you can do in a computer is

37
00:02:06,931 --> 00:02:08,473
writing to memory.

38
00:02:09,813 --> 00:02:13,019
The second fastest operation
is addition.

39
00:02:15,320 --> 00:02:19,345
So if we can come up with an algorithm
that writes to memory

40
00:02:19,715 --> 00:02:21,124
and adds numbers,

41
00:02:21,524 --> 00:02:29,084
then we're using the fastest operations
that our computer can provide in 1970.

42
00:02:30,349 --> 00:02:33,739
And this is actually 
the underlying principle

43
00:02:33,739 --> 00:02:36,409
of the back reconstruction principle.

44
00:02:37,037 --> 00:02:40,069
What we are doing with backprojection,

45
00:02:40,069 --> 00:02:41,451
and we'll just take you an example.

46
00:02:41,513 --> 00:02:46,978
Let's say we've collected a projection
in this direction, I'd add one pixel

47
00:02:46,978 --> 00:02:52,014
and we've had recorded in a computer
a beam intensity of 1,

48
00:02:52,114 --> 00:02:54,366
or a detection of 1.

49
00:02:55,835 --> 00:02:58,195
Now we write into memory.

50
00:02:58,195 --> 00:03:01,740
We'll write, along this direction
into the memory, we'll write "1s."

51
00:03:02,803 --> 00:03:06,951
Now we will record 
a next projection orientation

52
00:03:06,951 --> 00:03:08,623
and let's say it's here.

53
00:03:08,730 --> 00:03:10,411
We'll again, in this direction

54
00:03:10,411 --> 00:03:12,881
that we'll take the intensity 
we've recorded here,

55
00:03:12,881 --> 00:03:15,341
we'll write 1s in this direction,

56
00:03:15,341 --> 00:03:18,280
and where we have non-zeros, we'll add.

57
00:03:18,280 --> 00:03:21,197
So we'll start up with zeros, 
we'll write the 1s in here,

58
00:03:21,197 --> 00:03:25,255
and now we'll add the next intensity
on here, this is one.

59
00:03:25,255 --> 00:03:27,895
So here where they intersect,
we'll have 2.

60
00:03:28,307 --> 00:03:30,693
You can do this example of course also
with 1 and 3,

61
00:03:30,693 --> 00:03:33,438
then you would have 4 here,
and 3 is here.

62
00:03:33,438 --> 00:03:34,888
It's the same principle.

63
00:03:35,508 --> 00:03:39,571
So we sum the values in overlapping pixels
and the rest we write in there,

64
00:03:39,596 --> 00:03:42,771
and that is for two orientations here.

65
00:03:44,970 --> 00:03:46,907
We do this for multiple orientations

66
00:03:46,907 --> 00:03:51,749
we can test, take any orientation
in <i>x'</i>, <i>y'</i>

67
00:03:51,749 --> 00:03:58,038
and this is just showing here 
the function--the projection here.

68
00:03:58,038 --> 00:04:00,717
What we're looking at here 
is just a rotation

69
00:04:00,717 --> 00:04:04,629
of the coordinate system that we have
with the angle fader,

70
00:04:04,629 --> 00:04:08,659
That's what we had in the sinogram,
so we're rotating the angles here.

71
00:04:08,754 --> 00:04:11,825
We'll just rotate, we'll do this.
We'll rotate. We'll do that.

72
00:04:12,985 --> 00:04:16,365
Now, instead of going through 
the mathematical elaborative way

73
00:04:16,365 --> 00:04:19,027
of working out the maths here,

74
00:04:19,027 --> 00:04:25,184
I want to illustrate what's happening
with gray shades for a point-like object.

75
00:04:26,215 --> 00:04:28,226
Let's look at two projections.

76
00:04:28,496 --> 00:04:29,802
We have two projections.

77
00:04:29,932 --> 00:04:33,723
So we have taken the computer,
we filled in the numbers,

78
00:04:34,392 --> 00:04:37,302
give you this projection;
we filled in numbers with this projection,

79
00:04:37,302 --> 00:04:38,410
the rest is zero.

80
00:04:38,410 --> 00:04:40,576
Here where we overlap, we have added,

81
00:04:40,576 --> 00:04:42,294
so this gets a bit darker.

82
00:04:43,151 --> 00:04:45,007
Let's take four projections.

83
00:04:45,665 --> 00:04:49,106
When we have four projections,
one... two... three... four...

84
00:04:49,552 --> 00:04:53,065
Again, we take the same intensity
because it's a point-wise object

85
00:04:53,065 --> 00:04:57,319
and we're starting to add the numbers 
together here where they overlap

86
00:04:57,319 --> 00:05:00,501
so it gets progressively darker, 
the grayscale.

87
00:05:01,031 --> 00:05:03,219
Now we'll look at eight projections.

88
00:05:05,035 --> 00:05:07,943
This is what we're getting 
with eight projections.

89
00:05:08,293 --> 00:05:13,188
The overlap here, 
it's getting darker and darker.

90
00:05:13,188 --> 00:05:15,501
Here, we still have the same intensity
as here.

91
00:05:16,651 --> 00:05:19,151
And now with 16 projections,

92
00:05:20,771 --> 00:05:23,479
we're starting to see
that we have an object here.

93
00:05:23,479 --> 00:05:26,077
This is where the object,
the original object was.

94
00:05:26,077 --> 00:05:29,218
We can start to see 
that there was some intensity there.

95
00:05:29,627 --> 00:05:32,547
This is with 16 projections.

96
00:05:34,057 --> 00:05:36,461
If we look at the reconstruction
in real time,

97
00:05:36,461 --> 00:05:39,391
this is an example here 
from a standard phantom.

98
00:05:39,485 --> 00:05:44,142
The first 60 projections,
the next 60 projections and so forth,

99
00:05:44,142 --> 00:05:46,483
and here, this is 180 projections here,

100
00:05:46,556 --> 00:05:49,502
the backreconstruction is complete.

101
00:05:49,568 --> 00:05:54,024
We can see here this so-called 
<i>Shepp-Logan phantom</i> quite nicely.

102
00:05:55,251 --> 00:06:01,145
One thing that we have a problem here
is we said we have point-like object.

103
00:06:01,145 --> 00:06:04,015
So if we have a point-like object,
if we sum it together,

104
00:06:04,015 --> 00:06:06,799
we should in here have 
a point-like object reconstruction.

105
00:06:06,894 --> 00:06:12,685
As we can see here, it gets very blurry
with the number of projections.

106
00:06:13,272 --> 00:06:16,925
This is a problem I want to address
in the next few minutes.

107
00:06:18,585 --> 00:06:22,520
Why does simple Backprojection,
the algorithm that we've just discussed

108
00:06:22,520 --> 00:06:24,517
have poor spatial resolution?

109
00:06:24,977 --> 00:06:27,697
We take with many backprojections,
a point-wise object

110
00:06:27,776 --> 00:06:31,276
we are getting an intensity 
that looks like this.

111
00:06:32,036 --> 00:06:35,680
And we can actually show that
the reconstruction at this point-object

112
00:06:35,680 --> 00:06:38,236
falls of with <i>1 / r</i>.

113
00:06:38,236 --> 00:06:40,316
So instead of a point-object,

114
00:06:40,316 --> 00:06:44,137
we're getting an object
whose intensity falls of with <i>1 / r</i>.

115
00:06:45,476 --> 00:06:47,056
And the question is "why?"

116
00:06:47,056 --> 00:06:48,657
Why is this so?

117
00:06:50,349 --> 00:06:57,358
We'll take the situation here
and we'll look at this.

118
00:06:58,568 --> 00:07:00,668
I'm bringing here a intuitive argument.

119
00:07:00,668 --> 00:07:03,449
There's a mathematical proof
of this principle.

120
00:07:03,449 --> 00:07:05,179
We can show this mathematically.

121
00:07:05,179 --> 00:07:07,472
We have this in the exercises.

122
00:07:08,192 --> 00:07:11,664
Here, we're going to look at
the analogy

123
00:07:11,664 --> 00:07:15,469
of the light intensity.

124
00:07:15,869 --> 00:07:20,252
So we are, when we look at a candle,
from very close, the candle is bright.

125
00:07:20,717 --> 00:07:23,715
Overlooking it from a distance,
the candle is weak,

126
00:07:23,715 --> 00:07:25,873
we can barely see the candle.

127
00:07:26,493 --> 00:07:29,007
And this analogy I want to use here.

128
00:07:29,437 --> 00:07:33,742
We're going to look at the coordinates--
cylindrical coordinates here.

129
00:07:33,742 --> 00:07:37,303
We have <i>ρ</i>, we have <i>dρ</i> here.

130
00:07:37,793 --> 00:07:40,655
We have a <i>dφ</i>, 
an opening of the angle.

131
00:07:41,105 --> 00:07:44,295
And so this dimension here is <i>ρ dφ</i>.

132
00:07:45,884 --> 00:07:50,834
This is giving us the area 
of our voxel here at this point.

133
00:07:50,945 --> 00:07:56,360
The area of the voxel is <i>dx dy</i>;
that's the infinite dismal area, <i>dA</i>.

134
00:07:56,475 --> 00:08:03,724
That's <i>ρ sin(dφ) dρ</i>
or this is <i>ρ dφ dρ</i> that's this times this.

135
00:08:03,724 --> 00:08:06,183
That's our voxel science here.

136
00:08:07,625 --> 00:08:11,616
Now we can take this,
so we're taking this approach here

137
00:08:11,616 --> 00:08:13,360
and we'll see a reconstruction.

138
00:08:13,360 --> 00:08:14,957
We have lights,

139
00:08:15,927 --> 00:08:17,874
we produce a projection.

140
00:08:17,874 --> 00:08:21,415
We have the incident x-rays.
This gives us the projection here.

141
00:08:22,669 --> 00:08:25,223
For the reconstruction, we do the inverse.

142
00:08:25,223 --> 00:08:27,092
We do shine light here again.

143
00:08:27,092 --> 00:08:28,702
We have the second projection here,

144
00:08:28,702 --> 00:08:30,903
so we have collected 
these two projections.

145
00:08:30,903 --> 00:08:33,455
So, to recap: x-rays come in,

146
00:08:33,455 --> 00:08:35,414
we collect the projection 
with this orientation,

147
00:08:35,414 --> 00:08:38,145
x-rays converse direction,
we do a projection--

148
00:08:38,145 --> 00:08:40,414
collect the projection here
with the intensity.

149
00:08:40,446 --> 00:08:42,572
And now for the reconstruction

150
00:08:42,572 --> 00:08:44,525
what we are doing is the opposite.

151
00:08:44,525 --> 00:08:49,632
We're writing the intensity 
that we saw here into the image.

152
00:08:49,632 --> 00:08:53,464
So we are backprojecting the light,
if you will.

153
00:08:53,464 --> 00:08:57,055
We're doing the inverse operation
in this direction here.

154
00:08:57,055 --> 00:08:58,885
This is the other direction,

155
00:08:59,205 --> 00:09:00,924
and we're adding this together.

156
00:09:01,447 --> 00:09:05,900
So for the image reconstruction 
or the measurement,

157
00:09:05,900 --> 00:09:08,438
x-rays come in, 
this gives us a projection,

158
00:09:08,438 --> 00:09:10,660
x-rays come in, this gives us a projection.

159
00:09:10,660 --> 00:09:13,127
And then in a computer, we do the reverse.

160
00:09:13,138 --> 00:09:16,649
We emit the x-rays 
in the computer, so to speak,

161
00:09:16,989 --> 00:09:19,490
in the direction of this orientation,

162
00:09:19,490 --> 00:09:23,531
we fill it in and we do it here
for this angle here.

163
00:09:23,531 --> 00:09:25,490
We're sort of reverting the process.

164
00:09:25,490 --> 00:09:29,964
It's like we are shining back 
to our original object, the intensity

165
00:09:29,964 --> 00:09:31,674
with which we have seen the object.

166
00:09:32,381 --> 00:09:38,230
So what we are having now is
we have a certain angle <i>dφ</i>,

167
00:09:38,480 --> 00:09:43,246
we have the area here
which is proportional to <i>ρ</i>,

168
00:09:43,906 --> 00:09:47,071
to the distance that we are 
from the point-wise object.

169
00:09:47,591 --> 00:09:49,364
Now we've said here in this process

170
00:09:49,364 --> 00:09:51,222
that reconstructing with backprojection

171
00:09:51,222 --> 00:09:55,009
is like we are inverting the process
of emitting light,

172
00:09:55,009 --> 00:09:58,012
so we have instead of a candle,
shining out light in distance,

173
00:09:58,012 --> 00:10:01,497
we're shining the light back
onto our object.

174
00:10:01,497 --> 00:10:07,010
So we're shining this light, the x-rays--
that's also light--

175
00:10:08,320 --> 00:10:10,060
all according to the angle back in here.

176
00:10:10,060 --> 00:10:15,431
If we have a certain number of photons 
counted here, a certain intensity,

177
00:10:15,431 --> 00:10:18,542
for a given <i>dφ</i>, 
this intensity is the same.

178
00:10:18,542 --> 00:10:22,562
But the area is proportional to <i>ρ</i>.

179
00:10:22,562 --> 00:10:26,691
In the end we reconstruct 
the image with constant pixel size.

180
00:10:27,281 --> 00:10:28,659
Our pixel size,

181
00:10:28,659 --> 00:10:34,520
the number of back projected intensities
for a given pixel size

182
00:10:34,520 --> 00:10:37,259
is inversely constant with <i>dφ</i>

183
00:10:37,309 --> 00:10:42,015
but you want to keep 
the pixel size constant in <i>dA</i>,

184
00:10:42,015 --> 00:10:45,182
and since <i>dA</i> is proportional to <i>ρ</i>,

185
00:10:45,182 --> 00:10:50,123
then the number of rays 
that go through it decrease with <i>1 / ρ</i>.

186
00:10:50,699 --> 00:10:56,574
And that's the reason behind the fact
that a point-wise object

187
00:10:56,574 --> 00:10:59,023
is not reconstructed
into a point-wise object

188
00:10:59,023 --> 00:11:05,753
with simple backprojection upon an object
whose intensity falls off with <i>1 / r</i>.

189
00:11:07,284 --> 00:11:13,743
Now the question comes,
how can we maintain good image resolution?

190
00:11:15,284 --> 00:11:18,023
With simple back projection, to recap,

191
00:11:18,023 --> 00:11:21,223
with simple back projection,
our point object becomes something,

192
00:11:21,223 --> 00:11:23,622
that falls off relatively slowly.

193
00:11:25,796 --> 00:11:29,136
The trick here is to use
filtered backprojection,

194
00:11:29,136 --> 00:11:34,616
and the filtering that is done
is a mathematical operation.

195
00:11:34,776 --> 00:11:36,048
We'll take our object.

196
00:11:36,048 --> 00:11:39,497
Here it's supposed to be 
a point-wise object,

197
00:11:39,497 --> 00:11:41,757
the projection that we've measured here.

198
00:11:41,757 --> 00:11:47,180
We'll convolute it with a function
that has negative wings on the side

199
00:11:47,180 --> 00:11:49,143
and we're getting this projection.

200
00:11:49,143 --> 00:11:54,894
Then this is being backprojected
to form the final image.

201
00:11:56,636 --> 00:11:58,019
So what does this do?

202
00:11:58,019 --> 00:12:01,869
We have said a point object produces
in the reconstruction,

203
00:12:01,926 --> 00:12:04,013
produces wings that fall off with <i>1 / r</i>.

204
00:12:04,273 --> 00:12:07,697
We want the point object to be represented
by a point object.

205
00:12:07,697 --> 00:12:10,346
What we're doing is we're convoluting 
the measured projection

206
00:12:10,346 --> 00:12:14,977
with the function 
that has negative wings on the sides,

207
00:12:15,187 --> 00:12:17,276
that's this convolution operation here,

208
00:12:17,276 --> 00:12:19,258
we're getting this kind of projection.

209
00:12:20,308 --> 00:12:24,955
Now, let's think about here 
what are the consequences for the image.

210
00:12:26,509 --> 00:12:28,938
Are there any consequences 
for sensitivity?

211
00:12:29,748 --> 00:12:31,597
How about resolution?

212
00:12:33,193 --> 00:12:37,383
Well, resolution, if with this
we are getting back our point-wise object,

213
00:12:37,383 --> 00:12:38,933
the resolution improves.

214
00:12:39,443 --> 00:12:42,771
Beginning from point object
to a point object, so that's good.

215
00:12:42,771 --> 00:12:44,412
What about sensitivity?

216
00:12:44,792 --> 00:12:48,263
Remember backprojection is a process
where we add numbers.

217
00:12:48,793 --> 00:12:52,352
Now our projection here 
has negative tails on the sides.

218
00:12:52,742 --> 00:12:57,952
This reduces the number of additions
that we do in a computer,

219
00:12:57,952 --> 00:13:00,003
so it reduces the sensitivity.

220
00:13:00,472 --> 00:13:03,145
We're back to the old game
in my medical imaging.

221
00:13:03,145 --> 00:13:04,921
On one side, we have sensitivity,

222
00:13:04,921 --> 00:13:06,723
on the other side, we have resolution,

223
00:13:06,723 --> 00:13:09,502
and the two things 
are fighting against each other.

224
00:13:09,502 --> 00:13:12,742
So we are going to lose some sensitivity.

225
00:13:14,844 --> 00:13:19,021
Here's an original sinogram of an object.

226
00:13:19,021 --> 00:13:20,580
We just have a point-wise object.

227
00:13:20,580 --> 00:13:22,381
Here's the sinogram.

228
00:13:22,951 --> 00:13:24,698
Then we do the backprojections.

229
00:13:24,698 --> 00:13:26,819
In white are the negative intensities.

230
00:13:26,819 --> 00:13:31,156
This is one, two, eight, 32 and 64.

231
00:13:31,156 --> 00:13:34,112
And here, we're getting, very nicely,
from the backprojections,

232
00:13:34,112 --> 00:13:38,069
we're getting a nice definition
of our original object.

233
00:13:39,445 --> 00:13:41,717
Here's another filtered 
backprojection example.

234
00:13:41,717 --> 00:13:46,522
For larger object, 
we have two projections, four projections,

235
00:13:46,522 --> 00:13:47,863
eight projections, and so on.

236
00:13:47,863 --> 00:13:51,690
With 64 projects, 
we get a nice square phantom.

237
00:13:52,346 --> 00:13:55,313
If we don't do filtered backprojection,
this is this example here.

238
00:13:55,313 --> 00:13:58,685
This is what we would be getting.
So we are getting a blurry image.

239
00:13:59,295 --> 00:14:02,433
This is definitely not something
that we would want.

240
00:14:03,238 --> 00:14:05,590
To give you an example 
of a real-life image,

241
00:14:05,610 --> 00:14:09,229
this is a backprojected image 
of the abdomen, the thorax.

242
00:14:09,589 --> 00:14:15,177
We can start to see some organs in there
but this is really very blurry.

243
00:14:15,258 --> 00:14:17,448
Now, think what you're going to see next.

244
00:14:17,544 --> 00:14:21,691
It's the same image but now reconstructed
with filtered backprojection.

245
00:14:22,051 --> 00:14:24,390
And here it is. Same image.

246
00:14:24,790 --> 00:14:27,699
We get a much clearer depiction
of the internal structure,

247
00:14:27,699 --> 00:14:32,163
a much better resolution,
even though we sacrificed sensitivity.

248
00:14:32,163 --> 00:14:34,238
This image here has a lot of intensity.

249
00:14:34,238 --> 00:14:40,279
We've sacrificed it to gain resolution
and the anatomical detail.

250
00:14:41,937 --> 00:14:43,773
In this video as it loops through,

251
00:14:43,773 --> 00:14:46,146
you're seeing the reconstruction 
of the image

252
00:14:48,410 --> 00:14:50,351
through the process of backprojection.

253
00:14:50,537 --> 00:14:53,483
At the beginning we can hardly see
what the object is,

254
00:14:53,483 --> 00:14:56,774
and as it reconstructs,
we're seeing that it reconstructs

255
00:14:56,774 --> 00:15:03,197
into four different vials 
of different absorption that are depicted.

256
00:15:03,197 --> 00:15:09,044
So we can see the process here
as it loops through of the reconstruction,

257
00:15:09,044 --> 00:15:12,595
or filtered backprojection reconstruction.

258
00:15:13,763 --> 00:15:16,348
I'll show it here in individual slices.

259
00:15:16,348 --> 00:15:19,294
This is now an in vivo example
from the heart

260
00:15:19,600 --> 00:15:22,927
as we start out with one projection,
multiple projections,

261
00:15:23,012 --> 00:15:26,675
increase the number of projections,
we can still see not much.

262
00:15:27,234 --> 00:15:30,254
Now we're starting to guess
there's something in the center

263
00:15:30,254 --> 00:15:33,702
but still we cannot detect 
much of a structure.

264
00:15:33,702 --> 00:15:39,520
And as we come to the end,
we are seeing here the reconstruction.

265
00:15:39,520 --> 00:15:44,242
This is actually a specific scan 
of the heart.

266
00:15:45,202 --> 00:15:47,662
Now we'll take these eight images

267
00:15:47,662 --> 00:15:52,537
and here in this looping animation
we're seeing the same eight images

268
00:15:52,537 --> 00:15:54,450
in the process of reconstruction,

269
00:15:54,450 --> 00:15:57,958
and so we can visualize
how this process in the computer

270
00:15:57,958 --> 00:16:00,103
as we are continuously backprojecting

271
00:16:00,103 --> 00:16:06,463
how this summation of intensities produces
a picture here of an anatomical organ.

272
00:16:06,477 --> 00:16:13,188
Here we have 
the looping presentation of the vials

273
00:16:13,301 --> 00:16:15,740
filled with different substances.

274
00:16:17,671 --> 00:16:22,952
X-ray techniques. What we've seen is
once we see a Radon transform

275
00:16:22,952 --> 00:16:26,854
we can reconstruct the image 
using backprojection

276
00:16:26,854 --> 00:16:29,453
And this is essentially a technique
that's being used

277
00:16:29,453 --> 00:16:32,099
for all the x-ray techniques.

278
00:16:32,099 --> 00:16:34,230
It's the fundamental technique.

279
00:16:34,734 --> 00:16:37,559
Yet, we are also going to talk about MRI,

280
00:16:37,559 --> 00:16:39,596
and their major technique 
that's being used

281
00:16:39,596 --> 00:16:41,106
is Fourier transformation,

282
00:16:41,106 --> 00:16:42,972
and there is indeed 
a link between the two,

283
00:16:42,972 --> 00:16:46,157
and this is what I want 
to discuss here briefly.

284
00:16:48,536 --> 00:16:50,607
We have the reconstruction of an image.

285
00:16:50,622 --> 00:16:53,616
We have the image space
and the final image in CT.

286
00:16:53,616 --> 00:16:55,456
This is the acquired data.

287
00:16:57,283 --> 00:16:59,081
So this is the image space.

288
00:16:59,081 --> 00:17:02,352
Then in terms of Fourier language

289
00:17:02,352 --> 00:17:05,898
we have the Fourier space, or k-space,
or inverse space.

290
00:17:05,898 --> 00:17:08,785
There are other terminologies.

291
00:17:09,005 --> 00:17:11,277
In MRI, it uses k-space.

292
00:17:11,277 --> 00:17:13,143
This is acquired data in MRI.

293
00:17:13,143 --> 00:17:17,086
This is the Fourier transform 
of the object, the Fourier Space

294
00:17:17,086 --> 00:17:19,082
that has been acquired.

295
00:17:19,106 --> 00:17:21,676
In CT, we're directly acquiring the image.

296
00:17:22,163 --> 00:17:24,866
Now, let's take 
the <i>linear attenuation coefficient</i>.

297
00:17:24,866 --> 00:17:26,960
We'll do a Fourier transformation.

298
00:17:27,830 --> 00:17:30,850
And if we do a two-dimensional
Fourier transformation...

299
00:17:30,850 --> 00:17:33,703
So we're doing 
the Fourier tranformation of an object

300
00:17:33,703 --> 00:17:36,595
that's represented in real space,
that's what we know.

301
00:17:37,105 --> 00:17:39,985
We get into the Fourier space, or k-space,

302
00:17:39,985 --> 00:17:42,866
and there the object is represented
by the coordinates, <i>k_x</i> and <i>k_y</i>

303
00:17:42,866 --> 00:17:44,376
instead of <i>x</i> and <i>y</i>.

304
00:17:44,376 --> 00:17:46,663
Here's the Fourier transformation.

305
00:17:46,663 --> 00:17:49,945
We have just disregarded 
the normalization constants

306
00:17:49,964 --> 00:17:55,554
at the beginning
to illustrate the principle here.

307
00:17:55,697 --> 00:17:58,421
We can take 
the linear attenuation coefficient,

308
00:17:58,421 --> 00:18:01,688
fully transform it,
and we get a representation of the object.

309
00:18:03,757 --> 00:18:05,893
This at EPFL is dealt with,

310
00:18:05,893 --> 00:18:08,962
for the students with the course
<i>Signals and Systems</i>.

311
00:18:09,732 --> 00:18:12,982
Now, if we do the Inverse 
Fourier Transformation of this data,

312
00:18:13,962 --> 00:18:15,908
then we go obviously, come back

313
00:18:15,908 --> 00:18:22,423
to the linear attenuation coefficient
of the object.

314
00:18:23,408 --> 00:18:28,464
Let's say we have our object
in Fourier space, k-space,

315
00:18:28,464 --> 00:18:32,784
and now we set the k-space coordinate
along x to zero.

316
00:18:33,374 --> 00:18:35,274
Then we have this expression here,

317
00:18:35,274 --> 00:18:39,768
so <i>M 0</i> along <i>k_y</i> is this term here.

318
00:18:40,251 --> 00:18:42,960
Can you recognize what this is?

319
00:18:43,930 --> 00:18:46,294
If you look at this here very clearly,

320
00:18:46,294 --> 00:18:48,024
this is a projection.

321
00:18:48,024 --> 00:18:51,838
This is the Radon transform of <i>µ</i>,

322
00:18:51,838 --> 00:18:54,894
so this is the projection of <i>µ</i> onto <i>y</i>.

323
00:18:55,834 --> 00:18:59,263
This, what we're looking at here
is the Fourier transformation.

324
00:18:59,263 --> 00:19:03,814
If we do the Fourier transformation
of the Randon transform,

325
00:19:03,814 --> 00:19:05,857
we're getting one line in k-space.

326
00:19:06,927 --> 00:19:09,135
This is the <i>Central Slice Theorem</i>.

327
00:19:09,415 --> 00:19:12,123
Central because <i>k_x</i> is <i>0</i>.

328
00:19:13,005 --> 00:19:17,164
In principle, we can relate the data
that we have obtained with Radon tranform

329
00:19:17,164 --> 00:19:22,522
to something that we have acquired
in k-space, or Fourier space.

330
00:19:22,522 --> 00:19:25,547
and we could, in theory,
do Fourier transformation.

331
00:19:26,140 --> 00:19:28,498
And this in theory can be done.

332
00:19:30,243 --> 00:19:34,954
This however, in practice, 
leads to artifacts.

333
00:19:35,118 --> 00:19:38,227
This is the Shepp Logan Phantom in here
with [the ringing ] artifacts,

334
00:19:40,264 --> 00:19:44,410
and the question is 
to reconstruct the specter

335
00:19:44,539 --> 00:19:46,284
using Fourier transformation,

336
00:19:46,316 --> 00:19:50,630
but backprojection 
is still a dominant method

337
00:19:50,630 --> 00:19:54,286
of imagery reconstruction 
for x-ray based techniques

338
00:19:54,286 --> 00:19:56,614
that are also iterative algorithms

339
00:19:56,732 --> 00:19:59,496
that are being used.

340
00:20:00,947 --> 00:20:02,860
But the point here is

341
00:20:02,860 --> 00:20:07,019
we will be talking about reconstruction
of images using MRI

342
00:20:07,019 --> 00:20:12,891
and that there is a link between CT 
and MRI reconstruction.
