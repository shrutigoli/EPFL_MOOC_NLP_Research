1
00:00:05,321 --> 00:00:07,148
Nous avions vu dans une vidéo précédente

2
00:00:07,198 --> 00:00:09,725
ce que sont les trois facettes 
des méthodes.

3
00:00:09,816 --> 00:00:12,581
Nous avions vu aussi 
en quoi consiste l'appel.

4
00:00:12,896 --> 00:00:13,922
Nous allons maintenant,

5
00:00:13,922 --> 00:00:18,058
plus particulièrement nous concentrer
sur la notion d'entête.

6
00:00:18,728 --> 00:00:21,644
Considérons par exemple 
l'exemple complet suivant

7
00:00:21,644 --> 00:00:25,175
où nous voulions calculer une moyenne
entre deux nombres.

8
00:00:25,356 --> 00:00:30,142
L'entête de la méthode moyenne
est cette ligne qui se trouve ici.

9
00:00:30,562 --> 00:00:33,758
Toute méthode est donc
caractérisée par un entête

10
00:00:33,758 --> 00:00:37,848
c'est-à-dire la spécification de son nom,

11
00:00:37,947 --> 00:00:40,918
l'ensemble des paramètres 
que la méthode doit recevoir

12
00:00:40,918 --> 00:00:44,846
du reste du programme pour fonctionner
et le type de la valeur de retour

13
00:00:44,846 --> 00:00:48,110
que la méthode va renvoyer 
au reste du programme.

14
00:00:48,110 --> 00:00:51,090
La syntaxe de déclaration
d'un entête est donc la suivante :

15
00:00:51,090 --> 00:00:54,598
on commence par le type de valeur 
de retour de la méthode

16
00:00:54,598 --> 00:01:00,013
suivi ici du nom que l'on a choisi,
puis entre parenthèses rondes,

17
00:01:00,013 --> 00:01:02,927
la liste éventuellement vide 
des paramètres

18
00:01:02,927 --> 00:01:06,591
que la méthode doit recevoir
du reste du programme pour fonctionner.

19
00:01:06,591 --> 00:01:10,043
Au niveau de ce cours, 
on ajoutera encore devant cet entête

20
00:01:10,043 --> 00:01:15,999
le mot clé <i>static</i> ici à cet endroit
devant le type de retour.

21
00:01:15,999 --> 00:01:19,051
Ceci est spécifique 
à ce cours d'introduction

22
00:01:19,051 --> 00:01:20,625
mais deviendra une exception

23
00:01:20,625 --> 00:01:23,989
et sera expliqué dans le cours 
programmation orientée objet.

24
00:01:23,989 --> 00:01:26,409
Voici donc quelques exemples d'entête,

25
00:01:26,409 --> 00:01:28,536
on retrouve ici l'entête de l'exemple

26
00:01:28,536 --> 00:01:31,981
du calcul de la moyenne qu'on a pris 
dans le transparent précédent

27
00:01:31,981 --> 00:01:36,582
où l'on voit le nom 
de la méthode <i>moyenne</i>,

28
00:01:36,582 --> 00:01:42,727
le type de retour ici <i>double</i> précédé
dans ce cours du mot clé <i>static</i>

29
00:01:42,727 --> 00:01:45,771
et enfin, entre parenthèses rondes,
les deux paramètres

30
00:01:45,771 --> 00:01:48,601
que l'on passe à la méthode moyenne

31
00:01:48,601 --> 00:01:51,084
pour calculer la moyenne 
de ces deux valeurs.

32
00:01:51,084 --> 00:01:55,344
Un autre exemple ici avec une méthode
qui ne prend pas d'arguments

33
00:01:55,348 --> 00:01:59,408
ici où l'on passe simplement la liste vide
comme paramètre pour indiquer

34
00:01:59,423 --> 00:02:03,229
que la méthode qui tirerait
un nombre au hasard

35
00:02:03,229 --> 00:02:07,709
n'a pas besoin de recevoir d'informations
du reste du programme pour fonctionner.

36
00:02:08,713 --> 00:02:11,062
Quelques conseils maintenant 
de bonnes pratiques

37
00:02:11,062 --> 00:02:13,904
concernant l'écriture des entêtes 
de vos méthodes.

38
00:02:13,904 --> 00:02:16,894
Tout d'abord, choisissez 
des noms pertinents,

39
00:02:16,894 --> 00:02:20,134
des noms qui soient évocateurs 
de ce que va faire la méthode.

40
00:02:20,134 --> 00:02:24,159
Cela rendra votre code plus clair,
plus facilement compréhensible

41
00:02:24,159 --> 00:02:25,959
et plus facilement maintenable.

42
00:02:25,959 --> 00:02:27,630
Mais cela suppose évidemment

43
00:02:27,630 --> 00:02:31,606
que la méthode ne doit faire
que ce pour quoi elle a été prévue.

44
00:02:31,606 --> 00:02:34,519
Elle ne doit pas avoir ce que
l'on appelle <i>des effets de bords</i>

45
00:02:34,519 --> 00:02:37,030
c'est-à-dire pas d'effets non désirés.

46
00:02:37,030 --> 00:02:42,944
Par exemple, si vous avez une méthode
qui calcule la racine carrée d'un nombre

47
00:02:42,944 --> 00:02:48,613
qui s'appellerait <i>sqrt</i>, qui prend donc
un paramètre <i>x</i> de type <i>double</i>,

48
00:02:48,613 --> 00:02:52,357
et qui retourne la racine carrée 
de <i>x</i> sous forme <i>double</i>,

49
00:02:52,357 --> 00:02:53,483
vous ne vous attendez pas

50
00:02:53,483 --> 00:02:57,427
à ce qu'une telle méthode écrive 
la valeur sur le terminal,

51
00:02:57,427 --> 00:02:59,635
vous envoie des messages d'erreur.

52
00:02:59,635 --> 00:03:02,115
Vous n'attendez qu'elle ne fasse 
qu'une seule chose

53
00:03:02,115 --> 00:03:04,230
c'est qu'elle calcule effectivement
cette valeur

54
00:03:04,230 --> 00:03:06,071
et la retourne au reste du programme

55
00:03:06,071 --> 00:03:08,245
sans polluer ni les sorties,

56
00:03:08,245 --> 00:03:10,459
ni faire quoi que ce soit 
qui ne soit pas voulu,

57
00:03:10,459 --> 00:03:12,932
qui ne soit pas un <i>effet de bord</i>.

58
00:03:12,932 --> 00:03:14,614
Enfin, dernier conseil,

59
00:03:14,614 --> 00:03:17,989
commencez toujours par écrire 
l'entête de votre méthode

60
00:03:17,989 --> 00:03:20,160
avant même d'écrire
le corps de la méthode.

61
00:03:20,160 --> 00:03:24,001
Préoccupez-vous d'abord du "quoi",
c'est-à-dire le nom,

62
00:03:24,001 --> 00:03:28,317
ce que doit recevoir comme paramètres,
la méthode pour fonctionner,

63
00:03:28,317 --> 00:03:30,490
ce qu'elle doit retourner 
au reste du programme

64
00:03:30,490 --> 00:03:32,520
avant de vous préoccuper du "comment",

65
00:03:32,520 --> 00:03:35,258
c'est-à-dire le détail du corps de la méthode.
