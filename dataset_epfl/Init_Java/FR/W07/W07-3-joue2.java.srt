1
00:00:05,241 --> 00:00:06,675
Dans la séquence vidéo précédente,

2
00:00:06,675 --> 00:00:10,206
nous avons vu une façon
de programmer la méthode <i>joue</i>

3
00:00:10,206 --> 00:00:15,474
dont le but est de vérifier si une colonne
indiquée par un joueur est un coup valide.

4
00:00:15,474 --> 00:00:19,529
Et si c'est le cas de, effectivement,
mettre le pion dans la grille.

5
00:00:19,529 --> 00:00:22,970
Dans cette séquence vidéo-ci,
je vous propose d'étudier 2 alternatives

6
00:00:22,970 --> 00:00:25,718
pour programmer cette méthode <i>joue</i>.

7
00:00:26,448 --> 00:00:29,015
Commençons donc par l'entête
de la méthode <i>joue</i>.

8
00:00:29,015 --> 00:00:30,967
Il est clair que si on veut
changer l'algorithme,

9
00:00:30,967 --> 00:00:32,819
qu'on veut changer le corps de la méthode,

10
00:00:32,819 --> 00:00:34,673
l'entête, lui, va rester le même.

11
00:00:34,673 --> 00:00:37,749
Et je vous rappelle donc
que l'on reçoit une grille,

12
00:00:37,749 --> 00:00:41,357
un tableau d'entiers, qui est le jeu
dans lequel on veut jouer,

13
00:00:41,357 --> 00:00:45,414
Donc ensuite un entier qui indique
la colonne dans laquelle le joueur joue.

14
00:00:45,414 --> 00:00:48,588
Et enfin un troisième argument ici entier,

15
00:00:48,588 --> 00:00:51,709
qui indique la couleur du pion
joué dans la colonne.

16
00:00:52,179 --> 00:00:54,429
Enfin la méthode <i>joue</i> retourne un <i>boolean</i>

17
00:00:54,429 --> 00:00:58,238
qui renvoie <i>vrai</i>, <i>true</i>,
si le coup est valide

18
00:00:58,238 --> 00:01:00,614
et qui renvoie <i>faux</i>
si le coup n'est pas valide.

19
00:01:01,104 --> 00:01:05,327
Changeons donc l'algorithme par rapport
à la version précédente de la méthode <i>joue</i>

20
00:01:05,327 --> 00:01:09,242
et commençons par tester
tout de suite la validité de ce coup.

21
00:01:09,242 --> 00:01:14,814
Le coup n'est valide que si la case
en la position 0, en ligne 0,

22
00:01:14,814 --> 00:01:16,001
n'est pas pleine.

23
00:01:16,001 --> 00:01:19,809
En effet, si la case
en position 0 dans la colonne

24
00:01:19,809 --> 00:01:22,141
dans laquelle on veut jouer
n'est pas vide,

25
00:01:22,141 --> 00:01:26,346
c'est bien qu'il y avait des pions
en dessous et que la colonne est pleine.

26
00:01:26,776 --> 00:01:30,123
Donc, comme d'habitude,
commençons par écrire le commentaire,

27
00:01:30,123 --> 00:01:32,098
qui explique ce que l'on va faire.

28
00:01:32,098 --> 00:01:35,042
Si la colonne est pleine,
alors le coup n'est pas valide.

29
00:01:35,042 --> 00:01:37,265
Et maintenant écrivons-le en JAVA.

30
00:01:37,265 --> 00:01:41,240
Si, <i>if</i>, la colonne est pleine,
c'est-à-dire que la grille,

31
00:01:41,240 --> 00:01:47,394
à la position 0, et dans la colonne
que l'on a reçue, n'est pas vide,

32
00:01:47,394 --> 00:01:50,987
c'est-à-dire n'est pas égale à la valeur
qu'on avait prédéfinie <i>vide</i>,

33
00:01:50,987 --> 00:01:53,483
alors à ce moment-là le coup
n'est pas valide,

34
00:01:53,483 --> 00:01:57,959
et il suffit simplement de quitter
la méthode en retournant <i>false</i>.

35
00:01:58,699 --> 00:02:02,699
Voila qui simplifie donc grandement
l'exploration ensuite de la grille

36
00:02:02,699 --> 00:02:05,001
pour placer le coup,
puisque à ce stade-là,

37
00:02:05,001 --> 00:02:06,503
soit on est sorti avec <i>false</i>,

38
00:02:06,503 --> 00:02:09,593
soit on sait que la colonne
n'est pas pleine

39
00:02:09,593 --> 00:02:11,581
et donc on va forcément
trouver une case vide

40
00:02:12,111 --> 00:02:14,407
que l'on peut maintenant
commencer à rechercher.

41
00:02:14,407 --> 00:02:16,606
Donc comme d'habitude,
on met le commentaire,

42
00:02:16,606 --> 00:02:21,942
on va parcourir la colonne de bas en haut,
pour rechercher la première case vide.

43
00:02:21,942 --> 00:02:26,664
Ce qui s'écrit donc en JAVA :
on commence par nommer une variable ici,

44
00:02:26,664 --> 00:02:30,767
<i>ligne</i> pour parcourir
les différentes lignes.

45
00:02:31,377 --> 00:02:38,327
Donc on initialise cette ligne
à la dernière ligne du tableau,

46
00:02:38,327 --> 00:02:42,203
c'est à dire à <i>la taille de grille - 1</i>

47
00:02:42,203 --> 00:02:45,651
donc je vous rappelle
que les tableaux ont des index

48
00:02:45,651 --> 00:02:47,070
qui vont de 0 jusqu'à "taille -1".

49
00:02:47,070 --> 00:02:51,142
Donc ici, on initialise <i>ligne</i>
à <i>la taille de la grille - 1</i>,

50
00:02:51,142 --> 00:02:55,364
puis ensuite on va parcourir
le tableau en remontant.

51
00:02:55,364 --> 00:03:00,315
Donc tant que la grille
à la position de la ligne

52
00:03:00,315 --> 00:03:02,223
qu'on est en train
d'utiliser pour parcourir

53
00:03:02,223 --> 00:03:04,486
et de la colonne que l'on a reçu,

54
00:03:04,486 --> 00:03:05,923
n'est pas vide,

55
00:03:06,553 --> 00:03:08,429
à ce moment-là on décrémente la ligne,

56
00:03:08,429 --> 00:03:10,298
donc <i>--ligne</i>.

57
00:03:10,628 --> 00:03:14,491
A ce stade, on a donc trouvé une case vide
et il suffit maintenant d'y jouer.

58
00:03:14,491 --> 00:03:17,907
On écrit comme d'habitude le commentaire
et on écrit donc que <i>grille</i>,

59
00:03:17,907 --> 00:03:24,427
à la position <i>ligne, colonne</i>
reçoit la couleur que l'on souhaite jouer.

60
00:03:24,427 --> 00:03:28,302
Donc le paramètre <i>couleur</i> que l'on a reçu.

61
00:03:28,302 --> 00:03:31,903
Et on peut terminer en renvoyant
donc le fait que l'on a pu jouer,

62
00:03:31,903 --> 00:03:33,287
donc en renvoyant <i>true</i>.

63
00:03:34,017 --> 00:03:37,274
Voilà donc notre nouvelle version
de la méthode <i>joue</i>

64
00:03:37,614 --> 00:03:39,783
et je vous laisse apprécier donc,

65
00:03:39,783 --> 00:03:42,027
indépendamment d'ailleurs
de la taille des commentaires,

66
00:03:42,027 --> 00:03:44,446
la différence entre les deux méthodes.

67
00:03:48,996 --> 00:03:52,173
Terminons enfin avec encore
une autre version de la méthode <i>joue</i>

68
00:03:52,173 --> 00:03:55,921
qui cette fois repart
de la version de la vidéo précédente,

69
00:03:55,921 --> 00:03:57,069
et va la remanier.

70
00:03:57,099 --> 00:04:00,889
Donc nous retrouvons ici
la version de la vidéo précédente

71
00:04:00,889 --> 00:04:06,539
et l'idée est de s'abstenir d'introduire
ce <i>boolean</i> ici <i>pleine</i>

72
00:04:06,539 --> 00:04:08,737
et d'essayer de faire autrement.

73
00:04:08,737 --> 00:04:13,012
Donc pour ça on va le supprimer,
simplement, mais par quoi le remplacer ?

74
00:04:13,012 --> 00:04:15,084
Revenons au problème de départ,

75
00:04:15,084 --> 00:04:17,736
et je vous rappelle que donc,
on avait introduit ce <i>boolean</i><i>pleine</i>,

76
00:04:17,736 --> 00:04:22,221
en raison du fait que l'on
décrémentait encore la ligne

77
00:04:22,221 --> 00:04:28,978
dans la toute toute première version
lorsque celle-ci atteignait la position 0.

78
00:04:28,978 --> 00:04:30,469
Donc quand ligne était nulle,

79
00:04:30,469 --> 00:04:35,360
on continuait avec la première version
à faire des <i>--</i> et donc à descendre ici,

80
00:04:35,360 --> 00:04:36,482
hors du tableau.

81
00:04:36,482 --> 00:04:39,196
Donc il suffit maintenant
simplement de l'écrire

82
00:04:39,196 --> 00:04:43,588
et de dire que on veut s'arrêter
lorsque <i>ligne</i> est 0.

83
00:04:43,588 --> 00:04:47,011
On veut continuer tant que <i>ligne</i>
est supérieure ou égale à 0.

84
00:04:47,011 --> 00:04:50,353
Dès que ligne atteindra 0,
on veut que la boucle s'arrête.

85
00:04:50,353 --> 00:04:54,906
Donc on l'écrit, tant que <i>ligne</i>
est >= 0,

86
00:04:54,906 --> 00:04:56,954
le 0 doit bien sûr être considéré,

87
00:04:56,954 --> 00:04:59,935
tant que <i>ligne</i>
est supérieure ou égale à 0.

88
00:05:00,515 --> 00:05:06,478
Donc on peut continuer à supprimer
toutes les utilisations de <i>pleine</i>.

89
00:05:06,478 --> 00:05:09,553
Voilà, ça simplifie donc
notre boucle, quand même,

90
00:05:09,553 --> 00:05:14,149
et puis on va faire de la même façon,
en bas, dans la partie finale, où on joue,

91
00:05:14,519 --> 00:05:16,451
et on va remettre le test ici, le même.

92
00:05:16,451 --> 00:05:19,679
Donc <i>if ligne >= 0</i>,

93
00:05:19,679 --> 00:05:24,705
en effet, si à ce stade là la ligne
est supérieure ou égale à 0,

94
00:05:24,705 --> 00:05:30,137
c'est donc qu'on est bien dans le tableau,
et donc on peut tout à fait jouer.

95
00:05:30,137 --> 00:05:33,582
Et puis, sinon, c'est
qu'on est hors du tableau.

96
00:05:33,582 --> 00:05:36,294
Voilà donc la version finale
avec les commentaires, bien sûr,

97
00:05:36,294 --> 00:05:40,102
qu'on ne se prive pas de rajouter
pour rendre notre code compréhensible.

98
00:05:40,102 --> 00:05:44,095
Ce qui termine donc notre troisième
version de la méthode <i>joue</i>.

99
00:05:44,095 --> 00:05:47,421
Ceci dit, il reste encore
une erreur potentielle

100
00:05:47,421 --> 00:05:49,879
dans toutes nos versions de méthodes <i>joue</i>.

101
00:05:49,879 --> 00:05:51,770
Est-ce que vous pouvez voir
de quoi il s'agit ?

102
00:05:52,380 --> 00:05:56,151
Je vous laisse en guise d'exercice,
implémenter cette correction

103
00:05:56,151 --> 00:05:59,782
dans la version de la méthode <i>joue</i>
que vous avez choisi de programmer.

104
00:05:59,782 --> 00:06:03,486
Vous devriez donc avoir maintenant,
à ce stade, un programme JAVA correct,

105
00:06:03,486 --> 00:06:06,977
dans lequel vous pouvez
représenter un jeu, donc une grille,

106
00:06:06,977 --> 00:06:09,145
des couleurs de pions de deux joueurs.

107
00:06:09,145 --> 00:06:12,173
Vous pouvez initialiser
ce jeu et l'afficher.

108
00:06:12,253 --> 00:06:16,643
Et vous pouvez jouer des pions et tester
la validité des coups dans la grille.

109
00:06:16,643 --> 00:06:20,563
Pour pouvoir avoir un jeu complet,
il reste encore à demander

110
00:06:20,563 --> 00:06:24,842
à un joueur où il joue,
et pouvoir alterner les joueurs :

111
00:06:24,842 --> 00:06:26,884
demander un coup à rouge, un coup à jaune.

112
00:06:26,884 --> 00:06:29,228
Et enfin vérifier si la partie se termine,

113
00:06:29,228 --> 00:06:32,106
c'est à dire si l'un des joueurs a gagné,
ou si la grille est pleine.

114
00:06:32,106 --> 00:06:35,006
Ce sera l'objet des prochaines
séquences vidéos.
