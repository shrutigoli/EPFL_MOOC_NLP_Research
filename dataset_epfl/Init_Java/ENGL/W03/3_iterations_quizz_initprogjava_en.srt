
1
00:00:00,000 --> 00:00:05,320
Now, we will take two quizzes

2
00:00:05,320 --> 00:00:09,050
regarding nested loops and
conditional branches.

3
00:00:09,050 --> 00:00:12,200
In your opinion, what will this code print
upon execution ?

4
00:00:12,200 --> 00:00:15,464
The correct answer is D.

5
00:00:15,464 --> 00:00:17,950
Let us see why.

6
00:00:17,950 --> 00:00:20,806
The code starts with a first

7
00:00:20,806 --> 00:00:25,061
instruction "for" declaring a
variable i

8
00:00:25,061 --> 00:00:26,985
and initializing it to 0.

9
00:00:26,985 --> 00:00:32,050
The condition is "i strictly less
than 3".

10
00:00:32,050 --> 00:00:35,121
The increment statement is
" ++i ".

11
00:00:35,121 --> 00:00:37,550
i will thus take the values
0, 1 and 2.

12
00:00:37,550 --> 00:00:43,050
The first time we enter the loop,
i has the value 0.

13
00:00:43,050 --> 00:00:46,842
Now, we move on to this
second instruction "for",

14
00:00:46,842 --> 00:00:50,350
which is inside the first
loop,

15
00:00:50,350 --> 00:00:54,655
declaring a variable j, initialized 
to 0.

16
00:00:54,655 --> 00:00:59,330
The condition is "j stricly less than 4".

17
00:00:59,330 --> 00:01:04,665
The increment statement is " ++j ".

18
00:01:04,665 --> 00:01:06,945
Thus, j will take the values
0, 1, 2 and 3.

19
00:01:06,945 --> 00:01:11,581
The first time we enter the "for j" loop,

20
00:01:11,581 --> 00:01:14,080
j will have the value 0.

21
00:01:14,080 --> 00:01:16,449
We will execute the instructions

22
00:01:16,449 --> 00:01:22,244
inside the "for j" loop, starting

23
00:01:22,244 --> 00:01:27,854
with this conditional statement,
testing the condition "i == j ".

24
00:01:27,854 --> 00:01:28,660
i is 0.

25
00:01:28,660 --> 00:01:30,760
j is 0 aswell.

26
00:01:30,760 --> 00:01:36,337
The condition is thus true
and we will execute this instruction,

27
00:01:36,337 --> 00:01:41,400
printing an asterisk.

28
00:01:41,400 --> 00:01:45,980
By the way, for this printing here,

29
00:01:45,980 --> 00:01:50,560
we are using a "print", not a "println",
which means there is no line break.

30
00:01:50,560 --> 00:01:55,595
We skip the "else" part of the
conditional statement.

31
00:01:55,595 --> 00:02:00,630
We reach the end of the "for j" loop
and jump back here.

32
00:02:00,630 --> 00:02:06,580
j will take

33
00:02:06,580 --> 00:02:11,649
the value 1 and we keep going
inside the "for j" loop.

34
00:02:11,649 --> 00:02:17,795
We will now execute the conditional
statement testing the condition "i == j".

35
00:02:17,795 --> 00:02:20,411
i is 0.
But this time, j is 1.

36
00:02:20,411 --> 00:02:25,710
The condition is thus false and we
will execute the

37
00:02:25,710 --> 00:02:31,683
"else" part of the conditional
statement, that is, printing

38
00:02:31,683 --> 00:02:35,577
j's value : 1. We will print it here.

39
00:02:35,577 --> 00:02:41,919
Now we reach the end of the "for j" loop
and come back

40
00:02:41,919 --> 00:02:47,774
here again. j will take the 

41
00:02:47,774 --> 00:02:53,220
value 2.

42
00:02:53,220 --> 00:02:58,381
And we will print 2.

43
00:02:58,381 --> 00:03:03,856
Then, j will take the value 3.

44
00:03:03,856 --> 00:03:09,620
And we will print 3.

45
00:03:09,620 --> 00:03:14,956
Now we exit the "for j" loop.

46
00:03:14,956 --> 00:03:19,437
We reach this instruction,

47
00:03:19,437 --> 00:03:24,186
generating a line break.

48
00:03:24,186 --> 00:03:29,201
Therefore, the next printing will
occur here.

49
00:03:29,201 --> 00:03:33,982
We now reach the end of the 
"for i" loop.

50
00:03:33,982 --> 00:03:39,201
We come back here.

51
00:03:39,201 --> 00:03:44,290
i will take the value 1 and we 

52
00:03:44,290 --> 00:03:49,810
will reexecute the instructions

53
00:03:49,810 --> 00:03:54,284
inside the "for i" loop.
Therefore, restarting

54
00:03:54,284 --> 00:03:58,530
here, j being initialized to
0 again.

55
00:03:58,530 --> 00:04:05,255
We execute the instructions inside
the "for j" loop.

56
00:04:05,255 --> 00:04:12,205
We test the condition "is i equal to j?".

57
00:04:12,205 --> 00:04:15,360
i is 1. j is 0.
The condition is thus false.

58
00:04:15,360 --> 00:04:19,331
We will thus print j's value here,
namely 0.

59
00:04:19,331 --> 00:04:28,620
Now, we will come back here,
with j's value being 1.

60
00:04:28,620 --> 00:04:36,660
We keep going inside the "for j" loop,
executing this conditional statement.

61
00:04:36,660 --> 00:04:40,470
We test the condition "i == j",
This time, i is 1.

62
00:04:40,470 --> 00:04:44,680
j is 1 aswell. Thus, the
condition is true.

63
00:04:44,680 --> 00:04:49,662
We can execute this part of the
conditional statement,

64
00:04:49,662 --> 00:04:54,098
thus printing an asterisk. 
Now we come back here,

65
00:04:54,098 --> 00:05:00,346
continuing inside the "for j" loop.
Now you can see

66
00:05:00,346 --> 00:05:04,239
that we have indeed printed this,
here.

67
00:05:04,239 --> 00:05:04,240
 .

68
00:05:04,240 --> 00:05:08,520
Now, this second quiz is a bit
more difficult.

69
00:05:08,520 --> 00:05:12,846
Please note that here, we're using
the value of the variable

70
00:05:12,846 --> 00:05:16,332
i, declared in the first "for loop".

71
00:05:16,332 --> 00:05:19,460
In your opinion, what is the correct answer ?

72
00:05:19,460 --> 00:05:22,565
The correct answer is A.

73
00:05:22,565 --> 00:05:25,950
Let us explain why.

74
00:05:25,950 --> 00:05:33,950
As before, the first "for loop" declares
a variable i, initialized to 0.

75
00:05:33,950 --> 00:05:36,873
The condition is "i strictly less 
than 3".

76
00:05:36,873 --> 00:05:39,832
The increment statement is " ++i".

77
00:05:39,832 --> 00:05:45,060
Once again, i will take
the values 0, 1 and 2.

78
00:05:45,060 --> 00:05:51,010
We begin by entering the "for i" loop,

79
00:05:51,010 --> 00:05:56,103
with i's value being 0.
Now we execute this instruction,

80
00:05:56,103 --> 00:06:03,548
a second "for loop", initializing
a variable j to 0.

81
00:06:03,548 --> 00:06:08,290
The condition is "j strictly
less than i".

82
00:06:08,290 --> 00:06:11,062
i is 0.
j is 0 aswell.

83
00:06:11,062 --> 00:06:14,626
Thus, the condition is false.

84
00:06:16,190 --> 00:06:21,572
We exit this "for loop"
right away

85
00:06:21,572 --> 00:06:26,774
and end up here. Thus, we will
simply

86
00:06:26,774 --> 00:06:32,358
execute a line break, which we will represent
this way.

87
00:06:32,358 --> 00:06:40,447
Now we come back to this instruction here.
i will take

88
00:06:40,447 --> 00:06:45,950
the value 1
and j will be initialized to 0.

89
00:06:45,950 --> 00:06:54,150
The condition is now
"j strictly less than i", i being 1.

90
00:06:54,150 --> 00:06:59,470
Thus, j will take the values, or rather
the value 0

91
00:06:59,470 --> 00:07:03,656
and we will then exit the loop
immediately.

92
00:07:03,656 --> 00:07:05,944
For now, 

93
00:07:05,944 --> 00:07:10,092
j has the value 0.
We will execute this instruction here,

94
00:07:10,092 --> 00:07:13,160
printing j's value, which
is 0.

95
00:07:13,160 --> 00:07:19,500
We exit the loop and reach this
instruction here,

96
00:07:19,500 --> 00:07:25,997
generating a line break.
We now reach the end of the "for i" loop.

97
00:07:25,997 --> 00:07:27,510
We jump back here.

98
00:07:27,510 --> 00:07:32,836
And i will take

99
00:07:32,836 --> 00:07:38,909
the value 2.
We enter the "for i" loop again

100
00:07:38,909 --> 00:07:44,654
and execute this instruction,
initializing j to 0 again.

101
00:07:44,654 --> 00:07:49,832
The condition is now
"j strictly less than 2".

102
00:07:49,832 --> 00:07:52,568
Thus, j will take the 

103
00:07:52,568 --> 00:07:57,170
values 0 and 1.
We start with

104
00:07:57,170 --> 00:08:02,590
j's value being 0.
We execute this print instruction,

105
00:08:02,590 --> 00:08:07,690
printing j's value, which is 0.

106
00:08:07,690 --> 00:08:11,274
We reach the end of the "for j" loop

107
00:08:11,274 --> 00:08:16,076
and jump back here with
j's value now being 1.

108
00:08:16,076 --> 00:08:16,932
We will now

109
00:08:16,932 --> 00:08:23,960
execute this instruction, printing
j's value, which is 1.

110
00:08:23,960 --> 00:08:26,886
Now, we exit the loop,

111
00:08:26,886 --> 00:08:32,088
thus, executing this instruction
here, generating

112
00:08:32,088 --> 00:08:37,404
a line break. We reach the end
of the "for i" loop.

113
00:08:37,404 --> 00:08:41,667
i's value is now 3.
This condition is false.

114
00:08:41,667 --> 00:08:42,023
And we will

115
00:08:42,023 --> 00:08:45,700
exit the loop and reach the end
of the code.

116
00:08:45,700 --> 00:08:53,395
Now we see that we have printed
the given solution.

