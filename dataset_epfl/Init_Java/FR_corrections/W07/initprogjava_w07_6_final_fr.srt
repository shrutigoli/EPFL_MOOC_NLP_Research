1
00:00:05,570 --> 00:00:08,280
Dans la vidéo précédente,
vous aviez vu comment écrire

2
00:00:08,280 --> 00:00:12,086
la boucle principale qui permet
aux joueurs de jouer chacun leur tour,

3
00:00:12,086 --> 00:00:14,692
alors il manquait juste
la condition d'arrêt,

4
00:00:14,692 --> 00:00:17,660
c'est-à-dire qu'il manquait
ce qu'il faut écrire ici

5
00:00:18,080 --> 00:00:21,380
pour que la boucle s'arrête quand
un des deux joueurs a gagné

6
00:00:21,380 --> 00:00:23,910
ou quand la grille est pleine.

7
00:00:23,910 --> 00:00:26,460
Alors pour l'instant, nous allons 
nous concentrer sur le cas

8
00:00:26,460 --> 00:00:28,440
où l'un des deux joueurs a gagné

9
00:00:28,830 --> 00:00:31,560
et pour cela je vais introduire
une nouvelle méthode

10
00:00:31,560 --> 00:00:35,000
que je vais appeler <i>estCeGagne</i>
et que je vais appeler ainsi :

11
00:00:35,070 --> 00:00:38,516
je vais mettre la valeur de retour
de ma méthode <i>estCeGagne</i>

12
00:00:38,516 --> 00:00:39,472
dans une variable

13
00:00:39,472 --> 00:00:42,210
que je vais appeler <i>gagne</i>
qui sera de type booléen.

14
00:00:42,930 --> 00:00:46,710
Ma méthode <i>estCeGagne</i> a besoin
de la grille pour pouvoir fonctionner

15
00:00:46,950 --> 00:00:49,300
et de la couleur du joueur
qui vient de jouer.

16
00:00:49,510 --> 00:00:51,990
Alors il faut que je déclare 
ma variable <i>gagne</i>,

17
00:00:52,190 --> 00:00:55,070
et il faut que je la déclare 
avant la boucle

18
00:00:55,220 --> 00:00:59,430
puisque je vais m'en servir 
dans la condition d'arrêt de la boucle.

19
00:01:00,285 --> 00:01:01,915
Elle est donc de type booléen

20
00:01:02,305 --> 00:01:06,385
et je peux maintenant m'en servir
pour définir la condition d'arrêt,

21
00:01:07,275 --> 00:01:11,125
et on va répéter la boucle
tant que le joueur n'a pas gagné.

22
00:01:11,555 --> 00:01:14,485
Il nous faut donc écrire 
cette méthode <i>estCeGagne</i>,

23
00:01:14,485 --> 00:01:18,075
ce qui est sans doute la partie 
la plus difficile de notre programme.

24
00:01:18,195 --> 00:01:21,245
Alors il y a plusieurs façons d'écrire
cette méthode <i>estCeGagne</i>

25
00:01:21,455 --> 00:01:23,885
et nous vous proposons
la stratégie suivante.

26
00:01:24,555 --> 00:01:26,131
Nous allons parcourir la grille

27
00:01:26,131 --> 00:01:29,327
ligne par ligne et colonne par colonne

28
00:01:29,677 --> 00:01:34,445
jusqu'à trouver un pion de la couleur
du joueur qui vient de jouer,

29
00:01:34,535 --> 00:01:38,125
disons par exemple que c'est 
le joueur rouge qui vient de jouer,

30
00:01:38,525 --> 00:01:40,965
et que l'on trouve ce pion-ci.

31
00:01:41,095 --> 00:01:45,163
Nous allons partir de ce pion
et parcourir la grille

32
00:01:45,163 --> 00:01:46,811
dans plusieurs directions,

33
00:01:47,741 --> 00:01:51,049
horizontalement, verticalement 
et en diagonale,

34
00:01:51,639 --> 00:01:54,829
pour compter combien il y a de pions

35
00:01:54,829 --> 00:01:58,009
à partir de ce pion-ci
qui sont de la même couleur.

36
00:01:58,009 --> 00:02:00,825
Si par exemple, on considère
cette direction-ci,

37
00:02:01,245 --> 00:02:05,811
on arrive à compter un, deux, trois,
quatre pions rouges

38
00:02:06,131 --> 00:02:08,499
et donc on sait que le joueur a gagné.

39
00:02:08,499 --> 00:02:11,225
Si en revanche, 
on a parcouru toute la grille

40
00:02:11,225 --> 00:02:13,761
et qu'on a toujours compté 
moins que quatre pions,

41
00:02:14,021 --> 00:02:16,369
on sait que le joueur n'a pas gagné.

42
00:02:16,469 --> 00:02:18,419
On peut en fait remarquer
qu'on est pas obligé

43
00:02:18,419 --> 00:02:20,209
de considérer toutes les directions

44
00:02:20,209 --> 00:02:23,409
et en fait nous allons nous contenter
de compter les pions

45
00:02:23,409 --> 00:02:25,239
dans quatre directions seulement,

46
00:02:25,839 --> 00:02:30,499
et nous allons choisir par exemple, 
vers le haut et la droite,

47
00:02:31,089 --> 00:02:34,999
vers la droite, vers le bas
et la droite et vers le bas.

48
00:02:34,999 --> 00:02:39,249
Alors pourquoi on peut se contenter
de considérer ces quatre directions ?

49
00:02:39,719 --> 00:02:42,105
J'ai dit que nous allions 
parcourir la grille

50
00:02:42,105 --> 00:02:45,401
ligne par ligne
et colonne par colonne,

51
00:02:45,751 --> 00:02:47,089
supposons encore une fois

52
00:02:47,139 --> 00:02:49,129
que c'est le joueur rouge
qui vient de jouer,

53
00:02:49,459 --> 00:02:52,359
le premier pion que nous allons 
trouver est celui-ci.

54
00:02:52,859 --> 00:02:57,189
Nous allons compter tout d'abord
les pions dans cette direction-ci,

55
00:02:57,769 --> 00:03:00,455
nous n'allons compter
qu'un seul pion, celui-ci,

56
00:03:01,515 --> 00:03:05,181
même chose pour cette direction-ci
et cette direction-ci,

57
00:03:05,181 --> 00:03:07,289
il n'y a qu'un seul pion
dans ces trois directions.

58
00:03:07,469 --> 00:03:10,722
Dans cette direction-ci,
il y a deux pions,

59
00:03:10,972 --> 00:03:12,575
ce n'est pas suffisant pour gagner,

60
00:03:12,905 --> 00:03:15,849
et nous allons continuer
à parcourir la grille.

61
00:03:16,592 --> 00:03:20,432
Le prochain pion rouge
que nous allons trouver est celui-ci.

62
00:03:20,997 --> 00:03:23,700
Dans cette direction-ci
et cette direction-ci

63
00:03:23,700 --> 00:03:26,093
nous n'allons compter que deux pions,

64
00:03:26,093 --> 00:03:27,537
ce n'est pas suffisant pour gagner.

65
00:03:27,847 --> 00:03:30,551
Dans cette direction-ci
et cette direction-ci,

66
00:03:30,551 --> 00:03:32,237
nous n'allons compter qu'un seul pion,

67
00:03:32,287 --> 00:03:34,197
ce n'est toujours pas 
suffisant pour gagner.

68
00:03:34,337 --> 00:03:39,957
Donc, nous allons continuer à parcourir
la grille jusqu'à atteindre ce pion-ci,

69
00:03:40,307 --> 00:03:43,413
nous allons compter les pions 
dans cette direction-ci

70
00:03:43,673 --> 00:03:47,829
et nous allons compter cette fois 
un, deux, trois, quatre pions

71
00:03:47,999 --> 00:03:50,287
et on sait que le joueur rouge a gagné.

72
00:03:51,263 --> 00:03:55,033
Pour prouver que le joueur rouge
vient d'aligner ces quatre pions,

73
00:03:55,533 --> 00:04:00,673
on peut donc soit partir de ce pion-ci,
et aller dans cette direction-ci,

74
00:04:01,023 --> 00:04:05,283
soit partir de ce pion-là
et aller dans cette direction-là.

75
00:04:05,633 --> 00:04:09,369
On n'est donc pas obligé
de considérer ces deux directions,

76
00:04:09,809 --> 00:04:11,745
on peut se contenter d'une seule,

77
00:04:12,105 --> 00:04:15,013
et c'est la même chose
pour les six autres directions.

78
00:04:15,347 --> 00:04:17,647
On va regarder uniquement
dans cette direction-ci

79
00:04:18,057 --> 00:04:19,807
et pas dans cette direction-ci.

80
00:04:20,257 --> 00:04:25,387
Dans cette direction-ci et pas celle-ci,
dans cette direction-ci et pas celle-ci.

81
00:04:25,955 --> 00:04:30,035
Il ne nous reste donc
que quatre directions à considérer.

82
00:04:30,455 --> 00:04:33,295
Il nous faut donc maintenant
coder cette stratégie

83
00:04:33,675 --> 00:04:35,765
en écrivant la méthode <i>estCeGagne</i>,

84
00:04:35,895 --> 00:04:38,795
or je vous rappelle qu'on va
appeler la méthode <i>estCeGagne</i>

85
00:04:39,065 --> 00:04:41,115
par exemple de la façon suivante.

86
00:04:41,435 --> 00:04:44,895
C'est-à-dire qu'on va mettre la valeur
de retour de la méthode <i>estCeGagne</i>

87
00:04:45,035 --> 00:04:47,048
dans une variable de type booléen,

88
00:04:47,348 --> 00:04:50,311
et que la méthode va attendre une grille,

89
00:04:50,541 --> 00:04:53,735
et la couleur du joueur qui vient 
de jouer en paramètres.

90
00:04:54,105 --> 00:04:58,605
L'en-tête de la méthode sera 
donc tout simplement celui-ci.

91
00:05:00,005 --> 00:05:03,731
D'autres stratégies consistent
à parcourir la grille,

92
00:05:04,331 --> 00:05:07,117
ce qu'on va faire à l'aide
de deux boucles <i>for</i>

93
00:05:08,017 --> 00:05:10,095
et comme on a besoin
des coordonnées du pion,

94
00:05:10,345 --> 00:05:14,635
on va utiliser deux boucles <i>for</i> classiques
qui vont s'écrire de la façon suivante.

95
00:05:15,506 --> 00:05:20,086
Les variables ligne et colonne
vont contenir les coordonnées du pion

96
00:05:20,086 --> 00:05:23,666
à partir duquel on va compter 
le nombre de pions alignés,

97
00:05:23,996 --> 00:05:26,186
et pour simplifier un peu
l'écriture du code,

98
00:05:26,466 --> 00:05:32,716
je vais introduire une variable locale
que je vais appeler <i>couleurCase</i>

99
00:05:33,116 --> 00:05:38,796
pour contenir la couleur de ce pion,
qui est grille[ligne][colonne].

100
00:05:41,735 --> 00:05:46,445
Si la couleur de la case est la même
que celle du joueur qui vient de jouer,

101
00:05:47,265 --> 00:05:49,455
alors il faut que je compte les pions

102
00:05:49,455 --> 00:05:51,505
dans les quatre directions
qui nous intéressent.

103
00:05:51,745 --> 00:05:53,835
Alors, comme c'est un peu compliqué
de compter les pions,

104
00:05:54,045 --> 00:05:57,635
et bien, je vais introduire une méthode
que je vais simplement appeler <i>compte</i>

105
00:05:57,865 --> 00:05:59,435
et qui va faire cette tâche.

106
00:05:59,905 --> 00:06:02,445
De quels arguments la méthode
<i>compte</i> a-t-elle besoin ?

107
00:06:02,775 --> 00:06:07,145
Donc tout d'abord bien sûr, de la grille,
des coordonnées du pion

108
00:06:07,175 --> 00:06:10,705
à partir desquelles on veut compter
le nombre de pions alignés,

109
00:06:10,855 --> 00:06:14,045
et ces coordonnées sont contenues
dans les variables ligne et colonne,

110
00:06:15,315 --> 00:06:20,055
et de la direction dans laquelle on veut
compter le nombre de pions alignés.

111
00:06:20,485 --> 00:06:23,125
Alors comment peut-on définir
cette direction ?

112
00:06:23,315 --> 00:06:25,795
Supposons par exemple
que je veuille compter les pions

113
00:06:25,975 --> 00:06:29,256
en diagonale vers le haut
et vers la droite,

114
00:06:29,556 --> 00:06:33,147
alors dans ce cas, pour passer 
d'une case à l'autre,

115
00:06:34,427 --> 00:06:40,160
il va falloir soustraire un à la ligne
et ajouter un à la colonne,

116
00:06:40,630 --> 00:06:43,325
et donc, je vais utiliser 
ces deux valeurs-là,

117
00:06:43,395 --> 00:06:45,680
ce moins un et ce plus un,

118
00:06:46,370 --> 00:06:48,505
en argument de ma fonction <i>compte</i>

119
00:06:49,005 --> 00:06:52,082
pour dire que je veux aller 
vers le haut et vers la droite.

120
00:06:53,298 --> 00:06:57,918
Je vais faire envoyer à ma méthode <i>compte</i>
le nombre de pions alignés

121
00:06:58,038 --> 00:07:01,518
et si ce nombre de pions est supérieur
ou égal à quatre,

122
00:07:01,568 --> 00:07:03,488
alors je sais que le joueur a gagné.

123
00:07:03,578 --> 00:07:08,558
Alors pourquoi supérieur ou égal à quatre,
et non pas simplement égal à quatre ?

124
00:07:08,558 --> 00:07:12,603
Et bien, c'est tout simplement qu'on peut
gagner en alignant plus de quatre pions.

125
00:07:13,423 --> 00:07:16,493
Alors évidemment, il faut que je considère
les trois autres directions

126
00:07:16,793 --> 00:07:18,953
et ça va s'écrire de la façon suivante.

127
00:07:19,663 --> 00:07:24,333
Pour compter les pions horizontalement,
je ne vais pas changer la ligne,

128
00:07:24,713 --> 00:07:27,983
c'est pour ça que j'utilise zéro
en argument ici,

129
00:07:28,183 --> 00:07:32,613
par contre la colonne va changer
et je vais passer à la colonne suivante,

130
00:07:32,613 --> 00:07:35,783
c'est pour ça que j'utilise la valeur
plus un en dernier argument.

131
00:07:35,963 --> 00:07:41,903
Ensuite, pour compter les pions
en diagonale vers le bas et la droite,

132
00:07:42,463 --> 00:07:48,509
pour passer d'une case à l'autre,
je vais ajouter un à la ligne,

133
00:07:48,989 --> 00:07:51,195
c'est pour ça que j'utilise 
la valeur plus un ici,

134
00:07:51,545 --> 00:07:55,373
et j'ajoute également un à la colonne,

135
00:07:55,563 --> 00:07:58,333
et c'est pour ça que j'utilise
la valeur plus un ici.

136
00:07:59,033 --> 00:08:01,523
Enfin il nous reste
une dernière direction.

137
00:08:02,761 --> 00:08:05,897
Pour compter les pions 
verticalement vers le bas,

138
00:08:06,107 --> 00:08:08,743
je vais passer d'une case à l'autre,

139
00:08:09,563 --> 00:08:13,399
en ajoutant un à la ligne, c'est 
pour ça que j'ai la valeur plus un ici,

140
00:08:13,705 --> 00:08:19,061
par contre la colonne ne va pas changer
et j'utilise la valeur zéro ici.

141
00:08:20,078 --> 00:08:25,451
Si l'une de ces quatre conditions est 
vraie, alors je sais que le joueur a gagné.

142
00:08:25,614 --> 00:08:28,888
Alors il suffit bien qu'une 
des quatre conditions soient vraies,

143
00:08:29,108 --> 00:08:31,528
c'est pour ça que j'ai utilisé un <i>or</i> ici

144
00:08:32,068 --> 00:08:33,448
et dans ce cas-là,

145
00:08:33,448 --> 00:08:35,768
je vais faire renvoyer tout à ma méthode,

146
00:08:36,828 --> 00:08:40,638
je vais fermer les accolades
que j'avais ouvertes précédemment,

147
00:08:41,128 --> 00:08:44,724
et si j'arrive à ce stade de ma méthode,

148
00:08:45,284 --> 00:08:48,020
c'est que je ne suis jamais passé par ici,

149
00:08:49,320 --> 00:08:53,368
c'est-à-dire que je n'ai jamais trouvé
au moins quatre pions d'alignés,

150
00:08:53,538 --> 00:08:56,638
et je sais que dans ce cas-là, 
le joueur n'a pas encore gagné.

151
00:08:56,758 --> 00:09:00,244
Donc je vais faire renvoyer <i>false</i>
à ma méthode,

152
00:09:00,734 --> 00:09:03,770
et en bon programmeur,
je vais ajouter des commentaires

153
00:09:04,280 --> 00:09:09,178
pour expliquer les points un peu difficiles
du corps de ma méthode.

154
00:09:12,130 --> 00:09:14,800
Évidemment, il faut encore écrire
la méthode <i>compte</i>.

155
00:09:14,900 --> 00:09:17,423
Alors je vous rappelle qu'on va appeler
la méthode <i>compte</i>

156
00:09:17,423 --> 00:09:19,486
par exemple de cette façon-ci,

157
00:09:20,126 --> 00:09:23,630
c'est-à-dire que la méthode 
va renvoyer un nombre de pions,

158
00:09:23,760 --> 00:09:25,890
c'est pour ça que 
je vais utiliser le type <i>int</i>

159
00:09:26,150 --> 00:09:30,660
pour définir le type de la valeur 
de résultat de la méthode.

160
00:09:30,970 --> 00:09:33,516
Le premier paramètre est donc la grille,

161
00:09:34,046 --> 00:09:37,312
les deux paramètres suivants sont 
la ligne et la colonne

162
00:09:37,312 --> 00:09:40,011
du pion à partir duquel on va compter,

163
00:09:40,341 --> 00:09:42,400
ils sont tous les deux de type <i>int</i>,

164
00:09:42,680 --> 00:09:48,330
et les deux derniers paramètres sont 
les directions pour la ligne et la colonne

165
00:09:48,770 --> 00:09:51,920
que je vais appeler <i>dirLigne</i> et <i>dirColonne</i>

166
00:09:52,030 --> 00:09:54,000
puisqu'ils sont de même nature,

167
00:09:54,100 --> 00:09:57,990
et que l'un fait référence à la ligne
et l'autre à la colonne.

168
00:09:58,440 --> 00:10:02,160
Je vais déclarer une variable compteur
initialisée à zéro

169
00:10:02,360 --> 00:10:04,540
pour compter le nombre de pions alignés.

170
00:10:05,140 --> 00:10:07,350
Que doit faire la méthode 
<i>compte</i> exactement ?

171
00:10:07,600 --> 00:10:13,433
Et bien, elle doit partir de la ligne
<i>ligneDepart colonneDepart</i>

172
00:10:14,463 --> 00:10:18,396
et elle doit parcourir la grille
dans la direction donnée

173
00:10:18,736 --> 00:10:21,380
en partant de <i>ligneDepart</i> <i>colonneDepart</i>

174
00:10:21,380 --> 00:10:24,460
tant qu'on trouve des pions
qui sont de la même couleur

175
00:10:24,460 --> 00:10:27,430
que le pion qui est 
en <i>ligneDepart</i> <i>colonneDepart</i>.

176
00:10:27,790 --> 00:10:29,230
Alors comment on va faire ça ?

177
00:10:29,390 --> 00:10:33,760
Et bien, on va utiliser deux variables
que je vais appeler ligne et colonne,

178
00:10:34,280 --> 00:10:38,990
qu'on va initialiser respectivement
à <i>ligneDepart</i> et <i>colonneDepart</i>,

179
00:10:39,850 --> 00:10:43,370
et pour passer d'une case à l'autre,
à chaque tour de boucle,

180
00:10:43,870 --> 00:10:48,850
on va ajouter à ligne 
la valeur de <i>dirLigne</i>

181
00:10:49,140 --> 00:10:51,790
et à colonne la valeur de <i>dirColonne</i>.

182
00:10:52,735 --> 00:10:54,408
Comme on va parcourir la grille

183
00:10:54,818 --> 00:10:57,251
tant qu'on trouve des pions 
de la même couleur que le pion

184
00:10:57,251 --> 00:10:58,995
qui est en <i>ligneDepart colonneDepart</i>,

185
00:10:59,075 --> 00:11:01,175
et bien on va utiliser une boucle <i>while</i>,

186
00:11:01,295 --> 00:11:03,511
et à chaque tour de la boucle <i>while</i>,

187
00:11:03,731 --> 00:11:07,067
on aura trouvé un nouveau pion 
de la même couleur

188
00:11:07,187 --> 00:11:09,705
et on va incrémenter la variable compteur.

189
00:11:10,295 --> 00:11:11,735
Comment tout cela va-t-il s'écrire ?

190
00:11:11,735 --> 00:11:16,335
Et bien, on va commencer par déclarer
les variables ligne et colonne,

191
00:11:17,285 --> 00:11:20,878
initialisées à <i>ligneDepart</i> 
et <i>colonneDepart</i>,

192
00:11:21,488 --> 00:11:23,171
on va donc utiliser une boucle <i>while</i>

193
00:11:23,171 --> 00:11:27,055
dont la condition d'arrêt dépend
de la couleur du pion en ligne colonne,

194
00:11:27,535 --> 00:11:29,905
et on va continuer tant que 
la couleur de ce pion

195
00:11:30,205 --> 00:11:34,325
est la même que la couleur du pion 
qui est en <i>ligneDepart colonneDepart</i>.

196
00:11:34,545 --> 00:11:37,548
À chaque tour de boucle,
on va incrémenter la variable compteur,

197
00:11:37,548 --> 00:11:41,005
puisqu'on a trouvé un nouveau pion
de la même couleur que le premier,

198
00:11:41,475 --> 00:11:46,525
et puis on va ajouter <i>dirLigne</i> 
et <i>dirColonne</i> à ligne et colonne.

199
00:11:46,949 --> 00:11:50,329
Notez au passage que j'ai ajouté 
des espaces ici et ici

200
00:11:50,529 --> 00:11:53,809
pour aligner les signes égal 
et plus sur ces deux lignes,

201
00:11:54,319 --> 00:11:56,189
ça rend le code plus clair,

202
00:11:56,189 --> 00:12:01,099
ça met en évidence que les variables
ligne et colonne sont de même nature.

203
00:12:01,649 --> 00:12:04,462
Quand on sort de la boucle,
c'est qu'on a trouvé un pion

204
00:12:04,462 --> 00:12:05,735
qui n'était pas de la même couleur,

205
00:12:05,925 --> 00:12:09,649
et on peut renvoyer la valeur contenue
dans la variable compteur,

206
00:12:09,969 --> 00:12:12,489
sauf que notre méthode 
n'est pas tout à fait correcte,

207
00:12:12,559 --> 00:12:14,209
et peut-être que vous voyez pourquoi.

208
00:12:14,979 --> 00:12:16,615
Comme pour la méthode <i>joue</i>,

209
00:12:16,705 --> 00:12:20,031
il se peut très bien 
qu'on sorte de la grille,

210
00:12:20,031 --> 00:12:23,099
c'est-à-dire que les variables 
ligne ou colonne

211
00:12:23,309 --> 00:12:25,719
peuvent prendre des valeurs 
qui sont interdites.

212
00:12:26,039 --> 00:12:29,169
Alors, pour corriger ça,
je vais ajouter plusieurs tests

213
00:12:29,169 --> 00:12:31,529
à la condition de la boucle <i>while</i>,

214
00:12:31,939 --> 00:12:35,719
je vais vérifier que la ligne 
est bien supérieure ou égale à zéro,

215
00:12:36,169 --> 00:12:39,739
et qu'elle est inférieure
au nombre de lignes,

216
00:12:40,759 --> 00:12:44,309
et je vais ajouter les mêmes tests
pour la colonne.

217
00:12:44,689 --> 00:12:49,109
Et finalement, je vais 
ajouter un commentaire

218
00:12:49,719 --> 00:12:51,899
pour décrire ce que fait la boucle.

219
00:12:53,726 --> 00:12:58,418
Pour finir, je vais revenir sur la méthode
<i>estCeGagne</i> pour faire remarquer que,

220
00:12:58,418 --> 00:13:03,149
si la ligne de la case de départ 
vaut zéro, un ou deux,

221
00:13:03,569 --> 00:13:07,416
et bien ce n'est pas la peine de chercher
dans cette direction-ci, par exemple,

222
00:13:08,046 --> 00:13:09,139
puisqu'on sait déjà

223
00:13:09,139 --> 00:13:12,532
que le joueur ne peut pas aligner 
au moins quatre pions.

224
00:13:12,842 --> 00:13:16,096
Si on part de la ligne deux, on sait

225
00:13:16,096 --> 00:13:19,256
que le joueur ne peut aligner 
au maximum que trois pions.

226
00:13:19,906 --> 00:13:23,262
Même chose quand on part 
du bord droit de la grille,

227
00:13:23,572 --> 00:13:26,178
ce n'est pas la peine de chercher 
dans cette direction-ci

228
00:13:26,178 --> 00:13:29,696
et même chose quand 
on part du bas de la grille,

229
00:13:29,946 --> 00:13:32,656
ce n'est pas la peine
de chercher vers le bas.

230
00:13:33,362 --> 00:13:37,092
Notre méthode <i>estCeGagne</i> fait donc
plus d'opérations que nécessaire,

231
00:13:37,362 --> 00:13:42,512
et je vais donc modifier le code pour
éviter de compter le nombre de pions

232
00:13:42,512 --> 00:13:46,102
quand on est sûr qu'il n'y aura pas
au moins quatre pions d'alignés.

233
00:13:46,362 --> 00:13:48,752
Alors, ça va s'écrire de cette façon-ci.

234
00:13:49,162 --> 00:13:53,362
Quand on considère la direction
en diagonale vers le haut et la droite,

235
00:13:53,672 --> 00:13:57,222
et bien pour qu'il y ait une chance
d'avoir au moins quatre pions d'alignés,

236
00:13:58,192 --> 00:14:01,068
il faut que la ligne soit 
supérieure ou égale à trois,

237
00:14:01,498 --> 00:14:04,124
et que la colonne ne soit pas trop grande

238
00:14:04,364 --> 00:14:06,202
et je vous laisse vérifier
quand vous faîtes,

239
00:14:06,202 --> 00:14:10,862
la colonne doit être inférieure 
au nombre de colonnes moins quatre.

240
00:14:11,023 --> 00:14:14,559
Quand on cherche 
vers la droite horizontalement,

241
00:14:14,979 --> 00:14:18,465
il suffit que la colonne ne soit
pas trop grande

242
00:14:18,935 --> 00:14:23,933
et qu'elle soit inférieure, de même,
au nombre de colonnes moins quatre.

243
00:14:24,463 --> 00:14:27,903
Quand on cherche en diagonale
vers le bas et la droite,

244
00:14:28,283 --> 00:14:31,773
il faut que la ligne ne soit pas trop
grande, et comme pour la colonne,

245
00:14:32,073 --> 00:14:35,063
il faut que la ligne soit inférieure
au nombre de lignes moins quatre,

246
00:14:35,463 --> 00:14:37,173
et que la colonne ne soit pas trop grande

247
00:14:37,463 --> 00:14:40,393
et quand on compte le nombre
de pions vers le bas,

248
00:14:40,753 --> 00:14:44,753
il suffit que la ligne soit inférieure
au nombre de lignes moins quatre.

249
00:14:45,685 --> 00:14:48,685
Maintenant, vous pouvez remarquer
que j'ai introduit plusieurs répétitions,

250
00:14:48,685 --> 00:14:54,215
puisque cette expression
apparaît ici et ici,

251
00:14:55,255 --> 00:14:59,065
et cette expression apparaît
également deux fois.

252
00:14:59,863 --> 00:15:05,273
Je vais donc introduire des constantes
pour remplacer ces répétitions,

253
00:15:05,793 --> 00:15:10,983
constantes que je vais appeler
logiquement <i>ligneMax et colonneMax</i>,

254
00:15:11,563 --> 00:15:15,563
et qui vont donc m'éviter ces répétitions.

255
00:15:18,645 --> 00:15:21,221
Voilà, cette fois-ci,
c'était vraiment la version finale

256
00:15:21,221 --> 00:15:24,077
de nos méthodes <i>estCeGagne</i> et <i>compte</i>,

257
00:15:24,587 --> 00:15:28,595
il nous reste à gérer le cas
où la grille devient pleine

258
00:15:28,595 --> 00:15:30,665
sans qu'aucun des deux joueurs n'ait gagné

259
00:15:31,005 --> 00:15:33,555
et c'est ce que vous allez voir 
dans la dernière vidéo.
