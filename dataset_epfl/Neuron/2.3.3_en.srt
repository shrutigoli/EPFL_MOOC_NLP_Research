1
00:00:05,743 --> 00:00:09,705
Here we're going to have a look
at the overall architecture

2
00:00:09,935 --> 00:00:12,060
of this platform,
and we are going to get into

3
00:00:12,245 --> 00:00:15,245
a great amount of details,
but just so that you know

4
00:00:15,530 --> 00:00:20,330
what is part of this platform
what part is generic and can be applied

5
00:00:20,516 --> 00:00:23,991
to any domain, and what part
is maybe more specific

6
00:00:24,233 --> 00:00:26,046
to neuro science.

7
00:00:26,295 --> 00:00:30,282
The top part is really
the generic part, here.

8
00:00:30,809 --> 00:00:35,009
And we have a number of
application here on the left.

9
00:00:35,266 --> 00:00:38,266
We have our Search Clients
which will allow you to

10
00:00:38,599 --> 00:00:40,649
once you've entered
the data into the platform

11
00:00:40,869 --> 00:00:45,419
browse and navigate
the provenance of

12
00:00:45,641 --> 00:00:48,641
the entities that you have entered,
and look at all the details

13
00:00:48,849 --> 00:00:51,261
view the data set,
download data and

14
00:00:51,469 --> 00:00:55,594
really explore everything
you have put into the platform.

15
00:00:55,948 --> 00:01:00,686
We have the Provenance Viewer,
a graphical application that allows

16
00:01:00,901 --> 00:01:04,163
you to really navigate this
provenance graph

17
00:01:04,371 --> 00:01:08,771
and discover new things,
introspect parts of it.

18
00:01:09,011 --> 00:01:12,011
We have an Ontology Viewer,
like I said ontologies are really

19
00:01:12,263 --> 00:01:16,113
a core concept of
our semantic engine

20
00:01:16,422 --> 00:01:18,222
and we have this application

21
00:01:18,441 --> 00:01:20,291
that lists all the ontologies that

22
00:01:20,504 --> 00:01:22,066
have been integrated
into our platforms

23
00:01:22,272 --> 00:01:26,922
we have a central place to go,
review them, and check,

24
00:01:27,114 --> 00:01:29,864
find specific information
that you want to use

25
00:01:30,064 --> 00:01:33,064
maybe in one
of your processes.

26
00:01:33,435 --> 00:01:38,048
We have a Provenance Editor,
which is an application

27
00:01:38,300 --> 00:01:43,412
which allows you to edit specific
entities, make revisions...

28
00:01:43,940 --> 00:01:49,365
While the platform have an API

29
00:01:49,663 --> 00:01:53,676
to interface with where data is stored,

30
00:01:55,306 --> 00:02:00,619
not everybody is a programmer
and we feel that there's a need

31
00:02:00,842 --> 00:02:06,642
for a user-friendly simple way
to bring more information

32
00:02:06,842 --> 00:02:12,204
into the platform, and so this is
the place where you want to do it.

33
00:02:12,456 --> 00:02:18,419
And finally, this is still
to come in the platform:

34
00:02:18,633 --> 00:02:22,858
a Domain Editor that would
allow here again a user-friendly

35
00:02:23,054 --> 00:02:26,229
way to design your domain,
create your entities

36
00:02:26,462 --> 00:02:29,737
define the properties, and put this
information into the platform

37
00:02:29,932 --> 00:02:32,332
make it available so
people can start collecting

38
00:02:32,539 --> 00:02:34,401
this kind of data.

39
00:02:34,594 --> 00:02:38,019
At the very bottom here,
we have the Atlas viewer

40
00:02:38,224 --> 00:02:40,799
and this is really a neuro science
specific application

41
00:02:40,987 --> 00:02:44,224
leveraging the platform so
domain specific applications

42
00:02:44,462 --> 00:02:47,462
can be developed
on top of this platform.

43
00:02:47,672 --> 00:02:54,209
This one in particular allows you
to introspect a 3D brain volume

44
00:02:54,415 --> 00:02:59,315
and look at specific annotations
of this brain volume

45
00:02:59,549 --> 00:03:04,136
and so, maybe I will
demonstrate that.

46
00:03:05,735 --> 00:03:08,735
Here for instance,
I will load

47
00:03:10,625 --> 00:03:13,625
Allan mouse data sets.

48
00:03:17,884 --> 00:03:21,434
Now we're going to look at
the corronal orientation of this

49
00:03:21,665 --> 00:03:27,552
specific data set and we can zoom
into the brain, we could look

50
00:03:27,771 --> 00:03:31,296
at different slices of it

51
00:03:32,227 --> 00:03:34,827
on the left hand side of it
you can see that this one's

52
00:03:35,020 --> 00:03:37,507
generated by the Allan
institute for Brain Science

53
00:03:37,731 --> 00:03:40,869
you can have the information
about the specific specimen

54
00:03:41,084 --> 00:03:44,784
it was a mouse,
it was 56 days post-natal,

55
00:03:44,998 --> 00:03:47,248
you can see the distribution
of the data set,

56
00:03:47,472 --> 00:03:51,172
the specific protocol
that allows generating this

57
00:03:51,415 --> 00:03:55,715
this data sets, and finally
you can draw more information 

58
00:03:55,913 --> 00:04:01,750
on top of this image to highlight
the specific brain region we are

59
00:04:01,953 --> 00:04:04,278
currently here highlighting.

60
00:04:04,558 --> 00:04:08,808
That's an example of
the application that is really

61
00:04:08,997 --> 00:04:10,735
domain specific.

62
00:04:10,966 --> 00:04:13,416
Now we're going to focus
on the right hand side

63
00:04:13,628 --> 00:04:16,628
of this architecture,
and the first thing that I want to

64
00:04:16,837 --> 00:04:22,112
to describe is this, so called,
Rest API, and this is really

65
00:04:22,307 --> 00:04:27,082
what people who are able to write
programs whether it's in python,

66
00:04:27,286 --> 00:04:33,536
in java, in go, these people are
able to interface with the platform

67
00:04:33,747 --> 00:04:38,309
through computer programs
and can very easily automate tasks

68
00:04:38,491 --> 00:04:41,491
whether it is to push
data into the platform

69
00:04:41,712 --> 00:04:46,250
or to run searches
to execute workflows 

70
00:04:46,456 --> 00:04:50,031
all of this can be
done using the Rest API

71
00:04:50,248 --> 00:04:55,710
which again I want to stress it
is programming language agnostic

72
00:04:55,927 --> 00:05:02,940
and today is a very common way
to access computer systems.

73
00:05:03,152 --> 00:05:09,102
Behind this Rest API, which is
something you cannot interface with

74
00:05:09,280 --> 00:05:11,605
directly,
everything has to be done

75
00:05:11,844 --> 00:05:13,682
through the front of the rest API,

76
00:05:13,909 --> 00:05:16,721
we have other services
that will allow you to do your

77
00:05:16,911 --> 00:05:20,036
domain definition,
so in which you find

78
00:05:20,237 --> 00:05:22,737
the concept of Provenance,
like I said, it is already provided

79
00:05:22,935 --> 00:05:26,548
with the platform and
you will bring in your

80
00:05:26,787 --> 00:05:29,787
your own Entity schemas,
so that's how you register 

81
00:05:30,132 --> 00:05:32,970
new entities into the platform.

82
00:05:33,168 --> 00:05:37,880
The Knowledge Graph, of course
has the concept of ontologies

83
00:05:38,138 --> 00:05:44,001
the entities you have entered
that themselves are defined

84
00:05:44,204 --> 00:05:47,441
on the Entity schemas and
the raw data you want to attach

85
00:05:47,674 --> 00:05:49,986
to some of the entities.

86
00:05:50,205 --> 00:05:52,480
Like I said earlier, 
security is (INAUDIBLE)

87
00:05:52,696 --> 00:05:54,946
and so we have these
two services here

88
00:05:55,139 --> 00:06:01,552
and ACL service, which stands
for Access Control Lists

89
00:06:01,765 --> 00:06:07,490
and this is really the mechanism
to tell the platform that

90
00:06:07,737 --> 00:06:10,487
the specific entities
is only visible to me

91
00:06:10,675 --> 00:06:16,250
or only visible to my research group
or can be viewed by anyone on

92
00:06:16,450 --> 00:06:19,450
the internet, so that can be at
the level of the meta data

93
00:06:19,665 --> 00:06:22,665
but also at the level
of the raw data.

94
00:06:22,991 --> 00:06:29,554
And these ACLs are intricately
linked to the identity service

95
00:06:29,746 --> 00:06:32,846
which is really, well,
imagine you go to a website

96
00:06:33,095 --> 00:06:36,008
and you log in:
you have your own identity

97
00:06:36,246 --> 00:06:39,246
and the system recognizes
and acknowledges this identity

98
00:06:39,549 --> 00:06:42,212
before they let you into the system.

99
00:06:42,423 --> 00:06:46,123
So first you have to identify
yourself and once you're identified

100
00:06:46,345 --> 00:06:50,708
we can use the ACL service
to find out if you have access

101
00:06:50,893 --> 00:06:54,406
to this part, can we actually show
it to you and all these decisions

102
00:06:54,633 --> 00:06:59,433
are made behind the scene prior to
dispatching the information to you.

103
00:07:00,803 --> 00:07:08,203
Now on the lower part we have some
specific APIs that are also

104
00:07:08,440 --> 00:07:13,215
domain specific, so we have
an Image Service which really is

105
00:07:13,426 --> 00:07:19,351
the back-end of this application
we have looked at.

106
00:07:19,549 --> 00:07:24,374
So obviously this application
is interfacing with the Rest API

107
00:07:24,622 --> 00:07:29,447
but behind the scene this
Rest API dispatches requests

108
00:07:29,663 --> 00:07:35,551
to get tides of your specific
brain slice and the Rest API

109
00:07:35,764 --> 00:07:38,851
relays this information
to your (INAUDIBLE) application.

110
00:07:39,587 --> 00:07:45,025
Similarly we have this other
application called the Voxel Brain

111
00:07:45,226 --> 00:07:50,501
this API is really another
way to organize data in

112
00:07:50,706 --> 00:07:52,443
a brain Atlas.

113
00:07:52,640 --> 00:07:57,403
So, imagine the 3D volume,
that is the Brain you are studying

114
00:07:57,596 --> 00:08:00,146
you only have
additional information

115
00:08:00,350 --> 00:08:04,500
for instance, the density of
the specific kind of neuron

116
00:08:04,701 --> 00:08:10,201
and so that 3D volume can
be sliced into very little cubes

117
00:08:10,448 --> 00:08:11,910
so 3D shapes.

118
00:08:12,120 --> 00:08:17,320
Voxel is really the 3D
counterpart of a Pixel

119
00:08:17,554 --> 00:08:22,054
and so people decided to call 
that a voxel.

120
00:08:22,266 --> 00:08:31,903
So it is just a little 3D shape
in which you store, for instance

121
00:08:32,106 --> 00:08:39,118
a numerical value, so if I know
that I have X value

122
00:08:39,321 --> 00:08:41,834
in that specific Voxel,
I can store it there

123
00:08:42,038 --> 00:08:45,038
and so we have this API
that allows you to say:

124
00:08:45,305 --> 00:08:49,867
"Well that very specific region
of the Brain give me all the Voxels"

125
00:08:50,082 --> 00:08:54,220
"annotated with density of
a specific kind of neuron"

126
00:08:54,401 --> 00:08:56,001
"and let me work with that."

127
00:08:56,200 --> 00:08:59,200
And so this API will return this
information to the user

128
00:08:59,542 --> 00:09:04,992
then let them execute their
usecase with information.

