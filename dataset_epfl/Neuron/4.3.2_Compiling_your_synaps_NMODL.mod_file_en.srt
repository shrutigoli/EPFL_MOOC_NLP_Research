1
00:00:05,407 --> 00:00:07,732
Now that we've
defined our "MOD" file

2
00:00:08,108 --> 00:00:11,746
it needs to be compiled such
that it can be used in NEURON.

3
00:00:11,980 --> 00:00:14,680
NEURON provides a tool
called "nrnivmodl"

4
00:00:14,881 --> 00:00:16,844
which has the following syntax.

5
00:00:17,059 --> 00:00:20,059
"Nrnivmodl" and then a directory.

6
00:00:20,296 --> 00:00:24,096
Invocation will compile all
MOD files found in the directory

7
00:00:24,364 --> 00:00:26,326
if specified,
otherwise it will compile

8
00:00:26,546 --> 00:00:28,584
MOD files in the current directory.

9
00:00:28,805 --> 00:00:31,630
Our MOD file is located
in the "mechanisms"

10
00:00:31,864 --> 00:00:34,089
so we will compile it as follows.

11
00:00:34,301 --> 00:00:37,301
Note, the exclamation mark
is used to invoke system call

12
00:00:37,489 --> 00:00:39,739
outside Python,
as this application

13
00:00:39,953 --> 00:00:42,766
is external to
the Jupyter framework.

14
00:00:43,029 --> 00:00:45,629
Let's execute this statement.

15
00:00:47,018 --> 00:00:50,180
Here's the output of the statement,
as you can see it is executing

16
00:00:50,371 --> 00:00:55,971
a series of compilation steps,
note the successful completion

17
00:00:56,269 --> 00:00:59,269
of the compilation.

18
00:00:59,717 --> 00:01:01,655
It's important to verify that

19
00:01:01,866 --> 00:01:04,866
the compilation is
successfully completed

20
00:01:05,141 --> 00:01:08,404
if any error messages are generated,
then something may be wrong

21
00:01:08,641 --> 00:01:11,091
in your MOD file program,
double-check your MOD file

22
00:01:11,301 --> 00:01:13,613
and try again,
in such a case.

23
00:01:15,050 --> 00:01:17,775
Now, let's try our new
synapse model out.

24
00:01:17,970 --> 00:01:20,982
If your mod files are compiled
before you import NEURON

25
00:01:21,164 --> 00:01:23,339
NEURON will load your
compiled models

26
00:01:23,531 --> 00:01:26,381
automatically if they are
in your local directory.

27
00:01:26,602 --> 00:01:30,327
In our case, because we
invoked "Nrnivmodl"

28
00:01:30,513 --> 00:01:33,625
in the current directory,
they will be found automatically.

29
00:01:33,883 --> 00:01:37,245
Let's proceed with
the initialization steps

30
00:01:38,144 --> 00:01:39,531
as seen here.

31
00:01:39,820 --> 00:01:43,083
More explicitly, we're importing
NEURON which will trigger

32
00:01:43,274 --> 00:01:46,274
the loading of the MOD files
as compiled above

33
00:01:46,455 --> 00:01:49,068
we're importing "numpy"
and "matplotlib"

34
00:01:49,270 --> 00:01:52,458
for a numerical analysis
and plotting

35
00:01:52,647 --> 00:01:55,647
and we're initializing
the neuron environment

36
00:01:55,902 --> 00:01:58,902
as you have seen in
the previous tutorials.

37
00:01:59,974 --> 00:02:02,399
It's important to know that,
if you forget to compile your

38
00:02:02,592 --> 00:02:06,079
MOD files before importing NEURON,
you can trigger NEURON to load

39
00:02:06,302 --> 00:02:07,690
them as follows.

40
00:02:07,893 --> 00:02:12,418
Note, this command can only
be executed once for a given

41
00:02:12,606 --> 00:02:14,231
directory of MOD files.

42
00:02:14,424 --> 00:02:18,324
Executing it a second time will
will crash your Jupyter kernel.

43
00:02:18,545 --> 00:02:20,220
As seen here.

44
00:02:21,390 --> 00:02:25,965
As we execute the statement
the kernel will crash.

45
00:02:27,342 --> 00:02:35,255
To recover from this we
don't have to recompile this step.

46
00:02:35,745 --> 00:02:39,833
But we do have to
re-execute this line.

47
00:02:41,061 --> 00:02:42,974
Let's comment that
line out to ensure

48
00:02:43,160 --> 00:02:46,360
we don't crash our kernel again.

