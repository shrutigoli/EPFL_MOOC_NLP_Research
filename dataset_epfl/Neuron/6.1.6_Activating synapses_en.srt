1
00:00:06,051 --> 00:00:10,825
So the model code also provides
information about the synapses

2
00:00:11,063 --> 00:00:14,388
as they were added in the circuit.

3
00:00:15,724 --> 00:00:22,512
So basically what we are now having
simulated is one single cell

4
00:00:22,829 --> 00:00:27,842
but we can add all the synapses
to the morphology of this cell

5
00:00:28,035 --> 00:00:31,660
and we can also connect
Poisson generators

6
00:00:31,871 --> 00:00:34,871
to every on of these synapses.

7
00:00:35,411 --> 00:00:41,986
So that basically means that
we're having virtual cells

8
00:00:42,213 --> 00:00:46,838
that act as pre-synaptic cells
so that we can see a little bit

9
00:00:47,018 --> 00:00:50,018
of network-like activity.

10
00:00:50,797 --> 00:00:55,547
The information about the synapses
is located in the attribute of

11
00:00:55,773 --> 00:00:58,773
the cell object, namely
the synapses object

12
00:00:59,407 --> 00:01:03,682
and so for example, the synapses
object hast an attribute

13
00:01:03,869 --> 00:01:08,494
synapse lists, which basically is
a list of all the synapse objects.

14
00:01:08,690 --> 00:01:11,528
So if we get the length
of this object we know

15
00:01:11,705 --> 00:01:13,768
how many synapses
there are in a cell.

16
00:01:13,962 --> 00:01:19,999
So for example this particular
cell has 5267 synapses.

17
00:01:20,859 --> 00:01:24,009
So like I said, every
pre-synaptic cell

18
00:01:24,187 --> 00:01:28,312
in this case will be represented
by a Poisson generator

19
00:01:28,538 --> 00:01:31,538
and all these Poisson generators
which are actually implemented

20
00:01:31,711 --> 00:01:34,711
as a "netstim" object
in NEURON

21
00:01:34,955 --> 00:01:37,080
are located in a "netstim" list.

22
00:01:37,261 --> 00:01:39,861
So again, if we look at
the length of this list we get

23
00:01:40,061 --> 00:01:43,686
a number of pre-synaptic
cells, which is 920.

24
00:01:44,645 --> 00:01:46,432
So you might find
this slightly strange

25
00:01:46,621 --> 00:01:47,946
because there
are actually less

26
00:01:48,135 --> 00:01:50,697
pre-synaptic cells than
there are synapses

27
00:01:50,895 --> 00:01:55,433
but this is not strange at all, some
or most of the pre-synaptic cells

28
00:01:55,646 --> 00:02:01,034
are actually connecting to our
cell with more than one synapse.

29
00:02:01,303 --> 00:02:04,266
So it's basically called
a multi-synaptic connection

30
00:02:04,457 --> 00:02:07,632
and as you can see,
there is definitely

31
00:02:08,226 --> 00:02:10,364
a whole set of
multi-synaptic connections

32
00:02:10,539 --> 00:02:14,339
in the pre-synaptic cells
to the synapses of our cell.

33
00:02:15,625 --> 00:02:19,500
So as it was mentioned before
the cells in our circuit

34
00:02:19,687 --> 00:02:24,612
are classified according
to the morphological type.

35
00:02:24,972 --> 00:02:32,684
So actually you can already see here
that there are 55 M types

36
00:02:32,864 --> 00:02:34,139
in the circuit.

37
00:02:34,351 --> 00:02:36,688
You can actually go to
the MNC portal website

38
00:02:36,865 --> 00:02:39,178
and there is a glossary
there that shows

39
00:02:39,380 --> 00:02:41,243
what all these abbreviations mean

40
00:02:41,418 --> 00:02:44,131
so for example MC is
a Martinotti cell

41
00:02:44,334 --> 00:02:47,334
LBC is a large basket cell

42
00:02:48,173 --> 00:02:53,873
and all these morphological
types have been assigned

43
00:02:54,103 --> 00:02:59,415
to certain integer value
in this model package.

44
00:02:59,654 --> 00:03:04,916
So you can actually access
the M type map

45
00:03:05,136 --> 00:03:07,448
type separated file

46
00:03:07,654 --> 00:03:12,479
in the model package

47
00:03:12,906 --> 00:03:17,856
and you can see all these integers

48
00:03:18,058 --> 00:03:22,058
that map to the string
of the M type.

49
00:03:22,611 --> 00:03:25,711
So these integers are important
because some structures

50
00:03:25,910 --> 00:03:31,560
in a model here are sorted according
to this number, so we can easily

51
00:03:31,766 --> 00:03:35,403
get all the pre-synaptic cells
of the certain M type

52
00:03:35,610 --> 00:03:38,123
if you know this exact number.

53
00:03:38,363 --> 00:03:41,863
So we're actually storing this
map into a Python dictionary

54
00:03:42,053 --> 00:03:46,915
so that we can easily get integer
numbers for a certain M type.

55
00:03:47,142 --> 00:03:51,067
So for example, L23PC is 6.

56
00:03:51,406 --> 00:03:56,543
So for example, now we can activate,
all the pre-synaptic cells

57
00:03:56,760 --> 00:03:58,972
which are of certain M types,
so for example

58
00:03:59,164 --> 00:04:07,451
let's activate all the L23PC
pre-synaptic cells so the layer 2

59
00:04:07,625 --> 00:04:10,538
and layer 3 pyramidal cells.

60
00:04:10,723 --> 00:04:14,248
So I've written a little convenience
function that allows you to

61
00:04:14,460 --> 00:04:17,660
initialize the synapses,
so you basically call it like this

62
00:04:17,873 --> 00:04:21,961
you just say "initialize synapses",
and then you say "enable M types"

63
00:04:22,158 --> 00:04:25,058
and you give a list
of names of M types.

64
00:04:25,246 --> 00:04:27,896
So basically what's happening
inside this function is

65
00:04:28,107 --> 00:04:32,694
that we are saying to
the code that we want to go

66
00:04:32,884 --> 00:04:37,871
from inactive synapse to active
synapse for a certain M type

67
00:04:38,056 --> 00:04:42,118
or vice versa to
disable the synapses.

68
00:04:43,450 --> 00:04:48,475
So now that we have activated
all the L23PC pre-synaptic cells

69
00:04:48,658 --> 00:04:50,583
we can run a little simulation.

70
00:04:50,770 --> 00:04:54,495
Again, we're going to run for 600ms

71
00:04:54,717 --> 00:04:56,617
and we're going
to save the recording

72
00:04:56,809 --> 00:04:58,634
input and output.

73
00:04:58,829 --> 00:05:01,829
Again this will take a little
bit of time to execute.

74
00:05:02,285 --> 00:05:06,273
So as you can see,
our L23PCs have activated

75
00:05:06,473 --> 00:05:11,310
our post-synaptic cell here,
and it actually fired one spike

76
00:05:11,512 --> 00:05:13,750
or let it fire one spike;

77
00:05:13,991 --> 00:05:16,041
and we can also see that
now that trace is a bit noisy

78
00:05:16,213 --> 00:05:22,263
because we have all these
post-synaptic potentials

79
00:05:22,461 --> 00:05:27,049
arriving from
the pre-synaptic cells.

80
00:05:27,254 --> 00:05:31,004
As you can see from the trace above,
the cell is not very active

81
00:05:31,196 --> 00:05:35,046
during this bombardment
from the L23PCs.

82
00:05:35,288 --> 00:05:39,776
We can actually show
much bigger activation

83
00:05:39,980 --> 00:05:45,880
by activating the pre-synaptic
L5 thick-tufted pyramidal cells.

84
00:05:46,528 --> 00:05:50,865
It's basically other cells from
the same M  type as this cell

85
00:05:51,036 --> 00:05:54,936
because this cell is also
an L5 thick-tufted pyramidal cell

86
00:05:55,135 --> 00:06:00,360
that are projecting to our
current post-synaptic cell.

87
00:06:00,786 --> 00:06:03,786
So let's also run this code.

88
00:06:04,837 --> 00:06:07,050
So you see that this is
a completely different story.

89
00:06:07,246 --> 00:06:13,146
So in this case, the pre-synaptic
cells managed to get our cell to

90
00:06:13,350 --> 00:06:16,962
fire 8 spikes, and you see
there's a lot more activity

91
00:06:17,155 --> 00:06:20,155
in the baseline level.

92
00:06:21,419 --> 00:06:24,819
Now, let's try to do the opposite,
let's try to actually prevent

93
00:06:25,030 --> 00:06:27,155
the cell from spiking.

94
00:06:27,338 --> 00:06:31,438
This we can, for example,
do by adding some inhibition

95
00:06:31,644 --> 00:06:37,207
so the L23PC is a pyramidal cell,
so it's an excitatory cell

96
00:06:37,439 --> 00:06:41,827
but we can also activate
a whole set of inhibitory

97
00:06:42,045 --> 00:06:45,045
interneurons that will fire
at the same time

98
00:06:45,348 --> 00:06:48,348
that will actually inhibit
the cell from firing.

99
00:06:48,718 --> 00:06:52,380
We can also execute this
line of code.

100
00:06:53,455 --> 00:06:57,055
This is an example of
an output trace that you can get.

101
00:06:57,891 --> 00:07:02,004
You see that now the Y axis
is actually much narrower

102
00:07:02,221 --> 00:07:08,846
so it's going from -67mV to -59mV,
while before we actually had

103
00:07:09,044 --> 00:07:10,582
a much wider range.

104
00:07:10,758 --> 00:07:14,195
It means that reaction
not firing any action potentials

105
00:07:14,381 --> 00:07:17,381
during our simulation.

106
00:07:19,966 --> 00:07:24,104
I also want to warn that these
simulations are stochastic

107
00:07:24,327 --> 00:07:27,327
so the synapses are stochastic.

108
00:07:27,714 --> 00:07:33,451
It's not sure that for every
time you run this code

109
00:07:33,685 --> 00:07:37,235
that it will actually inhibit
the spike and you just have to be

110
00:07:37,417 --> 00:07:41,180
slightly lucky that the inhibition
happens at the right time.

111
00:07:41,466 --> 00:07:46,091
So in case you get spikes,
just run it again and you might

112
00:07:46,280 --> 00:07:48,568
get a different result.

113
00:07:49,441 --> 00:07:51,841
Now let's see how
we can also influence

114
00:07:52,030 --> 00:07:55,680
the activity of this pre-synaptic
Poisson generators .

115
00:07:55,959 --> 00:08:00,634
So every Poisson generator
is represented by a NEURON

116
00:08:00,841 --> 00:08:05,329
"netstim" object, you can actually
look on the documentation page

117
00:08:05,528 --> 00:08:08,190
of the NEURON simulator
to find some information

118
00:08:08,361 --> 00:08:10,236
about these attributes.

119
00:08:10,443 --> 00:08:16,406
In this case we have,
we can access all

120
00:08:16,614 --> 00:08:21,089
the pre-synaptic "netstims"
in a list

121
00:08:21,264 --> 00:08:24,264
and we can, for example,
set the interval variable

122
00:08:24,574 --> 00:08:27,961
in this case, to 10000,
so it means

123
00:08:28,190 --> 00:08:32,228
that actually the average
interval between two spikes

124
00:08:32,420 --> 00:08:36,507
per Poisson process
will be 10 seconds.

125
00:08:37,835 --> 00:08:42,297
But since we have lots of
pre-synaptic cells

126
00:08:42,492 --> 00:08:47,617
we will still have a decent
amount of pre-synaptic

127
00:08:47,840 --> 00:08:51,953
events in the 600ms
we are simulating.

128
00:08:53,932 --> 00:08:56,394
So let's run this code.

129
00:08:56,586 --> 00:08:58,736
So as you can see,
there's now a big difference

130
00:08:58,938 --> 00:09:02,901
in the trace compared
to our previous activation

131
00:09:03,100 --> 00:09:07,137
of the pre-synaptic layer 5
thick-tufted pyramidal cells.

132
00:09:08,032 --> 00:09:11,157
We have much less activity
and you can actually also

133
00:09:11,356 --> 00:09:14,606
nicely now see
the post-synaptic events.

134
00:09:14,811 --> 00:09:19,911
So basically this is one
pre-synaptic cell firing

135
00:09:20,161 --> 00:09:24,111
and creating one
post-synaptic event

136
00:09:24,351 --> 00:09:28,126
on the cell, on our cell,
and again here

137
00:09:28,547 --> 00:09:32,559
two more events.

