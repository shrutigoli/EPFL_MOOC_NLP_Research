So, at this stage I would like to introduce Blue Brain Nexus which is a platform we are developing now within the Blue Brain project.
And in a few statements I would like to tell you what the Brain Nexus is.
It is a data repository, you can store in it all your data and manage it from within the platform.
It is a metadata catalogue in a sense that you can create your entities with the very specific metadata attributes.
And you can manage all these entities in the platform, and revise them, update them without loosing any of the information and have full traceability of who did what on these entities so you can manage all the metadata.
It does treat provenance as a first class citizen.
That means, when you install the platform in your institution, like we're doing in the brain, problems is already ready.
So it is a set of entities like you're going to define your own entities for your own domain.
But there're already preinstalls and well understood by the platform so you can leverage them from the beginning.
And important thing even so this presentation is about neuroscience,
Blue Brain Nexus itself is agnostic of any domain, it is not written to be specific to neuroscience, you could design any other scientific domain or industrial domain on it.
So, the point is you have to create your own domain.
Reuse existing domain and bring them into your platform to start collecting your own metadata and data.
It has a deep understanding of ontologies and it does support them inherently, so you can bring your own ontologies and vocabularies into the platform.
It is also semantic search engine that allows you to once you have its metadata progress information, leverage this information to ask relevant scientific questions.
It is secure for any whether scientific or industrial purposes you want to be sure that both your data and your metadata is not being leaked to the wells and when you enter information and you require that this is only visible by me the platform enforces these rules and keeps it private.
Now, when you're ready to share your data with your group or the rest of the world, you can say so and the platform will just reflect these requests and share the data appropriately.
Finally, it is built to handle very large amount of data and metadata and have a highly concurrent usage.
So, it is built to be a production system that you can depend on to build your science.
So, in these slides I will give you more concrete information about how you would use the Brain
Nexus to deal with your own domain.
So, like I've said it comes with provenance, already present in a platform and we haven't really reinvented provenance, this is a well-defined, well understood concept.
And W3C has already defined a standard for this called W3C-Prov.
So, very naturally, we have imported these concepts into the platform and they are supported natively.
So, this is what I'm showing here.
So, on the right hand side I have the diagram that illustrate for you what you can do with a platform.
So, the lower part here is what
I call the generic part of the platform.
So, provenance comes already with it preinstalled so we don't have to worry about it.
And as parts of the provenance there's a concept of a provenance entity which is completely domain agnostic.
It is just something that can be used as an item you can derive from.
And so at this stage what is left for the user to do is to define your own domain and extend the concept of provenance entity.
So, this is what I'm showing here, you have
I'm not going to take yet very concrete domain, but let's say your domain is made of four types of entities,
A, B, C and D.
These entities can extend through these links.
The concept of a provenance entity and by doing so you start being able to use them in any provenance chain.
So, the first step is to define your own provenance entities and there's a formal way to do that through schemas and this is many more of the technical details
I will not really dive too deep into.
But these formats you have to use to describe simply how your entities called and the properties you wish to set on it and the constrains you want to define on this entity.
Once you have defined it, so you have your file of this project you will have to register it into the platform.
And there's just a way to tell the platform: here's my entity, it extends the provenance entity concepts and here's its name and its definition, please ingest it.
And give me an API to interface with it.
And the important thing here is by doing so the platform dynamically makes available this new entity to anyone who's allowed to use it.
And you haven't had to write a single line of code.
So, you're able to define parts of your domain push them into the platform and start operating on it right away.
So, the platform does support schema and metadata versioning so obviously you define your domain today but you may have forgotten something, or new use case arrives and you need to add another couple of properties into your entity no problem with that, you can just take your schema as it were add the necessary information you want to put in it.
Save it again and you will get a new version of this schema that can then be used into the platform.
Same goes for the metadata.
So, once you have defined your schema, you can start creating instances of this entity, so the schema is really the definition, the shape of this entity.
But the instances of this entity are really the real data.
And with real value for the attributes and so you can save them into the platform.
But again there you may have say, made a mistake, or you didn't have the full info at the time you created it so you may want to get back to it and make an edit and save it again.
So, again, the platform fully supports this and you can trace who has done exactly what and look at the full history of both schemas and provenance entity instances.
It does support file upload and downloads with security in mind.
And finally, once you have into it define your schema fed the platform with the instances of these entities for the metadata, you can start brand new semantic queries that integrate both the metadata and the provenance stored in a graph.
So, the goal really for us is to give the power back to our users.
So the platform does allow the scientist to really take care of defining their domain.
It's not a fact that they will do it all by themselves we are going to guide them and help them defining it and get though some of the technical hurdles of doing so.
And so we feel that by allowing the scientist to take control back of the domain they care about and they also the most knowledgeable about this domain, we can each do what we're best at.
The scientist about the domain and the software engineers at building systems that will serve the purpose of science.
So, that's really the ultimate goal of the Brain Nexus.
