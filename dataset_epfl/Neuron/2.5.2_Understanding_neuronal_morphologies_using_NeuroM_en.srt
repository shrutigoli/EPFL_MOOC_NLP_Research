1
00:00:05,259 --> 00:00:08,259
So in order to analyse
our morphologies,

2
00:00:08,459 --> 00:00:12,471
we will use NeuroM, a software
that is available in GitHub.

3
00:00:14,837 --> 00:00:19,612
With NeuroM, you can visualise
a neuronal morphology,

4
00:00:20,197 --> 00:00:23,785
assess its quality, and extract
basic morphometrics

5
00:00:23,985 --> 00:00:27,110
that can be used for the comparison
and classification of neurons.

6
00:00:28,668 --> 00:00:30,905
First of all, we provide
two applications

7
00:00:31,105 --> 00:00:35,218
to check the quality of the cell,
and extract some basic morphometrics

8
00:00:35,418 --> 00:00:37,768
without even using Python coding.

9
00:00:38,348 --> 00:00:40,586
The first one is morph_check.

10
00:00:41,739 --> 00:00:45,402
You select the morphology

11
00:00:46,307 --> 00:00:50,769
and you give the path to the file
that you want to analyse.

12
00:00:52,480 --> 00:00:54,730
So once you run that,

13
00:00:56,310 --> 00:00:58,922
you go through a list
of checks:

14
00:01:00,538 --> 00:01:03,851
if the whole morphology
is connected,

15
00:01:04,051 --> 00:01:05,926
if it has a soma,

16
00:01:06,126 --> 00:01:08,938
if the IDs are sequential,

17
00:01:10,767 --> 00:01:13,242
if it has valid neurites,

18
00:01:13,717 --> 00:01:17,330
if it contains a dendrite,
if it contains an axon,

19
00:01:18,337 --> 00:01:21,337
and then some more detailed tests

20
00:01:22,324 --> 00:01:25,849
that concern the length
of the segment,

21
00:01:26,410 --> 00:01:28,335
the length of the sections,

22
00:01:28,955 --> 00:01:31,368
and the radius.

23
00:01:32,235 --> 00:01:36,423
So, you don't necessarily need
to pass all those tests

24
00:01:36,623 --> 00:01:39,135
for your morphology to be valid.
For example, 

25
00:01:39,685 --> 00:01:42,973
some morphologies do not have
an apical dendrite,

26
00:01:43,680 --> 00:01:48,305
so it's up to you to decide how to 
interpret the results of this test.

27
00:01:51,176 --> 00:01:55,051
But then you might want to go
into more details

28
00:01:55,653 --> 00:02:00,266
and do some morphological
statistics extraction.

29
00:02:02,970 --> 00:02:06,758
So we will use the application
morph_stats for that.

30
00:02:10,000 --> 00:02:11,600
Calling this application

31
00:02:11,842 --> 00:02:16,767
you see that returns a list of 
different morphological features.

32
00:02:17,752 --> 00:02:20,652
The most common one is 
total length.

33
00:02:21,253 --> 00:02:24,653
And then some more 
detailed statistics

34
00:02:24,853 --> 00:02:27,516
on the lengths of the sections,
or the volumes.

35
00:02:27,716 --> 00:02:30,053
So this is just
an example

36
00:02:30,253 --> 00:02:33,716
of some feature analysis
that you can run

37
00:02:33,916 --> 00:02:35,991
on your selected morphology.

38
00:02:37,109 --> 00:02:40,446
You see that this is separated
into different sections

39
00:02:41,247 --> 00:02:43,885
that refer to different tree types.

40
00:02:44,085 --> 00:02:47,660
For example, in the beginning
we have the axonal features,

41
00:02:47,860 --> 00:02:51,122
then we sum up the features
for the whole morphology.

42
00:02:52,029 --> 00:02:54,092
Then the soma features,

43
00:02:54,292 --> 00:02:56,704
the apical and 
the basal dendrites.

44
00:02:57,886 --> 00:03:00,148
So with this application,

45
00:03:01,054 --> 00:03:03,816
you can extract 
the global statistics

46
00:03:04,016 --> 00:03:06,091
and save them into a file and

47
00:03:06,707 --> 00:03:08,607
then do some further analysis.

48
00:03:08,931 --> 00:03:12,668
But if you want to do 
that directly in Python,

49
00:03:13,159 --> 00:03:15,747
we can use NeuroM interactively.

50
00:03:17,310 --> 00:03:20,310
So here, we will import
a model

51
00:03:20,510 --> 00:03:22,210
and load the neuron.

52
00:03:23,057 --> 00:03:26,419
To import NeuroM, you just
import NeuroM

53
00:03:27,181 --> 00:03:30,981
and once you have
your module loaded,

54
00:03:31,887 --> 00:03:33,125
you can get your morphology.

55
00:03:33,325 --> 00:03:37,000
So once again you have to select
tot he morphology file.

56
00:03:37,668 --> 00:03:41,193
And then you 
do neurom.load_neuron.

57
00:03:42,425 --> 00:03:46,987
In this case, you will just load
one neuron in the program.

58
00:03:47,375 --> 00:03:50,175
You can also do the same thing
for multiple neurons

59
00:03:50,749 --> 00:03:53,711
but then you just have to do
load_neurons

60
00:03:53,911 --> 00:03:57,199
and give the full path to
a set of morphologies,

61
00:03:57,399 --> 00:03:59,711
not the single morphology file.

62
00:04:00,681 --> 00:04:02,318
So once you've loaded
your morphology

63
00:04:02,518 --> 00:04:04,756
we can go into
the visualisation.

64
00:04:08,120 --> 00:04:13,157
Those are just some commands to
setup the size of the figures

65
00:04:14,489 --> 00:04:16,864
but the module we're 
going to use

66
00:04:17,447 --> 00:04:19,884
is inside neurom.viewer,

67
00:04:20,084 --> 00:04:23,084
and from that
the draw function.

68
00:04:23,689 --> 00:04:27,214
So from neurom.viewer, 
we import the draw function.

69
00:04:28,279 --> 00:04:31,554
And if you want to see more 
details about this draw function,

70
00:04:32,153 --> 00:04:35,366
you just call the help.

71
00:04:35,566 --> 00:04:38,653
So you can do that by draw?

72
00:04:39,691 --> 00:04:43,404
And what appears here is
a small example

73
00:04:44,642 --> 00:04:48,692
about how you can use
this viewer.

74
00:04:49,186 --> 00:04:52,124
So here is the help
function of the draw.

75
00:04:54,357 --> 00:04:57,582
You can see the details of how
you can use the 

76
00:04:58,921 --> 00:05:00,509
draw function.

77
00:05:01,366 --> 00:05:04,566
And what is currently
available in the viewer

78
00:05:04,766 --> 00:05:08,153
is a 2D plot, a 3D plot
or a dendogram.

79
00:05:08,353 --> 00:05:13,028
So let's go and run those
three functions

80
00:05:13,316 --> 00:05:15,316
and see our morphology.

81
00:05:15,715 --> 00:05:18,340
So if you just do
draw(my_neuron),

82
00:05:20,162 --> 00:05:22,862
you get the figure
of the morphology, 

83
00:05:23,062 --> 00:05:24,774
the 2D plot.

84
00:05:25,308 --> 00:05:28,758
And what you can see is the apical
dendrite in purple,

85
00:05:29,344 --> 00:05:31,519
the basal dendrite in red,

86
00:05:31,719 --> 00:05:33,657
and the axon in blue.

87
00:05:33,962 --> 00:05:37,650
And this is a convention we use
throughout NeuroM in general,

88
00:05:37,850 --> 00:05:39,475
this colour code.

89
00:05:40,276 --> 00:05:43,938
Now you can select a different 
mode for the draw.

90
00:05:44,666 --> 00:05:48,641
So what you can do is to draw
your morphology in 3D.

91
00:05:52,366 --> 00:05:56,066
And once you do that, you get
the 3D plot of the morphology.

92
00:05:56,671 --> 00:05:58,946
If you're doing electrical
modeling, 

93
00:05:59,146 --> 00:06:02,409
you might be interested in
the dendogram of the morphology.

94
00:06:03,434 --> 00:06:06,959
So let's now try
the mode dendogram

95
00:06:07,159 --> 00:06:09,209
of the same function.

96
00:06:11,558 --> 00:06:15,533
If you're interested in 
the electrical activity

97
00:06:16,500 --> 00:06:19,500
of the neuron, you might
want to see the dendogram.

98
00:06:20,644 --> 00:06:23,994
To do so,  we select
the mode dendogram.

99
00:06:24,399 --> 00:06:27,849
So we draw our neuron and,

100
00:06:28,049 --> 00:06:31,049
as you can see we use
the same colour code

101
00:06:31,249 --> 00:06:35,574
where the apical is purple,
the basals are red,

102
00:06:35,774 --> 00:06:37,662
and the axons are blue.

103
00:06:37,922 --> 00:06:40,497
And here you can already
see the difference

104
00:06:40,697 --> 00:06:43,697
in the sizes of those
three types of trees

105
00:06:45,570 --> 00:06:49,195
because the apicals and
the axons extend much more

106
00:06:49,395 --> 00:06:52,395
than the basal dendrites.

107
00:06:53,402 --> 00:06:56,639
So now that we've seen
our morphologies,

108
00:06:56,839 --> 00:06:58,689
we want to start
analysing them.

109
00:06:58,889 --> 00:07:02,339
So we want to extract some
basic morphological features.

110
00:07:03,298 --> 00:07:05,610
And the most common features
that are used is

111
00:07:05,810 --> 00:07:08,810
the total length or 
the total surface area

112
00:07:09,532 --> 00:07:12,807
or a global statistic such
as the soma size.

113
00:07:14,126 --> 00:07:16,289
To get the complete
list of features

114
00:07:16,489 --> 00:07:19,489
that are currently available
in NeuroM,

115
00:07:19,689 --> 00:07:22,126
you can use the help function
of the get.

116
00:07:22,612 --> 00:07:26,074
So you do neurom.get?

117
00:07:27,540 --> 00:07:31,214
and this help box appears here.

118
00:07:32,156 --> 00:07:34,681
So you have different 
levels of features.

119
00:07:34,881 --> 00:07:37,594
The first one is neurite features

120
00:07:37,794 --> 00:07:40,531
which refers to individual trees.

121
00:07:41,480 --> 00:07:44,830
Those are lengths,
volumes,

122
00:07:45,030 --> 00:07:49,330
number of sections,
or number of bifurcations,

123
00:07:49,530 --> 00:07:51,480
or number of terminations,

124
00:07:52,655 --> 00:07:55,655
and then at the end,
you have the neuron features.

125
00:07:55,855 --> 00:08:00,067
So those are global features for
the whole neuron morphology.

126
00:08:01,047 --> 00:08:03,722
Some of them refer to the soma

127
00:08:03,922 --> 00:08:06,922
such as the soma radi,
or the surface areas

128
00:08:07,122 --> 00:08:09,297
and others refer 
to the trunks.

129
00:08:09,497 --> 00:08:12,022
So those are soma statistics

130
00:08:12,742 --> 00:08:15,592
about the beginning
of each tree.

131
00:08:17,229 --> 00:08:19,692
So once you've seen 
those features, 

132
00:08:19,892 --> 00:08:21,992
you can select one

133
00:08:22,192 --> 00:08:24,379
and let's try the total length.

134
00:08:27,001 --> 00:08:29,226
So we run total length,

135
00:08:29,426 --> 00:08:31,401
neurom.get()

136
00:08:33,140 --> 00:08:37,603
and then we add the string of
the feature we want to extract.

137
00:08:38,694 --> 00:08:41,057
And after that, our neuron.

138
00:08:41,654 --> 00:08:44,404
So then we can print
the total length

139
00:08:44,604 --> 00:08:47,379
and see already

140
00:08:47,579 --> 00:08:49,829
the first statistical measurement.

141
00:08:50,680 --> 00:08:54,417
So how long in total
is our neuron?

142
00:08:54,976 --> 00:08:58,626
So this gives us the sum
of the lengths.

143
00:08:58,950 --> 00:09:02,738
What if we want to study the 
individual lengths of each section?

144
00:09:03,495 --> 00:09:06,032
Then we can select
another feature:

145
00:09:06,232 --> 00:09:08,995
section lengths with my neuron.

146
00:09:09,649 --> 00:09:11,712
And this is exactly
the same process

147
00:09:11,912 --> 00:09:14,912
for any feature that
you might want to analyse.

148
00:09:16,694 --> 00:09:17,969
So let's see.

149
00:09:19,009 --> 00:09:23,609
You get a very lengthy
list of numbers.

150
00:09:25,147 --> 00:09:27,809
And this is probably
not telling you much.

151
00:09:29,645 --> 00:09:31,795
So what we want to do next,

152
00:09:31,995 --> 00:09:34,995
is start to perform some
statistical analysis

153
00:09:35,195 --> 00:09:37,420
on the morphometrics that
we have extracted.

154
00:09:38,601 --> 00:09:40,664
And we're going to do that

155
00:09:42,569 --> 00:09:44,482
in the next part
of the tutorial.

