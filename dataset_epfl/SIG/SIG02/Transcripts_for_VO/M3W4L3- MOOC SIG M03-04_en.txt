1
00:00:31,070 --> 00:00:32,346
Hello and welcome

2
00:00:32,542 --> 00:00:34,624
to this third lesson dedicated
to interactions

3
00:00:34,824 --> 00:00:36,700
between spatial information layers.

4
00:00:37,015 --> 00:00:38,820
We will focus this time

5
00:00:39,020 --> 00:00:39,916
on the operations

6
00:00:40,116 --> 00:00:41,762
that allow to connect

7
00:00:41,962 --> 00:00:43,765
several vectorial layers.

8
00:00:44,755 --> 00:00:47,417
Some of the vector-vector
interactions

9
00:00:47,617 --> 00:00:50,118
can be implemented with the help
of SQL queries

10
00:00:50,318 --> 00:00:52,699
which have already been dealt with
in module no. 2

11
00:00:52,899 --> 00:00:56,392
in the course on the topological
spatial queries.

12
00:00:56,983 --> 00:00:59,234
This lesson is largely practical

13
00:00:59,434 --> 00:01:00,760
and it illustrates

14
00:01:00,960 --> 00:01:02,334
how the QGIS software

15
00:01:02,534 --> 00:01:05,238
can be used to make vectorial 
layers interact,

16
00:01:05,438 --> 00:01:06,165
typically,

17
00:01:06,365 --> 00:01:07,321
how to proceed

18
00:01:07,509 --> 00:01:08,959
to count the number of points

19
00:01:09,159 --> 00:01:10,891
stored in an information layer

20
00:01:11,157 --> 00:01:12,908
and located within a polygon

21
00:01:13,108 --> 00:01:14,473
located in another.

22
00:01:15,017 --> 00:01:16,135
The goals of this lesson

23
00:01:16,335 --> 00:01:17,331
are to explain to you

24
00:01:17,544 --> 00:01:19,964
what the different types
of possible interactions are

25
00:01:20,164 --> 00:01:22,622
between several layers of vectorial
geoinformation

26
00:01:22,822 --> 00:01:23,737
and to present

27
00:01:23,937 --> 00:01:26,178
what tools are available in QGIS

28
00:01:26,378 --> 00:01:29,484
that allow to perform the
corresponding operations.

29
00:01:38,439 --> 00:01:40,711
It is possible to exploit in
different ways

30
00:01:40,914 --> 00:01:43,433
the interaction between several
vectorial layers

31
00:01:43,608 --> 00:01:44,922
and the QGIS software

32
00:01:45,122 --> 00:01:47,889
contains a series of functions
capable to implement them.

33
00:01:48,089 --> 00:01:49,335
It can be for example

34
00:01:49,535 --> 00:01:51,512
to cut a polygon located on a layer

35
00:01:51,712 --> 00:01:53,728
by means of a segment 
located on another.

36
00:01:54,258 --> 00:01:56,142
It should be noted that some operations

37
00:01:56,342 --> 00:01:58,775
like the junction of layers without
common identifier

38
00:01:58,975 --> 00:02:00,582
or the enumeration of objects

39
00:02:00,782 --> 00:02:03,341
can be performed either through
QGIS functions

40
00:02:03,554 --> 00:02:04,935
which are already existing,

41
00:02:05,135 --> 00:02:06,764
or by means of SQL queries

42
00:02:06,964 --> 00:02:08,910
that we presented in module 2

43
00:02:09,110 --> 00:02:11,168
on topological spatial queries.

44
00:02:11,537 --> 00:02:14,473
We will now present you 
basic operations

45
00:02:14,905 --> 00:02:16,735
that it is essential to master

46
00:02:16,935 --> 00:02:19,475
to exploit the interaction between
vectorial layers,

47
00:02:19,675 --> 00:02:22,021
by indicating the equivalent SQL queries

48
00:02:22,221 --> 00:02:23,270
when it is relevant.

49
00:02:31,416 --> 00:02:32,541
It can happen

50
00:02:32,741 --> 00:02:34,877
that a data set without a unique
identifier

51
00:02:35,077 --> 00:02:36,345
and consisting of points

52
00:02:36,545 --> 00:02:39,355
representing here in our example of hotels,

53
00:02:39,555 --> 00:02:42,296
contains some of its attributes in a layer,

54
00:02:42,860 --> 00:02:44,461
here in red the name of the hotel

55
00:02:44,661 --> 00:02:45,823
and the number of rooms,

56
00:02:46,023 --> 00:02:48,104
and another part of its attributes

57
00:02:48,304 --> 00:02:49,327
in a second layer,

58
00:02:49,527 --> 00:02:51,298
here in orange the number of beds.

59
00:02:52,338 --> 00:02:55,012
To gather all the attributes in
a single layer,

60
00:02:55,212 --> 00:02:56,473
it is necessary to proceed

61
00:02:56,673 --> 00:02:58,082
at the junction of the two files

62
00:02:58,282 --> 00:03:00,643
on the basis of spatial location.

63
00:03:01,234 --> 00:03:03,154
The corresponding SQL query,

64
00:03:03,354 --> 00:03:04,541
displayed here on the screen,

65
00:03:04,741 --> 00:03:07,073
uses the geometry of objects

66
00:03:07,273 --> 00:03:09,024
whose X and Y components

67
00:03:09,237 --> 00:03:11,992
must be strictly identical in both files

68
00:03:12,192 --> 00:03:13,660
so that the link can be made.

69
00:03:14,190 --> 00:03:16,365
The equivalent QGIS function

70
00:03:16,565 --> 00:03:18,286
is available in the "vector" menu

71
00:03:18,486 --> 00:03:20,361
under "data management tools",

72
00:03:20,561 --> 00:03:23,274
then "join the attributes 
by the location".

73
00:03:24,452 --> 00:03:26,869
Let's see how to implement this function.

74
00:03:28,334 --> 00:03:29,797
In the QGIS project

75
00:03:29,997 --> 00:03:32,706
we have two vectorial layers of
superimposed points

76
00:03:32,906 --> 00:03:34,135
containing information

77
00:03:34,335 --> 00:03:35,843
on the hotels of Mahe.

78
00:03:36,958 --> 00:03:39,946
In the attributes of the first layer,
hotels1,

79
00:03:40,146 --> 00:03:42,736
we have the hotel name and the
number of rooms.

80
00:03:43,353 --> 00:03:45,007
The second layer, hotels2,

81
00:03:45,207 --> 00:03:47,331
contains exactly the same hotels,

82
00:03:47,531 --> 00:03:48,664
but in the attributes,

83
00:03:48,864 --> 00:03:51,160
this time we only have 
the number of beds.

84
00:03:53,273 --> 00:03:55,600
We will join the attributes of 
these two layers

85
00:03:55,800 --> 00:03:57,920
by going under "vector"

86
00:03:58,534 --> 00:04:00,462
"data management tools",

87
00:04:01,132 --> 00:04:03,385
"join the attributes by the location".

88
00:04:04,267 --> 00:04:07,543
In the first menu "indicate 
a vector layer",

89
00:04:07,743 --> 00:04:10,864
we choose the vectorial layer hotels1,

90
00:04:11,064 --> 00:04:13,131
and in the menu "join the vector layer",

91
00:04:13,331 --> 00:04:15,314
we choose the layer hotels2.

92
00:04:15,882 --> 00:04:17,948
In the "summary of the attribute",

93
00:04:18,148 --> 00:04:19,448
we could choose to combine

94
00:04:19,648 --> 00:04:21,900
the available information on the two layers.

95
00:04:22,464 --> 00:04:23,358
If we have an attribute

96
00:04:23,558 --> 00:04:25,419
which has the same number 
in both tables,

97
00:04:25,619 --> 00:04:27,025
such as the number of employees,

98
00:04:27,225 --> 00:04:29,356
but that the values ​​are not always
the same

99
00:04:29,556 --> 00:04:30,564
between the two files,

100
00:04:30,741 --> 00:04:32,816
something that could happen 
for example if we have

101
00:04:33,016 --> 00:04:34,988
the employees in January in one file

102
00:04:35,188 --> 00:04:36,680
and in June in another file,

103
00:04:36,880 --> 00:04:38,087
we could choose here

104
00:04:38,287 --> 00:04:40,277
to take either the value of
the first layer,

105
00:04:40,477 --> 00:04:42,471
or a summary of the values ​​of
the two layers,

106
00:04:42,910 --> 00:04:45,397
for example, the average,

107
00:04:45,597 --> 00:04:46,873
minimum or maximum number of employees.

108
00:04:47,073 --> 00:04:47,961
In our case,

109
00:04:48,161 --> 00:04:49,645
we don't have a common attribute

110
00:04:49,845 --> 00:04:51,731
and this part is therefore not useful.

111
00:04:53,590 --> 00:04:54,688
We then specify

112
00:04:54,888 --> 00:04:57,080
the name and location of 
the result file.

113
00:04:59,618 --> 00:05:00,236
Finally,

114
00:05:00,436 --> 00:05:01,972
in the last part of the window,

115
00:05:02,172 --> 00:05:03,506
you can choose to keep

116
00:05:03,706 --> 00:05:05,868
only the corresponding saved elements,

117
00:05:06,068 --> 00:05:07,702
that is to say the superimposed points

118
00:05:07,902 --> 00:05:09,818
or to keep also

119
00:05:10,018 --> 00:05:11,883
the elements saved 
without correspondance,

120
00:05:12,083 --> 00:05:14,084
for example in the 
case where some hotels

121
00:05:14,284 --> 00:05:16,634
would be present in only
one of the two files.

122
00:05:16,834 --> 00:05:18,143
Here we choose to keep

123
00:05:18,343 --> 00:05:19,845
only the correspondences.

124
00:05:20,045 --> 00:05:22,170
And you can then click on OK.

125
00:05:24,196 --> 00:05:26,073
A new vector layer is created

126
00:05:26,437 --> 00:05:27,876
and this layer contains

127
00:05:28,076 --> 00:05:29,570
the points of all the hotels

128
00:05:30,224 --> 00:05:31,704
and in the attribute tables,

129
00:05:31,904 --> 00:05:34,097
we see that we recovered
the attributes

130
00:05:34,297 --> 00:05:35,477
of the two initial layers,

131
00:05:35,677 --> 00:05:39,522
so the name, the number of
rooms and number of beds.

132
00:05:43,107 --> 00:05:45,847
In this second situation,
we will have to count

133
00:05:46,064 --> 00:05:48,875
the number of points stored in
a first information layer

134
00:05:49,075 --> 00:05:51,086
and located within each polygon

135
00:05:51,286 --> 00:05:52,747
stored in another layer.

136
00:05:53,246 --> 00:05:54,636
In the proposed example,

137
00:05:54,836 --> 00:05:57,023
the territory of Mahe 
in the Seychelles

138
00:05:57,223 --> 00:05:59,785
is composed of a number of
districts in blue

139
00:05:59,985 --> 00:06:00,872
within which

140
00:06:01,084 --> 00:06:02,757
we want to know the number of hotels

141
00:06:02,957 --> 00:06:04,157
represented here in red.

142
00:06:05,544 --> 00:06:08,322
The SQL query allowing to do
this operation

143
00:06:08,522 --> 00:06:11,998
uses the "count", "contain",
and "group" instructions.

144
00:06:13,205 --> 00:06:14,061
In QGIS,

145
00:06:14,261 --> 00:06:16,589
the function "points in a polygon"

146
00:06:16,789 --> 00:06:18,864
is accessible via the "vector" menu

147
00:06:19,064 --> 00:06:20,630
and then "analysis tools".

148
00:06:22,867 --> 00:06:24,215
Here's how it works:

149
00:06:26,051 --> 00:06:27,360
in the QGIS project,

150
00:06:27,560 --> 00:06:29,576
we have a vectorial file of polygons

151
00:06:29,776 --> 00:06:31,338
containing the districts of Mahe,

152
00:06:31,538 --> 00:06:33,472
and a point file with the hotels.

153
00:06:34,059 --> 00:06:35,637
We will count the number of hotels

154
00:06:35,837 --> 00:06:37,004
located in each district

155
00:06:37,204 --> 00:06:38,985
using the "vector" tool,

156
00:06:39,185 --> 00:06:40,434
"analysis tools",

157
00:06:40,634 --> 00:06:42,611
"points in a polygon".

158
00:06:43,198 --> 00:06:46,593
In the "polygon vector
layer as input" dropdown menu,

159
00:06:46,793 --> 00:06:48,592
we choose the district layer

160
00:06:48,792 --> 00:06:50,925
then under "points vector layer as input",

161
00:06:51,125 --> 00:06:52,907
we select hotels1.

162
00:06:53,503 --> 00:06:54,664
We can give a name

163
00:06:54,864 --> 00:06:56,837
to the column that will contain
the number of hotels

164
00:06:57,037 --> 00:06:58,149
for each district.

165
00:06:58,387 --> 00:07:00,826
We will name it here: nhotels.

166
00:07:01,804 --> 00:07:02,499
Finally,

167
00:07:02,699 --> 00:07:05,418
we give the name and location
of the result file.

168
00:07:06,947 --> 00:07:08,207
A warning appears

169
00:07:08,382 --> 00:07:10,756
to make us aware of a difference
in projection

170
00:07:10,956 --> 00:07:13,276
because the file being created

171
00:07:13,476 --> 00:07:15,850
does not yet have an 
assigned projection system.

172
00:07:16,050 --> 00:07:17,799
So we can

173
00:07:17,999 --> 00:07:19,928
ignore this message here 
and click on OK.

174
00:07:20,128 --> 00:07:21,557
This is at the next step

175
00:07:21,757 --> 00:07:24,168
that we will specify the projection
of the result layer.

176
00:07:24,368 --> 00:07:25,257
In our case,

177
00:07:25,457 --> 00:07:28,752
we work in the UTM 40 South zone system

178
00:07:28,952 --> 00:07:31,015
which is adapted for the 
Seychelles region.

179
00:07:32,799 --> 00:07:34,281
The result is displayed on the screen.

180
00:07:34,818 --> 00:07:36,265
It is a polygon file

181
00:07:36,465 --> 00:07:37,923
containing all the districts.

182
00:07:38,123 --> 00:07:39,732
If we open the attribute table,

183
00:07:39,932 --> 00:07:42,496
we see that there's a column nHotels

184
00:07:42,696 --> 00:07:45,326
indicating the number of hotels
located in each district.

185
00:07:49,314 --> 00:07:51,113
Now, still on the island of Mahe,

186
00:07:51,313 --> 00:07:54,250
we want to calculate the total
length of the road network,

187
00:07:54,450 --> 00:07:55,385
here in purple,

188
00:07:55,585 --> 00:07:57,498
located within each district.

189
00:07:58,169 --> 00:08:00,469
The SQL query is more complex this time.

190
00:08:00,669 --> 00:08:05,063
It involves the "sum", "length" 
and "intersection" instructions,

191
00:08:05,263 --> 00:08:06,065
nested

192
00:08:06,265 --> 00:08:08,514
before grouping the distances by district.

193
00:08:09,045 --> 00:08:11,905
In QGIS it is the "total
of the line lengths" function

194
00:08:12,105 --> 00:08:13,289
in the "vector" menu

195
00:08:13,489 --> 00:08:14,602
then "analysis tools",

196
00:08:14,802 --> 00:08:16,642
that allows to perform this operation.

197
00:08:18,061 --> 00:08:19,428
Let's see then how to proceed

198
00:08:19,641 --> 00:08:21,909
to calculate this sum of 
segments lengths

199
00:08:22,109 --> 00:08:22,848
by district.

200
00:08:24,204 --> 00:08:25,262
In the QGIS project

201
00:08:25,462 --> 00:08:26,814
we have the polygon file

202
00:08:27,039 --> 00:08:28,369
containing the districts of Mahe

203
00:08:28,582 --> 00:08:29,595
and a line file

204
00:08:29,770 --> 00:08:30,797
with the roads of the island.

205
00:08:31,375 --> 00:08:33,997
We will calculate the total
length of road sections

206
00:08:34,197 --> 00:08:35,441
located in each district

207
00:08:35,641 --> 00:08:37,262
using the "vector" tool,

208
00:08:37,462 --> 00:08:38,881
"analysis tools",

209
00:08:39,081 --> 00:08:40,546
"total line lengths".

210
00:08:41,190 --> 00:08:43,951
Under "polygon vector layer as input",

211
00:08:44,151 --> 00:08:45,840
we choose the district layer

212
00:08:46,040 --> 00:08:48,031
and under "line vector layer as input",

213
00:08:48,231 --> 00:08:49,611
we choose the roads.

214
00:08:50,142 --> 00:08:51,669
We can then name the attribute

215
00:08:51,869 --> 00:08:53,185
that will contain the result.

216
00:08:53,385 --> 00:08:55,481
Here we will call it lroutes.

217
00:08:56,072 --> 00:08:58,041
Then we specify the name and location

218
00:08:58,266 --> 00:08:59,271
of the result file.

219
00:08:59,625 --> 00:09:01,824
We can then click on OK.

220
00:09:02,639 --> 00:09:04,336
The calculation will take some time

221
00:09:04,536 --> 00:09:06,961
because it is a relatively
complex operation.

222
00:09:09,828 --> 00:09:11,837
The result is then displayed on the screen

223
00:09:12,037 --> 00:09:14,263
and we find the districts of Mahe

224
00:09:15,025 --> 00:09:16,751
and if we open the attribute table,

225
00:09:16,988 --> 00:09:18,656
we see that a column lroutes

226
00:09:18,856 --> 00:09:19,924
has been added,

227
00:09:20,124 --> 00:09:21,650
indicating the total length

228
00:09:21,850 --> 00:09:24,156
of road sections located 
in each district.

229
00:09:32,979 --> 00:09:34,112
We will now

230
00:09:34,337 --> 00:09:35,946
present the different cutting

231
00:09:36,146 --> 00:09:38,499
operations of a vectorial 
layer by another.

232
00:09:38,699 --> 00:09:39,993
It is indeed possible

233
00:09:40,193 --> 00:09:42,288
to cut polygons with other polygons,

234
00:09:42,488 --> 00:09:44,593
or to cut lines with polygons.

235
00:09:45,063 --> 00:09:46,345
In the third case,

236
00:09:46,545 --> 00:09:49,670
we will speak more of extraction of
points, segments or surfaces

237
00:09:49,870 --> 00:09:51,448
located inside of a polygon.

238
00:09:53,353 --> 00:09:54,069
The cutting

239
00:09:54,269 --> 00:09:56,868
as implemented in the "cut" 
function in QGIS,

240
00:09:57,068 --> 00:09:58,494
generates a result which contains

241
00:09:58,694 --> 00:10:00,824
only the attributes of the cut layer.

242
00:10:02,257 --> 00:10:04,092
The first example shown here

243
00:10:04,292 --> 00:10:06,475
is the case of lines cut by polygons.

244
00:10:06,959 --> 00:10:07,716
Still in Mahe

245
00:10:07,916 --> 00:10:10,059
whose road network is here
displayed in yellow,

246
00:10:10,259 --> 00:10:11,943
we want to extract the roads

247
00:10:12,143 --> 00:10:14,550
located in the top five districts
in the South of the island

248
00:10:14,750 --> 00:10:15,939
and represented in green.

249
00:10:18,096 --> 00:10:19,849
Here is how to do it in QGIS.

250
00:10:21,239 --> 00:10:22,656
In the QGIS project

251
00:10:22,856 --> 00:10:24,249
we have the line layer

252
00:10:24,474 --> 00:10:25,724
containing the Mahe roads

253
00:10:25,924 --> 00:10:27,070
and a polygon file

254
00:10:27,270 --> 00:10:29,292
containing the most southerly 
five districts.

255
00:10:29,826 --> 00:10:31,701
We will cut the line file

256
00:10:31,901 --> 00:10:33,595
to retain only the road sections

257
00:10:33,795 --> 00:10:35,125
in the five districts.

258
00:10:35,593 --> 00:10:37,729
We use the cutting tool again

259
00:10:37,929 --> 00:10:38,666
under "vector"

260
00:10:39,229 --> 00:10:40,783
"geoprocessing tools"

261
00:10:40,983 --> 00:10:41,901
and "cut".

262
00:10:42,547 --> 00:10:44,234
As an input vectorial layer,

263
00:10:44,422 --> 00:10:45,733
we choose the roads

264
00:10:45,933 --> 00:10:47,228
and as a cutting layer,

265
00:10:47,428 --> 00:10:49,966
the polygon file containing 
the five districts.

266
00:10:50,659 --> 00:10:53,610
We must then specify the result file,

267
00:10:55,117 --> 00:10:56,620
then click on OK.

268
00:10:57,902 --> 00:10:59,567
The calculation will take some time

269
00:11:00,993 --> 00:11:02,777
and the result is displayed on the screen.

270
00:11:03,189 --> 00:11:05,031
It is indeed a line file

271
00:11:05,231 --> 00:11:07,107
containing only the road sections

272
00:11:07,307 --> 00:11:08,815
located in the five districts.

273
00:11:09,102 --> 00:11:10,376
In the attribute table,

274
00:11:10,576 --> 00:11:13,332
we see that all the attributes
of the initial "road" file

275
00:11:13,532 --> 00:11:14,966
were recovered.

276
00:11:19,770 --> 00:11:22,120
The case that we present now is common.

277
00:11:22,320 --> 00:11:23,952
It is the extraction of points

278
00:11:24,152 --> 00:11:25,418
located in polygons.

279
00:11:25,963 --> 00:11:26,927
On the island of Mahe,

280
00:11:27,127 --> 00:11:28,903
we want to extract the hotels,

281
00:11:29,103 --> 00:11:30,372
here represented in red,

282
00:11:30,828 --> 00:11:33,366
of the districts of Takamaka and
Port Glaud

283
00:11:33,566 --> 00:11:35,194
represented here in yellow.

284
00:11:36,945 --> 00:11:39,336
Let's see how it goes in QGIS.

285
00:11:40,970 --> 00:11:42,127
In the QGIS project

286
00:11:42,327 --> 00:11:44,129
we have the points file of the hotels

287
00:11:44,329 --> 00:11:45,420
with the name of the hotel 

288
00:11:45,620 --> 00:11:48,004
and the number of rooms as attributes,

289
00:11:48,472 --> 00:11:51,111
as well as a polygon file 
containing two districts

290
00:11:51,311 --> 00:11:53,287
that of Takamaka in the South

291
00:11:53,487 --> 00:11:55,220
and Port Glaud further North.

292
00:11:55,897 --> 00:11:57,425
We will extract the hotels

293
00:11:57,625 --> 00:11:59,008
located in these two districts.

294
00:11:59,208 --> 00:12:01,556
For this we use the cutting tool

295
00:12:01,756 --> 00:12:03,095
which is found under "vector"

296
00:12:03,295 --> 00:12:04,651
"geoprocessing tools",

297
00:12:04,851 --> 00:12:05,711
"cut".

298
00:12:06,648 --> 00:12:08,279
As the vectorial layer

299
00:12:08,479 --> 00:12:10,126
we choose the layer to be cut,

300
00:12:10,326 --> 00:12:12,179
that is to say the point layer 
of the hotels.

301
00:12:13,125 --> 00:12:14,430
As the cutting layer,

302
00:12:14,630 --> 00:12:17,625
we choose the layer containing
the polygons of the two districts.

303
00:12:18,156 --> 00:12:19,403
We then specify

304
00:12:19,603 --> 00:12:21,842
the name and location of the result file

305
00:12:22,579 --> 00:12:24,045
and we can click on OK.

306
00:12:28,697 --> 00:12:30,025
The result is displayed on the screen.

307
00:12:30,225 --> 00:12:31,930
This is a point file

308
00:12:32,130 --> 00:12:33,686
containing all the hotels

309
00:12:33,886 --> 00:12:36,564
located in the districts of
Takamaka Port Glaud.

310
00:12:41,230 --> 00:12:42,506
In the attribute layer

311
00:12:42,706 --> 00:12:44,785
We find exactly the same attributes

312
00:12:44,985 --> 00:12:46,795
as for the initial layer of hotels.

313
00:12:56,947 --> 00:12:58,462
We will now look

314
00:12:58,662 --> 00:12:59,993
at another type of interaction

315
00:13:00,193 --> 00:13:02,064
between different vectorial layers.

316
00:13:02,264 --> 00:13:05,127
It is the boolean operations 
on the polygons.

317
00:13:06,042 --> 00:13:08,487
The boolean algebra or boolean
calculation,

318
00:13:08,687 --> 00:13:10,486
is an algebraic approach of the logic

319
00:13:10,686 --> 00:13:12,661
expressed in terms of variables, 
operators

320
00:13:12,861 --> 00:13:14,912
and functions on the logic variables.

321
00:13:15,421 --> 00:13:17,705
This allows to use algebraic techniques

322
00:13:17,905 --> 00:13:19,794
to treat the expressions with two values

323
00:13:19,994 --> 00:13:21,453
of the calculation of proposals.

324
00:13:22,155 --> 00:13:24,284
These terms are very often used

325
00:13:24,484 --> 00:13:26,321
in the context of the 
multi-criteria analysis

326
00:13:26,521 --> 00:13:28,579
to assess the ability of certain
territories

327
00:13:28,779 --> 00:13:30,417
to perform a specific function.

328
00:13:30,913 --> 00:13:33,411
In the case of two layers of
superimposed polygons,

329
00:13:33,611 --> 00:13:35,013
we can be confronted

330
00:13:35,213 --> 00:13:36,396
to the following situations:

331
00:13:37,345 --> 00:13:38,177
the intersection

332
00:13:38,377 --> 00:13:40,735
between yellow polygon and 
the gray polygon

333
00:13:40,935 --> 00:13:42,700
produces the blue polygon.

334
00:13:43,556 --> 00:13:45,546
The union of the yellow polygon

335
00:13:45,746 --> 00:13:46,826
with the gray polygon

336
00:13:47,026 --> 00:13:48,869
gives green polygons.

337
00:13:49,351 --> 00:13:51,678
And the difference between
the yellow polygon

338
00:13:51,878 --> 00:13:52,768
and the gray polygon

339
00:13:52,968 --> 00:13:54,890
gives the red polygon.

340
00:13:55,892 --> 00:13:57,749
The result of these boolean operations

341
00:13:57,949 --> 00:13:59,776
contains the attributes of the two layers

342
00:13:59,976 --> 00:14:02,020
and it is always in the "vector" menu

343
00:14:02,220 --> 00:14:03,997
under "geoprocessing tools",

344
00:14:04,197 --> 00:14:05,779
that we will find the QGIS functions

345
00:14:05,979 --> 00:14:08,001
capable of performing this type
of processing.

346
00:14:08,883 --> 00:14:10,212
We show you an example

347
00:14:10,412 --> 00:14:12,473
to illustrate the "union" boolean operation.

348
00:14:13,401 --> 00:14:16,126
The aim here is to group
in a single information layer

349
00:14:16,326 --> 00:14:18,231
the districts located on 
the island of Mahé

350
00:14:18,431 --> 00:14:19,997
and those located on the 
island of Praslin

351
00:14:20,197 --> 00:14:22,527
originally stored on two different files.

352
00:14:22,727 --> 00:14:25,794
This is to bring together the 
entities of both vectorial files

353
00:14:26,037 --> 00:14:26,776
in a single one.

354
00:14:27,465 --> 00:14:29,186
The corresponding SQL query

355
00:14:29,386 --> 00:14:31,194
calls for the "union" operator

356
00:14:31,394 --> 00:14:32,372
and in QGIS

357
00:14:32,572 --> 00:14:34,113
it is the "union" geoprocessing tool

358
00:14:34,313 --> 00:14:35,322
that should be used.

359
00:14:36,663 --> 00:14:38,117
Here iss how it works:

360
00:14:39,751 --> 00:14:40,772
in the QGIS project,

361
00:14:40,959 --> 00:14:42,308
we have the districts of Mahe,

362
00:14:42,508 --> 00:14:43,883
with in the attributes table

363
00:14:44,083 --> 00:14:46,295
the identifier and the name
of each district

364
00:14:46,495 --> 00:14:47,887
as well as the name of the island.

365
00:14:48,359 --> 00:14:50,651
We also have another polygon file

366
00:14:50,851 --> 00:14:52,579
containing the two districts of Praslin

367
00:14:52,779 --> 00:14:55,894
with for each district its name
and a source attribute.

368
00:14:56,565 --> 00:14:58,417
We will merge these two files

369
00:14:58,617 --> 00:15:00,457
to obtain a single layer of polygons

370
00:15:00,657 --> 00:15:02,172
containing all the districts.

371
00:15:02,372 --> 00:15:02,851
For that,

372
00:15:03,051 --> 00:15:04,770
we use the "union" tool

373
00:15:04,970 --> 00:15:05,857
under "vector",

374
00:15:06,057 --> 00:15:07,277
"geoprocessing tools",

375
00:15:07,477 --> 00:15:08,127
"union".

376
00:15:09,199 --> 00:15:11,017
Under "input vectorial layer",

377
00:15:11,217 --> 00:15:14,773
we choose the "districts" layer that
contains the districts of Mahe.

378
00:15:14,981 --> 00:15:16,290
Under "union layer",

379
00:15:16,490 --> 00:15:18,551
we select the districts of Praslin.

380
00:15:18,819 --> 00:15:20,156
We can then define

381
00:15:20,356 --> 00:15:23,622
the name and the directory
where the result is saved

382
00:15:24,149 --> 00:15:25,465
and click on OK.

383
00:15:26,439 --> 00:15:29,767
We then have to specify the 
projection system of the result,

384
00:15:29,967 --> 00:15:33,493
in our case the UTM Zone 
40 South system.

385
00:15:33,964 --> 00:15:35,766
And the result is displayed on the screen.

386
00:15:35,966 --> 00:15:37,564
It is indeed a polygon layer

387
00:15:37,764 --> 00:15:40,418
containing all the districts of Mahe
and as well as those of Praslin.

388
00:15:40,618 --> 00:15:41,994
By opening the attribute table,

389
00:15:42,194 --> 00:15:43,523
we see that we find

390
00:15:43,723 --> 00:15:45,537
all the attributes of the 
districts of Mahe

391
00:15:45,737 --> 00:15:48,292
but also the attributes of
the districts of Praslin.

392
00:15:48,515 --> 00:15:50,473
As these attributes are different,

393
00:15:50,673 --> 00:15:52,604
the Mahe districts have null values

394
00:15:52,804 --> 00:15:55,035
for the Praslin attributes 
and vice versa.

395
00:15:55,286 --> 00:15:57,984
The union therefore retrieves
the attributes of both files.

396
00:16:00,276 --> 00:16:01,867
To illustrate the implementation

397
00:16:02,067 --> 00:16:04,181
of the "intersection" boolean operator

398
00:16:04,381 --> 00:16:06,509
we will extract the portions of
the territory

399
00:16:06,709 --> 00:16:09,290
of the districts of Mahe
located in the two study areas

400
00:16:09,490 --> 00:16:12,358
represented here by the two
orange polygons.

401
00:16:12,881 --> 00:16:13,730
This means

402
00:16:13,930 --> 00:16:15,968
maintaining only the common areas

403
00:16:16,168 --> 00:16:19,142
between the two vector files
in orange on the map.

404
00:16:19,674 --> 00:16:21,260
This operation provides a result

405
00:16:21,460 --> 00:16:23,510
which contains the attributes
of the two layers.

406
00:16:23,710 --> 00:16:25,250
In the same configuration,

407
00:16:25,450 --> 00:16:28,283
we can also use the "cut" function

408
00:16:28,483 --> 00:16:30,241
which will also help to keep

409
00:16:30,441 --> 00:16:32,845
the common areas between 
the two vector files,

410
00:16:33,045 --> 00:16:34,771
but the result in this case contains

411
00:16:34,971 --> 00:16:37,270
only attributes of the cut layer.

412
00:16:38,962 --> 00:16:40,929
Here is how to proceed in QGIS:

413
00:16:42,458 --> 00:16:43,325
in the QGIS project

414
00:16:43,537 --> 00:16:44,899
we have the districts of Mahe

415
00:16:45,099 --> 00:16:46,230
which have as attributes

416
00:16:46,430 --> 00:16:48,519
an identifier, a name and 
the name of the island

417
00:16:48,719 --> 00:16:50,863
as well as a "study zone" layer

418
00:16:51,063 --> 00:16:54,117
which indicates the location of
the two zones that we are interested in.

419
00:16:56,618 --> 00:16:58,444
This layer contains four attributes:

420
00:16:58,644 --> 00:17:01,776
an identifier, a name, a place
and a year of study.

421
00:17:02,937 --> 00:17:04,564
We will first extract

422
00:17:04,764 --> 00:17:07,399
the portions of districts located
in the two study areas

423
00:17:07,599 --> 00:17:09,804
using the "intersection" function

424
00:17:10,292 --> 00:17:11,718
in the "vector" menu

425
00:17:11,918 --> 00:17:13,201
"geoprocessing tools",

426
00:17:13,401 --> 00:17:14,337
"intersection".

427
00:17:15,000 --> 00:17:16,885
We choose the layer of districts

428
00:17:17,085 --> 00:17:18,603
as an input layer

429
00:17:18,803 --> 00:17:20,192
and the study area layer

430
00:17:20,392 --> 00:17:21,940
as the intersection layer.

431
00:17:23,223 --> 00:17:26,360
We specify the name and 
location of the result,

432
00:17:27,093 --> 00:17:28,679
then we can click on OK.

433
00:17:30,003 --> 00:17:33,035
Then we specify the projection 
system of the result,

434
00:17:33,235 --> 00:17:35,096
UTM Zone 40 South.

435
00:17:35,568 --> 00:17:37,212
The result is displayed on the screen

436
00:17:37,412 --> 00:17:38,711
and the created layer contains

437
00:17:38,928 --> 00:17:40,029
the districts portions

438
00:17:40,229 --> 00:17:42,222
located inside the two study areas.

439
00:17:42,422 --> 00:17:44,060
If we open the attribute table,

440
00:17:44,260 --> 00:17:45,649
we see that the result

441
00:17:45,849 --> 00:17:48,251
contains the attributes of
the two original layers,

442
00:17:48,451 --> 00:17:50,088
both those of the district layer

443
00:17:50,288 --> 00:17:51,914
ID, name, island,

444
00:17:52,114 --> 00:17:54,503
but also those of the "study area" layer

445
00:17:54,703 --> 00:17:57,620
ID_ze, nom_ze, place, year.

446
00:17:57,820 --> 00:17:58,714
Like the union,

447
00:17:58,914 --> 00:18:00,976
the intersection keeps the attributes

448
00:18:01,189 --> 00:18:02,416
of the two combined layers.

449
00:18:04,140 --> 00:18:06,236
The same polygons could 
have been obtained

450
00:18:06,436 --> 00:18:07,703
with the cutting function

451
00:18:07,903 --> 00:18:09,317
which was previously used,

452
00:18:09,517 --> 00:18:12,202
the difference is that the cutting
function

453
00:18:12,402 --> 00:18:14,946
only keeps the attributes of
the first layer.

454
00:18:15,476 --> 00:18:16,656
The cutting layer

455
00:18:16,856 --> 00:18:19,539
is used only to define the edges
of the new polygons

456
00:18:19,739 --> 00:18:21,726
but its attributes are 
not taken into account.

457
00:18:22,210 --> 00:18:23,185
To convince you,

458
00:18:23,385 --> 00:18:26,345
we will apply the "cut" function 
to the same example.

459
00:18:26,963 --> 00:18:28,147
Under "vector"

460
00:18:28,347 --> 00:18:29,975
"geoprocessing tools",

461
00:18:30,175 --> 00:18:30,771
"cut",

462
00:18:30,971 --> 00:18:32,502
the layer of districts is selected

463
00:18:32,702 --> 00:18:33,767
as the input layer

464
00:18:33,967 --> 00:18:35,503
and the study area layer

465
00:18:35,703 --> 00:18:37,071
as a cutting layer.

466
00:18:37,606 --> 00:18:40,100
we save the result and click on OK.

467
00:18:44,312 --> 00:18:46,260
We have to specify the 
projection system

468
00:18:46,460 --> 00:18:48,495
then the layer appears on the screen.

469
00:18:49,516 --> 00:18:52,117
We get exactly the same polygons

470
00:18:52,317 --> 00:18:53,601
only with the intersection.

471
00:18:53,801 --> 00:18:56,283
However in the attribute table

472
00:18:56,750 --> 00:18:58,546
we do not have any attributes

473
00:18:58,746 --> 00:19:00,212
of the "study area" layer,

474
00:19:00,412 --> 00:19:02,547
only the attributes of the 
"districts" layer

475
00:19:02,747 --> 00:19:04,024
have been kept.

476
00:19:14,675 --> 00:19:16,488
Here we are at the end of this lesson

477
00:19:16,688 --> 00:19:19,222
on the interactions between 
multiple vectorial files.

478
00:19:19,393 --> 00:19:21,405
We have presented the main types

479
00:19:21,605 --> 00:19:23,173
of vector-vector interactions

480
00:19:23,373 --> 00:19:25,611
and the operations that they 
allow to implement.

481
00:19:25,811 --> 00:19:26,774
You have learned

482
00:19:26,974 --> 00:19:28,748
how to join punctual files

483
00:19:28,948 --> 00:19:31,304
on the basis of geographic 
coordinates only,

484
00:19:32,213 --> 00:19:34,020
to perform the counting of points

485
00:19:34,220 --> 00:19:35,683
located inside polygons

486
00:19:36,417 --> 00:19:38,965
and to calculate the length of segments

487
00:19:39,165 --> 00:19:40,062
inside polygons.

488
00:19:40,761 --> 00:19:42,456
These processings can be performed

489
00:19:42,656 --> 00:19:43,815
by means of SQL queries,

490
00:19:44,015 --> 00:19:44,995
but most often,

491
00:19:45,195 --> 00:19:46,968
for people who do not practice

492
00:19:47,168 --> 00:19:48,156
SQL regularly

493
00:19:48,397 --> 00:19:51,029
these operations can be
carried out more effectively

494
00:19:51,229 --> 00:19:53,196
with the help of corresponding functions

495
00:19:53,396 --> 00:19:54,815
implemented in QGIS.

496
00:19:56,145 --> 00:19:57,595
This lesson has also allowed

497
00:19:57,795 --> 00:20:00,696
to address the cutting operations 
of vectorial objects

498
00:20:00,896 --> 00:20:02,831
as well as boolean operations

499
00:20:03,031 --> 00:20:04,247
very useful in the case

500
00:20:04,447 --> 00:20:06,235
of multi-criteria analysis of aptitude.

501
00:20:07,694 --> 00:20:09,862
This concludes this fourth 
week of course

502
00:20:10,062 --> 00:20:11,893
on the interaction between data layers

503
00:20:12,093 --> 00:20:13,770
and ends the third module

504
00:20:13,970 --> 00:20:16,407
devoted to the analysis of
geographic information.

505
00:20:17,021 --> 00:20:18,401
From next week,

506
00:20:18,601 --> 00:20:19,661
we will focus

507
00:20:19,836 --> 00:20:22,288
on the representation of
geographic information.

