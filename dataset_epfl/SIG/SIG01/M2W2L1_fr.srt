1
00:00:22,049 --> 00:00:23,537
Bienvenue dans cette leçon

2
00:00:23,737 --> 00:00:25,962
qui va donc
porter sur l'interrogation

3
00:00:26,162 --> 00:00:27,912
des bases de données
par des requêtes,

4
00:00:28,112 --> 00:00:30,212
et sur le langage SQL
qui est utilisé

5
00:00:30,412 --> 00:00:32,274
pour écrire ces requêtes.

6
00:00:32,837 --> 00:00:34,787
Dans cette leçon,
nous allons aborder donc

7
00:00:34,974 --> 00:00:36,837
les bases du langage SQL,

8
00:00:37,037 --> 00:00:38,549
langage qui va nous occuper

9
00:00:38,749 --> 00:00:40,824
pour les 5 ou 6 prochaines leçons.

10
00:00:42,837 --> 00:00:45,199
L'objectif de cette première leçon
est donc

11
00:00:45,399 --> 00:00:47,587
de découvrir les principes

12
00:00:47,787 --> 00:00:50,899
les plus fondamentaux du langage SQL
et en particulier

13
00:00:51,762 --> 00:00:54,049
la fonction ou la clause,

14
00:00:54,249 --> 00:00:57,487
la plus basique qui soit
qui est la clause "select"

15
00:00:57,687 --> 00:00:59,762
et ses différents usages.

16
00:01:00,474 --> 00:01:03,324
Au terme de cette leçon,
vous devriez être en mesure de

17
00:01:03,525 --> 00:01:05,637
sélectionner des attributs
dans une table

18
00:01:05,837 --> 00:01:06,749
et...

19
00:01:06,949 --> 00:01:09,224
d'éliminer les doublons
qui pourraient

20
00:01:09,424 --> 00:01:11,024
se trouver dans cette sélection.

21
00:01:11,925 --> 00:01:13,837
Nous verrons donc successivement

22
00:01:14,037 --> 00:01:15,974
les principes du langage SQL

23
00:01:16,174 --> 00:01:16,962
puis

24
00:01:17,824 --> 00:01:20,674
la sélection simple
d'un attribut dans une table.

25
00:01:21,199 --> 00:01:24,087
Le principe de la sélection 
distincte qui permet 

26
00:01:24,287 --> 00:01:26,299
d'éliminer les doublons 
d'une requête.

27
00:01:27,249 --> 00:01:29,837
Ensuite, la sélection 
à partir de 2 tables

28
00:01:30,037 --> 00:01:33,037
et finalement
l'utilisation des alias pour

29
00:01:33,237 --> 00:01:35,224
les attributs et pour les tables.

30
00:01:41,112 --> 00:01:44,537
Le SQL ou Structured Query Language

31
00:01:44,737 --> 00:01:45,424
est donc

32
00:01:45,624 --> 00:01:48,224
un langage destiné à la gestion
des bases de données

33
00:01:48,424 --> 00:01:49,962
relationnelles spécifiquement.

34
00:01:50,399 --> 00:01:52,949
C'est un langage qui a été normalisé

35
00:01:53,149 --> 00:01:53,662
donc

36
00:01:53,874 --> 00:01:55,249
qui est en principe indépendant

37
00:01:55,437 --> 00:01:57,774
du système de gestion
de base de données utilisé

38
00:01:57,974 --> 00:01:59,837
même s'il est vrai que

39
00:02:00,037 --> 00:02:02,974
chaque système de gestion
de base de données a

40
00:02:03,174 --> 00:02:05,687
quelques spécialités
au niveau de la syntaxe

41
00:02:05,887 --> 00:02:07,249
utilisée.

42
00:02:07,887 --> 00:02:08,837
C'est un

43
00:02:09,037 --> 00:02:11,937
langage qui permet d'interagir
avec des bases des données

44
00:02:12,137 --> 00:02:14,249
sous forme de requête structurée

45
00:02:14,449 --> 00:02:15,887
comme son nom l'indique.

46
00:02:16,712 --> 00:02:20,137
Le SQL est composé de 4 groupes
d'instructions complémentaires.

47
00:02:20,337 --> 00:02:22,374
En premier lieu
le Data Query Language,

48
00:02:22,574 --> 00:02:24,174
langage d'interrogation des données

49
00:02:24,374 --> 00:02:26,624
qui permet d'extraire des données
d'une base des données.

50
00:02:27,349 --> 00:02:31,087
Le Data Definition Language,
langage de définition de données

51
00:02:31,287 --> 00:02:34,487
qui permet de modifier ou de définir
la structure d'une base de données.

52
00:02:35,574 --> 00:02:38,799
Le langage de manipulation DML
qui permet

53
00:02:38,999 --> 00:02:40,349
d'insérer,

54
00:02:40,549 --> 00:02:42,624
de mettre à jour,
de supprimer des données

55
00:02:42,824 --> 00:02:44,037
et finalement

56
00:02:44,237 --> 00:02:47,149
le langage de contrôle
qui permet de gérer les droits

57
00:02:47,599 --> 00:02:49,699
et les accès des utilisateurs.

58
00:02:51,362 --> 00:02:53,474
Dans le domaine de l'interrogation
des données,

59
00:02:53,674 --> 00:02:55,687
la syntaxe de base comprend

60
00:02:55,887 --> 00:02:58,687
des clauses de sélection
avec les mots clés "select" et "from",

61
00:02:58,887 --> 00:03:01,737
les clauses de filtre conditionnel
avec le mot clé "where",

62
00:03:01,937 --> 00:03:05,349
des clauses d'agrégation
avec les mots clés "group by" ou "having";

63
00:03:05,637 --> 00:03:06,924
des clauses de tri

64
00:03:07,124 --> 00:03:09,524
avec les mots clés "order by" 
ou "limit"

65
00:03:09,724 --> 00:03:11,224
et finalement des clauses de fusion

66
00:03:11,424 --> 00:03:14,462
avec les mots clés
"union", "intersect", "except".

67
00:03:16,424 --> 00:03:20,024
L'utilisation de ces différents
mots clés dans des requêtes

68
00:03:20,287 --> 00:03:22,324
va être illustrée dans la suite

69
00:03:22,524 --> 00:03:24,262
de cette leçon
et dans les leçons suivantes.

70
00:03:25,274 --> 00:03:26,812
Sur la base de données

71
00:03:27,012 --> 00:03:28,324
qui ont été regroupées

72
00:03:28,524 --> 00:03:30,099
dans une série
de bases de données test,

73
00:03:30,274 --> 00:03:33,074
données qui portent sur les îles
proches des Seychelles

74
00:03:33,274 --> 00:03:35,199
qui comprennent en fait
4 couches de données :

75
00:03:35,399 --> 00:03:37,187
les districts
sous forme de polygones,

76
00:03:37,387 --> 00:03:39,737
les hôtels, les lieux-dits
qui sont des points

77
00:03:39,937 --> 00:03:42,012
et les routes qui sont des lignes.

78
00:03:42,212 --> 00:03:45,237
Ces données sont stockées
dans 3 formats différents

79
00:03:45,437 --> 00:03:48,287
ce qui permettra d'illustrer
3 types

80
00:03:48,762 --> 00:03:51,487
d'approches, de gestion
différente des requêtes,

81
00:03:51,687 --> 00:03:53,712
le format ESRI Shapefile,

82
00:03:53,912 --> 00:03:57,174
une base de données Spatialite
et une base de données PostGIS.

83
00:03:58,249 --> 00:04:00,087
On peut voir ici que

84
00:04:00,887 --> 00:04:04,187
ces différentes couches de données
ont un certain nombre d'attributs.

85
00:04:04,387 --> 00:04:05,274
Pour les districts,

86
00:04:05,474 --> 00:04:08,562
la géométrie, l'identifiant
et le nom, pour les hôtels

87
00:04:08,762 --> 00:04:10,599
de nouveau géométrie, identifiant,

88
00:04:10,787 --> 00:04:12,862
le nom et une série d'attributs
complémentaires

89
00:04:13,037 --> 00:04:15,200
(le nombre de chambres,
le nombre de lits, le statut)

90
00:04:15,450 --> 00:04:18,699
et le district dans lequel
se trouve les hôtels.

91
00:04:18,899 --> 00:04:20,525
Pour les lieux-dits,

92
00:04:20,725 --> 00:04:22,700
géométrie, identifiant et nom

93
00:04:22,900 --> 00:04:25,300
de même que pour les routes
avec en plus

94
00:04:25,500 --> 00:04:27,537
le lieu où elles se trouvent,
le type de route et

95
00:04:27,737 --> 00:04:29,300
le type de surface.

96
00:04:30,662 --> 00:04:32,962
On voit qu'il y a une petite clé
autour de l'identifiant

97
00:04:33,162 --> 00:04:35,175
qui montre que dans tous ces

98
00:04:35,375 --> 00:04:38,375
cas de figure, l'identifiant
joue le rôle de clé primaire.

99
00:04:41,300 --> 00:04:43,700
Il existe de nombreux outils
de requête

100
00:04:43,900 --> 00:04:45,862
et nous allons nous concentrer sur

101
00:04:46,062 --> 00:04:49,387
ceux que l'on peut utiliser
en lien avec le logiciel QGIS.

102
00:04:50,225 --> 00:04:52,937
Il y a tout d'abord
dans le logiciel-même

103
00:04:53,225 --> 00:04:56,000
une série de 3 outils de requête

104
00:04:56,175 --> 00:04:57,200
qui...

105
00:04:57,400 --> 00:05:00,100
s'appliquent de manière générale
à tous les types de couches.

106
00:05:00,300 --> 00:05:01,937
Mais ces 3 solutions

107
00:05:02,137 --> 00:05:04,925
ont le défaut de ne pas implémenter
de manière explicite

108
00:05:05,125 --> 00:05:06,262
le langage SQL,

109
00:05:06,850 --> 00:05:10,187
si bien que dans le cas présent,
ce n'est pas très intéressant.

110
00:05:11,237 --> 00:05:14,012
Nous avons une extension gestion
de base de données qui permet

111
00:05:14,212 --> 00:05:17,037
de traiter des bases de données
Spatialite et PostGIS

112
00:05:17,600 --> 00:05:19,112
et sans doute d'autres,

113
00:05:20,150 --> 00:05:23,236
et puis une série de solutions
spécifiques à Spatialite

114
00:05:23,436 --> 00:05:24,999
et spécifiques à PostGIS.

115
00:05:25,999 --> 00:05:28,699
Certaines d'entre elles
faisant appel à des logiciels

116
00:05:28,899 --> 00:05:32,161
hors QGIS comme le 
SQLite Studio pgAdmin III.

117
00:05:33,461 --> 00:05:35,686
Dans les solutions

118
00:05:35,886 --> 00:05:37,336
PostGIS

119
00:05:37,536 --> 00:05:40,274
PostGisQueryBuilder
est également peu intéressante

120
00:05:40,474 --> 00:05:43,586
car n'implémentant pas explicitement
le langage SQL.

121
00:05:44,261 --> 00:05:47,549
Pour les besoins de ce cours,
nous allons travailler avec l'extension

122
00:05:47,749 --> 00:05:49,561
SpatiaLite pour QGIS

123
00:05:49,799 --> 00:05:51,386
qui permet

124
00:05:51,586 --> 00:05:54,811
d'écrire et d'exécuter
des requêtes SQL

125
00:05:55,011 --> 00:05:56,836
sur une base de données Spatialite

126
00:05:57,036 --> 00:05:58,236
dans QGIS.

127
00:05:58,436 --> 00:06:01,261
Et nous utiliserons également
pgAdmin III

128
00:06:01,461 --> 00:06:02,924
qui est un logiciel

129
00:06:03,124 --> 00:06:05,811
qui fait partie de la suite
PostGreSQL

130
00:06:06,011 --> 00:06:08,662
et qui présente
l'avantage de proposer

131
00:06:08,861 --> 00:06:11,637
un outil de construction
de requête graphique.

132
00:06:22,811 --> 00:06:24,449
La requête de sélection

133
00:06:24,649 --> 00:06:26,737
comprend donc les mots clés "select"

134
00:06:26,937 --> 00:06:29,324
suivi du nom de l'attribut recherché

135
00:06:29,524 --> 00:06:33,186
et le mot clé "from" qui permet de
préciser dans quelle table

136
00:06:33,386 --> 00:06:35,374
se trouve l'attribut en question.

137
00:06:36,574 --> 00:06:40,761
Dans QGIS, avec l'extension QSpatialite,
on voit donc que l'on peut

138
00:06:41,286 --> 00:06:43,512
écrire une requête SQL.

139
00:06:43,699 --> 00:06:45,099
Dans la fenêtre prévue à cette effet,

140
00:06:45,299 --> 00:06:48,061
nous allons écrire une requête
pour sélectionner 

141
00:06:48,274 --> 00:06:50,162
la liste des hôtels par leurs noms.

142
00:06:50,474 --> 00:06:53,237
Donc l'attribut recherché
c'est l'attribut "nom"

143
00:06:53,437 --> 00:06:55,687
et la table, la table "hôtels".

144
00:06:56,186 --> 00:06:58,487
L'exécution de la requête
donne donc la liste

145
00:06:58,687 --> 00:07:00,712
des noms des hôtels des Seychelles.

146
00:07:01,899 --> 00:07:04,787
La même opération
peut être effectuée graphiquement

147
00:07:04,987 --> 00:07:06,999
dans pgAdmin III

148
00:07:07,199 --> 00:07:09,399
en ajoutant la table des hôtels

149
00:07:09,562 --> 00:07:11,237
dans le champ de construction
de la requête

150
00:07:11,387 --> 00:07:12,912
en sélectionnant le champ "nom".

151
00:07:13,112 --> 00:07:16,399
On voit que ça se traduit par
la création d'une requête SQL

152
00:07:16,599 --> 00:07:18,762
dont la syntaxe
est un tout petit peu différente.

153
00:07:17,810 --> 00:07:20,810


154
00:07:17,810 --> 00:07:20,810


155
00:07:18,962 --> 00:07:21,387
Cette syntaxe
permet de lever toute ambiguïté

156
00:07:21,587 --> 00:07:23,487
dans le cas où on a plusieurs tables

157
00:07:23,687 --> 00:07:25,562
avec des attributs de mêmes noms.

158
00:07:25,762 --> 00:07:29,074
Par contre, elle n'est pas obligatoire
lorsque le doute n'est pas permis.

159
00:07:29,274 --> 00:07:31,499
La requête de sélection
de 2 attributs

160
00:07:31,699 --> 00:07:33,024
comprend le mot clé "select"

161
00:07:33,224 --> 00:07:36,074
suivi du nom des attributs
séparés par une virgule

162
00:07:36,399 --> 00:07:38,912
puis du mot clé "from"
et du nom de la table.

163
00:07:39,187 --> 00:07:40,799
Dans notre exemple,

164
00:07:41,049 --> 00:07:42,712
nous ajoutons

165
00:07:42,912 --> 00:07:44,524
le nombre de chambres

166
00:07:44,724 --> 00:07:46,562
comme attribut recherché

167
00:07:46,762 --> 00:07:49,149
et l'exécution de la requête

168
00:07:49,349 --> 00:07:51,874
montre donc
le nombre de chambres par...

169
00:07:52,062 --> 00:07:53,787
en regard du nom de l'hôtel.

170
00:07:54,487 --> 00:07:55,974
Dans pgAdmin,

171
00:07:56,174 --> 00:07:58,624
il suffit de sélectionner
le champ supplémentaire

172
00:07:58,824 --> 00:08:00,499
dans le constructeur graphique

173
00:08:00,699 --> 00:08:03,462
ce qui met à jour la requête en SQL

174
00:08:03,662 --> 00:08:06,787
et son exécution donne bien
le résultat escompté.

175
00:08:08,062 --> 00:08:11,637
La syntaxe qui permet de sélectionner
l'ensemble des attributs d'une table

176
00:08:11,837 --> 00:08:14,412
est constituée
du mot clé "select" suivi

177
00:08:14,699 --> 00:08:16,349
d'un astérisque

178
00:08:16,624 --> 00:08:19,549
puis du mot clé "from"
et du nom de la table.

179
00:08:20,449 --> 00:08:22,886
On voit dans cette exemple
que si l'on remplace

180
00:08:23,086 --> 00:08:25,874
les noms des champs
recherchés par une astérisque,

181
00:08:26,074 --> 00:08:29,699
on obtient effectivement une table
qui contient l'ensemble des champs

182
00:08:30,649 --> 00:08:32,199
de la couche.

183
00:08:34,187 --> 00:08:35,212
Pareillement,

184
00:08:35,412 --> 00:08:37,661
dans le constructeur graphique

185
00:08:38,174 --> 00:08:41,187
de pgAdmin...alors on voit
qu'il n'y a pas d'astérisque donc

186
00:08:41,387 --> 00:08:44,049
on peut sélectionner
l'ensemble des champs

187
00:08:44,249 --> 00:08:45,611
manuellement

188
00:08:45,811 --> 00:08:46,861
ou alors

189
00:08:47,061 --> 00:08:48,361
dans la fenêtre SQL

190
00:08:48,536 --> 00:08:51,274
simplement remplacer les champs
par une astérisque

191
00:08:51,436 --> 00:08:53,436
et le résultat est toujours le même.

192
00:08:54,036 --> 00:08:58,086
On peut noter au passage qu'il y a
124 hôtels sélectionnés.

193
00:09:09,361 --> 00:09:12,711
Le mot clé "distinct"
placé à la suite du mot clé "select"

194
00:09:12,911 --> 00:09:15,111
permet d'éliminer les doublons

195
00:09:15,311 --> 00:09:18,099
qui se retrouveraient
dans le résultat d'une requête.

196
00:09:18,899 --> 00:09:20,111
On voit que

197
00:09:20,311 --> 00:09:22,199
si l'on effectue une requête

198
00:09:22,399 --> 00:09:23,549
sur

199
00:09:23,749 --> 00:09:24,811
le statut

200
00:09:25,724 --> 00:09:26,974
des hôtels,

201
00:09:27,799 --> 00:09:29,611
on obtient une table

202
00:09:30,136 --> 00:09:31,649
dans laquelle

203
00:09:31,849 --> 00:09:35,111
on retrouve plusieurs fois la même
valeur puisque de nombreux hôtels

204
00:09:35,311 --> 00:09:38,611
ont en fait le même statut -
petit hôtel, grand hôtel etc.

205
00:09:40,236 --> 00:09:43,049
Le mot clé "distinct" ajouté

206
00:09:43,249 --> 00:09:45,561
à cette requête permet en fait

207
00:09:45,761 --> 00:09:48,874
de filtrer ce résultat
et de n'obtenir

208
00:09:50,012 --> 00:09:53,287
que la liste des différentes
valeurs possibles

209
00:09:53,737 --> 00:09:55,474
de l'attribut "statut".

210
00:09:59,537 --> 00:10:01,749
L'opération est la même

211
00:10:02,199 --> 00:10:03,724
dans pgAdmin.

212
00:10:03,924 --> 00:10:07,174
Et si on ne conserve que
le champ "statut",

213
00:10:07,374 --> 00:10:09,137
on met à jour la requête

214
00:10:09,524 --> 00:10:12,962
et on ajoute le mot clé "distinct"

215
00:10:14,287 --> 00:10:15,812
et on voit

216
00:10:16,012 --> 00:10:17,962
qu'en exécutant la requête,

217
00:10:18,162 --> 00:10:20,999
le résultat obtenu est le même.

218
00:10:37,249 --> 00:10:40,912
L'un des grands intérêts
du langage SQL est de pouvoir

219
00:10:41,274 --> 00:10:44,599
associer plusieurs tables
au sein d'une seule et même requête

220
00:10:44,799 --> 00:10:47,512
pour obtenir un résultat
qui combine des données

221
00:10:47,712 --> 00:10:49,437
provenant de 2 tables différentes.

222
00:10:49,637 --> 00:10:51,737
Cette syntaxe plus explicite

223
00:10:51,937 --> 00:10:55,124
implique de décrire un attribut
par le nom de la table

224
00:10:55,324 --> 00:10:57,637
dont il provient
suivi du nom de l'attribut,

225
00:10:57,837 --> 00:11:00,112
les 2 éléments
étant séparés par un point.

226
00:11:00,824 --> 00:11:02,499
Dans notre exemple ici,

227
00:11:03,024 --> 00:11:04,562
nous allons sélectionner

228
00:11:05,949 --> 00:11:08,337
le champ "nom" de la table "hôtels"

229
00:11:08,537 --> 00:11:11,249
donc décrite par hotels.nom

230
00:11:11,612 --> 00:11:15,149
et dans la table "districts",
également le champ "nom"

231
00:11:15,349 --> 00:11:18,524
ce qui montre bien
tout l'intérêt d'avoir cette

232
00:11:18,937 --> 00:11:21,199
syntaxe un peu plus spécifique.

233
00:11:21,849 --> 00:11:25,624
Donc ces 2 champs tirés des 2 tables
"hôtels" et "districts".

234
00:11:30,262 --> 00:11:34,224
On voit que dans le résultat alors
on trouve l'association systématique

235
00:11:34,424 --> 00:11:35,949
des noms des 2 champs

236
00:11:36,149 --> 00:11:38,474
et on voit que pour 124 hôtels

237
00:11:38,674 --> 00:11:41,524
et 25 districts,
ça nous donne effectivement

238
00:11:41,724 --> 00:11:43,412
3'100 résultats.

239
00:11:46,874 --> 00:11:48,349
Dans pgAdmin,

240
00:11:48,549 --> 00:11:50,511
les choses se passent
de la même manière.

241
00:11:50,824 --> 00:11:54,286
Donc, on sélectionne le champ "nom"
dans la table "hôtels".

242
00:11:54,486 --> 00:11:58,074
On ajoute la table "districts",
on sélectionne le champ "nom" également

243
00:11:58,274 --> 00:12:01,812
et en passant dans l'onglet
requête SQL, on voit que

244
00:12:02,012 --> 00:12:03,412
la requête a été

245
00:12:03,799 --> 00:12:05,561
rédigée de la bonne façon

246
00:12:05,762 --> 00:12:08,274
et l'exécution
donne le même résultat

247
00:12:08,474 --> 00:12:10,874
avec 3'100 possibilités.

248
00:12:22,874 --> 00:12:27,474
Il est parfois utile de pouvoir
remplacer le nom d'attribut original

249
00:12:27,674 --> 00:12:30,199
par un alias plus

250
00:12:30,399 --> 00:12:32,137
lisible ou compréhensible,

251
00:12:32,474 --> 00:12:36,162
opération qui s'effectue
à l'aide du mot clé "as",

252
00:12:37,337 --> 00:12:39,749
nom d'attribut "as" nom d'alias.

253
00:12:40,224 --> 00:12:42,037
Dans notre exemple de tout à l'heure,

254
00:12:42,237 --> 00:12:44,087
nous remplaçons ici

255
00:12:44,524 --> 00:12:47,187
le champ "nom" de l'hôtel par 

256
00:12:47,387 --> 00:12:49,099
Hotel_Name

257
00:12:49,299 --> 00:12:52,899
et le champ "nom" du district par
Districts_Name

258
00:12:53,099 --> 00:12:56,099
ce qui permet aussi
d'éliminer toute ambiguïté

259
00:12:56,299 --> 00:12:58,612
dans la table de résultat

260
00:12:59,112 --> 00:13:02,374
où l'on voit que les entêtes
des colonnes portent bien

261
00:13:02,574 --> 00:13:05,074
les noms qui permettent de savoir
à quoi on a affaire.

262
00:13:05,849 --> 00:13:08,274
Même chose dans pgAdmin,

263
00:13:11,012 --> 00:13:12,999
l'alias est précisé dans

264
00:13:13,637 --> 00:13:17,249
les critères, les caractéristiques
du résultat de la requête

265
00:13:18,737 --> 00:13:20,337
et on voit que

266
00:13:20,537 --> 00:13:22,824
en passant en mode SQL,

267
00:13:23,499 --> 00:13:24,874
la requête a...

268
00:13:25,899 --> 00:13:28,624
la syntaxe de la requête est bien
celle à laquelle on s'attend

269
00:13:28,824 --> 00:13:31,337
et le résultat est bien
celui qu'on s'attend à trouver.

270
00:13:34,474 --> 00:13:38,199
Deuxième possibilité d'utilisation
du concept d'alias,

271
00:13:38,399 --> 00:13:40,162
cette fois pour

272
00:13:40,362 --> 00:13:42,474
changer le nom des tables.

273
00:13:42,674 --> 00:13:46,324
Ce qui est souvent intéressant
pour simplifier un petit peu

274
00:13:46,512 --> 00:13:48,149
la syntaxe des requêtes.

275
00:13:48,349 --> 00:13:49,512
Dans le cas des tables,

276
00:13:49,712 --> 00:13:52,149
les alias ne font pas appel 
au mot clé "as"

277
00:13:52,349 --> 00:13:54,674
mais sont simplement créés
en ajoutant

278
00:13:54,874 --> 00:13:57,199
un nom au nom de la table

279
00:13:57,399 --> 00:13:58,899
avec un espace entre les 2.

280
00:13:59,349 --> 00:14:02,649
Dans notre exemple ici...
bon nous supprimons les

281
00:14:02,849 --> 00:14:05,849
les alias des colonnes,
des attributs

282
00:14:06,049 --> 00:14:08,624
et nous créons des alias
pour les tables,

283
00:14:08,787 --> 00:14:09,987
H pour la table "hôtels"

284
00:14:10,174 --> 00:14:12,187
et D pour la table "districts",

285
00:14:12,387 --> 00:14:14,899
ce qui permet de remplacer dans

286
00:14:15,099 --> 00:14:17,599
la définition des attributs recherchés

287
00:14:17,799 --> 00:14:20,324
le nom des tables par leurs alias,

288
00:14:20,524 --> 00:14:23,262
H pour "hôtels" et D pour "districts".

289
00:14:25,224 --> 00:14:27,574
Et on voit que
l'exécution de cette requête

290
00:14:27,774 --> 00:14:29,287
donne toujours le même résultat.

291
00:14:33,037 --> 00:14:35,437
Même opération dans pgAdmin,

292
00:14:35,912 --> 00:14:39,249
où l'on supprime donc
les alias des attributs.

293
00:14:39,449 --> 00:14:42,049
Clic droit sur la table pour

294
00:14:42,249 --> 00:14:44,199
créer un alias de la table,

295
00:14:44,399 --> 00:14:48,074
H pour la table "hôtels", D pour la table
"districts" comme tout à l'heure

296
00:14:49,062 --> 00:14:51,899
et l'on voit en revenant
dans l'éditeur SQL

297
00:14:52,099 --> 00:14:55,099
que la syntaxe
a été adaptée correctement

298
00:14:55,299 --> 00:14:58,024
et l'exécution
donne bien le bon résultat.

299
00:15:12,124 --> 00:15:13,999
Dans cette leçon,
nous avons donc découvert

300
00:15:14,199 --> 00:15:16,362
les principes de base du langage SQL

301
00:15:16,562 --> 00:15:17,674
et en particulier

302
00:15:17,874 --> 00:15:20,774
les éléments fondamentaux
des requêtes de sélection

303
00:15:20,974 --> 00:15:23,749
avec les mots clés "select" et "from".

304
00:15:24,112 --> 00:15:25,874
Nous avons vu comment

305
00:15:26,037 --> 00:15:28,299
sélectionner des attributs
dans une table,

306
00:15:28,499 --> 00:15:29,449
comment

307
00:15:29,649 --> 00:15:31,624
éliminer
les doublons dans le résultat

308
00:15:31,824 --> 00:15:33,499
à l'aide du mot clé "distinct".

309
00:15:33,699 --> 00:15:37,187
Et finalement, nous avons vu
comment utiliser les alias.

