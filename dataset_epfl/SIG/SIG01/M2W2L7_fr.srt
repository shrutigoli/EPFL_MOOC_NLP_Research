1
00:00:22,260 --> 00:00:23,064
Dans cette leçon

2
00:00:23,264 --> 00:00:24,555
nous allons aborder la question

3
00:00:24,755 --> 00:00:26,904
des requêtes spatiales topologiques, 

4
00:00:27,104 --> 00:00:30,681
donc quelque chose qui complète
les requêtes spatiales géométriques

5
00:00:30,881 --> 00:00:32,428
que nous avons vu
dans la leçon précédente.

6
00:00:32,628 --> 00:00:36,098
Ces requêtes spatiales topologiques

7
00:00:36,298 --> 00:00:38,440
s'intéressent donc
à extraire de l'information

8
00:00:38,640 --> 00:00:41,680
qui caractérisent non plus
les objets spatiaux eux-mêmes

9
00:00:41,880 --> 00:00:43,897
mais plutôt les relations spatiales

10
00:00:44,097 --> 00:00:45,859
et les relations
entre objets spatiaux.

11
00:00:46,059 --> 00:00:47,865
L'objectif de cette leçon

12
00:00:48,065 --> 00:00:49,511
consiste donc à explorer

13
00:00:49,711 --> 00:00:52,423
le champ de la syntaxe
des requêtes SQL

14
00:00:52,623 --> 00:00:55,053
qui permettent
d'extraire de l'information

15
00:00:55,253 --> 00:00:57,363
caractérisant
les relations spatiales

16
00:00:57,563 --> 00:01:00,121
entre objets hébergés
dans une base de données.

17
00:01:00,321 --> 00:01:02,017
Au terme de cette leçon,

18
00:01:02,217 --> 00:01:03,461
vous devriez pouvoir

19
00:01:03,661 --> 00:01:04,921
écrire des requêtes

20
00:01:05,121 --> 00:01:07,626
qui vous permettront de tester
les relations spatiales

21
00:01:07,839 --> 00:01:09,070
entre objets,

22
00:01:09,270 --> 00:01:12,090
de calculer des caractéristiques

23
00:01:12,290 --> 00:01:13,403
comme la distance entre objets

24
00:01:13,603 --> 00:01:15,360
ou de fabriquer de nouveaux objets

25
00:01:15,560 --> 00:01:17,798
par intersection ou différence

26
00:01:17,998 --> 00:01:21,799
ou d'autres opérations portant
sur des objets spatiaux existants.

27
00:01:23,733 --> 00:01:26,569
Tout comme dans le cas
des requêtes spatiales géométriques,

28
00:01:26,769 --> 00:01:28,244
les requêtes spatiales topologiques

29
00:01:28,444 --> 00:01:29,872
sont nombreuses.

30
00:01:30,072 --> 00:01:32,287
Il y a beaucoup de mots-clés 
que l'on peut utiliser.

31
00:01:32,487 --> 00:01:34,886
Nous n'en présenterons qu'une toute
petite partie,

32
00:01:35,086 --> 00:01:37,999
raison pour laquelle
je vous encourage

33
00:01:38,199 --> 00:01:39,720
à jeter un coup d'oeil

34
00:01:39,920 --> 00:01:43,480
sur les sites qui documentent
les fonctions disponibles

35
00:01:43,680 --> 00:01:44,763
dans SpatiaLite

36
00:01:44,963 --> 00:01:45,872
et dans Postgis.

37
00:01:46,072 --> 00:01:49,405
A nouveau, la syntaxe est à peu près
la même dans les deux cas

38
00:01:49,605 --> 00:01:51,932
avec dans le cas de Postgis

39
00:01:52,132 --> 00:01:54,108
l'ajout des lettres S et T

40
00:01:54,308 --> 00:01:55,405
soulignées

41
00:01:55,605 --> 00:01:56,441
avant la fonction.

42
00:01:56,641 --> 00:01:58,375
Dans cette leçon

43
00:01:58,575 --> 00:02:02,235
nous commencerons par revenir
sur la notion de topologie

44
00:02:02,435 --> 00:02:03,300
et de requête topologique,

45
00:02:03,500 --> 00:02:05,528
notion qui avait été présentée
au début du cours.

46
00:02:05,728 --> 00:02:09,235
Puis nous présenterons
les fonctions de test

47
00:02:09,435 --> 00:02:12,722
avant d'aborder
la fonction de distance

48
00:02:12,922 --> 00:02:15,888
et de terminer par
les opérateurs spatiaux.

49
00:02:21,324 --> 00:02:22,548
Nous avions donc vu

50
00:02:22,748 --> 00:02:24,439
en présentant
les notions de topologie

51
00:02:24,639 --> 00:02:26,786
qu'une relation, une dépendance
spatiale

52
00:02:26,986 --> 00:02:29,634
est définie par une propriété

53
00:02:29,834 --> 00:02:31,581
partagée par deux entités spatiales.

54
00:02:31,781 --> 00:02:34,058
Comme par exemple la plus
simple d'entre elle,

55
00:02:34,258 --> 00:02:36,137
la distance qui sépare deux points.

56
00:02:36,337 --> 00:02:37,913
Nous avions également vu

57
00:02:38,113 --> 00:02:39,507
que les relations topologiques

58
00:02:39,707 --> 00:02:41,329
sont une sous-catégorie

59
00:02:41,529 --> 00:02:42,582
de relation spatiale,

60
00:02:42,782 --> 00:02:44,872
de nature qualitative,

61
00:02:45,072 --> 00:02:46,530
indépendante de la mesure et

62
00:02:46,730 --> 00:02:48,713
caractérisée par le fait

63
00:02:48,913 --> 00:02:50,895
d'être invariante sous déformation
continue.

64
00:02:51,095 --> 00:02:53,571
Les principales formes
de relations topologiques

65
00:02:53,771 --> 00:02:55,339
sont l'adjacence, la connectivité,

66
00:02:55,539 --> 00:02:56,642
l'inclusion et l'intersection.

67
00:02:58,268 --> 00:03:01,939
Les requêtes qui portent sur
les relations spatiales entre objets

68
00:03:02,139 --> 00:03:03,915
et plus particulièrement
sur les relations topologiques

69
00:03:04,115 --> 00:03:06,280
peuvent être subdivisées

70
00:03:06,480 --> 00:03:07,833
en gros en 3 catégories.

71
00:03:08,033 --> 00:03:10,149
Tout d'abord les requêtes de test

72
00:03:10,349 --> 00:03:12,916
qui renvoient des valeurs
"vrai" ou "faux".

73
00:03:13,116 --> 00:03:15,493
Des requêtes de distance

74
00:03:15,693 --> 00:03:17,341
qui renvoient une valeur numérique

75
00:03:17,541 --> 00:03:19,416
et les requêtes d'action

76
00:03:19,616 --> 00:03:22,024
qui renvoient des objets spatiaux.

77
00:03:31,746 --> 00:03:32,834
Les requêtes de test

78
00:03:33,034 --> 00:03:33,738
ou fonction de test

79
00:03:33,938 --> 00:03:36,506
permettent donc de tester
les relations spatiales

80
00:03:36,706 --> 00:03:38,832
ou plus précisément
les relations topologiques

81
00:03:39,032 --> 00:03:40,838
entre deux entités spatiales

82
00:03:41,038 --> 00:03:42,018
sur la base de leur géométrie.

83
00:03:42,218 --> 00:03:44,534
La syntaxe est toujours du type

84
00:03:44,734 --> 00:03:45,857
le mot-clé SELECT,

85
00:03:46,057 --> 00:03:48,587
la fonction de test

86
00:03:48,787 --> 00:03:50,743
avec les deux géométries concernées

87
00:03:50,943 --> 00:03:51,907
entre parenthèses,

88
00:03:52,107 --> 00:03:53,251
séparées par une virgule,

89
00:03:53,451 --> 00:03:54,965
la clause FROM

90
00:03:55,165 --> 00:03:56,322
et la table.

91
00:03:56,522 --> 00:03:58,972
Les principales fonctions que
l'on peut utiliser

92
00:03:59,172 --> 00:03:59,877
sont listées ici

93
00:04:00,077 --> 00:04:03,680
notamment on peut tester
l'égalité entre deux géométries,

94
00:04:03,880 --> 00:04:05,956
le fait qu'elles soient éloignées
l'une de l'autre,

95
00:04:06,156 --> 00:04:06,838
qu'elles se touchent,

96
00:04:07,038 --> 00:04:08,257
que l'une soit contenue dans l'autre

97
00:04:08,457 --> 00:04:09,179
ou qu'elle contienne l'autre,

98
00:04:09,379 --> 00:04:11,202
qu'elles se superposent,

99
00:04:11,402 --> 00:04:13,745
qu'elles se croisent, etc.

100
00:04:15,973 --> 00:04:17,049
Dans cet exemple

101
00:04:17,249 --> 00:04:20,047
nous allons sélectionner les hôtels,

102
00:04:20,247 --> 00:04:21,301
le nom des hôtels

103
00:04:21,501 --> 00:04:23,649
qui se trouvent à l'intérieur

104
00:04:23,849 --> 00:04:25,367
du district de Takamaka.

105
00:04:25,567 --> 00:04:27,149
Pour ce faire,

106
00:04:27,349 --> 00:04:31,793
la syntaxe prend un SELECT,
le nom de l'hôtel,

107
00:04:31,993 --> 00:04:33,442
la clause FROM avec les deux tables

108
00:04:33,642 --> 00:04:34,540
hôtels et districts

109
00:04:34,740 --> 00:04:36,735
et puis une clause conditionnelle

110
00:04:36,935 --> 00:04:38,016
dans laquelle on spécifie

111
00:04:38,216 --> 00:04:39,620
le fait que la géométrie des hôtels

112
00:04:39,820 --> 00:04:41,221
doit se trouver à l'intérieur

113
00:04:41,421 --> 00:04:42,216
de la géométrie des districts

114
00:04:42,416 --> 00:04:43,695
et que le nom de district

115
00:04:43,895 --> 00:04:45,621
doit ressembler à Takamaka.

116
00:04:51,127 --> 00:04:52,255
En exécutant cette requête

117
00:04:52,455 --> 00:04:54,492
on obtient donc les 6 hôtels

118
00:04:54,692 --> 00:04:56,515
qui se trouvent dans ce district.

119
00:04:58,749 --> 00:05:00,365
On peut maintenant,
dans un deuxième exemple,

120
00:05:00,565 --> 00:05:01,980
remplacer les hôtels

121
00:05:02,180 --> 00:05:02,950
par les routes

122
00:05:03,150 --> 00:05:05,669
et rechercher en fait les routes

123
00:05:05,869 --> 00:05:10,154
qui intersectent
le district de Takamaka.

124
00:05:10,354 --> 00:05:13,017
Donc on voit qu'on a
une série de 21 routes

125
00:05:13,217 --> 00:05:15,232
qui forment une intersection

126
00:05:15,432 --> 00:05:17,365
avec ce district.

127
00:05:17,565 --> 00:05:21,491
Pour stocker le résultat
de cette requête

128
00:05:21,691 --> 00:05:23,069
sous forme de nouvelle couche

129
00:05:23,269 --> 00:05:25,393
il faut ajouter dans la requête

130
00:05:25,593 --> 00:05:28,212
une colonne "sélectionner
l'attribut de géométrie"

131
00:05:28,412 --> 00:05:30,957
et de définir
avec le nom de géométrie,

132
00:05:31,157 --> 00:05:32,426
qui est le champ qu'on va utiliser

133
00:05:32,626 --> 00:05:35,336
pour fabriquer la couche dans QGIS,

134
00:05:35,536 --> 00:05:37,238
donner un nom à cette couche,

135
00:05:37,438 --> 00:05:38,796
en l'occurrence INTERSECT,

136
00:05:38,996 --> 00:05:41,099
et on exécute cette requête.

137
00:05:43,620 --> 00:05:44,986
On fait une seconde requête

138
00:05:45,186 --> 00:05:46,304
pour sélectionner cette fois

139
00:05:46,504 --> 00:05:51,469
les routes qui touchent
le district de Takamaka.

140
00:05:51,669 --> 00:05:53,712
On voit que cette requête

141
00:05:53,912 --> 00:05:54,891
ne donne aucun résultat,

142
00:05:55,091 --> 00:05:57,573
donc il n'y a pas en fait d'objet

143
00:05:57,773 --> 00:06:01,340
qui touche proprement le district

144
00:06:01,540 --> 00:06:03,223
et une troisième requête

145
00:06:03,423 --> 00:06:05,913
pour identifier les routes

146
00:06:06,113 --> 00:06:09,312
qui sont contenues dans le district.

147
00:06:12,637 --> 00:06:14,697
On exporte également le résultat
de cette requête

148
00:06:14,897 --> 00:06:16,273
comme couche dans QGIS

149
00:06:20,027 --> 00:06:22,024
et si l'on regarde maintenant
ces deux couches,

150
00:06:22,224 --> 00:06:23,969
couche "intersection" en rouge

151
00:06:24,169 --> 00:06:26,475
et couche "contenu" en jaune,

152
00:06:26,675 --> 00:06:29,324
on voit bien
que la couche intersection

153
00:06:29,524 --> 00:06:30,823
comprend davantage d'objets

154
00:06:31,023 --> 00:06:33,626
que la couche de ce qui est
strictement contenu dans le district.

155
00:06:44,183 --> 00:06:45,796
La fonction de distance

156
00:06:45,996 --> 00:06:49,218
permet simplement donc
de calculer la distance

157
00:06:49,418 --> 00:06:51,657
minimale séparant deux géométries,

158
00:06:51,857 --> 00:06:53,418
généralement exprimée en mètres,

159
00:06:53,618 --> 00:06:56,033
enfin ça dépend du système
de projection utilisé.

160
00:06:57,517 --> 00:06:59,560
La syntaxe est de même nature
que dans les cas précédents,

161
00:06:59,760 --> 00:07:02,027
le mot-clé SELECT, la fonction
de distance,

162
00:07:02,227 --> 00:07:03,785
les deux géométries concernées

163
00:07:03,985 --> 00:07:06,210
entre parenthèses,
séparées par une virgule,

164
00:07:06,410 --> 00:07:08,508
la clause FROM
et le nom de la table.

165
00:07:10,817 --> 00:07:11,721
Dans cet exemple

166
00:07:11,921 --> 00:07:13,071
nous allons construire une requête

167
00:07:13,271 --> 00:07:14,941
pour classer les hôtels

168
00:07:15,141 --> 00:07:18,019
en fonction de leur distance
au réseau routier.

169
00:07:18,219 --> 00:07:22,824
Dans la syntaxe, nous allons
commencer par le mot-clé SELECT,

170
00:07:23,024 --> 00:07:24,495
le nom des hôtels

171
00:07:24,695 --> 00:07:26,359
et puis un deuxième facteur

172
00:07:26,559 --> 00:07:28,577
qui va être la distance

173
00:07:28,777 --> 00:07:30,292
entre les géométries des hôtels

174
00:07:30,492 --> 00:07:32,717
et la géométrie des routes

175
00:07:32,917 --> 00:07:35,512
et on va prendre la valeur minimum

176
00:07:35,712 --> 00:07:38,544
de toutes les distances séparant
un hôtel de l'ensemble des routes.

177
00:07:40,027 --> 00:07:42,072
Le champ "calculer
le minimum de distance"

178
00:07:42,272 --> 00:07:43,358
on lui attribue un alias

179
00:07:43,558 --> 00:07:44,472
DIST,

180
00:07:44,672 --> 00:07:46,794
dans la clause FROM

181
00:07:46,994 --> 00:07:48,179
les deux tables concernées,

182
00:07:48,379 --> 00:07:49,607
donc les hôtels et les routes,

183
00:07:49,807 --> 00:07:52,526
une clause de groupement,

184
00:07:52,726 --> 00:07:53,608
le nom des hôtels

185
00:07:53,808 --> 00:07:55,930
et puis un classement

186
00:07:56,130 --> 00:07:59,224
par ordre croissant des distances.

187
00:08:00,945 --> 00:08:02,000
En exécutant cette requête

188
00:08:02,200 --> 00:08:04,985
on trouve la série des 124 hôtels

189
00:08:05,185 --> 00:08:06,904
avec la distance qui les sépare

190
00:08:07,104 --> 00:08:09,927
du réseau routier
entre 10 et 600m.

191
00:08:20,996 --> 00:08:23,468
Une série d'opérateurs spatiaux

192
00:08:23,668 --> 00:08:24,365
pour terminer,

193
00:08:24,565 --> 00:08:29,194
donc des opérateurs qui renvoient
de nouveaux objets géométriques

194
00:08:29,394 --> 00:08:32,212
créés à partir d'objets géométriques
existants.

195
00:08:32,412 --> 00:08:34,559
Le premier de ces opérateurs

196
00:08:34,759 --> 00:08:35,654
est la requête d'union

197
00:08:35,854 --> 00:08:38,598
qui permet de fusionner
deux géométries

198
00:08:38,798 --> 00:08:39,850
en un seul objet.

199
00:08:40,050 --> 00:08:41,765
La requête d'intersection

200
00:08:41,965 --> 00:08:43,790
qui renvoie la partie commune

201
00:08:43,990 --> 00:08:44,850
de deux géométries.

202
00:08:45,050 --> 00:08:46,869
La requête de différence

203
00:08:47,069 --> 00:08:48,524
qui soustrait une géométrie

204
00:08:48,724 --> 00:08:49,686
d'une autre.

205
00:08:49,886 --> 00:08:52,079
La syntaxe, comme de coutume

206
00:08:52,279 --> 00:08:54,090
est composée par le mot-clé
SELECT

207
00:08:54,290 --> 00:08:55,486
suivi de la fonction,

208
00:08:55,686 --> 00:08:57,083
les deux géométries concernées

209
00:08:57,283 --> 00:08:59,333
entre parenthèses,
séparées par une virgule,

210
00:08:59,533 --> 00:09:02,192
l'alias AS GEOMETRY

211
00:09:02,392 --> 00:09:04,677
pour pouvoir réutiliser ce résultat,

212
00:09:04,877 --> 00:09:06,713
dire qu'il s'agit d'une géométrie

213
00:09:06,913 --> 00:09:10,550
et puis la table d'où viennent
les données.

214
00:09:10,750 --> 00:09:15,499
Tout comme dans le cas
de la longueur des polylignes,

215
00:09:15,699 --> 00:09:17,361
la requête d'union,

216
00:09:17,561 --> 00:09:19,423
mot-clé UNION,

217
00:09:19,623 --> 00:09:22,383
fait partie d'une série de mot-clés

218
00:09:22,583 --> 00:09:23,855
réservés dans SpatiaLite,

219
00:09:24,055 --> 00:09:25,782
raison pour laquelle on utilise

220
00:09:25,982 --> 00:09:27,206
GUnion à la place

221
00:09:27,406 --> 00:09:30,523
et comme toujours dans Postgis

222
00:09:30,723 --> 00:09:34,209
l'équivalent sera du type
ST souligné UNION.

223
00:09:34,409 --> 00:09:37,623
Deux autres opérateurs spatiaux
importants,

224
00:09:37,823 --> 00:09:39,337
SIMPLIFY et le BUFFER.

225
00:09:39,537 --> 00:09:41,139
Le premier, SIMPLIFY,

226
00:09:41,339 --> 00:09:42,876
renvoie à une géométrie simplifiée,

227
00:09:43,076 --> 00:09:44,823
compte tenu d'une tolérance

228
00:09:45,023 --> 00:09:46,764
qui est définie
par l'argument numérique

229
00:09:46,964 --> 00:09:48,829
donné dans la fonction,

230
00:09:49,029 --> 00:09:51,359
donc c'est une simplification

231
00:09:51,559 --> 00:09:55,074
qui se base sur un algorithme
de Douglas-Peucker,

232
00:09:55,274 --> 00:09:58,274
qui permet en fait de réduire

233
00:09:58,474 --> 00:10:00,696
le nombre de points dont est composé
une géométrie,

234
00:10:00,896 --> 00:10:03,013
ce qui peut être important

235
00:10:03,213 --> 00:10:04,585
dans les performances d'affichage

236
00:10:04,785 --> 00:10:06,679
des géométries à l'écran.

237
00:10:06,879 --> 00:10:08,954
La fonction BUFFER

238
00:10:09,154 --> 00:10:10,223
renvoie une géométrie

239
00:10:10,423 --> 00:10:12,043
qui couvre l'ensemble d'une zone

240
00:10:12,243 --> 00:10:14,987
située à une distance inférieure
ou égale

241
00:10:15,187 --> 00:10:17,949
au nombre donné en attribut

242
00:10:18,149 --> 00:10:20,381
d'une géométrie d'origine.

243
00:10:20,581 --> 00:10:22,510
C'est le concept de zone tampon.

244
00:10:22,710 --> 00:10:24,577
Au niveau de la syntaxe

245
00:10:24,777 --> 00:10:26,573
toujours le mot-clé SELECT,

246
00:10:26,773 --> 00:,10:27,431
la fonction,

247
00:10:27,631 --> 00:10:31,667
la géométrie, virgule,
la variable numérique,

248
00:10:31,867 --> 00:10:34,417
une tolérance
dans le cas du SIMPLIFY,

249
00:10:34,617 --> 00:10:36,607
distance dans le cas du BUFFER,

250
00:10:36,807 --> 00:10:40,345
AS GEOMETRY parce que l'on fabrique
des géométries

251
00:10:40,545 --> 00:10:42,294
et puis la table d'origine.

252
00:10:44,212 --> 00:10:45,081
Dans ce premier exemple

253
00:10:45,281 --> 00:10:47,023
nous allons illustrer l'utilisation

254
00:10:47,223 --> 00:10:48,231
de la fonction SIMPLIFY

255
00:10:48,431 --> 00:10:51,681
en simplifiant le réseau routier
des Seychelles

256
00:10:51,881 --> 00:10:55,241
avec une tolérance d'une valeur 50.

257
00:10:55,441 --> 00:10:58,113
On voit que la requête produit
bel et bien

258
00:10:58,313 --> 00:11:00,457
des objets géométriques.

259
00:11:00,657 --> 00:11:03,924
Il faut les définir
en tant que géométries

260
00:11:04,124 --> 00:11:05,438
pour pouvoir les récupérer

261
00:11:05,638 --> 00:11:07,792
dans QGIS comme de coutume.

262
00:11:09,481 --> 00:11:11,037
On donne un nom à la table,

263
00:11:11,237 --> 00:11:12,997
SIMPLIFY, la géométrie

264
00:11:13,197 --> 00:11:15,376
étant bien entendu le champ
géométrie.

265
00:11:15,576 --> 00:11:18,090
Cette couche simplifiée

266
00:11:18,290 --> 00:11:19,690
on la voit apparaître ici en blanc

267
00:11:19,890 --> 00:11:21,381
et si on s'approche un petit peu

268
00:11:21,581 --> 00:11:23,228
on voit qu'effectivement le détail

269
00:11:23,428 --> 00:11:25,617
du réseau routier a été effacé

270
00:11:25,817 --> 00:11:27,228
au profit d'une structure
plus simple.

271
00:11:30,094 --> 00:11:30,988
Second exemple

272
00:11:31,188 --> 00:11:33,411
avec l'union.

273
00:11:33,611 --> 00:11:35,954
On va établir une requête d'union

274
00:11:36,154 --> 00:11:37,923
entre deux districts,

275
00:11:38,123 --> 00:11:39,076
le district de Port Glaud

276
00:11:39,276 --> 00:11:41,189
et le district de Grand'Anse Mahé.

277
00:11:43,466 --> 00:11:46,631
On fait porter la requête d'union

278
00:11:46,831 --> 00:11:49,114
sur le champ géométrie
de la table districts

279
00:11:49,314 --> 00:11:52,333
et puis dans la clause conditionnelle

280
00:11:52,533 --> 00:11:54,447
qui vient préciser les choses

281
00:11:54,647 --> 00:11:56,411
on dit que l'on veut que le nom

282
00:11:56,611 --> 00:11:59,401
des districts choisis pour l'union

283
00:11:59,601 --> 00:12:02,386
soit soit Port Glaud
soit Grand'Anse Mahé.

284
00:12:10,659 --> 00:12:11,872
L'exécution de cette requête

285
00:12:12,072 --> 00:12:13,914
provoque donc la fusion

286
00:12:14,114 --> 00:12:16,129
des deux entités.

287
00:12:18,761 --> 00:12:19,625
Troisième cas de figure,

288
00:12:19,825 --> 00:12:23,383
on va construire une zone tampon,

289
00:12:23,583 --> 00:12:24,355
un buffer,

290
00:12:24,555 --> 00:12:27,742
autour de la route Sans Soucis Road

291
00:12:27,942 --> 00:12:32,148
qui se trouve
dans la partie centre-ouest

292
00:12:32,348 --> 00:12:33,064
des Seychelles.

293
00:12:33,264 --> 00:12:36,784
Donc on définit un buffer
d'une largeur de 100m

294
00:12:36,984 --> 00:12:37,818
autour de cette route

295
00:12:38,018 --> 00:12:40,676
et puis dans la clause conditionnelle

296
00:12:40,876 --> 00:12:42,624
on va simplement dire que l'on veut

297
00:12:42,824 --> 00:12:44,211
tous les segments de route

298
00:12:44,411 --> 00:12:47,430
qui ressemblent à Sans Soucis Road.

299
00:12:50,312 --> 00:12:51,710
L'exécution de cette requête

300
00:12:51,910 --> 00:12:53,321
fournit des objets géométriques.

301
00:12:53,521 --> 00:12:56,484
Avec le AS GEOMETRY

302
00:12:56,684 --> 00:12:58,235
et en définissant un nom de table,

303
00:12:58,435 --> 00:13:01,863
on ajoute cette requête

304
00:13:02,063 --> 00:13:03,958
sous forme de couche

305
00:13:04,158 --> 00:13:06,481
dans l'interface QGIS

306
00:13:06,681 --> 00:13:09,182
et on voit qu'au moment
où j'exécute la requête

307
00:13:09,382 --> 00:13:12,729
la zone tampon s'affiche
sur la carte,

308
00:13:12,929 --> 00:13:13,624
ici en rose,

309
00:13:13,824 --> 00:13:16,332
et si on va voir ça
d'un peu plus près

310
00:13:16,532 --> 00:13:18,272
on voit que les différents tronçons
de la route

311
00:13:18,472 --> 00:13:21,097
vont donner naissance
à une succession

312
00:13:21,297 --> 00:13:22,740
de morceaux de zone tampon

313
00:13:22,940 --> 00:13:25,107
qui s'emboîtent les uns
avec les autres.

314
00:13:26,838 --> 00:13:27,822
Comme dernier exemple,

315
00:13:28,022 --> 00:13:30,991
nous allons encore créer
une zone tampon

316
00:13:31,191 --> 00:13:34,838
autour des deux districts

317
00:13:35,038 --> 00:13:36,425
de Port Glaud et de Grand'Anse Mahé

318
00:13:36,625 --> 00:13:38,931
en reprenant la requête de tout
à l'heure

319
00:13:39,131 --> 00:13:42,033
de fusion de ces éléments

320
00:13:42,233 --> 00:13:44,307
et cette fois-ci
en ajoutant à cette fusion

321
00:13:44,507 --> 00:13:47,600
la création d'un buffer.

322
00:13:49,897 --> 00:13:51,761
Si on déplace
la couche des districts

323
00:13:51,961 --> 00:13:53,030
au-dessus de ce buffer

324
00:13:53,230 --> 00:13:54,526
et qu'on va voir ça
d'un peu plus près

325
00:13:54,726 --> 00:13:55,942
on voit qu'effectivement

326
00:13:56,142 --> 00:13:57,148
on a créé une tranche de 100m

327
00:13:57,348 --> 00:13:59,583
autour de ces deux districts
fusionnés.

328
00:14:08,832 --> 00:14:10,102
Dans cette leçon,

329
00:14:10,302 --> 00:14:11,564
après être revenu un tout petit peu

330
00:14:11,764 --> 00:14:12,741
sur les notions de topologie,

331
00:14:12,941 --> 00:14:14,539
nous avons vu quelques exemples

332
00:14:14,739 --> 00:14:15,822
des fonctions de test

333
00:14:16,022 --> 00:14:17,748
qui permettent d'évaluer

334
00:14:17,948 --> 00:14:21,434
l'existence de relations spatiales
topologiques

335
00:14:21,634 --> 00:14:22,875
entre entités spatiales.

336
00:14:23,075 --> 00:14:25,295
Nous avons vu
un exemple d'utilisation

337
00:14:25,495 --> 00:14:26,940
de la fonction de distance

338
00:14:27,140 --> 00:14:31,280
pour trier les hôtels en fonction
de leur distance au réseau routier

339
00:14:31,480 --> 00:14:33,547
et nous avons vu quelques exemples

340
00:14:33,747 --> 00:14:35,666
d'application
des opérateurs spatiaux

341
00:14:35,866 --> 00:14:38,064
qui permettent de créer de nouveaux
objets

342
00:14:38,264 --> 00:14:39,556
par intersection

343
00:14:39,756 --> 00:14:43,010
par différence, par création
de zones tampon

344
00:14:43,210 --> 00:14:44,333
et autre.

