1
00:00:22,098 --> 00:00:23,446
Welcome to the lesson

2
00:00:23,619 --> 00:00:26,750
during which we will prepare
the test databases

3
00:00:27,138 --> 00:00:29,076
that we will use later

4
00:00:29,268 --> 00:00:33,871
to illustrate the different forms
of use of the SQL language

5
00:00:34,046 --> 00:00:35,681
when making queries

6
00:00:35,852 --> 00:00:38,515
to search for objects in databases.

7
00:00:38,773 --> 00:00:41,822
The objective of this lesson is
to familiarize

8
00:00:42,004 --> 00:00:46,905
with the use of different types
of data supports in QGIS,

9
00:00:47,192 --> 00:00:49,546
data supports in the form of simple files

10
00:00:49,709 --> 00:00:53,228
or SpatiaLite and postGIS
databases in particular.

11
00:00:54,790 --> 00:00:58,845
We will discuss successively the
objectives of this approach,

12
00:00:59,346 --> 00:01:00,981
the importation of source files,

13
00:01:01,181 --> 00:01:04,633
the creation of a database 
in SpatiaLite format

14
00:01:04,825 --> 00:01:07,760
and finally the creation of 
a PostGIS database.

15
00:01:09,460 --> 00:01:12,471
The objective of this lesson is
to prepare a dataset

16
00:01:12,659 --> 00:01:14,984
that will be able to 
be used subsequently

17
00:01:15,185 --> 00:01:19,639
to test and illustrate the queries
and the SQL language.

18
00:01:20,039 --> 00:01:25,043
As we saw in the first
lesson of this module,

19
00:01:25,230 --> 00:01:28,929
this dataset can be based on
various types of supports,

20
00:01:29,904 --> 00:01:33,247
in this specific case we
will create 3 supports

21
00:01:33,626 --> 00:01:36,122
to show how these 3 types of supports

22
00:01:36,275 --> 00:01:39,695
can be used in the QGIS software.

23
00:01:40,116 --> 00:01:42,916
These 3 types of supports 
are first of all

24
00:01:43,167 --> 00:01:46,360
the simple files in the Shapefile ESRI format

25
00:01:46,543 --> 00:01:50,631
and then a stand-alone
database in SpatiaLite format

26
00:01:50,837 --> 00:01:53,666
so a database independent
of a central server

27
00:01:54,237 --> 00:01:57,986
and finally a postGIS postGres database

28
00:01:58,184 --> 00:02:00,655
hosted on a centralized server.

29
00:02:12,085 --> 00:02:15,635
So to start with, we open 
the QGIS application

30
00:02:20,907 --> 00:02:23,544
and when it is launched, we import

31
00:02:24,353 --> 00:02:25,928
some vectorial layers

32
00:02:26,703 --> 00:02:30,154
from a database on the Seychelles.

33
00:02:31,894 --> 00:02:34,981
These basic data are composed 
of 4 layers:

34
00:02:36,027 --> 00:02:39,824
the districts of the 3 central
islands of the Seychelles,

35
00:02:39,997 --> 00:02:42,922
the hotels, a layer containing 
localities,

36
00:02:43,113 --> 00:02:45,385
and finally the road network.

37
00:02:46,392 --> 00:02:49,742
We can see that for each of
these layers there are 5 files,

38
00:02:49,990 --> 00:02:54,580
we recognize, as we saw
in the first lesson of this module,

39
00:02:54,806 --> 00:03:00,523
the .shp .shx and .dbf files
which are the basic files of

40
00:03:01,826 --> 00:03:03,125
the ESRI system,

41
00:03:03,634 --> 00:03:06,310
to which a PRJ file is added

42
00:03:06,480 --> 00:03:09,417
which contains the
projection information

43
00:03:09,665 --> 00:03:14,026
and a QML file which is
a QGIS-specific file

44
00:03:14,275 --> 00:03:16,951
containing the
symbology of those layers.

45
00:03:18,294 --> 00:03:22,054
We select the 4 Shapefile to import,

46
00:03:22,457 --> 00:03:25,338
so the files that have 
the SHP extension

47
00:03:26,493 --> 00:03:30,830
and we validate their imports.

48
00:03:32,293 --> 00:03:36,192
So they set themselves up
to complete the exercise,

49
00:03:36,371 --> 00:03:39,171
we put these layers in the right order

50
00:03:39,925 --> 00:03:44,137
and then we can modify
the background color

51
00:03:45,074 --> 00:03:49,097
it is the ocean we can 
put it in blue,

52
00:03:51,523 --> 00:03:54,712
change the scale of presentation,

53
00:03:55,209 --> 00:03:56,796
to see a little better what happens

54
00:03:56,989 --> 00:03:59,970
and then finally save the project

55
00:04:01,421 --> 00:04:04,273
in QGIS project format.

56
00:04:14,002 --> 00:04:15,422
To complete things,

57
00:04:15,598 --> 00:04:18,442
we will put these first
layers in a group

58
00:04:18,629 --> 00:04:20,581
which we will call Shapefile

59
00:04:20,996 --> 00:04:26,228
by adding the group and moving
these different layers

60
00:04:26,410 --> 00:04:29,021
to put them in this folder.

61
00:04:40,366 --> 00:04:42,362
To create the SpatiaLite database,

62
00:04:42,537 --> 00:04:47,632
we will start by installing
a QGIS extension

63
00:04:47,820 --> 00:04:51,945
called QSpatiaLite, which gives
us access to this type of ...

64
00:04:52,246 --> 00:04:54,777
which allows to manage
this database format.

65
00:04:55,662 --> 00:05:00,498
When this extension is installed,
we can find it in the database menu

66
00:05:01,381 --> 00:05:05,870
and we will start by creating
a new SpatiaLite database

67
00:05:06,071 --> 00:05:08,629
that we will put in disk E,

68
00:05:09,273 --> 00:05:13,305
in the material which concerns 
the Seychelles

69
00:05:13,881 --> 00:05:17,362
and we will call this database "Mahé"

70
00:05:17,681 --> 00:05:20,481
of the name of the main
island of the Seychelles.

71
00:05:21,926 --> 00:05:25,733
So, there are some messages related
to the creation of this database

72
00:05:27,266 --> 00:05:29,441
and once it is present

73
00:05:29,628 --> 00:05:33,552
the QGIS interface of SpatiaLite
allows to import the layers

74
00:05:33,777 --> 00:05:35,664
that are present in the map.

75
00:05:36,246 --> 00:05:39,159
We ca specify the projection system,

76
00:05:39,367 --> 00:05:43,601
in this case UTM South 40°.

77
00:05:45,210 --> 00:05:48,054
The importation is done.

78
00:05:49,028 --> 00:05:53,835
We see that during the import, SpatiaLite 
did not understand the ID fields

79
00:05:54,117 --> 00:05:56,418
as being primary keys of these tables

80
00:05:56,637 --> 00:05:59,828
and it added a new PKUID field

81
00:06:00,198 --> 00:06:05,231
symbolized by a small key that
shows that it is a primary key.

82
00:06:05,473 --> 00:06:08,198
This is something that we
will have to change,

83
00:06:08,411 --> 00:06:10,237
we will put some order in this database

84
00:06:10,427 --> 00:06:15,366
and it is something that we will
do with a specific SpatiaLite software.

85
00:06:16,397 --> 00:06:19,675
We open an instance of SQLiteStudio,

86
00:06:21,420 --> 00:06:25,647
we add a database, so the Mahé database

87
00:06:26,956 --> 00:06:28,934
and when this database has been added

88
00:06:29,152 --> 00:06:31,967
we can connect it

89
00:06:32,517 --> 00:06:35,699
and access the different tables
it contains in particular.

90
00:06:36,072 --> 00:06:38,947
In the district table we
can delete the primary key

91
00:06:39,153 --> 00:06:41,481
that was added during the import

92
00:06:41,710 --> 00:06:44,962
and modify the original ID column

93
00:06:45,145 --> 00:06:47,930
first by saying that it is
an integer and not a real

94
00:06:48,115 --> 00:06:49,915
and by saying it is a primary key.

95
00:06:50,287 --> 00:06:52,369
We validate these changes

96
00:06:53,678 --> 00:06:55,936
and then we go on to the next table,

97
00:06:56,123 --> 00:06:57,342
the hotels table

98
00:06:57,702 --> 00:06:59,254
where likewise we delete

99
00:06:59,432 --> 00:07:02,873
the identifier field added by the import.

100
00:07:03,970 --> 00:07:07,511
We modify the original field to
put it back as an integer

101
00:07:07,875 --> 00:07:10,173
and redo a primary key.

102
00:07:11,305 --> 00:07:13,564
Similarly, the rooms which were a ...

103
00:07:13,730 --> 00:07:16,403
the number of rooms which was
an integer has become a real,

104
00:07:16,729 --> 00:07:19,680
the number of beds also became a real,

105
00:07:19,868 --> 00:07:23,056
which we put back as an integer.

106
00:07:24,564 --> 00:07:29,330
And finally the ID of the
district in which the hotel

107
00:07:29,805 --> 00:07:33,397
is located which is also an integer at the
beginning and which is a foreign key

108
00:07:34,204 --> 00:07:38,412
pointing to the district table and to
the ID field of the district table.

109
00:07:42,761 --> 00:07:44,598
So we validate these changes

110
00:07:44,801 --> 00:07:49,795
and in the 2 remaining tables, 
localities and roads,

111
00:07:50,321 --> 00:07:52,427
we could leave things as they are

112
00:07:52,627 --> 00:07:53,807
but whilst we are at it

113
00:07:53,985 --> 00:07:56,171
we also delete the primary key added

114
00:07:56,382 --> 00:07:59,323
and then we put the initial key back.

115
00:08:03,191 --> 00:08:05,618
Here for the locality layer

116
00:08:06,078 --> 00:08:08,497
and subsequently for the road table,

117
00:08:09,243 --> 00:08:10,991
we do the same operation.

118
00:08:21,355 --> 00:08:23,005
We validate all of this

119
00:08:24,993 --> 00:08:26,556
and the loop is closed.

120
00:08:27,385 --> 00:08:32,606
So we can close this 
SQLiteStudio application

121
00:08:32,781 --> 00:08:36,637
which is also a free
application

122
00:08:36,852 --> 00:08:41,147
and now when we return in QGIS
in the SpatiaLite interface

123
00:08:41,572 --> 00:08:47,076
we can add the layers that
this time have the right parameters,

124
00:08:47,605 --> 00:08:51,386
we can add them to the QGIS map

125
00:08:59,442 --> 00:09:04,807
and then create a new group for
these SpatiaLite layers

126
00:09:05,467 --> 00:09:09,542
and place the imported
layers in this group.

127
00:09:13,615 --> 00:09:16,178
That is done, and we save it all.

128
00:09:17,005 --> 00:09:21,804
Finally, we add an "_S" extension

129
00:09:21,982 --> 00:09:25,929
to mark the difference between
the SpatiaLite layers

130
00:09:26,134 --> 00:09:29,205
and the original Shapefile ESRI layers.

131
00:09:42,308 --> 00:09:45,395
The installation of PostgreSQL and PostGIS

132
00:09:45,609 --> 00:09:47,698
does not pose any major problem,

133
00:09:48,613 --> 00:09:50,480
the softwares are free

134
00:09:50,668 --> 00:09:52,393
and can be downloaded on the Internet

135
00:09:53,018 --> 00:09:57,413
and the download sites offer tutorials

136
00:09:58,775 --> 00:10:02,188
that describe this installation so
we will not talk about this here.

137
00:10:02,374 --> 00:10:07,722
We will assume that the PostGres 
PostGIS application is installed

138
00:10:07,922 --> 00:10:13,085
and we will use the pgAdmin 
user interface

139
00:10:13,285 --> 00:10:16,485
to access this database.

140
00:10:17,002 --> 00:10:19,425
We open the pgAdmin application

141
00:10:21,180 --> 00:10:25,714
in which we will be able
to create a new database

142
00:10:27,966 --> 00:10:30,523
that we will call "Seychelles"

143
00:10:33,077 --> 00:10:36,465
and as the user we will put ...

144
00:10:36,919 --> 00:10:40,165
as owner we will put "Marc", myself.

145
00:10:43,990 --> 00:10:47,336
Then when this database
is created we can open it

146
00:10:47,542 --> 00:10:51,151
and then an extension must be added

147
00:10:51,608 --> 00:10:54,195
to be able to use spatial data,

148
00:10:54,433 --> 00:10:57,479
this extension is the PostGIS extension

149
00:10:57,654 --> 00:11:00,903
it is here in the long
list of possible extension,

150
00:11:01,141 --> 00:11:05,431
so we add this PostGIS extension to
the Seychelles database,

151
00:11:05,646 --> 00:11:08,071
which will allow us later to import

152
00:11:08,992 --> 00:11:13,063
QGIS geographic layers
into this PostGIS database.

153
00:11:14,854 --> 00:11:17,829
To do this, we also need an extension

154
00:11:18,012 --> 00:11:20,082
that is in the extension library

155
00:11:20,252 --> 00:11:22,644
and that is called "processing"

156
00:11:23,699 --> 00:11:28,666
which actually provides a whole bunch
of spatial data processing tools,

157
00:11:28,863 --> 00:11:32,313
so we will find them in the
processing menu, the toolbox,

158
00:11:32,968 --> 00:11:36,127
and here we have a series of
QGIS specific geoprocessing,

159
00:11:36,352 --> 00:11:40,386
and in the database section we have
the import of layers into

160
00:11:40,574 --> 00:11:43,324
a QGIS database.

161
00:11:43,494 --> 00:11:45,974
We can specify the primary key field

162
00:11:46,174 --> 00:11:50,624
so here we imported the districts,
we will import the hotels this time,

163
00:11:51,170 --> 00:11:52,969
starting from the Shapefile,

164
00:11:53,187 --> 00:11:57,254
we define the ID field 
as the primary key again,

165
00:12:00,157 --> 00:12:04,601
same thing for the locality layer

166
00:12:08,982 --> 00:12:11,519
and finally for the road layer.

167
00:12:22,535 --> 00:12:23,822
That is done.

168
00:12:25,545 --> 00:12:28,276
This toolbox can be closed.

169
00:12:30,907 --> 00:12:31,419
And

170
00:12:36,199 --> 00:12:38,449
still in the extensions,
we have an extension

171
00:12:38,654 --> 00:12:43,282
called "DB Manager", 
for Data Base Manager

172
00:12:44,311 --> 00:12:47,735
and which is translated into a
database manager in french,

173
00:12:47,922 --> 00:12:51,173
when this extension is
installed in the database menu

174
00:12:51,381 --> 00:12:53,533
we find the database manager

175
00:12:53,944 --> 00:12:56,487
and this manager we can see that
it gives access to the PostGIS databases

176
00:12:56,687 --> 00:12:59,184
as well as the SpatiaLite databases

177
00:12:59,397 --> 00:13:01,947
and we see that this
PostGIS Seychelles database

178
00:13:02,231 --> 00:13:05,880
is present and contains
the different fields

179
00:13:06,077 --> 00:13:08,378
with their information, 
the tabular data

180
00:13:08,559 --> 00:13:10,606
and an overview of their geometries.

181
00:13:12,109 --> 00:13:14,266
And these different layers,
we can then ...

182
00:13:14,466 --> 00:13:16,470
from that database manager,

183
00:13:16,659 --> 00:13:18,907
we can add them to the map,

184
00:13:21,071 --> 00:13:23,253
and then as before

185
00:13:23,882 --> 00:13:28,025
create a group for these PostGIS
layers in the map

186
00:13:30,009 --> 00:13:33,659
and then place these different
layers in that group.

187
00:13:52,324 --> 00:13:54,815
And as before, we will add

188
00:13:54,994 --> 00:14:03,022
a "P" suffix to distinguish
these layers from the original layers

189
00:14:03,390 --> 00:14:08,507
in Shapefile format or
layers in SpatiaLite format.

190
00:14:10,215 --> 00:14:11,395
And so,

191
00:14:11,570 --> 00:14:15,757
all the data that we wanted to set up

192
00:14:15,941 --> 00:14:19,092
to test queries and the SQL
language is ready.

193
00:14:30,884 --> 00:14:32,576
In this lesson we have seen

194
00:14:33,338 --> 00:14:37,422
how to manipulate Shapefile,
SpatiaLite, PostGIS data

195
00:14:38,510 --> 00:14:39,950
from the QGIS software,

196
00:14:40,117 --> 00:14:43,881
how to create databases, how
to document them.

197
00:14:44,069 --> 00:14:46,629
And we have been able to produce

198
00:14:46,820 --> 00:14:48,755
a dataset that will be useful to us

199
00:14:48,940 --> 00:14:52,795
to test the queries and the SQL language.

