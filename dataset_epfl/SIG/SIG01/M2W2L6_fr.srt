1
00:00:21,927 --> 00:00:24,896
Bonjour et bienvenue
dans cette leçon qui va porter 

2
00:00:25,096 --> 00:00:27,829
sur les requêtes spatiales géométriques,

3
00:00:28,029 --> 00:00:32,194
un ensemble de requêtes donc
qui s'intéresse plus spécifiquement

4
00:00:32,414 --> 00:00:36,291
à extraire de l'information sur la nature
et les propriétés géométriques

5
00:00:36,503 --> 00:00:39,711
des objets spatiaux
stockés dans une base de données.

6
00:00:40,269 --> 00:00:43,868
L'objectif de cette leçon
consiste donc à explorer

7
00:00:44,068 --> 00:00:48,293
ce monde des requêtes SQL
qui cherche à extraire des propriétés

8
00:00:48,493 --> 00:00:51,581
caractéristiques géométriques
des objets spatiaux stockés

9
00:00:51,806 --> 00:00:54,488
dans une base de données,
de sorte que vous soyez en mesure

10
00:00:54,688 --> 00:00:58,285
de récupérer des informations
comme les coordonnées d'un point,

11
00:00:58,485 --> 00:01:03,208
le périmètre ou la longueur d'une ligne,
la surface d'un polygone,

12
00:01:03,408 --> 00:01:07,346
à partir des géométries spatiales
hébergées dans une base de données.

13
00:01:07,546 --> 00:01:12,128
<i>Il existe un grand nombre de
requêtes spatiales géométriques différentes</i>

14
00:01:12,328 --> 00:01:17,041
<i>avec une grande variété de mots-clés
que nous ne pouvons pas passer</i>

15
00:01:17,241 --> 00:01:20,241
<i>évidemment tous en revue
donc nous allons vous présenter</i>

16
00:01:20,441 --> 00:01:24,541
<i>quelques situations,
quelques requêtes types</i>

17
00:01:24,741 --> 00:01:27,246
<i>qui nous paraissent
particulièrement importantes.</i>

18
00:01:27,446 --> 00:01:30,446
<i>C'est toujours une bonne idée
de consulter les sites</i>

19
00:01:30,646 --> 00:01:33,646
<i>des logiciels spécialisés,
en l'occurence le site de SpatiaLite</i>

20
00:01:33,846 --> 00:01:35,375
<i>et celui de PostGIS,</i>

21
00:01:35,575 --> 00:01:38,850
<i>pour se faire une idée
un peu plus exhaustive</i>

22
00:01:39,039 --> 00:01:42,139
<i>de l'ensemble des fonctionnalités
disponibles en terme</i>

23
00:01:42,351 --> 00:01:43,713
<i>de requêtes spatiales géométriques.</i>

24
00:01:43,913 --> 00:01:47,236
<i>En général, la syntaxe
est à peu près la même</i>

25
00:01:47,436 --> 00:01:50,436
<i>dans tous les cas
avec une particularité toutefois</i>

26
00:01:50,636 --> 00:01:53,719
<i>dans le monde PostGIS
qui, dès lors que </i>

27
00:01:53,944 --> 00:01:58,998
<i>la requête porte sur les objets spatiaux,
fait précéder en fait le mot-clé</i>

28
00:01:59,198 --> 00:02:04,620
<i>des lettres ST souligné,
ST pour Spatial Type,</i>

29
00:02:04,820 --> 00:02:09,258
<i>qui permet dans une requête SQL
de distinguer clairement</i>

30
00:02:09,458 --> 00:02:11,793
<i>tout ce qui s'adresse
à des propriétés spatiales</i>

31
00:02:11,993 --> 00:02:16,566
<i>et qui sont spécifiques au monde
PostGIS par rapport monde PostgreSQL</i>

32
00:02:16,766 --> 00:02:19,230
<i>sur lequel PostGIS est bâti.</i>

33
00:02:19,430 --> 00:02:23,673
<i>Mais pour le reste, la syntaxe
est la même que dans SpatiaLite</i>

34
00:02:23,873 --> 00:02:25,923
<i>à quelques rares exceptions près.</i>

35
00:02:26,123 --> 00:02:29,660
<i>Dans cette leçon, nous allons aborder
d'abord les requêtes</i>

36
00:02:29,885 --> 00:02:33,013
<i>qui permettent de sélectionner et
d'afficher des géométries,</i>

37
00:02:33,213 --> 00:02:40,925
<i>afficher dans une carte, ou de 
consulter la référence spatiale utilisée,</i>

38
00:02:41,162 --> 00:02:42,495
<i>donc le code ESPG.</i>

39
00:02:42,695 --> 00:02:46,569
<i>Nous verrons ensuite
quelques syntaxes de requêtes SQL,</i>

40
00:02:46,782 --> 00:02:49,384
<i>de conversion de données
pour transformer des géométries</i>

41
00:02:49,609 --> 00:02:52,160
<i>en format texte ou
en format binaire,</i>

42
00:02:52,360 --> 00:02:56,497
<i>des requêtes qui permettent d'extraire,
de consulter le type de géométrie</i>

43
00:02:56,722 --> 00:03:00,701
<i>auquel on a affaire et finalement,
nous verrons une série de requêtes</i>

44
00:03:00,901 --> 00:03:03,754
<i>qui permettent de récupérer
les propriétés spécifiques</i>

45
00:03:03,954 --> 00:03:05,301
<i>des géométries.</i>

46
00:03:10,527 --> 00:03:15,348
<i>Le mot-clé GEOMETRY désigne
en général l'attribut géométrie</i>

47
00:03:15,548 --> 00:03:18,548
<i>d'une table de données spatiales,</i>

48
00:03:18,748 --> 00:03:21,456
<i>donc la géométrie
de l'objet spatial</i>

49
00:03:21,656 --> 00:03:24,506
<i>et il est utilisé
dans les requêtes de sélection</i>

50
00:03:24,706 --> 00:03:27,856
<i>pour afficher des objets
sur une carte.</i>

51
00:03:28,056 --> 00:03:31,056
<i>On peut également l'utiliser
pour extraire</i>

52
00:03:31,256 --> 00:03:33,984
<i>la référence du système
de projection utilisé</i>

53
00:03:34,184 --> 00:03:37,795
<i>ou tout un tas d'autres informations
que nous verrons par la suite.</i>

54
00:03:37,995 --> 00:03:41,227
<i>La syntaxe se base
tout simplement sur le mot-clé</i>

55
00:03:41,427 --> 00:03:44,639
<i>SELECT, GEOMETRY,
on sélectionne les géométries, </i>

56
00:03:44,848 --> 00:03:47,510
<i>FROM, le nom de la table
pour indiquer la table</i>

57
00:03:47,760 --> 00:03:49,313
<i>de laquelle on extrait
les géométries.</i>

58
00:03:49,513 --> 00:03:51,905
<i>Puis après, on peut imaginer
des clause conditionnelles</i>

59
00:03:52,105 --> 00:03:54,717
<i>qui permettent de trier,
dans les géométries,</i>

60
00:03:54,930 --> 00:03:56,576
<i>celles qui répondent à
certains critères.</i>

61
00:03:56,776 --> 00:03:58,568
<i>On en verra un exemple
tout à l'heure.</i>

62
00:03:58,768 --> 00:04:03,658
<i>Le mot-clé SRID avec le mot-clé 
GEOMETRY entre parenthèses</i>

63
00:04:03,858 --> 00:04:07,590
<i>pour extraire la référence
du système de projection utilisé,</i>

64
00:04:07,828 --> 00:04:10,328
<i>en l'occurrence le code ESPG.</i>

65
00:04:11,528 --> 00:04:15,252
<i>Alors un exemple
de l'application de ces éléments.</i>

66
00:04:15,452 --> 00:04:18,452
<i>Tout d'abord, lorsqu'il s'agit
de sélectionner en fait des objets,</i>

67
00:04:18,652 --> 00:04:21,842
<i>le plus simple est d'utiliser
l'outil intégré dans QGIS</i>

68
00:04:22,042 --> 00:04:28,418
<i>avec un module de sélection
qui fait intervenir</i>

69
00:04:28,618 --> 00:04:34,241
<i>du langage SQL simplement
le SELECT GEOMETRY FROM est masqué</i>

70
00:04:34,441 --> 00:04:38,956
<i>et on ajoute simplement le critère
dans la syntaxe SQL,</i>

71
00:04:39,156 --> 00:04:41,013
<i>ici le nom qui commence par d,</i>

72
00:04:41,213 --> 00:04:44,213
<i>et on sélectionne l'ensemble
des districts dont le nom commence par d.</i>

73
00:04:47,613 --> 00:04:50,613
<i>Second exemple, cette fois
dans le module SpatiaLite,</i>

74
00:04:50,813 --> 00:04:53,542
<i>avec à nouveau une requête
dans la table des districts</i>

75
00:04:53,742 --> 00:04:56,142
<i>pour sélectionner l'ensemble
des districts de Mahé.</i>

76
00:04:56,342 --> 00:04:59,178
<i>Pour afficher les résultats
de la requête,</i>

77
00:04:59,378 --> 00:05:02,945
<i>il faut en fait les charger comme
une nouvelle couche dans QGIS,</i>

78
00:05:03,145 --> 00:05:06,145
<i>couche dont il faut définir
le nom et le champ qui contient</i>

79
00:05:06,345 --> 00:05:07,875
<i>les géométries.</i>

80
00:05:12,650 --> 00:05:15,435
<i>Finalement, tout comme
on l'a fait avec le requêteur QGIS,</i>

81
00:05:15,635 --> 00:05:18,150
<i>on peut modifier
la requête SpatiaLite</i>

82
00:05:18,350 --> 00:05:20,251
<i>en introduisant
un clause conditionnelle</i>

83
00:05:20,451 --> 00:05:23,451
<i>pour limiter la sélection
aux districts dont le nom commence par d.</i>

84
00:05:26,401 --> 00:05:28,759
<i>Et à nouveau, il faut définir
le résultat de la requête</i>

85
00:05:28,959 --> 00:05:31,537
<i>comme une nouvelle couche
pour afficher cette sélection de districts</i>

86
00:05:31,737 --> 00:05:32,730
<i>dans la carte.</i>

87
00:05:38,855 --> 00:05:41,815
<i>Pour récupérer le système
de projection de ces objets,</i>

88
00:05:42,015 --> 00:05:45,063
<i>donc on élimine
la partie conditionnelle de la requête</i>

89
00:05:45,263 --> 00:05:51,886
<i>et on ajoute la fonction SRID
qui s'applique donc aux géométries.</i>

90
00:05:52,086 --> 00:05:56,178
<i>En exécutant cette requête,
on voit que tous nos objets,</i>

91
00:05:56,378 --> 00:06:00,477
<i>enfin une grande partie de nos objets,
sont en 32740 qui est donc</i>

92
00:06:00,677 --> 00:06:04,902
<i>le système UTM 40 Sud</i>

93
00:06:05,102 --> 00:06:08,828
<i>et on voit avec le mot-clé DISTINCT
que l'ensemble en fait des objets</i>

94
00:06:09,028 --> 00:06:11,499
<i>ont ce même système
de référence.</i>

95
00:06:22,525 --> 00:06:25,525
<i>Les fonctions de conversions,
qui s'appliquent dont également</i>

96
00:06:25,725 --> 00:06:29,473
<i>à l'attribut GEOMETRY,
qui permettent de transformer</i>

97
00:06:29,673 --> 00:06:34,220
<i>une géométrie en format texte
pour la rendre lisible</i>

98
00:06:34,420 --> 00:06:37,420
<i>ou au contraire, en format binaire
pour la stocker de manière</i>

99
00:06:37,620 --> 00:06:38,554
<i>à ce qu'elle prenne
peu de place.</i>

100
00:06:38,754 --> 00:06:44,319
<i>Ces deux fonctions sont
très utiles pour exporter / importer</i>

101
00:06:44,519 --> 00:06:47,515
<i>des jeux de données
d'une base de données à une autre</i>

102
00:06:47,727 --> 00:06:49,467
<i>et les convertir
dans un autre format de stockage.</i>

103
00:06:49,667 --> 00:06:52,176
<i>La syntaxe est toujours
assez simple, </i>

104
00:06:52,376 --> 00:06:54,624
<i>le mot-clé SELECT,
la fonction AsText,</i>

105
00:06:54,824 --> 00:06:58,645
<i>avec la géométrie être parenthèses,
FROM et le nom de la table.</i>

106
00:07:00,282 --> 00:07:02,814
<i>Pour illustrer cette opération,
nous reprenons</i>

107
00:07:03,014 --> 00:07:07,368
<i>l'interface SpatiaLite de QGIS</i>

108
00:07:07,568 --> 00:07:10,911
<i>et l'on écrit simplement
cette requête</i>

109
00:07:11,099 --> 00:07:15,724
<i>transformation des géométries
des hôtels en texte</i>

110
00:07:15,924 --> 00:07:20,243
<i>et on donne un alias en fait
à cette colonne,</i>

111
00:07:20,443 --> 00:07:24,108
<i>on l'appelle gg, donc
ça vient de la table des hôtels</i>

112
00:07:24,308 --> 00:07:28,191
<i>et on voit que notre colonne gg
contient une série de multipoints</i>

113
00:07:28,391 --> 00:07:30,350
<i>avec les coordonnées x y.</i>

114
00:07:32,012 --> 00:07:35,844
<i>On peut créer une table
à partir de ces résultats,</i>

115
00:07:36,044 --> 00:07:39,821
<i>qu'on va appeler table 1,
et ajouter cette table en fait</i>

116
00:07:40,021 --> 00:07:42,955
<i>dans la base de données SpatiaLite.</i>

117
00:07:43,155 --> 00:07:47,797
<i>On peut consulter
les objets de cette table.</i>

118
00:07:47,997 --> 00:07:50,439
<i>On voit qu'on retrouve
nos multipoints</i>

119
00:07:50,639 --> 00:07:54,714
<i>avec une clé primaire
qui a été ajoutée automatiquement.</i>

120
00:07:58,677 --> 00:08:03,817
<i>La fonction équivalente
pour transformer la géométrie</i>

121
00:08:04,017 --> 00:08:10,233
<i>en un nombre binaire
permet de constater en fait</i>

122
00:08:10,433 --> 00:08:13,433
<i>que ce que l'on fabrique,
c'est un objet géométrique</i>

123
00:08:13,633 --> 00:08:18,351
<i>que l'on va pouvoir utiliser
pour des cartes.</i>

124
00:08:20,989 --> 00:08:24,751
<i>Supposons maintenant
qu'on ait obtenu, importé cette table</i>

125
00:08:24,951 --> 00:08:29,460
<i>qui contient des géométries
sous forme texte.</i>

126
00:08:29,660 --> 00:08:32,660
<i>Nous pouvons utiliser
une fonction GeomFromText,</i>

127
00:08:32,860 --> 00:08:40,173
<i>ce qui permet de transformer
ces géométries textes</i>

128
00:08:40,373 --> 00:08:43,678
<i>en des géométries binaires,
donc des objets géométriques</i>

129
00:08:43,878 --> 00:08:47,622
<i>que l'on va pouvoir ensuite utiliser
pour les afficher dans une carte.</i>

130
00:08:57,915 --> 00:09:00,654
<i>Une série de fonctions
qui permette à présent</i>

131
00:09:00,854 --> 00:09:03,240
<i>de récupérer
les caractéristiques propres</i>

132
00:09:03,440 --> 00:09:07,880
<i>de la géométrie spatiale,
à commencer par le type de géométrie,</i>

133
00:09:08,080 --> 00:09:11,041
<i>le nombre de points
ou le nombre d'anneaux</i>

134
00:09:11,241 --> 00:09:13,885
<i>qu'elle peut contenir
et son enveloppe,</i>

135
00:09:14,085 --> 00:09:18,258
<i>donc le bounding box,
donc le rectangle qui englobe</i>

136
00:09:18,458 --> 00:09:20,636
<i>la géométrie.</i>

137
00:09:20,836 --> 00:09:23,351
<i>La syntaxe est toujours
du type SELECT,</i>

138
00:09:23,551 --> 00:09:25,955
<i>la fonction GeometryType
on Enveloppe</i>

139
00:09:26,155 --> 00:09:29,155
<i>et le mot-clé GEOMETRY, 
entre parenthèses,</i>

140
00:09:29,355 --> 00:09:31,560
<i>FROM et le nom de la table.</i>

141
00:09:32,797 --> 00:09:36,735
<i>Alors on illustre
ce type de requêtes</i>

142
00:09:36,935 --> 00:09:40,826
<i>avec la fonction qui permet
d'extraire le type de géométrie</i>

143
00:09:41,026 --> 00:09:44,210
<i>d'une couche, en l'occurence,
on va s'intéresser à la couche des districts</i>

144
00:09:44,410 --> 00:09:47,247
<i>et on voit que la syntaxe SQL
est ici assez permissive</i>

145
00:09:47,447 --> 00:09:51,114
<i>puisque l’on peut simplement
mentionner l'attribut GEOMETRY,</i>

146
00:09:51,314 --> 00:09:53,568
<i>le nom de la table,
levant toute ambiguïté.</i>

147
00:09:53,768 --> 00:09:58,198
<i>Avec le mot-clé DISTINCT,
on peut vérifier que</i>

148
00:09:58,398 --> 00:10:00,307
<i>l'ensemble de la couche
des districts est constitué</i>

149
00:10:00,507 --> 00:10:01,770
<i>de multipolygones.</i>

150
00:10:01,970 --> 00:10:08,371
<i>Si maintenant on remplace
cette extraction</i>

151
00:10:08,596 --> 00:10:10,996
<i>de type de géométrie
par la fonction d’enveloppe,</i>

152
00:10:11,196 --> 00:10:14,196
<i>on voit qu'on crée
une série d'objets géométriques</i>

153
00:10:14,396 --> 00:10:17,396
<i>et pour ajouter ces objets géométriques
à la carte, il faut</i>

154
00:10:17,596 --> 00:10:21,046
<i>en faire une colonne GEOMETRY,
définir le nom de la table</i>

155
00:10:21,258 --> 00:10:23,796
<i>dans laquelle on souhaite
stocker la chose,</i>

156
00:10:23,996 --> 00:10:28,345
<i>définir le champ GEOMETRY
comme contenant la géométrie</i>

157
00:10:28,545 --> 00:10:30,613
<i>et exécuter la requête.</i>

158
00:10:31,651 --> 00:10:35,259
<i>Donc cette requête crée
une couche qui s'appelle On Enveloppe</i>

159
00:10:35,459 --> 00:10:39,108
<i>et on retrouve les enveloppes
qui englobent les différents districts</i>

160
00:10:39,308 --> 00:10:41,494
<i>de l'île de Mahé ici.</i>

161
00:10:50,910 --> 00:10:55,080
<i>Parmi les nombreuses fonctions
qui renvoient des propriétés</i>

162
00:10:55,280 --> 00:10:57,559
<i>spécifiques des géométries spatiales,</i>

163
00:10:57,759 --> 00:11:00,759
<i>nous allons commencer
par simplement celles qui renvoient</i>

164
00:11:00,959 --> 00:11:03,015
<i>les coordonnées x y d'un point</i>

165
00:11:03,215 --> 00:11:06,215
<i>avec une syntaxe tout simple
de type SELECT X</i>

166
00:11:06,415 --> 00:11:10,342
<i>entre parenthèses la géométrie,
virgule Y la géométrie</i>

167
00:11:10,542 --> 00:11:11,996
<i>si on veut extraire
les deux coordonnées,</i>

168
00:11:12,196 --> 00:11:13,710
<i>FROM le nom de la table.</i>

169
00:11:15,610 --> 00:11:18,465
<i>On illustre cette syntaxe
en sélectionnant</i>

170
00:11:18,665 --> 00:11:24,653
<i>les coordonnées x et y
des hôtels des Seychelles.</i>

171
00:11:27,265 --> 00:11:29,947
<i>Donc ici à nouveau,
simplement le mot-clé GEOMETRY,</i>

172
00:11:30,147 --> 00:11:32,707
<i>le nom de la table
levant tout ambiguïté.</i>

173
00:11:32,907 --> 00:11:35,746
<i>On voit que le résultat
de la colonie grecque</i>

174
00:11:35,946 --> 00:11:38,946
<i>est en notation scientifique
et donc on peut utiliser</i>

175
00:11:39,146 --> 00:11:43,547
<i>une fonction CastTo
vers un entier</i>

176
00:11:43,747 --> 00:11:50,263
<i>pour transformer cette notation
scientifique en un nombre entier</i>

177
00:11:50,463 --> 00:11:52,833
<i>pour rendre simplement la chose
plus lisible.</i>

178
00:11:54,283 --> 00:11:58,161
<i>Deuxième série de fonctions
qui concernent davantage ici</i>

179
00:11:58,361 --> 00:12:03,097
<i>les polylignes avec l'extraction
du point initial et du point final</i>

180
00:12:03,297 --> 00:12:05,223
<i>de la polyligne,
StartPoint, EndPoint,</i>

181
00:12:05,423 --> 00:12:09,231
<i>la longueur, Length et
un test pour vérifier</i>

182
00:12:09,431 --> 00:12:12,975
<i>si la polyligne est ouverte
ou fermée</i>

183
00:12:13,175 --> 00:12:15,144
<i>et éventuellement un test
pour vérifier s'il s'agit</i>

184
00:12:15,344 --> 00:12:19,406
<i>d'un anneau ou pas, donc
si elle fait partie d'un polygone.</i>

185
00:12:19,606 --> 00:12:22,606
<i>La syntaxe, c'est du type
SELECT, la fonction</i>

186
00:12:22,806 --> 00:12:24,919
<i>entre parenthèses la géométrie,
FROM le nom de la table</i>

187
00:12:25,119 --> 00:12:28,119
<i>comme d'habitude 
avec une particularité,</i>

188
00:12:28,319 --> 00:12:31,319
<i>le fait que la fonction de longueur
qui renvoie la longueur</i>

189
00:12:31,519 --> 00:12:37,171
<i>de la polyligne est précédée
d'un G majuscule dans SpatiaLite</i>

190
00:12:37,371 --> 00:12:40,227
<i>pour la simple raison
que le mot-clé LENGTH</i>

191
00:12:40,427 --> 00:12:44,569
<i>est un mot réservé de SpatiaLite
et dans QGIS,</i>

192
00:12:44,769 --> 00:12:47,379
<i>comme je l'ai dit tout au début,
en fait cette fonction</i>

193
00:12:47,579 --> 00:12:49,664
<i>s'écrit ST pour spatial type,</i>

194
00:12:49,864 --> 00:12:52,864
<i>souligné et ensuite
le mot-clé LENGTH.</i>

195
00:12:53,064 --> 00:12:58,022
<i>Comme exemple de ce type
de requête,</i>

196
00:12:58,222 --> 00:13:02,253
<i>nous allons extraire
la longueur des tronçons de route</i>

197
00:13:02,453 --> 00:13:05,149
<i>de la table des routes
des Seychelles.</i>

198
00:13:05,349 --> 00:13:09,066
<i>Et l'on voit qu'en exécutant
cette requête,</i>

199
00:13:09,266 --> 00:13:12,266
<i>on obtient bel et bien
la longueur en mètres</i>

200
00:13:12,466 --> 00:13:14,469
<i>de ces tronçons de route.</i>

201
00:13:15,144 --> 00:13:18,331
<i>Deux fonctions qui concernent
à présent plus spécifiquement</i>

202
00:13:18,531 --> 00:13:20,846
<i>les polygones,
la fonction Centroid</i>

203
00:13:21,046 --> 00:13:23,311
<i>qui renvoie en fait
le barycentre du polygone,</i>

204
00:13:23,511 --> 00:13:24,906
<i>le centre de gravité
du polygone,</i>

205
00:13:25,106 --> 00:13:29,134
<i>et la fonction Area qui retourne
à sa surface.</i>

206
00:13:29,334 --> 00:13:31,594
<i>La syntaxe est toujours la même
avec le mot-clé SELECT,</i>

207
00:13:31,794 --> 00:13:33,547
<i>la fonction, la géométrie
entre parenthèses,</i>

208
00:13:33,747 --> 00:13:36,108
<i>le mot-clé FROM
et le nom de la table.</i>

209
00:13:37,583 --> 00:13:40,304
<i>Alors dans notre exemple ici,
nous commençons par</i>

210
00:13:40,504 --> 00:13:47,483
<i>sélectionner, par extraire
les surfaces des districts des Seychelles.</i>

211
00:13:53,395 --> 00:13:59,273
<i>Voilà. Donc on a de nouveau
une notation de type scientifique.</i>

212
00:13:59,473 --> 00:14:02,473
<i>Si l'on s'intéresse maintenant
plutôt au Centroid,</i>

213
00:14:02,673 --> 00:14:06,103
<i>on obtient en fait
des objets géométriques</i>

214
00:14:06,303 --> 00:14:09,933
<i>que l'on peut vouloir
représenter sur la carte.</i>

215
00:14:10,133 --> 00:14:14,363
<i>Donc pour cela, il faut
charger le résultat comme une couche</i>

216
00:14:14,563 --> 00:14:19,643
<i>dans QGIS, définir la géométrie,
le champ de la géométrie</i>

217
00:14:19,843 --> 00:14:21,756
<i>avec le mot-clé GEOMETRY,
donner un nom à la table</i>

218
00:14:21,956 --> 00:14:24,756
<i>et s'assurer que le champ géométrie
s'appelle bien GEOMETRY.</i>

219
00:14:25,618 --> 00:14:29,058
<i>En exécutant cette requête,
on voit que l'on crée donc</i>

220
00:14:29,258 --> 00:14:30,871
<i>une couche qu'on a appelé
centroid.</i>

221
00:14:31,081 --> 00:14:33,956
<i>Et si l'on affiche
ces couches centroid,</i>

222
00:14:34,156 --> 00:14:35,940
<i>on voit qu'on a des points jaunes
qui apparaissent</i>

223
00:14:36,140 --> 00:14:37,711
<i>au centre des districts
des Seychelles.</i>

224
00:14:49,344 --> 00:14:52,414
Voilà. Dans cette leçon,
nous avons donc vu

225
00:14:52,614 --> 00:14:57,884
qu'on pouvait utiliser
le requêteur intégré à QGIS

226
00:14:58,084 --> 00:15:03,124
pour sélectionner des objets spatiaux
sur la base de requêtes conditionnelles

227
00:15:03,324 --> 00:15:05,947
qui utilisent une syntaxe
de type SQL.

228
00:15:06,147 --> 00:15:10,047
Et nous avons vu également
que l'on pouvait utiliser

229
00:15:10,235 --> 00:15:14,377
les fonctions SQL soit dans SpatiaLite,
on n'a pas vu d'exemple

230
00:15:14,577 --> 00:15:15,894
dans PostGIS mais
c'est la même chose,

231
00:15:16,094 --> 00:15:21,315
pour extraire des propriétés
ou caractéristiques des géométries

232
00:15:21,515 --> 00:15:23,486
qui sont stockées dans
une base de données.

233
00:15:23,686 --> 00:15:27,340
Alors donc vu les fonctions
de sélection des objets géométriques,

234
00:15:27,540 --> 00:15:31,727
les fonctions qui permettent d'extraire
le système de référence utilisé,

235
00:15:31,952 --> 00:15:33,425
donc le code ESPG,

236
00:15:33,625 --> 00:15:36,500
des fonctions de conversion de format

237
00:15:36,700 --> 00:15:40,041
vers du texte ou vers du binaire
pour pouvoir transformer,

238
00:15:40,241 --> 00:15:43,241
récupérer graphiquement
des objets spatiaux,

239
00:15:43,441 --> 00:15:47,657
des fonctions qui permettent d'extraire
les caractéristiques propres

240
00:15:47,882 --> 00:15:50,645
des géométries comme leur type,
leur enveloppe,

241
00:15:50,832 --> 00:15:52,340
des choses comme ça
et finalement,

242
00:15:52,540 --> 00:15:54,765
une série de fonctions
qui permettent d'extraire 

243
00:15:54,965 --> 00:15:57,965
des caractéristiques plus numériques
des objets spatiaux,

244
00:15:58,165 --> 00:16:00,881
les coordonnées x y,
la longueur d'une ligne

245
00:16:01,081 --> 00:16:03,447
la surface d'un point, etc.

