1
00:00:21,874 --> 00:00:23,155
Welcome to this lesson

2
00:00:23,355 --> 00:00:25,880
which will focus on data modeling,

3
00:00:26,455 --> 00:00:28,134
which is an essential step

4
00:00:28,334 --> 00:00:31,684
in the construction of 
relational databases.

5
00:00:32,855 --> 00:00:33,931
As it has just been suggested

6
00:00:34,131 --> 00:00:34,964
by my friend Amadou,

7
00:00:36,013 --> 00:00:37,908
the organization and structuring

8
00:00:38,108 --> 00:00:38,725
of data

9
00:00:38,925 --> 00:00:40,795
becomes something very important

10
00:00:40,995 --> 00:00:42,405
the moment a database

11
00:00:42,605 --> 00:00:44,537
expands and becomes more complex.

12
00:00:45,662 --> 00:00:47,044
It is therefore quite useful

13
00:00:47,244 --> 00:00:48,732
to be able to refer

14
00:00:48,932 --> 00:00:50,696
to a schematic representation

15
00:00:50,896 --> 00:00:52,227
of this organization,

16
00:00:52,427 --> 00:00:54,444
so to refer to a data model,

17
00:00:54,644 --> 00:00:55,942
the theme of

18
00:00:56,142 --> 00:00:57,605
this lesson.

19
00:00:58,623 --> 00:01:00,322
The objectives of this lesson

20
00:01:00,522 --> 00:01:01,710
consist in highlighting

21
00:01:01,910 --> 00:01:03,096
the inputs and the importance

22
00:01:03,296 --> 00:01:04,595
of data modeling

23
00:01:05,413 --> 00:01:07,263
and describing the tools

24
00:01:07,463 --> 00:01:08,947
which are used in this context,

25
00:01:09,147 --> 00:01:10,405
so that at the end,

26
00:01:10,605 --> 00:01:11,699
you are able

27
00:01:11,899 --> 00:01:13,905
to construct or interpret

28
00:01:14,118 --> 00:01:15,302
the class diagrams

29
00:01:15,831 --> 00:01:18,405
and to use the modeling

30
00:01:18,605 --> 00:01:20,504
and creation tools of data structures.

31
00:01:21,948 --> 00:01:22,714
In this lesson,

32
00:01:22,914 --> 00:01:24,522
we will address successively

33
00:01:24,722 --> 00:01:26,481
the role of modeling,

34
00:01:27,234 --> 00:01:31,198
then, more specifically,
the entity-association model,

35
00:01:31,694 --> 00:01:34,310
before taking two examples

36
00:01:34,510 --> 00:01:36,418
of construction of a data model

37
00:01:36,948 --> 00:01:38,775
and finally, we will describe a bit

38
00:01:38,975 --> 00:01:40,552
the software engineering tools.

39
00:01:48,191 --> 00:01:49,961
We have seen in a previous lesson

40
00:01:50,161 --> 00:01:51,825
this example of agricultural plots

41
00:01:52,025 --> 00:01:53,991
that have an owner

42
00:01:54,427 --> 00:01:56,059
and we spoke about the need

43
00:01:56,259 --> 00:01:59,862
to bring out the specific information
of the owner

44
00:02:00,062 --> 00:02:02,743
to place it in a separate table,

45
00:02:03,344 --> 00:02:04,846
so as to avoid

46
00:02:05,046 --> 00:02:06,118
data redundancy.

47
00:02:06,871 --> 00:02:08,669
And the general conclusion 
of this example

48
00:02:08,869 --> 00:02:10,128
was the necessity

49
00:02:10,328 --> 00:02:11,435
to structure the data

50
00:02:12,300 --> 00:02:14,072
in a file or in a database.

51
00:02:14,549 --> 00:02:16,642
So when we talk about data modeling,

52
00:02:16,842 --> 00:02:18,532
we talk about a schematization

53
00:02:18,732 --> 00:02:20,091
of the data structuring.

54
00:02:21,441 --> 00:02:24,051
Modeling is not only about data,

55
00:02:24,251 --> 00:02:26,211
but also about other aspects

56
00:02:26,411 --> 00:02:28,089
of geographic information systems

57
00:02:28,290 --> 00:02:29,443
particularly

58
00:02:29,643 --> 00:02:31,775
the expected functionalities
of such a system.

59
00:02:33,102 --> 00:02:33,861
Likewise,

60
00:02:34,061 --> 00:02:35,287
the modeling approach

61
00:02:35,487 --> 00:02:38,462
is not specific
to geographic information systems,

62
00:02:38,662 --> 00:02:40,753
but is part of the broader framework

63
00:02:40,953 --> 00:02:42,265
of software engineering,

64
00:02:42,465 --> 00:02:43,982
of software development,

65
00:02:45,212 --> 00:02:48,543
from which it borrows methods and tools.

66
00:02:49,612 --> 00:02:50,931
From a methodological point of view,

67
00:02:51,131 --> 00:02:52,301
it is possible to refer

68
00:02:52,501 --> 00:02:53,583
to the Merise method

69
00:02:53,783 --> 00:02:55,641
which is a sequential method

70
00:02:55,841 --> 00:02:57,404
which dates from the 70's-80's

71
00:02:58,088 --> 00:02:59,945
where we address successively

72
00:03:00,145 --> 00:03:03,036
the different phases
of software development

73
00:03:03,236 --> 00:03:05,144
starting from strategic planning,

74
00:03:05,344 --> 00:03:06,566
preliminary, detailed study,

75
00:03:06,766 --> 00:03:08,650
development of the solution, implementation,

76
00:03:08,850 --> 00:03:10,219
and maintenance to finish.

77
00:03:11,068 --> 00:03:12,205
The RUP method,

78
00:03:12,405 --> 00:03:14,369
for Rational Unified Process,

79
00:03:14,569 --> 00:03:17,559
is a more recent alternative method

80
00:03:18,048 --> 00:03:19,297
which has the particularity

81
00:03:19,497 --> 00:03:21,279
of being an iterative method.

82
00:03:21,816 --> 00:03:23,045
This method

83
00:03:23,245 --> 00:03:26,153
is based on the realization
of a number of activities

84
00:03:26,779 --> 00:03:30,158
in the various phases
of a software development

85
00:03:30,358 --> 00:03:33,246
which goes from inception,
to elaboration, to construction,

86
00:03:33,446 --> 00:03:35,592
to end with a transition phase.

87
00:03:36,234 --> 00:03:37,679
Each of these activities

88
00:03:37,879 --> 00:03:40,478
is treated with a varying intensity

89
00:03:40,678 --> 00:03:42,185
in the different phases,

90
00:03:42,385 --> 00:03:43,759
and in each phase,

91
00:03:43,959 --> 00:03:45,098
in an iterative manner,

92
00:03:45,298 --> 00:03:46,439
that is to say that typically,

93
00:03:46,639 --> 00:03:48,412
the modeling that interests us here

94
00:03:48,612 --> 00:03:51,074
will be performed

95
00:03:51,274 --> 00:03:52,409
at the start of the project

96
00:03:52,609 --> 00:03:55,886
but reviewed, corrected, adapted constantly,

97
00:03:56,086 --> 00:03:57,484
during the later phases.

98
00:03:58,916 --> 00:04:00,353
These two methodologies,

99
00:04:00,553 --> 00:04:01,588
Merise and RUP,

100
00:04:01,788 --> 00:04:05,054
present the default of providing
a relatively rigid framework,

101
00:04:05,254 --> 00:04:06,368
which is often perceived

102
00:04:06,568 --> 00:04:08,040
as poorly adapted to constraints

103
00:04:08,240 --> 00:04:09,605
and to system requirements

104
00:04:09,805 --> 00:04:11,688
which we would like them 
to evolve rapidly

105
00:04:11,888 --> 00:04:14,482
and it is for this reason that
the methods called "agile methods"

106
00:04:14,682 --> 00:04:16,607
are increasingly taking over

107
00:04:16,807 --> 00:04:18,456
the methods that are oriented

108
00:04:18,656 --> 00:04:20,329
towards an adaptive development,

109
00:04:20,529 --> 00:04:22,698
where the focus is on production,

110
00:04:22,898 --> 00:04:25,101
validation and continuous testing,

111
00:04:25,301 --> 00:04:27,222
of an integrated application.

112
00:04:27,750 --> 00:04:29,420
The agile methods are based

113
00:04:29,620 --> 00:04:31,045
on a dozen principles

114
00:04:31,245 --> 00:04:33,924
which are described in the agile manifesto

115
00:04:34,124 --> 00:04:36,399
accessible through Wikipedia.

116
00:04:37,666 --> 00:04:39,398
All these methods have in common

117
00:04:39,598 --> 00:04:40,961
a number of elements,

118
00:04:41,161 --> 00:04:42,785
in particular to rest

119
00:04:42,985 --> 00:04:44,390
on the analysis of needs,

120
00:04:44,590 --> 00:04:46,763
analysis of needs which consist in

121
00:04:46,963 --> 00:04:49,352
identifying future users

122
00:04:49,552 --> 00:04:51,563
of the application that is being developed.

123
00:04:51,763 --> 00:04:53,539
For these different users,

124
00:04:53,739 --> 00:04:56,175
identifying the missions 
they must perform

125
00:04:56,375 --> 00:04:59,179
using the software in question,

126
00:04:59,911 --> 00:05:01,415
and for these different missions,

127
00:05:01,615 --> 00:05:03,784
make an inventory of the data used

128
00:05:03,984 --> 00:05:05,998
and the functionalities that will be needed.

129
00:05:07,127 --> 00:05:09,032
The results of the analysis of needs

130
00:05:09,232 --> 00:05:11,251
are generally formalized

131
00:05:11,451 --> 00:05:13,838
in the form of a schematic representation

132
00:05:14,038 --> 00:05:15,638
or in the form of a model.

133
00:05:17,548 --> 00:05:18,440
This data model

134
00:05:18,640 --> 00:05:19,836
must allow to master

135
00:05:20,036 --> 00:05:21,561
the thematic complexity,

136
00:05:21,761 --> 00:05:24,667
it is therefore a tool for reflection,

137
00:05:25,377 --> 00:05:27,046
it should also facilitate

138
00:05:27,246 --> 00:05:29,324
the exchanges of opinions and ideas,

139
00:05:29,524 --> 00:05:31,959
it is therefore also 
a communication tool.

140
00:05:32,677 --> 00:05:34,559
It must allow

141
00:05:34,759 --> 00:05:38,076
to improve the software
development process itself

142
00:05:38,276 --> 00:05:42,333
by pointing out errors or obstacles,

143
00:05:42,533 --> 00:05:45,303
it is therefore also a technical tool.

144
00:05:45,785 --> 00:05:47,187
And finally, it must allow

145
00:05:47,387 --> 00:05:51,020
to set up a follow-up, a maintenance,

146
00:05:51,220 --> 00:05:52,238
in the long term,

147
00:05:52,438 --> 00:05:53,974
of the application that is being developed,

148
00:05:54,174 --> 00:05:56,772
it is also a documentation tool.

149
00:05:57,927 --> 00:05:58,893
The data model

150
00:05:59,093 --> 00:06:00,573
often appears at the start

151
00:06:00,773 --> 00:06:02,514
in the form of a simple sketch

152
00:06:02,714 --> 00:06:04,209
sketched on a table corner,

153
00:06:04,409 --> 00:06:07,425
or a small drawing scribbled
on the blackboard,

154
00:06:07,625 --> 00:06:11,902
before being presented in
a more elaborate form.

155
00:06:12,502 --> 00:06:15,056
In this first case, we speak
of a conceptual model

156
00:06:15,256 --> 00:06:16,916
since the objective,

157
00:06:17,116 --> 00:06:17,986
is to bring together

158
00:06:18,186 --> 00:06:19,844
the concepts and ideas

159
00:06:20,044 --> 00:06:22,279
into one synthetic vision.

160
00:06:23,662 --> 00:06:25,071
In a later phase,

161
00:06:25,271 --> 00:06:26,414
this conceptual model

162
00:06:26,614 --> 00:06:27,599
must be translated

163
00:06:27,799 --> 00:06:30,175
in database language,

164
00:06:30,375 --> 00:06:31,684
in the form of tables,

165
00:06:31,884 --> 00:06:33,692
with attributes in these tables,

166
00:06:33,892 --> 00:06:36,386
validity domains for 
these attributes,

167
00:06:36,586 --> 00:06:38,448
and formats,

168
00:06:38,648 --> 00:06:40,267
is it a text,

169
00:06:40,467 --> 00:06:42,056
numbers and similar things,

170
00:06:42,256 --> 00:06:43,320
and we speak in this case

171
00:06:43,520 --> 00:06:44,769
of the logic model.

172
00:06:45,358 --> 00:06:47,503
And finally, when this logic model

173
00:06:47,703 --> 00:06:52,202
is implemented in a real 
database management system,

174
00:06:52,402 --> 00:06:55,117
we talk of a physical model.

175
00:07:05,535 --> 00:07:07,441
In the entity-association model,

176
00:07:08,423 --> 00:07:09,827
objects are entities,

177
00:07:10,295 --> 00:07:12,772
so that in the case of 
Georges' blue car,

178
00:07:12,972 --> 00:07:14,382
we have two entities:

179
00:07:14,582 --> 00:07:16,565
the automobile entity and Georges' entity.

180
00:07:17,701 --> 00:07:19,780
A set of entities of the same nature,

181
00:07:19,980 --> 00:07:21,056
so a type of entity,

182
00:07:21,256 --> 00:07:22,437
constitutes a class.

183
00:07:22,875 --> 00:07:25,012
For example here
the class of automobiles

184
00:07:25,212 --> 00:07:27,296
which Georges' blue car belongs to.

185
00:07:28,031 --> 00:07:28,721
In other words,

186
00:07:28,921 --> 00:07:30,252
the entities are instances

187
00:07:30,452 --> 00:07:31,295
or achievements

188
00:07:31,495 --> 00:07:33,182
of an abstract parent class.

189
00:07:34,397 --> 00:07:35,324
An association

190
00:07:35,524 --> 00:07:38,064
is basically a link between two entities.

191
00:07:38,264 --> 00:07:40,766
"Georges is the owner of the blue car"

192
00:07:40,966 --> 00:07:44,040
is an association between
Georges and the blue car.

193
00:07:44,953 --> 00:07:47,142
The association or
the class of association

194
00:07:47,342 --> 00:07:48,559
"to be the owner of"

195
00:07:49,018 --> 00:07:50,851
is therefore a type of association

196
00:07:51,051 --> 00:07:54,014
which connects an owner 
to his automobile.

197
00:07:55,375 --> 00:07:57,029
Data modeling

198
00:07:57,229 --> 00:07:58,759
is about classes of objects,

199
00:07:58,959 --> 00:07:59,534
the entities,

200
00:07:59,734 --> 00:08:00,773
and their relations,

201
00:08:00,973 --> 00:08:02,598
in other words, their associations.

202
00:08:02,798 --> 00:08:03,961
This is why

203
00:08:04,161 --> 00:08:06,296
we often speak of class diagrams.

204
00:08:07,266 --> 00:08:10,104
A class is characterized by its name,

205
00:08:10,304 --> 00:08:13,484
"automobile, owner, wheels, repair"

206
00:08:13,684 --> 00:08:15,165
and by its properties,

207
00:08:15,365 --> 00:08:18,490
in the case of the automobile,
the type, the make, the color, etc.

208
00:08:19,401 --> 00:08:21,707
Operations or responsibilities  

209
00:08:21,932 --> 00:08:23,349
can be sometimes added

210
00:08:23,549 --> 00:08:25,922
to these main characteristics.

211
00:08:27,432 --> 00:08:28,958
In the case of associations,

212
00:08:29,158 --> 00:08:30,737
the characteristics are the name,

213
00:08:31,325 --> 00:08:34,061
for example "working for"
or "being recruited by"

214
00:08:34,273 --> 00:08:35,357
in the case of a relation

215
00:08:35,570 --> 00:08:37,196
between a person and his business,

216
00:08:37,392 --> 00:08:38,954
or "voting for"

217
00:08:39,154 --> 00:08:41,114
when a citizen votes for another citizen

218
00:08:41,346 --> 00:08:42,346
in the case of an election.

219
00:08:43,663 --> 00:08:44,757
The endings,

220
00:08:44,957 --> 00:08:46,901
so the extremities
of the association,

221
00:08:47,595 --> 00:08:50,117
and in particular the notion of role,

222
00:08:50,718 --> 00:08:53,308
the person who is employed in a company

223
00:08:53,508 --> 00:08:55,685
and the company
as the employer of the person,

224
00:08:55,885 --> 00:08:58,668
the point as the summit of a polygon

225
00:08:58,868 --> 00:09:00,875
which is a geometry, etc.

226
00:09:01,628 --> 00:09:04,016
The multiplicity or the cardinality,

227
00:09:04,216 --> 00:09:05,490
so the number of objects

228
00:09:05,690 --> 00:09:07,215
susceptible to occupy the position

229
00:09:07,415 --> 00:09:09,335
defined by the endings
of the association.

230
00:09:09,927 --> 00:09:12,828
In the case of a polygon
defined by its summits,

231
00:09:13,028 --> 00:09:14,868
we see that the multiplicity

232
00:09:15,068 --> 00:09:16,969
allows to express the fact that

233
00:09:17,169 --> 00:09:18,141
at least 3 points are required

234
00:09:18,341 --> 00:09:20,545
to define a polygon.

235
00:09:21,073 --> 00:09:23,181
Multiplicity and cardinality

236
00:09:23,381 --> 00:09:24,698
express more or less the same thing,

237
00:09:24,898 --> 00:09:27,661
as we can see from these examples,

238
00:09:27,861 --> 00:09:29,713
which are the most classic examples,

239
00:09:29,913 --> 00:09:33,087
they are simply used alternatively

240
00:09:33,287 --> 00:09:35,990
in different data modeling languages.

241
00:09:37,032 --> 00:09:38,276
The navigability

242
00:09:38,476 --> 00:09:39,881
expresses the fact

243
00:09:40,081 --> 00:09:41,680
that an association can

244
00:09:41,880 --> 00:09:44,702
be crossed in one direction
and not in the other,

245
00:09:45,320 --> 00:09:46,148
in this case

246
00:09:46,348 --> 00:09:51,218
an elector votes for a candidate

247
00:09:51,418 --> 00:09:52,941
and not the reverse

248
00:09:53,141 --> 00:09:56,097
but the association "being elected by"

249
00:09:56,297 --> 00:09:58,583
would be valid

250
00:09:58,783 --> 00:10:00,203
and navigable in the other direction.

251
00:10:01,517 --> 00:10:04,216
There are various particular
cases of associations,

252
00:10:04,416 --> 00:10:05,387
in particular,

253
00:10:05,587 --> 00:10:08,115
the relations between a larger element,

254
00:10:08,315 --> 00:10:08,907
the "all",

255
00:10:09,107 --> 00:10:11,731
which is composed of smaller elements
which would be the "parts",

256
00:10:11,931 --> 00:10:14,238
and we speak of simple aggregation

257
00:10:14,438 --> 00:10:17,005
when the parts subsist

258
00:10:17,205 --> 00:10:18,394
if the "all" disappears,

259
00:10:18,594 --> 00:10:21,574
which would be the case
for trucks belonging to a company,

260
00:10:21,774 --> 00:10:23,540
the company can disappear,

261
00:10:23,740 --> 00:10:24,617
the trucks remain

262
00:10:25,602 --> 00:10:27,376
and we talk of composite aggregation

263
00:10:27,576 --> 00:10:28,789
or composition

264
00:10:28,989 --> 00:10:30,684
if the parts disappear

265
00:10:30,884 --> 00:10:32,078
when the "all" disappears,

266
00:10:32,278 --> 00:10:34,397
which would be the case of a relation

267
00:10:34,597 --> 00:10:38,855
between engines that
are part of a series of trucks,

268
00:10:39,055 --> 00:10:42,208
when the trucks disappear,
the engines also disappear.

269
00:10:43,006 --> 00:10:45,862
The generalization-specialization
relation,

270
00:10:46,062 --> 00:10:48,157
which associates a general class,

271
00:10:48,357 --> 00:10:49,825
basic or parent class,

272
00:10:50,025 --> 00:10:51,935
and a specialized class

273
00:10:52,135 --> 00:10:52,893
or subclass,

274
00:10:53,093 --> 00:10:54,513
for example

275
00:10:54,713 --> 00:10:56,055
the "animal" general class

276
00:10:56,280 --> 00:10:58,961
which includes the "terrestrial 
animals" and "aquatic animals",

277
00:10:59,161 --> 00:11:00,500
in the "terrestrial animals"

278
00:11:00,700 --> 00:11:03,700
rhinoceros, zebras, hippopotamuses, etc.

279
00:11:04,436 --> 00:11:05,675
The specialized class

280
00:11:05,875 --> 00:11:07,213
takes up the basic class

281
00:11:07,413 --> 00:11:09,238
by adding additional attributes.

282
00:11:09,758 --> 00:11:11,554
An object of the specialized class

283
00:11:11,754 --> 00:11:12,869
can be used everywhere

284
00:11:13,069 --> 00:11:15,859
where an object of
the basic class is possible.

285
00:11:16,390 --> 00:11:17,160
And finally,

286
00:11:17,360 --> 00:11:19,100
a class can have several parents

287
00:11:19,300 --> 00:11:21,052
then we speak of multiple inheritance.

288
00:11:22,610 --> 00:11:24,578
The entity-association model

289
00:11:24,778 --> 00:11:26,945
has undergone many changes

290
00:11:27,145 --> 00:11:29,211
and several variants of languages

291
00:11:29,730 --> 00:11:33,808
with syntaxes, different schematisms

292
00:11:34,776 --> 00:11:37,252
allowing to always expose the same idea.

293
00:11:37,452 --> 00:11:40,085
Here, the example of the relation

294
00:11:40,285 --> 00:11:42,628
between a person and 
the place of birth.

295
00:11:43,417 --> 00:11:45,626
One of the ​​most used languages today

296
00:11:45,826 --> 00:11:46,994
is the UML language,

297
00:11:47,194 --> 00:11:48,911
for Unified Modeling Language,

298
00:11:49,481 --> 00:11:51,292
which is a description language

299
00:11:51,492 --> 00:11:52,656
of databases

300
00:11:52,856 --> 00:11:54,400
in the form of a class diagram

301
00:11:54,600 --> 00:11:56,165
as we have seen so far,

302
00:11:56,704 --> 00:11:58,424
but which are associated with

303
00:11:58,624 --> 00:12:00,145
a whole series of other diagrams

304
00:12:00,345 --> 00:12:03,064
in particular use case diagrams,

305
00:12:03,264 --> 00:12:04,755
activity diagrams,

306
00:12:04,955 --> 00:12:06,183
sequential diagrams,

307
00:12:06,711 --> 00:12:08,912
to mention only
the four most important ones.

308
00:12:10,091 --> 00:12:11,481
The association can be presented,

309
00:12:11,681 --> 00:12:13,590
as we have seen, in a very synthetic way

310
00:12:13,790 --> 00:12:15,194
by linking two classes

311
00:12:15,394 --> 00:12:17,775
with a certain number of properties,

312
00:12:17,975 --> 00:12:19,003
of characteristics,

313
00:12:19,821 --> 00:12:21,788
but it can also take the form

314
00:12:21,988 --> 00:12:23,714
of a closer representation

315
00:12:23,914 --> 00:12:26,609
of the implementation in a database

316
00:12:26,809 --> 00:12:29,478
where we would have for example 

317
00:12:29,678 --> 00:12:31,962
an attribute describing the company

318
00:12:32,162 --> 00:12:33,372
in which the person works

319
00:12:33,597 --> 00:12:36,310
and reciprocally, at the enterprise level,

320
00:12:36,510 --> 00:12:39,040
an attribute that would refer

321
00:12:39,240 --> 00:12:41,170
to a vector,

322
00:12:41,370 --> 00:12:43,644
to a list of people who 
would be employees.

323
00:12:53,704 --> 00:12:55,711
Building a data model

324
00:12:55,911 --> 00:12:58,098
consists of defining

325
00:12:58,298 --> 00:12:59,776
and schematically representing

326
00:12:59,976 --> 00:13:01,968
the classes, the objects

327
00:13:02,168 --> 00:13:03,185
which will be used

328
00:13:03,385 --> 00:13:05,206
to describe a thematic area

329
00:13:05,406 --> 00:13:07,658
and showing how these different objects,

330
00:13:07,858 --> 00:13:08,876
these different classes,

331
00:13:09,076 --> 00:13:10,671
are linked to one another.

332
00:13:11,846 --> 00:13:12,899
As a first example,

333
00:13:13,099 --> 00:13:14,300
We will interest ourselves

334
00:13:14,500 --> 00:13:17,055
to the hierarchy of the geometry classes

335
00:13:17,255 --> 00:13:18,746
which are used to describe

336
00:13:18,946 --> 00:13:20,024
the spatial objects

337
00:13:20,236 --> 00:13:22,213
in geographical information systems.

338
00:13:22,882 --> 00:13:23,760
The starting object

339
00:13:23,960 --> 00:13:24,999
here is the geometry

340
00:13:25,670 --> 00:13:28,831
which is associated
with a spatial reference system.

341
00:13:29,031 --> 00:13:30,740
This geometry can be specialized

342
00:13:30,940 --> 00:13:33,298
in the form of points, curves or surfaces,

343
00:13:33,498 --> 00:13:35,955
or even in the form
of geometry collections,

344
00:13:37,002 --> 00:13:38,477
These objects can be described

345
00:13:38,677 --> 00:13:39,907
by pictograms,

346
00:13:40,107 --> 00:13:42,671
which facilitates the subsequent reading

347
00:13:42,871 --> 00:13:44,056
of the class diagrams.

348
00:13:44,883 --> 00:13:46,462
The curves can be described

349
00:13:46,662 --> 00:13:47,636
as polylines

350
00:13:47,836 --> 00:13:50,167
which are themselves constituted
by a set of points.

351
00:13:51,294 --> 00:13:53,077
The surfaces can specialize

352
00:13:53,277 --> 00:13:54,246
in polygons.

353
00:13:55,071 --> 00:13:56,659
The geometry collections

354
00:13:56,859 --> 00:13:59,682
can specialize in set of points,

355
00:13:59,882 --> 00:14:01,499
curves or surfaces

356
00:14:01,699 --> 00:14:03,015
and in the latter two cases,

357
00:14:03,215 --> 00:14:05,952
in sets of polylines or polygons.

358
00:14:06,883 --> 00:14:09,861
Multipoints, multipolylines and multipolygons

359
00:14:10,061 --> 00:14:11,947
being sets of points,

360
00:14:12,147 --> 00:14:13,482
lines and polygons.

361
00:14:14,420 --> 00:14:16,058
The polyline still has

362
00:14:16,258 --> 00:14:17,609
two types of specializations:

363
00:14:17,809 --> 00:14:21,022
the simple polyline and 
the closed polyline,

364
00:14:21,604 --> 00:14:25,958
the latter being a constituent
element of the polygon.

365
00:14:26,773 --> 00:14:28,018
By adding the multiplicity,

366
00:14:28,231 --> 00:14:29,313
we can still express

367
00:14:29,513 --> 00:14:31,233
the fact that a multipoint for example

368
00:14:31,433 --> 00:14:33,605
is constituted by at least one point,

369
00:14:34,324 --> 00:14:35,910
or that a polygon

370
00:14:36,110 --> 00:14:38,494
is constituted of a border.

371
00:14:39,911 --> 00:14:40,894
The second example

372
00:14:41,094 --> 00:14:42,261
is about the construction

373
00:14:42,461 --> 00:14:43,522
of the data model

374
00:14:43,722 --> 00:14:45,704
of a geographical information system

375
00:14:46,244 --> 00:14:48,388
allowing the management
of water resources.

376
00:14:49,009 --> 00:14:51,369
Amongst the different data concerned

377
00:14:51,569 --> 00:14:53,870
there are, of course,

378
00:14:54,070 --> 00:14:55,956
rivers, lakes,

379
00:14:56,156 --> 00:15:00,253
the catchment basins for 
the hydrological dimension,

380
00:15:00,900 --> 00:15:03,756
the stream cross-sections

381
00:15:03,956 --> 00:15:06,318
for the hydraulic dimension,

382
00:15:06,653 --> 00:15:08,126
with the idea of ​​comparing

383
00:15:08,326 --> 00:15:11,017
the flows produced by the rain

384
00:15:11,217 --> 00:15:13,902
and the flows that streams
are capable of conveying.

385
All that is sample 

386
00:15:16,607 --> 00:15:18,026
must be added to this

387
00:15:18,723 --> 00:15:20,193
through technical works

388
00:15:20,393 --> 00:15:21,602
for the irrigation of crops,

389
00:15:21,839 --> 00:15:23,928
for the production of hydroelectricity,

390
00:15:24,464 --> 00:15:25,811
the measurement sites

391
00:15:26,011 --> 00:15:28,838
where water flows will be measured

392
00:15:29,038 --> 00:15:30,603
or the environmental aspects

393
00:15:30,803 --> 00:15:34,187
such as ecomorphology or biodiversity.

394
00:15:35,733 --> 00:15:36,462
The basic element

395
00:15:36,662 --> 00:15:39,092
here is the hydrographic network segment.

396
00:15:39,755 --> 00:15:41,008
Each segment flows

397
00:15:41,208 --> 00:15:42,305
into another segment

398
00:15:42,505 --> 00:15:44,020
and a set of segments

399
00:15:44,220 --> 00:15:45,859
composes a watercourse.

400
00:15:46,333 --> 00:15:47,794
By adding the multiplicity,

401
00:15:47,994 --> 00:15:49,841
we see that a water course

402
00:15:50,041 --> 00:15:54,463
is composed of at least one segment
of the hydrographic network

403
00:15:54,987 --> 00:15:57,816
and that a segment
of the hydrographic network

404
00:15:58,016 --> 00:16:00,072
is part of one, and only one stream.

405
00:16:00,990 --> 00:16:02,363
The water areas

406
00:16:02,563 --> 00:16:04,333
are linked to the hydrographic network

407
00:16:04,533 --> 00:16:06,802
in the sense that a segment
of the hydrographic network

408
00:16:07,002 --> 00:16:08,766
flows into a water area

409
00:16:08,966 --> 00:16:11,002
and that a water area, in turn,

410
00:16:11,202 --> 00:16:13,578
flows into a segment
of the hydrographic network.

411
00:16:14,889 --> 00:16:18,444
The catchment basin has a punctual outlet

412
00:16:18,644 --> 00:16:20,418
and this outlet point

413
00:16:20,618 --> 00:16:22,801
is in turn linked to the 
hydrographic network.

414
00:16:23,738 --> 00:16:25,010
The cross-sections

415
00:16:25,210 --> 00:16:25,936
are points

416
00:16:26,136 --> 00:16:28,506
positioned on the hydrographic
network segments

417
00:16:28,752 --> 00:16:31,620
while the ecomorphological inventory

418
00:16:31,820 --> 00:16:34,246
is composed of segments

419
00:16:34,446 --> 00:16:36,331
with specific characteristics

420
00:16:36,531 --> 00:16:39,718
which overlap with the 
hydrographic network segments.

421
00:16:40,938 --> 00:16:43,244
To this we add the technical structures,

422
00:16:43,444 --> 00:16:45,133
dams, water rejections,

423
00:16:45,333 --> 00:16:46,497
extraction structures,

424
00:16:47,177 --> 00:16:49,865
temporal value measuring stations,

425
00:16:50,413 --> 00:16:51,933
administrative data

426
00:16:52,133 --> 00:16:53,601
like the limits of ditricts,

427
00:16:54,423 --> 00:16:56,163
management areas, etc.

428
00:16:56,998 --> 00:16:58,198
to finally get

429
00:16:58,398 --> 00:17:00,458
to a relatively complex model

430
00:17:00,838 --> 00:17:02,195
in which we find

431
00:17:02,395 --> 00:17:04,321
the basic hydrographic network,

432
00:17:04,521 --> 00:17:07,959
streams, water areas
and segments of this network.

433
00:17:09,043 --> 00:17:10,450
This schematic data model

434
00:17:10,650 --> 00:17:11,445
is then refined

435
00:17:11,645 --> 00:17:13,432
by describing the attributes

436
00:17:13,632 --> 00:17:16,367
of the various objects of the system,

437
00:17:16,567 --> 00:17:17,411
here the attributes

438
00:17:17,611 --> 00:17:19,212
of the hydrographic network segments,

439
00:17:19,412 --> 00:17:21,944
the attributes of streams,
the attributes of water areas.

440
00:17:22,771 --> 00:17:24,460
And by repeating this operation

441
00:17:24,660 --> 00:17:28,987
for all the objects of the system,

442
00:17:29,187 --> 00:17:31,445
a set of tables of the future database,

443
00:17:31,627 --> 00:17:33,539
we obtain a relatively complex model.

444
00:17:43,558 --> 00:17:44,861
The CASE tools, or CASE,

445
00:17:45,086 --> 00:17:46,540
we can pronounce it as we like,

446
00:17:46,740 --> 00:17:48,651
are software engineering tools,

447
00:17:48,851 --> 00:17:52,717
CASE meaning
Computer Aided Software Engineering.

448
00:17:53,303 --> 00:17:56,192
These tools have essentially 
three functions:

449
00:17:56,392 --> 00:17:59,789
first, the definition of data structures

450
00:18:00,753 --> 00:18:01,814
then the creation,

451
00:18:02,630 --> 00:18:04,958
from a logical data model,

452
00:18:05,158 --> 00:18:06,975
from a physical database

453
00:18:07,175 --> 00:18:10,666
and we then speak of 

454
00:18:10,866 --> 00:18:12,275
forward engineering

455
00:18:13,410 --> 00:18:15,215
and finally, the re-creation

456
00:18:15,415 --> 00:18:17,334
from a physical data model,

457
00:18:17,534 --> 00:18:19,874
of an existing physical database,

458
00:18:20,074 --> 00:18:22,696
the re-creation of a logical data model

459
00:18:23,226 --> 00:18:25,767
and we then speak 

460
00:18:25,967 --> 00:18:27,787
of reverse engineering.

461
00:18:29,087 --> 00:18:31,607
Most geographic information systems

462
00:18:31,807 --> 00:18:33,170
include database

463
00:18:33,370 --> 00:18:34,652
management systems

464
00:18:34,852 --> 00:18:36,250
which enable,

465
00:18:36,450 --> 00:18:40,148
if not truly modelizing the data,

466
00:18:40,348 --> 00:18:42,579
to build or define

467
00:18:42,779 --> 00:18:44,561
the structure of these data.

468
00:18:45,565 --> 00:18:48,112
We see an example here with QGIS

469
00:18:48,312 --> 00:18:50,941
where we have the layers 
of the Seychelles

470
00:18:51,141 --> 00:18:54,250
for the PostGIS database version

471
00:18:55,080 --> 00:18:58,251
and we can see that,
by means of the adequate extension,

472
00:18:58,451 --> 00:18:59,666
we can add

473
00:18:59,866 --> 00:19:01,597
a new data table

474
00:19:01,797 --> 00:19:03,474
in the PostGIS database

475
00:19:03,674 --> 00:19:06,184
for example, to describe restaurants.

476
00:19:06,716 --> 00:19:09,300
We add an identifier field

477
00:19:09,485 --> 00:19:12,099
of non-zero integer type

478
00:19:12,955 --> 00:19:14,272
and we define this field

479
00:19:14,472 --> 00:19:16,730
as the primary key of the table.

480
00:19:16,930 --> 00:19:18,100
We add a second field

481
00:19:18,300 --> 00:19:19,386
which we will call "locality"

482
00:19:19,853 --> 00:19:21,293
and in which we will store,

483
00:19:21,493 --> 00:19:22,351
in integer form,

484
00:19:22,551 --> 00:19:26,128
a reference to the layer of 
existing localities.

485
00:19:28,683 --> 00:19:29,714
And we then add

486
00:19:29,914 --> 00:19:31,723
a column for geometry

487
00:19:31,923 --> 00:19:33,227
in the form of points

488
00:19:33,427 --> 00:19:35,256
and then the reference

489
00:19:36,447 --> 00:19:39,554
to the local coordinate system,

490
00:19:39,754 --> 00:19:41,679
so UTM South 40.

491
00:19:43,221 --> 00:19:45,548
We can see that
this new layer of restaurants

492
00:19:45,748 --> 00:19:46,675
was created,

493
00:19:47,162 --> 00:19:49,580
that it has a primary key

494
00:19:49,780 --> 00:19:50,612
but on the other hand

495
00:19:50,812 --> 00:19:53,410
the link towards the layer 
of the localities

496
00:19:54,678 --> 00:19:56,897
cannot be set up

497
00:19:57,097 --> 00:19:58,924
in the QGIS interface.

498
00:20:00,507 --> 00:20:02,747
However, this connection can be done,

499
00:20:02,947 --> 00:20:05,660
so if we add here
now this layer of restaurants

500
00:20:10,731 --> 00:20:11,948
and we see that

501
00:20:12,800 --> 00:20:14,872
if we want to add a new restaurant,

502
00:20:15,072 --> 00:20:16,692
we will associate a locality to it,

503
00:20:16,892 --> 00:20:20,942
so we will spot a locality
here towards Anse Major

504
00:20:21,142 --> 00:20:22,830
which bears the number 136

505
00:20:23,982 --> 00:20:25,618
so we will create now

506
00:20:25,818 --> 00:20:28,830
a new restaurant on the Anse Major side,

507
00:20:29,610 --> 00:20:33,066
and then... the identifier
of the object is number 1

508
00:20:33,266 --> 00:20:34,900
and we will identify the locality

509
00:20:35,100 --> 00:20:36,815
with the number 136

510
00:20:38,218 --> 00:20:40,615
and now for that number 136

511
00:20:40,815 --> 00:20:44,357
to be linked to the 
denomination of the locality,

512
00:20:44,899 --> 00:20:46,831
we need to create a joint

513
00:20:47,031 --> 00:20:49,465
between the restaurant data table

514
00:20:49,665 --> 00:20:51,031
and the locality data table,

515
00:20:51,821 --> 00:20:56,070
which is done in this interface

516
00:20:56,270 --> 00:20:58,294
of definition of vectorial joints.

517
00:20:58,494 --> 00:21:00,121
So we define the field

518
00:21:00,321 --> 00:21:03,601
and the attribute
that should serve as a joint.

519
00:21:06,651 --> 00:21:07,757
And we notice

520
00:21:08,444 --> 00:21:10,975
the actual realization of this joint

521
00:21:11,175 --> 00:21:13,909
by consulting the attributes
of the restaurant object created

522
00:21:14,109 --> 00:21:17,370
which now in addition
to the identifier and the locality,

523
00:21:17,570 --> 00:21:21,069
has the name of the locality 
that is associated.

524
00:21:23,163 --> 00:21:25,482
This link,

525
00:21:25,719 --> 00:21:26,714
this joint,

526
00:21:26,914 --> 00:21:30,357
is effective at the level
of the QGIS project

527
00:21:30,557 --> 00:21:32,329
but is not at all reflected

528
00:21:33,629 --> 00:21:36,364
at the level of the structure
of the database.

529
00:21:36,564 --> 00:21:39,688
If we look into the administration

530
00:21:39,888 --> 00:21:40,915
of this database,

531
00:21:41,115 --> 00:21:42,085
with pgAdmin,

532
00:21:42,297 --> 00:21:43,690
we see that in the constraints

533
00:21:43,927 --> 00:21:45,293
we have the primary key

534
00:21:45,493 --> 00:21:47,675
under the identifier of the restaurants,

535
00:21:47,875 --> 00:21:50,502
but no foreign key

536
00:21:50,702 --> 00:21:51,907
which allows to link

537
00:21:52,107 --> 00:21:54,172
the restaurant table
and the locality table.

538
00:21:55,001 --> 00:21:56,997
This foreign key

539
00:21:57,197 --> 00:21:59,948
can be created in the software,

540
00:22:00,148 --> 00:22:03,310
the DBMS of Postgres.

541
00:22:04,192 --> 00:22:06,572
We add a new foreign key

542
00:22:06,772 --> 00:22:09,083
that we will call "fkey" for foreign key,

543
00:22:09,925 --> 00:22:11,070
we define this key

544
00:22:11,270 --> 00:22:12,964
with the reference layer

545
00:22:13,151 --> 00:22:14,475
which is the layer of the localities

546
00:22:14,675 --> 00:22:15,803
and its identifying field

547
00:22:16,522 --> 00:22:17,793
and which will be linked

548
00:22:19,640 --> 00:22:21,325
to the local locality field .

549
00:22:22,346 --> 00:22:24,203
We validate these different things

550
00:22:24,403 --> 00:22:26,596
and we see that this foreign key

551
00:22:26,796 --> 00:22:28,489
was added to the constraints

552
00:22:28,689 --> 00:22:29,634
in the database,

553
00:22:29,834 --> 00:22:31,530
so in the data structure itself.

554
00:22:32,582 --> 00:22:35,213
Beyond the data structuring tools

555
00:22:35,413 --> 00:22:37,799
integrated into
geographic information systems

556
00:22:37,999 --> 00:22:40,134
or into database management systems,

557
00:22:40,334 --> 00:22:43,779
there are many
specialized softwares.

558
00:22:44,212 --> 00:22:47,657
These softwares can be grouped
into two main families.

559
00:22:47,857 --> 00:22:48,989
A first family

560
00:22:49,189 --> 00:22:52,682
which concerns softwares
specialized in modelling,

561
00:22:53,393 --> 00:22:55,959
modelling of UML diagrams in general

562
00:22:56,159 --> 00:22:59,776
and not just data diagrams,

563
00:23:00,279 --> 00:23:04,360
and softwares specialized in data modelling

564
00:23:04,560 --> 00:23:07,439
with forward engineering

565
00:23:07,639 --> 00:23:08,869
and reverse engineering functions.

566
00:23:09,490 --> 00:23:10,676
In the latter family,

567
00:23:10,889 --> 00:23:13,031
the different softwares are distinguished

568
00:23:13,231 --> 00:23:16,490
by the type of database they support,

569
00:23:16,690 --> 00:23:18,116
there are specialized softwares

570
00:23:18,316 --> 00:23:20,081
on the PostgreSQL databases,

571
00:23:20,308 --> 00:23:22,108
others specialize on MySQL

572
00:23:22,850 --> 00:23:25,482
and whether or not they manage

573
00:23:25,682 --> 00:23:28,425
the geometries of spatial objects.

574
00:23:29,746 --> 00:23:32,324
We will also see in
the rest of this module

575
00:23:32,940 --> 00:23:34,270
that the SQL language

576
00:23:34,470 --> 00:23:38,216
can be used to construct and manipulate

577
00:23:38,464 --> 00:23:39,604
the data structures

578
00:23:39,917 --> 00:23:42,081
and there are a number of softwares

579
00:23:42,281 --> 00:23:46,342
which, without going so far
as the graphic representation

580
00:23:46,542 --> 00:23:47,354
of the data model,

581
00:23:47,619 --> 00:23:50,733
enable to manage the data models

582
00:23:50,933 --> 00:23:52,533
using the SQL language.

583
00:23:52,733 --> 00:23:54,484
But we will come back to these questions

584
00:23:54,697 --> 00:23:56,101
in the rest of the course.

585
00:23:57,340 --> 00:23:58,169
For now,

586
00:23:58,369 --> 00:24:01,178
we will focus on one of these softwares,

587
00:24:01,739 --> 00:24:03,762
specifically designed

588
00:24:03,962 --> 00:24:08,175
for Postgres PostGIS databases.

589
00:24:08,662 --> 00:24:10,487
So we start by importing

590
00:24:11,234 --> 00:24:12,214
a database,

591
00:24:12,414 --> 00:24:15,016
in this case the well-known
Seychelles database,

592
00:24:15,483 --> 00:24:17,517
we will not import the roles

593
00:24:17,717 --> 00:24:18,553
and in the diagram,

594
00:24:18,753 --> 00:24:20,949
we will not import the
extensions and functions,

595
00:24:21,162 --> 00:24:22,634
we will just import

596
00:24:22,834 --> 00:24:23,785
the data tables.

597
00:24:24,817 --> 00:24:26,797
And we see, it is reverse engineering,

598
00:24:26,997 --> 00:24:29,261
the software allows to rebuild

599
00:24:29,461 --> 00:24:30,581
the data model

600
00:24:30,781 --> 00:24:33,372
and we find here
the restaurant table we created

601
00:24:33,572 --> 00:24:37,909
with its relation to localities

602
00:24:38,109 --> 00:24:39,600
so its foreign key

603
00:24:39,800 --> 00:24:41,119
which we created earlier

604
00:24:41,319 --> 00:24:43,847
in the PostGIS administration system.

605
00:24:44,994 --> 00:24:45,843
As earlier

606
00:24:46,043 --> 00:24:48,909
we may want to create a new table

607
00:24:49,109 --> 00:24:50,222
for the beaches

608
00:24:50,422 --> 00:24:52,124
in which we will add

609
00:24:52,324 --> 00:24:54,245
an identifier field

610
00:24:55,184 --> 00:24:58,489
in the form of a non-null integer,

611
00:25:02,198 --> 00:25:06,508
we will also add a second field

612
00:25:06,733 --> 00:25:07,536
as earlier

613
00:25:07,736 --> 00:25:10,487
to host the locality reference,

614
00:25:10,687 --> 00:25:11,862
so here also,

615
00:25:12,062 --> 00:25:14,628
we will take an integer

616
00:25:19,319 --> 00:25:20,561
and as earlier,

617
00:25:20,761 --> 00:25:24,591
in the constraints
we will add a primary key

618
00:25:25,541 --> 00:25:28,317
that we will call "pkey"

619
00:25:29,603 --> 00:25:30,794
and this primary key,

620
00:25:30,994 --> 00:25:32,868
we will use the identifier field

621
00:25:33,068 --> 00:25:35,699
which we have defined
for this new table

622
00:25:37,520 --> 00:25:39,008
and we will also define

623
00:25:39,208 --> 00:25:40,407
a secondary key,

624
00:25:41,023 --> 00:25:43,752
as before we will call it "fkey",

625
00:25:45,427 --> 00:25:48,662
so a constraint of secondary type,

626
00:25:48,862 --> 00:25:50,437
foreign type, sorry,

627
00:25:51,380 --> 00:25:53,699
with as a reference

628
00:25:55,015 --> 00:25:56,567
the locality column

629
00:25:56,767 --> 00:25:58,551
and as a reference table

630
00:25:59,286 --> 00:26:00,997
the table of the localities

631
00:26:01,197 --> 00:26:03,050
and in particular in this table

632
00:26:03,827 --> 00:26:06,250
the field that will make the joint

633
00:26:06,450 --> 00:26:08,700
is the "identifier" field.

634
00:26:12,235 --> 00:26:13,063
We validate all ofthis

635
00:26:13,263 --> 00:26:15,287
and we see that this new table

636
00:26:15,487 --> 00:26:18,384
is created with its association,

637
00:26:18,584 --> 00:26:19,662
the table of localities.

638
00:26:20,152 --> 00:26:21,928
This structure can be exported,

639
00:26:22,128 --> 00:26:23,530
after validation,

640
00:26:23,967 --> 00:26:26,551
to update the data model.

641
00:26:35,516 --> 00:26:36,204
In this lesson,

642
00:26:36,404 --> 00:26:38,901
we saw a little bit

643
00:26:39,101 --> 00:26:41,223
what the concept

644
00:26:41,423 --> 00:26:43,192
of conceptual model of data corresponds to,

645
00:26:43,795 --> 00:26:45,781
we saw how important it was

646
00:26:45,981 --> 00:26:48,076
to exchange the ideas,

647
00:26:48,276 --> 00:26:50,722
in order to keep track
of what has been done,

648
00:26:50,922 --> 00:26:53,051
to document a process.

649
00:26:54,129 --> 00:26:55,815
We also saw

650
00:26:56,356 --> 00:26:58,640
the main syntax rules

651
00:26:58,840 --> 00:27:00,686
of the entity-relation model,

652
00:27:00,886 --> 00:27:03,048
which is the widely used model
in this field,

653
00:27:03,557 --> 00:27:04,566
some examples

654
00:27:04,766 --> 00:27:06,630
on how to build

655
00:27:06,830 --> 00:27:07,808
a data model

656
00:27:08,197 --> 00:27:10,365
and we had a little preview

657
00:27:11,167 --> 00:27:13,388
of the vast array of tools

658
00:27:13,588 --> 00:27:17,023
which exist in this
area of ​​software engineering.

