1
00:00:03,590 --> 00:00:06,440
Il faut que je vous montre
comment nous allons trouver,

2
00:00:06,440 --> 00:00:10,720
en général, une base orthogonale 
d'un <i>ℝ</i>-espace vectoriel donné

3
00:00:11,533 --> 00:00:18,244
Évidemment, si on a tout l'espace <i>ℝⁿ</i>
ou même <i>ℝ³</i>, on a déjà une bonne

4
00:00:18,244 --> 00:00:22,191
base orthonormale, donc on n'aura 
pas besoin de chercher.

5
00:00:22,191 --> 00:00:25,874
Mais dans un espace de fonction, 
ou même si on est dans <i>ℝⁿ</i>

6
00:00:25,874 --> 00:00:30,208
pour <i>n</i> grand et on a un sous-espace,
comme le noyau d'une application

7
00:00:30,208 --> 00:00:33,474
ou l'image d'une application linéaire
ou quelque chose comme ça,

8
00:00:33,474 --> 00:00:38,019
dans ce sous-espace, on n'a pas forcément
quelque chose comme la base canonique.

9
00:00:38,019 --> 00:00:41,854
Il faut chercher une base orthonormale
si on veut travailler avec ça.

10
00:00:41,854 --> 00:00:44,077
Maintenant, je fais juste
la première étape,

11
00:00:44,077 --> 00:00:48,340
c'est une procédure assez longue,
ça donnerait lieu à ce qu'on appelle

12
00:00:48,340 --> 00:00:50,826
l'algorithme ou la procédure 
de Gram-Schmidt,

13
00:00:50,826 --> 00:00:53,956
mais je vais par petits bouts, 
donc ça, c'est la première étape.

14
00:00:54,680 --> 00:00:56,461
La première chose que nous montrons,

15
00:00:56,461 --> 00:01:00,251
c'est que dans un espace vectoriel 
muni d'un produit scalaire,

16
00:01:00,251 --> 00:01:07,070
si je me donne une famille orthogonale
de vecteurs, sans vecteurs nuls,

17
00:01:07,070 --> 00:01:09,371
alors cette famille est forcément libre.

18
00:01:09,371 --> 00:01:11,761
Donc, ça, c'est déjà un très bon critère.

19
00:01:11,761 --> 00:01:17,371
Ça voudrait dire que, pour trouver 
une base orthonormale ou orthogonale,

20
00:01:17,373 --> 00:01:22,020
disons orthogonale, au début, alors
il faudrait simplement trouver le bon

21
00:01:22,020 --> 00:01:26,171
nombre de vecteurs tous non nuls,

22
00:01:26,171 --> 00:01:28,925
et après on sait que c'est une base.

23
00:01:28,925 --> 00:01:31,873
C'est-à-dire le nombre qui est
la dimension de l'espace.

24
00:01:31,873 --> 00:01:35,187
Donc, je me donne une
famille de vecteurs orthogonale,

25
00:01:35,187 --> 00:01:37,877
tous les vecteurs non nuls;
c'est forcément libre.

26
00:01:37,877 --> 00:01:40,987
Donc, d'abord je démontre ça.

27
00:01:40,987 --> 00:01:44,087
La preuve n'est pas du tout difficile.
En fait, les espaces munis

28
00:01:44,087 --> 00:01:47,241
de produits scalaires ont 
beaucoup de bonnes propriétés.

29
00:01:47,241 --> 00:01:51,691
Donc, je vais supposer qu'il y a 
une relation de dépendance.

30
00:01:51,691 --> 00:01:59,961
Donc, je prends les scalaires, soit <i>α₁</i>
jusqu'à <i>αₖ</i> des nombres réels,

31
00:01:59,961 --> 00:02:07,329
tels que <i>α₁V₁</i> jusqu'à <i>αᵢVₖ</i>,

32
00:02:07,329 --> 00:02:09,571
soit égal au vecteur nul.

33
00:02:09,571 --> 00:02:13,431
Et puis, il faut montrer que 
tous les <i>αᵢ</i> sont égaux à 0.

34
00:02:13,446 --> 00:02:18,581
Donc, je fais le produit 
scalaire de ce vecteur nul

35
00:02:18,581 --> 00:02:21,481
avec <i>Vᵢ</i> pour tout <i>i</i>,

36
00:02:21,481 --> 00:02:27,581
donc pour <i>i</i> entre 1 et <i>k</i>.

37
00:02:27,581 --> 00:02:33,034
Je fais le produit scalaire 
de <i>Vᵢ</i> avec ce vecteur-là.

38
00:02:33,034 --> 00:02:38,964
Ça, c'est d'un côté, égal au produit 
scalaire de <i>Vᵢ</i> avec le vecteur nul,

39
00:02:38,964 --> 00:02:43,932
qui est forcément 0, parce que
je peux sortir le scalaire de 0,

40
00:02:43,932 --> 00:02:46,552
et puis, ici, c'est linéaire.

41
00:02:46,557 --> 00:02:53,407
Donc j'ai <i>α₁ ⟨ Vᵢ V₁ ⟩</i>,

42
00:02:53,407 --> 00:03:01,015
jusqu'à <i>αᵢ ⟨ Vᵢ Vᵢ ⟩</i>, etc.

43
00:03:01,015 --> 00:03:07,315
<i>αₖ ⟨ Vᵢ Vₖ ⟩</i>.

44
00:03:07,315 --> 00:03:11,753
Maintenant, comme c'est une 
famille orthogonale, ici,

45
00:03:11,753 --> 00:03:17,525
tous ces produits scalaires
sont égaux à 0, sauf celui-ci.

46
00:03:17,525 --> 00:03:24,212
Donc, ceci est égal à <i>αᵢ ⟨ Vᵢ Vᵢ ⟩</i>,

47
00:03:24,212 --> 00:03:29,692
et comme on a des vecteurs non nuls,

48
00:03:29,692 --> 00:03:37,794
alors par notre action numéro 4, <i>⟨ Vᵢ Vᵢ ⟩</i>
est strictement plus grand que 0.

49
00:03:38,860 --> 00:03:42,710
Mais par contre, ceci est censé
être égal à 0, donc on conclut,

50
00:03:43,050 --> 00:03:48,120
on déduit que <i>αᵢ</i> doit être égal à 0.

51
00:03:49,181 --> 00:03:52,935
Donc, on a choisi des scalaires,
on fait cette combinaison qui vaut 0,

52
00:03:52,935 --> 00:03:56,745
la seule façon que cela arrive, c'est
que tous les scalaires soient égaux à 0,

53
00:03:56,745 --> 00:04:04,385
Donc, ça montre que la famille <i>V₁</i>
jusqu'à <i>Vₖ</i> est une famille libre.

54
00:04:05,925 --> 00:04:11,750
Très bien, cela est une première propriété
qui nous aidera à trouver une base

55
00:04:11,750 --> 00:04:14,326
dans un espace de 
dimension finie, en tout cas.

56
00:04:14,326 --> 00:04:19,820
Une base orthogonale, parce que
j'irai chercher une famille orthogonale

57
00:04:19,820 --> 00:04:22,741
avec le bon nombre de vecteurs dedans.

58
00:04:22,741 --> 00:04:27,348
Maintenant, par contre, comment 
trouver les vecteurs orthogonaux

59
00:04:27,348 --> 00:04:29,194
dans un espace quelconque ?

60
00:04:29,194 --> 00:04:32,474
Donc, c'est la deuxième 
partie de cette vidéo.

61
00:04:33,400 --> 00:04:35,531
Je fais la définition suivante :

62
00:04:35,531 --> 00:04:39,201
Soit <i>V</i> un <i>ℝ</i>-espace vectoriel 
muni d'un produit scalaire.

63
00:04:39,801 --> 00:04:42,873
Je me donne deux vecteurs 
dans <i>V</i>, <i>u</i> et <i>v</i>,

64
00:04:42,873 --> 00:04:47,303
et on définit la projection 
orthogonale de <i>u</i> sur <i>v</i>

65
00:04:48,310 --> 00:04:51,904
et puis on la dénote comme ça : <i>projᵥu</i>.

66
00:04:54,034 --> 00:04:57,834
C'est un multiple scalaire du vecteur <i>v</i>,

67
00:04:58,114 --> 00:05:00,414
et puis c'est ce multiple scalaire là.

68
00:05:00,414 --> 00:05:04,193
Je fais le produit scalaire de <i>u</i> et <i>v</i>
et je divise par la norme carrée de <i>v</i> .

69
00:05:05,283 --> 00:05:10,673
Maintenant, on a déjà vu dans <i>ℝ²</i> une 
projection orthogonale, géométriquement,

70
00:05:10,679 --> 00:05:12,989
et puis on a déjà développé
une formule pour ça,

71
00:05:12,993 --> 00:05:15,143
pas du tout en utilisant
un produit scalaire,

72
00:05:15,143 --> 00:05:18,561
donc, d'abord, je vais faire
un lien avec ces deux choses-là.

73
00:05:20,825 --> 00:05:23,371
Donc, propriétés...

74
00:05:23,571 --> 00:05:26,890
Vous devriez être un peu inquiet, 
parce que, là, est-ce que ça donne

75
00:05:26,890 --> 00:05:29,504
la même chose que ce qu'on a vu dans <i>ℝ²</i> ?

76
00:05:29,504 --> 00:05:36,424
Donc, si <i>V</i> est égal à <i>ℝ²</i>,
muni du produit scalaire usuel,

77
00:05:39,297 --> 00:05:43,907
alors, si je prends <i>u = ⟨ x, y ⟩</i>,

78
00:05:44,477 --> 00:05:48,832
et <i>v = ⟨ a, b ⟩</i>,

79
00:05:48,832 --> 00:05:51,472
on a déjà, normalement,

80
00:05:51,472 --> 00:05:54,012
je vais calculer en 
utilisant cette formule-là,

81
00:05:54,012 --> 00:05:58,689
<i>projᵥu</i>,

82
00:05:59,339 --> 00:06:04,947
et puis, donc, je fais le produit 
scalaire, donc, ça c'est <i>ax</i>+<i>by</i>,

83
00:06:05,767 --> 00:06:11,627
je divise par la norme de <i>v</i>
au carré, donc <i>a²</i>+<i>b²</i>,

84
00:06:12,540 --> 00:06:16,760
et qui multiplie le vecteur <i>v</i>
qui est <i>⟨ a, b ⟩</i>.

85
00:06:18,095 --> 00:06:22,805
Puis, ça donne, 1 sur <i>a² + b²</i>,

86
00:06:22,805 --> 00:06:29,511
fois le vecteur, et ici, j'ai <i>a²x</i> + <i>aby</i>,

87
00:06:29,511 --> 00:06:36,529
et ensuite, deuxième combinée,
<i>abx </i>+ <i>b²y</i>,

88
00:06:36,529 --> 00:06:40,229
et ça, c'est exactement la formule
que nous avons vue, il y a longtemps.

89
00:06:40,234 --> 00:06:50,710
Donc, ça, c'est la même formule 
développée dans le chapitre 5, je crois,

90
00:06:50,710 --> 00:06:55,798
où l'on a introduit les 
applications linéaires.

91
00:06:55,798 --> 00:07:00,491
C'est très bien, on n'a pas deux notions 
différentes de la projection dans <i>ℝ²</i>

92
00:07:00,491 --> 00:07:03,205
pour autant qu'on prenne
le produit scalaire usuel.

93
00:07:03,205 --> 00:07:05,405
Ça donne exactement la même formule ici.

94
00:07:06,662 --> 00:07:09,792
Donc, ça, c'est une propriété.

95
00:07:09,792 --> 00:07:12,301
La deuxième propriété 
que je veux soulever ici,

96
00:07:12,301 --> 00:07:19,692
c'est que, bon, je le redis, que 
le <i>proj</i>, la projection orthogonale

97
00:07:19,692 --> 00:07:25,742
de <i>u</i> sur le vecteur <i>v</i>, c'est juste 
un multiple scalaire du vecteur <i>v</i>,

98
00:07:25,742 --> 00:07:28,470
donc c'est dans 
l'espace vectoriel engendré

99
00:07:28,470 --> 00:07:32,520
par <i>v</i>, c'est un vecteur parallèle
ou un multiple scalaire

100
00:07:34,228 --> 00:07:35,848
du vecteur <i>v</i>.

101
00:07:36,874 --> 00:07:39,173
Et puis, troisième point,

102
00:07:39,173 --> 00:07:41,203
et ça, c'est ce qui est important,

103
00:07:41,638 --> 00:07:46,400
si on se rappelle que notre but
est de trouver une façon de calculer

104
00:07:46,400 --> 00:07:48,595
une base orthogonale,

105
00:07:48,595 --> 00:07:52,935
et ça, c'est, si je prends mes
deux vecteurs <i>u</i> et <i>v</i>

106
00:07:52,935 --> 00:07:56,555
et j'imagine que j'ai un espace engendré,
par exemple, par <i>u</i> et <i>v</i>.

107
00:07:57,625 --> 00:08:05,995
Alors, maintenant, je regarde <i>u</i> moins
la projection orthogonale de <i>u</i> sur <i>v</i>

108
00:08:06,863 --> 00:08:09,173
et je fais le produit 
scalaire de ça avec <i>v</i>.

109
00:08:10,524 --> 00:08:15,914
Alors, ceci est égal,
donc, je vais utiliser la linéarité,

110
00:08:15,914 --> 00:08:18,584
donc ça, c'est produit scalaire
de <i>u</i> avec <i>v</i>,

111
00:08:19,206 --> 00:08:23,306
moins produit scalaire 
de la projection avec <i>v</i>.

112
00:08:23,875 --> 00:08:27,955
Et puis, ça, je continue, 
ça c'est <i>u</i> avec <i>v</i>, moins,

113
00:08:28,551 --> 00:08:31,621
et puis, maintenant, je mets
la formule pour la projection,

114
00:08:31,621 --> 00:08:37,551
donc ça, c'est produit scalaire <i>u</i> avec <i>v</i>,
sur produit scalaire <i>v</i> avec lui-même,

115
00:08:37,551 --> 00:08:43,192
qui multiplie <i>v</i>, donc ça,
c'est le premier vecteur,

116
00:08:43,192 --> 00:08:45,672
produit scalaire avec <i>v</i>.

117
00:08:45,672 --> 00:08:49,377
Donc, je continue à développer, 
donc <i>⟨ u, v ⟩</i> moins,

118
00:08:49,377 --> 00:08:53,512
ça, c'est un scalaire, un nombre réel,
donc je peux le sortir,

119
00:08:54,372 --> 00:08:58,712
et puis, ce qui reste, c'est le 
produit scalaire de <i>v</i> avec lui-même.

120
00:08:58,716 --> 00:09:02,706
Maintenant, on voit que ça s'annule,

121
00:09:02,706 --> 00:09:10,297
puis j'ai <i>⟨ u, v ⟩</i> - <i>⟨ u, v ⟩</i> qui vaut 0.

122
00:09:10,301 --> 00:09:15,201
Donc, du coup, si j'imagine
que je commence avec l'espace,

123
00:09:15,211 --> 00:09:17,561
bon, je ferai la remarque parce que

124
00:09:17,561 --> 00:09:21,434
je n'ai pas beaucoup de place ici
et en plus je ferai un dessin qui va avec.

125
00:09:22,864 --> 00:09:27,371
Disons que je nomme ces vecteurs,
ça, c'est le vecteur <i>v</i>

126
00:09:27,371 --> 00:09:30,631
et puis le rouge, c'est le vecteur <i>u</i>.

127
00:09:32,013 --> 00:09:37,000
Maintenant, dans <i>ℝ²</i>, comme on l'a vu,
que cette projection orthogonale donne

128
00:09:37,000 --> 00:09:40,619
exactement la projection 
géométrique orthogonale,

129
00:09:40,619 --> 00:09:42,432
je vais dessiner.

130
00:09:42,432 --> 00:09:46,562
Donc, ici, si je fais la projection
orthogonale de <i>u</i> sur <i>v</i>,

131
00:09:47,061 --> 00:09:49,701
je trace une orthogonale, là,

132
00:09:49,701 --> 00:09:53,972
et puis la projection orthogonale,
ce sont ces vecteurs-là,

133
00:09:53,976 --> 00:09:58,190
donc, ça, c'est la projection orthogonale

134
00:09:58,190 --> 00:10:03,390
de <i>u</i> sur <i>v</i>, donc c'est 
dans la direction de <i>v</i>,

135
00:10:03,390 --> 00:10:06,500
et puis, c'est juste pas aussi long que <i>v</i>.

136
00:10:07,684 --> 00:10:09,845
Donc, si je fais la projection orthogonale

137
00:10:09,845 --> 00:10:12,991
plus ce vecteur-là, j'obtiens <i>u</i>,

138
00:10:12,991 --> 00:10:17,521
donc je sais que ce vecteur-là, 
c'est exactement <i>u</i> moins

139
00:10:17,521 --> 00:10:22,981
la projection orthogonale de <i>u</i> sur <i>v</i>.

140
00:10:23,843 --> 00:10:26,693
Donc, effectivement, 
comme ce qu'on a montré,

141
00:10:26,701 --> 00:10:28,538
ça, c'est un angle rectangle,

142
00:10:28,538 --> 00:10:31,660
donc ce vecteur-là, il est orthogonal à <i>v</i>.

143
00:10:31,660 --> 00:10:34,705
Maintenant, ce que j'aimerais
soulever ou souligner ici,

144
00:10:34,705 --> 00:10:36,750
c'est la propriété suivante :

145
00:10:36,750 --> 00:10:42,417
Si on regarde l'espace vectoriel engendré
par <i>u</i> et <i>v</i>, donc on imagine

146
00:10:42,417 --> 00:10:44,854
que c'était cet espace-là 
qui nous intéressait

147
00:10:44,854 --> 00:10:48,944
et qu'on cherchait une 
base orthogonale dans cet espace.

148
00:10:49,253 --> 00:10:53,133
Alors, si je garde le vecteur <i>v</i>

149
00:10:53,964 --> 00:11:01,504
et je prends le vecteur <i>u</i> moins la
projection orthogonale de <i>u</i> sur <i>v</i>.

150
00:11:02,295 --> 00:11:06,234
En tout cas, là, j'ai deux vecteurs
qui sont orthogonaux,

151
00:11:06,234 --> 00:11:11,014
et puis j'aimerais vous montrer que dans 
tous les cas, ça engendre le même espace.

152
00:11:11,014 --> 00:11:17,366
Si je fais le vecteur de ça, je prétends
que c'est égal au vecteur de <i>u</i>, <i>v</i>.

153
00:11:17,366 --> 00:11:18,753
Maintenant, pourquoi?

154
00:11:18,753 --> 00:11:23,643
Ça, c'est un vecteur qui
est juste parallèle à <i>v</i>.

155
00:11:23,652 --> 00:11:24,652
Donc, je sais que

156
00:11:24,652 --> 00:11:27,252
- bon, déjà, dans une direction -

157
00:11:27,252 --> 00:11:30,635
ça, c'est une combinaison 
linéaire de <i>u</i> et <i>v</i>.

158
00:11:30,635 --> 00:11:33,441
Donc, cet espace-là est inclus là-dedans.

159
00:11:34,652 --> 00:11:38,112
Maintenant, le premier, 
il est inclus ici,

160
00:11:38,112 --> 00:11:42,325
donc, maintenant, <i>v</i> est ici dedans, 
est-ce que <i>u</i> est ici dedans?

161
00:11:42,325 --> 00:11:46,913
Oui, parce que ça, c'est 
un multiple scalaire de <i>v</i>,

162
00:11:46,913 --> 00:11:48,257
et comme j'ai <i>v</i> ici,

163
00:11:48,257 --> 00:11:53,137
ça veut dire que je peux soustraire 
ce multiple scalaire et j'obtiens <i>u</i>.

164
00:11:53,141 --> 00:11:56,390
On a les deux inclusions,
donc effectivement, c'est le même espace.

165
00:11:56,390 --> 00:12:00,020
On a commencé avec deux vecteurs
qui ne sont pas orthogonaux,

166
00:12:00,026 --> 00:12:05,551
et puis, là, on a le début d'un programme
pour trouver une base orthogonale.

167
00:12:05,551 --> 00:12:08,197
D'ailleurs, dans le cas de 
la dimension 2, on l'a fait.

168
00:12:08,197 --> 00:12:09,723
Donc, on remplace <i>u</i>, <i>v</i>

169
00:12:09,723 --> 00:12:14,193
par ces deux vecteurs-là
et on a une base orthogonale.

170
00:12:14,193 --> 00:12:17,351
On poursuit ça dans la prochaine vidéo.
