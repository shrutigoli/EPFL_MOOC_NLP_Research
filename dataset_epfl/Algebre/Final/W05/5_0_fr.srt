1
00:00:04,108 --> 00:00:05,498
Aujourd'hui nous commençons un

2
00:00:05,498 --> 00:00:07,963
nouveau chapitre et, ayant introduit

3
00:00:07,963 --> 00:00:11,391
les espaces vectoriels, étudié la

4
00:00:11,391 --> 00:00:13,417
structure de ces espaces, et parlé des

5
00:00:13,417 --> 00:00:15,880
bases de ces espaces, nous allons

6
00:00:15,880 --> 00:00:17,363
maintenant étudier les applications

7
00:00:17,363 --> 00:00:19,153
d'un espace vers un autre.

8
00:00:19,683 --> 00:00:23,744
Avant je faire cela, j'aimerais rappeler

9
00:00:23,744 --> 00:00:25,314
certaines choses concernant les

10
00:00:25,314 --> 00:00:26,803
applications entre des ensembles.

11
00:00:26,803 --> 00:00:28,223
Ce sont des généralités.

12
00:00:29,271 --> 00:00:31,230
Je rappelle : je me donne deux

13
00:00:31,230 --> 00:00:34,414
ensembles <i>X</i> et <i>Y</i>. Une application ou bien une

14
00:00:34,414 --> 00:00:38,327
fonction de <i>X</i> dans <i>Y</i> est une règle qui

15
00:00:38,327 --> 00:00:40,742
associe à chaque <i>x</i> dans <i>X</i> un unique

16
00:00:40,742 --> 00:00:43,666
élément de <i>Y</i>. Nous noterons cet

17
00:00:43,666 --> 00:00:45,729
élément par <i>f(x)</i>.

18
00:00:48,583 --> 00:00:51,079
D'autres terminologies associées :

19
00:00:51,079 --> 00:00:53,801
le <i>X</i> ici est appelé l'ensemble de départ.

20
00:00:56,361 --> 00:00:57,687
On dit parfois que c'est le domaine de

21
00:00:57,687 --> 00:00:59,750
définition de la fonction ou de

22
00:00:59,750 --> 00:01:01,849
l'application. Le <i>Y</i> est l'ensemble

23
00:01:01,849 --> 00:01:06,643
d'arrivée de l'application. Une notation

24
00:01:06,643 --> 00:01:13,669
que l'on utlise est <i>f : X → Y</i>. Cela

25
00:01:13,669 --> 00:01:15,298
signifie que <i>f</i> est une application qui

26
00:01:15,298 --> 00:01:17,268
part de <i>X</i> comme ensemble de départ et

27
00:01:17,268 --> 00:01:19,855
qui arrive dans <i>Y</i>, l'ensemble d'arrivée.

28
00:01:19,855 --> 00:01:28,073
Le <i>f(x)</i> s'appelle l'image de <i>x</i> par <i>f</i>.

29
00:01:29,225 --> 00:01:32,684
Par exemple, nous pourrions avoir <i>f</i> qui

30
00:01:32,684 --> 00:01:35,352
part des nombres réels et qui arrive

31
00:01:35,352 --> 00:01:39,606
dans des nombres réels, et cela donne

32
00:01:39,606 --> 00:01:42,958
<i>f(x) = x²</i>. C'est la règle qui est associée à

33
00:01:42,958 --> 00:01:47,410
<i>x</i> au carré. Deuxième exemple : <i>g</i> qui

34
00:01:47,410 --> 00:01:51,434
part de <i>Z</i> (les entiers relatifs) et qui arrive

35
00:01:51,434 --> 00:01:55,249
dans des nombres rationnels. La fonction <i>g</i> prend

36
00:01:55,249 --> 00:01:59,220
un entier et il le divise par deux. Voilà

37
00:01:59,220 --> 00:02:01,664
deux exemples d'applications.

38
00:02:01,664 --> 00:02:03,683
Quand on a des applications, on a des

39
00:02:03,683 --> 00:02:06,967
propriétés que je vais énumérer ici.

40
00:02:06,968 --> 00:02:09,539
Dans cette définition, on dit que <i>f</i> est

41
00:02:09,539 --> 00:02:12,759
injective si, à chaque fois que <i>f</i> envoie

42
00:02:12,759 --> 00:02:16,518
<i>x</i> et <i>x'</i> au même endroit alors <i>x = x'</i> .

43
00:02:16,518 --> 00:02:19,419
Cela signifie que des éléments distincts

44
00:02:19,419 --> 00:02:21,555
ont des images distinctes. Donc

45
00:02:21,555 --> 00:02:27,205
les éléments distincts de <i>X</i> ont des

46
00:02:27,205 --> 00:02:32,057
images distinctes dans <i>Y</i>.

47
00:02:33,430 --> 00:02:36,336
On dit que <i>f</i> est surjective si, pour tout

48
00:02:36,336 --> 00:02:38,837
élément que je prends dans <i>Y</i>, il y a un

49
00:02:38,837 --> 00:02:41,216
<i>x</i> qui est envoyé dessus. Donc tout

50
00:02:41,216 --> 00:02:44,637
élément de <i>Y</i> est une image.

51
00:02:49,214 --> 00:02:52,802
Enfin, on dit que <i>f</i> est bijective si

52
00:02:52,802 --> 00:02:56,753
<i>f</i> est à la fois injective et surjective.

53
00:02:59,458 --> 00:03:06,849
Par exemple ici, si je prends <i>f(x) = x²,</i>

54
00:03:06,849 --> 00:03:11,033
donc ici <i>f : R → R</i>, ça c'est

55
00:03:11,033 --> 00:03:12,511
l'exemple qu'on avait dans le tableau

56
00:03:12,511 --> 00:03:17,109
précédent, alors ceci est non injectif car

57
00:03:17,109 --> 00:03:22,940
<i>f(1) = 1 = f(-1)</i> . Donc ici j'ai deux

58
00:03:22,940 --> 00:03:25,601
éléments distincts des nombres réels et

59
00:03:25,601 --> 00:03:27,013
je les envoie au même endroit, donc <i>f</i>

60
00:03:27,013 --> 00:03:31,080
n'est pas injective. Si je prends la même

61
00:03:31,080 --> 00:03:41,637
application, ce n'est pas non plus

62
00:03:41,637 --> 00:03:46,020
surjectif, car il

63
00:03:46,020 --> 00:03:53,176
n'existe aucun <i>x</i> tel que <i>f(x) = -1</i>.

64
00:03:53,176 --> 00:03:55,004
Maintenant, un exemple

65
00:03:55,004 --> 00:03:57,374
d'une application bijective dont on aura

66
00:03:57,374 --> 00:04:00,516
besoin fréquemment. Si je me donne un ensemble <i>X</i>

67
00:04:00,516 --> 00:04:07,171
et je définis <i>id<sub>X</sub></i> de <i>X</i> dans <i>X</i> , c'est

68
00:04:07,171 --> 00:04:10,557
l'application identité donc cela envoie

69
00:04:10,557 --> 00:04:13,798
un petit <i>x</i> à lui-même et on appelle cette application,

70
00:04:13,798 --> 00:04:18,449
l'application identité. Si le contexte est

71
00:04:18,449 --> 00:04:21,228
clair, parfois on ne mettra pas le "X" après le <i>id</i>,

72
00:04:21,228 --> 00:04:23,217
car on sait où on travaille mais en

73
00:04:23,217 --> 00:04:26,490
général on le met pour être très clair.

74
00:04:26,997 --> 00:04:28,481
Maintenant quand nous avons des

75
00:04:28,481 --> 00:04:30,004
applications, on peut aussi les mettre

76
00:04:30,004 --> 00:04:32,063
ensemble de façon différente tout

77
00:04:32,063 --> 00:04:33,442
dépendant de la structure des

78
00:04:33,442 --> 00:04:36,106
ensembles, mais si on a une application <i>f</i>

79
00:04:36,106 --> 00:04:38,591
qui part de <i>X</i> et qui arrive dans <i>Y</i> et une

80
00:04:38,591 --> 00:04:41,409
autre <i>g</i> qui part de <i>Y</i> et qui arrive dans <i>Z</i> ,

81
00:04:41,409 --> 00:04:43,328
on peut former une application qui

82
00:04:43,328 --> 00:04:47,552
s'appelle la composition de <i>f</i> et <i>g</i> . Elle

83
00:04:47,552 --> 00:04:50,618
est définie ici (voir écran) donc on prend un élément

84
00:04:50,618 --> 00:04:53,243
de <i>X</i> , on l'envoie à <i>f(x)</i>, maintenant

85
00:04:53,243 --> 00:04:56,391
c'est dans <i>Y</i> donc je sais comment

86
00:04:56,391 --> 00:04:59,115
prendre <i>f(x)</i> et l'envoyer dans <i>Z</i> .

87
00:04:59,115 --> 00:05:01,974
Par exemple, si je prends des

88
00:05:01,974 --> 00:05:07,606
applications, disons <i>f : Z → Q</i> ,

89
00:05:07,606 --> 00:05:12,981
qu'on avait avant (avec <i>f(n) = n/2</i>) et

90
00:05:12,981 --> 00:05:16,591
peut-être ensuite un <i>g : Q → R</i>,

91
00:05:16,591 --> 00:05:22,320
qui est <i>g(a/b) = (a/b)².

92
00:05:22,320 --> 00:05:28,251
(On rappelle que les éléments de <i>Q</i> sont des fractions)

93
00:05:28,251 --> 00:05:29,946
Qu'est-ce que je peux faire ? Je pars de

94
00:05:29,946 --> 00:05:31,482
<i>Z</i> et j'arrive dans <i>Q</i> et ensuite je suis

95
00:05:31,482 --> 00:05:35,426
envoyée dans <i>R</i> donc je fais en premier <i>f</i>,

96
00:05:35,426 --> 00:05:39,641
ensuite <i>g</i> et je l'applique à un entier <i>n</i>.

97
00:05:39,641 --> 00:05:46,876
C'est <i>g(f(n))</i> , donc c'est <i>g(n/2)</i>

98
00:05:46,876 --> 00:05:50,878
qui est <i>(n/2)²</i>. Donc ça c'est la

99
00:05:50,878 --> 00:05:53,825
composition. Une des propriétés de

100
00:05:53,825 --> 00:05:56,260
cette composition dont nous aurons

101
00:05:56,260 --> 00:05:58,385
besoin est donnée dans la proposition

102
00:05:58,385 --> 00:06:00,901
suivante. Cette proposition nous donne

103
00:06:00,901 --> 00:06:02,881
un critère pour déterminer si une

104
00:06:02,881 --> 00:06:05,305
application entre X et Y est bijective

105
00:06:05,305 --> 00:06:07,976
ou non. Une application d'un ensemble

106
00:06:07,976 --> 00:06:12,178
<i>X</i> vers un ensemble <i>Y</i> est bijective si et

107
00:06:12,178 --> 00:06:14,867
seulement si il existe une application

108
00:06:14,867 --> 00:06:17,826
dans l'autre sens, tel que les deux

109
00:06:17,826 --> 00:06:21,691
compositions sont égales à l'application

110
00:06:21,691 --> 00:06:24,957
identité. Je vais démontrer une partie

111
00:06:24,957 --> 00:06:26,490
de cette proposition, pas les deux

112
00:06:26,490 --> 00:06:28,184
implications, seulement une des deux

113
00:06:28,184 --> 00:06:30,414
et ceci sera très utile. Nous utiliserons

114
00:06:30,414 --> 00:06:32,398
les deux implications. On utilise

115
00:06:32,398 --> 00:06:36,703
l'équivalence. Preuve : je vais démontrer

116
00:06:36,703 --> 00:06:39,964
l'implication "=>".

117
00:06:42,420 --> 00:06:45,010
Je vais supposer que <i>f</i> est bijective et je

118
00:06:45,010 --> 00:06:46,350
vais vous montrer comment on définit

119
00:06:46,350 --> 00:06:53,123
le <i>g</i> (l'implication inverse). Alors, comme <i>f</i> est bijective,

120
00:06:53,123 --> 00:06:58,043
<i>f</i> est surjective. Donc si je prends un

121
00:06:58,043 --> 00:07:03,813
<i>y</i> dans <i>Y</i> , il existe un <i>x</i> dans <i>X</i>,

122
00:07:03,813 --> 00:07:09,447
tel que <i>f(x) = y</i>. Comme <i>f</i> est aussi

123
00:07:09,447 --> 00:07:15,688
injective, <i>f</i> ne peut pas envoyer deux

124
00:07:15,688 --> 00:07:17,686
éléments différents sur <i>y</i> donc le <i>x</i> précédent

125
00:07:17,686 --> 00:07:20,221
est unique.

126
00:07:22,250 --> 00:07:25,509
En fait, <i>x</i> est l'unique élément de <i>X</i>

127
00:07:25,509 --> 00:07:28,699
tel que <i>f(x) = y</i>, donc cela me

128
00:07:28,699 --> 00:07:30,343
donne la possibilité de bien

129
00:07:30,343 --> 00:07:31,963
définir une application dans l'autre

130
00:07:31,963 --> 00:07:35,827
sens donc on définit une application <i>g</i> avec

131
00:07:35,827 --> 00:07:39,855
ensemble de départ <i>Y</i> qui arrive dans <i>X</i>

132
00:07:39,855 --> 00:07:47,973
par <i>g(y) = x</i>. Je me suis donné un

133
00:07:47,973 --> 00:07:50,358
<i>y</i> quelconque , je sais qu'il existe un

134
00:07:50,358 --> 00:07:53,580
unique <i>x</i> tel que <i>f(x) = y</i> donc je

135
00:07:53,580 --> 00:07:56,312
définis l'application <i>g</i> , il va prendre le

136
00:07:56,312 --> 00:07:58,682
<i>y</i> et l'envoyer sur <i>x</i>. Ensuite on peut

137
00:07:58,682 --> 00:08:01,526
vérifier le reste : que les compositions

138
00:08:01,526 --> 00:08:03,462
sont égales à l'identité. Je ne ferai pas.

139
00:08:03,462 --> 00:08:05,479
La démonstration dans l'autre direction,

140
00:08:05,479 --> 00:08:07,290
ce n'est pas si difficile. C'était pour

141
00:08:07,290 --> 00:08:08,645
vous donner l'idée de comment on utilise

142
00:08:08,645 --> 00:08:10,911
la bijectivité pour construire cette

143
00:08:10,911 --> 00:08:11,977
application.

144
00:08:12,888 --> 00:08:14,940
Dans la vidéo suivante, nous dirons

145
00:08:14,940 --> 00:08:16,599
quelles sont les applications qui

146
00:08:16,599 --> 00:08:19,539
conviennent aux espaces vectoriels.
