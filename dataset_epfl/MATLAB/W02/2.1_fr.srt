1
00:00:04,290 --> 00:00:06,780
Maintenant que notre environnement
est prêt, nous allons pouvoir

2
00:00:06,780 --> 00:00:09,060
commencer à travailler
avec Octave ou Mat Lab.

3
00:00:09,730 --> 00:00:13,420
Nous devons d’abord définir nos
objets qu’on appelle les variables,

4
00:00:13,630 --> 00:00:16,130
ça peut être des nombres, des
vecteurs, des matrices, et plus

5
00:00:16,130 --> 00:00:17,670
loin on verra aussi autre chose.

6
00:00:18,390 --> 00:00:21,410
Mais tout d’abord il faut choisir
le nom pour ces variables

7
00:00:22,000 --> 00:00:24,820
pour pouvoir ensuite les définir.

8
00:00:24,770 --> 00:00:26,690
Il n’est pas nécessaire de
déclarer une variable.

9
00:00:26,800 --> 00:00:29,250
Sa taille et son type sont
définis automatiquement.

10
00:00:29,910 --> 00:00:37,200
Donc par exemple, si je veux
définir la variable à - 3,4, je

11
00:00:37,200 --> 00:00:44,190
peux simplement taper A égale - 3,4
et Mat Lab ou Octave reconnaissent

12
00:00:44,220 --> 00:00:47,400
automatiquement la taille et
la valeur de cette variable.

13
00:00:48,650 --> 00:00:52,260
Je peux simplement aussi
définir des vecteurs colonnes.

14
00:00:53,090 --> 00:00:55,210
À ce moment-là, je dois
utiliser des crochets.

15
00:00:57,620 --> 00:01:07,710
Par exemple [- 3,1, plus loin 1
point-virgule 4,9, je ferme les crochets.

16
00:01:09,480 --> 00:01:13,800
Et encore une fois, la variable
b est informatiquement créée

17
00:01:13,800 --> 00:01:16,150
et définie de taille 1 fois 2.

18
00:01:19,380 --> 00:01:21,510
Maintenant, je peux aussi
définir des vecteurs lignes.

19
00:01:22,330 --> 00:01:24,880
Le même principe seulement qu’à
la place du point-virgule, je

20
00:01:25,190 --> 00:01:27,140
dois mettre juste un espace.

21
00:01:27,380 --> 00:01:37,570
- 2 un espace 4,67 je
ferme les crochets.

22
00:01:39,530 --> 00:01:40,560
Et voilà ma nouvelle variable.

23
00:01:42,910 --> 00:01:46,780
Avec le même principe, on peut
définir des matrices d’une taille

24
00:01:47,980 --> 00:01:54,950
qu’on peut décider. D égale 2, 3
et 0, c’est la première ligne.

25
00:01:55,510 --> 00:01:59,610
Et la deuxième ligne : - 4, 5, 6.

26
00:02:04,730 --> 00:02:10,030
On vient de voir que le point-virgule
sépare les lignes et que

27
00:02:10,030 --> 00:02:11,110
les espaces séparent les colonnes.

28
00:02:11,990 --> 00:02:15,330
Quand on définit une matrice, on
va d’abord définir la première

29
00:02:15,330 --> 00:02:17,310
ligne et ensuite la deuxième.

30
00:02:18,360 --> 00:02:23,930
Le nom de la variable est important
pour pouvoir la réutiliser

31
00:02:24,530 --> 00:02:26,410
par la suite par exemple à
l’intérieur d’un programme.

32
00:02:27,610 --> 00:02:34,140
On a un choix très ouvert pour le
nom, mais ce nom doit commencer

33
00:02:34,690 --> 00:02:38,420
par une lettre. Par exemple, si
vous commencez par un nombre

34
00:02:38,440 --> 00:02:42,610
12 A égale 3, ça ne
pourra pas marcher.

35
00:02:42,890 --> 00:02:45,330
Et en effet, vous avez une erreur.

36
00:02:45,890 --> 00:02:50,730
Aussi vous avez une limitation
par rapport à la longueur de

37
00:02:50,730 --> 00:02:54,000
votre nom, c’est le name (length) max.

38
00:02:53,880 --> 00:02:57,770
Il va vous dire quelle est la
longueur maximale en termes de

39
00:02:57,770 --> 00:02:59,450
caractères de votre variable.

40
00:03:01,450 --> 00:03:07,580
Aussi, il faut savoir que si vous
avez une variable en minuscules

41
00:03:08,010 --> 00:03:12,970
et une variable qui s’appelle
presque pareil, mais en majuscules,

42
00:03:13,690 --> 00:03:18,540
Mat Lab va considérer ces 2
variables comme différentes.

43
00:03:18,550 --> 00:03:25,940
Et en effet, si je fais l’une
moins l’autre, alors je vais voir

44
00:03:25,890 --> 00:03:30,410
qu’il y a une différence. Les
noms doivent commencer par une

45
00:03:30,410 --> 00:03:35,020
lettre, le nombre de caractères
doit être inférieur à 63, ce

46
00:03:35,020 --> 00:03:38,320
qui est quand même très grand,
et je dois faire attention si

47
00:03:38,320 --> 00:03:40,110
j’écris en minuscules
ou en majuscules.

48
00:03:40,450 --> 00:03:43,620
On dit que le programme
est case sensitive.

49
00:03:45,760 --> 00:03:49,800
Dans votre choix, faites attention
à ne pas utiliser le nom

50
00:03:49,800 --> 00:03:50,800
d’une variable déjà existante.

51
00:03:52,150 --> 00:03:55,110
Par exemple, il existe
la fonction sinus.

52
00:03:56,290 --> 00:04:03,830
On écrit sin de 3 fois Pi, Pi est
une variable qui existe déjà

53
00:04:03,830 --> 00:04:08,510
dans Octave, ça donne presque 0.

54
00:04:09,040 --> 00:04:12,610
Maintenant, je fais sin de 3,
ça donne un autre nombre.

55
00:04:13,290 --> 00:04:19,870
Par contre si par erreur, vous
définissez sin de 3 égale à 2,

56
00:04:20,130 --> 00:04:21,870
qu’est-ce qu’il se passe ?

57
00:04:21,850 --> 00:04:25,520
On va définir une nouvelle variable
différente de la fonction

58
00:04:26,050 --> 00:04:30,550
avec 3 entrées, parce qu’on a
mis le 3 entre parenthèses, et

59
00:04:30,930 --> 00:04:33,300
qui va être remplie avec un 0 et un 2.

60
00:04:34,210 --> 00:04:37,230
Et maintenant quand vous voulez
calculer sin de 3, vous retrouvez

61
00:04:37,420 --> 00:04:41,610
la variable que vous avez
définie vous-même.

62
00:04:41,610 --> 00:04:47,490
Si vous voulez retrouver l’ancienne,
il faut nettoyer la variable sin.

63
00:04:47,490 --> 00:04:53,710
Maintenant, si je fais sin de
3 avec les flèches, je trouve

64
00:04:53,770 --> 00:04:55,210
à nouveau la valeur de la fonction.

65
00:04:55,210 --> 00:04:59,800
Il faut faire aussi attention qu’il
y a des mots appelés reserved

66
00:04:59,910 --> 00:05:04,900
words, des mots réservés, qui
ne peuvent pas être utilisés.

67
00:05:05,330 --> 00:05:08,340
On le verra plus loin, mais ils
sont par exemple: for, end,

68
00:05:08,560 --> 00:05:10,790
fonction et bien d’autres.

69
00:05:12,050 --> 00:05:18,270
Je viens de parler de Pi, le
nombre Pi qui est très utilisé

70
00:05:18,270 --> 00:05:21,340
en mathématiques et si je veux
l’afficher, je peux taper Pi

71
00:05:21,190 --> 00:05:25,760
et j’obtiens 3,1416. Maintenant,
on sait bien que ce n’est pas

72
00:05:25,760 --> 00:05:29,890
la valeur de Pi qu’on
connaît tous les jours.

73
00:05:29,890 --> 00:05:34,030
On voudrait connaître
quelques chiffres de plus.

74
00:05:34,100 --> 00:05:38,340
Alors on peut demander à notre
 programme Octave ou Mat Lab d’afficher

75
00:05:41,080 --> 00:05:46,530
plusieurs chiffres. De toute
façon, on n’aura pas la valeur

76
00:05:46,550 --> 00:05:51,120
exacte de Pi, on aura une approximation,
mais c’est une bonne approximation.

77
00:05:52,590 --> 00:05:55,100
On peut encore changer le format.

78
00:05:56,010 --> 00:05:59,580
Par exemple, encore avoir beaucoup
de chiffres significatifs,

79
00:06:00,180 --> 00:06:10,070
mais en format scientifique. Alors
maintenant, j’ai 3,1415 fois

80
00:06:10,170 --> 00:06:12,300
10 élevé à 0 donc fois 1.

81
00:06:13,690 --> 00:06:21,360
Maintenant je peux aussi faire
Pi fois 100 et je vois que le

82
00:06:21,360 --> 00:06:26,270
seul changement que j’ai, c’est au
niveau de la puissance de 10 à la fin.

83
00:06:28,970 --> 00:06:32,850
Si vous voulez en savoir plus à
propos de format, il faut taper

84
00:06:32,850 --> 00:06:38,430
help format et il y a toute une
série d’aides qui vient s’afficher.

85
00:06:38,370 --> 00:06:42,500
Après, vous pouvez les
lire sur votre écran.

