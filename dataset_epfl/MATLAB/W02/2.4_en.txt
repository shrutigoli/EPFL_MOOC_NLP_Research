Let us now see what are the mathematical operations you can do with these matrices and these vectors.
So first, I clean my environment.
And then I set my new vectors.
So I take column vectors of size 3, semicolon so as not to display.
Now,I can immediately define another vector without having to press enter.
Semicolon, to avoid displaying vectors
U and V.
How to define scalar product?
We define the scalar product as a multiplication between matrices.
So if I just do U times V, there is a big problem. first we transpose U, then multiply by V.
And I get the scalar product between
U and V.
Note, if you transpose V, there is no fault, but you get a matrix of size 3 times 3.
Now I will take two matrices.
Two matrices: a size 2 times 3.
As I said, you can put the commas or spaces.
Then immediately, I also define matrix B which is a square matrix.
Now I can do the multiplication between
A and V.
A is a 2 times 3 matrix, V is a vector of size 3.
So I can do the multiplication between
A and V.
I get a size 2 vector, as in mathematics.
I can also try to multiply B times V.
But this time, there will be a mistake, because B has a size
2 times 2, so it can be multiplied by a vector of size
2, and not size 3, as here.
I can also do multiplication between matrices and vectors.
So I try A times B, so it is a matrix
2 times 2 times 2 times 3 matrix, is possible.
But if I try to do A times B, there is an error, because the sizes are not compatible.
If we are able to do mathematical operations as matrix times vector, why not try solving a problem type of AX = AB.
So I take a vector of size B 3.
I was wrong, it is a line vector and
I wanted a column vector.
I can get back what I typed with the arrows, and correct them.
So now I have a column vector and
I will not show it.
The matrix A, I take 3 times 3.
To solve a problem AX = AB the matrix A has to be square and inversible.
Therefore, we take the same matrix,
3 times 3 that is compatible with the vector B, that I have defined.
There you go.
And now I can calculate the inverse of A.
The inverse of A is also the 3 by3 matrix.
And, we can calculate it quite quickly.
So to calculate X such that AX = AB,
I can take X equal inverse of A times B.
And I get the X sought.
Using the inverse function is not very efficient especially if the matrix is â€‹â€‹very large.
So there are other ways to solve this problem, this system.
That is to say, I want A to divide B.
That equates to resolution of the problem
AZ = AB.
This I can write, resolution AZ = AB.
So small% that I put here makes it that from this symbol, everything else is treated as a comment.
And now I can see whether X and Z are the same.
So what is the best way, we can print them on the screen, or, put one next to the other and see whether they are the same.
Here, I see the two columns, the one represented by X and that represented by Z are exactly the same.
I could also simply take the difference between the two.
And see which s really tiny.
From the order of accuracy of the machine, 10 power minus 17.
Note, when you do A divide B, this is not the same as doing B divided by A.
We see there is an error, the sizes are not compatible.
It would be like multiplying B by the inverse of A.
And, as we saw earlier, we wanted to do the opposite.
We had, the inverse of A times B.
So again, in summary, we can write X equal inverse of A times B, which is not very performing.
Or equivalent or nearly equal, write
Z equals A that divides B.
