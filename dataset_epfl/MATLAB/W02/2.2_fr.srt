1
00:00:04,300 --> 00:00:06,900
Nous allons voir comment travailler
avec des vecteurs et des matrices.

2
00:00:06,990 --> 00:00:10,280
D’abord, on verra que les opérations
de somme et multiplication

3
00:00:10,360 --> 00:00:12,310
sont définies comme en mathématiques.

4
00:00:12,780 --> 00:00:16,170
De plus, il est possible de faire
des opérations élément par élément.

5
00:00:21,070 --> 00:00:23,310
Voyons d’abord les opérations
vectorielles de base.

6
00:00:23,950 --> 00:00:27,760
On peut définir des vecteurs,
par exemple colonnes.

7
00:00:28,700 --> 00:00:35,490
J’ai besoin du symbole égal pour
définir la variable et ensuite

8
00:00:35,490 --> 00:00:44,740
des crochets pour pouvoir rentrer
les valeurs de ce vecteur.

9
00:00:47,940 --> 00:00:52,820
Donc ensuite, je tape sur entrée,
le vecteur est défini et je

10
00:00:52,750 --> 00:00:57,880
peux en voir la forme. C’est un
vecteur 2, 4, 5 en colonnes.

11
00:00:58,290 --> 00:01:01,200
Je peux aussi définir
des vecteurs lignes.

12
00:01:04,170 --> 00:01:06,110
La syntaxe est très similaire.

13
00:01:06,510 --> 00:01:08,170
Je dois aussi utiliser les crochets.

14
00:01:07,760 --> 00:01:13,010
J’ai moins 2. Je mets une virgule
à la place du point-virgule,

15
00:01:13,120 --> 00:01:20,100
3,4 et je ferme les crochets.

16
00:01:25,490 --> 00:01:28,670
Sur mon clavier, il n’y
a pas de crochets.

17
00:01:29,070 --> 00:01:36,260
Ils sont ici sur le 5 et sur le 6.

18
00:01:37,430 --> 00:01:40,470
Donc maintenant peut-être qu’on
pourra les voir quand on les

19
00:01:40,460 --> 00:01:44,580
cherche sur le clavier. On peut aussi
définir une copie d’un vecteur.

20
00:01:45,170 --> 00:01:49,530
Par exemple, on peut faire V égale mon
vecteur lignes de tout à l’heure.

21
00:01:57,030 --> 00:02:04,820
Je peux voir la taille de ce vecteur
V qui est un vecteur 1 fois 3.

22
00:02:05,630 --> 00:02:08,490
Donc 1 ligne fois 3 colonnes.

23
00:02:09,470 --> 00:02:16,810
Alors que la taille du vecteur
colonnes est une 3 fois 1.

24
00:02:17,820 --> 00:02:22,370
Je peux aussi définir des
vecteurs par concaténation.

25
00:02:23,120 --> 00:02:28,500
Par exemple, je peux définir un
vecteur A qui est égal au vecteur

26
00:02:28,500 --> 00:02:36,230
qui va de moins 1 jusqu’à
4 et qui est distribué.

27
00:02:36,220 --> 00:02:41,980
Ça veut dire que la distance entre une
valeur et l’autre est toujours la même.

28
00:02:42,310 --> 00:02:43,460
Ici par défaut, c’est 1.

29
00:02:44,850 --> 00:02:49,970
Je peux aussi définir un vecteur
B qui est distribué, mais avec

30
00:02:49,970 --> 00:02:52,710
une distance de 2 entre les éléments.

31
00:02:52,830 --> 00:03:00,170
Donc par exemple, moins 0,5 avec
un pas de 2 pour arriver jusqu’à

32
00:03:00,280 --> 00:03:01,970
par exemple 3.

33
00:03:06,650 --> 00:03:10,600
On voit qu’il y a seulement
moins 0,5 et 1,5.

34
00:03:14,880 --> 00:03:22,060
Si je vais jusqu’à 5, la
dernière entrée va être 3,5.

35
00:03:22,060 --> 00:03:26,910
Pourquoi? Parce que le 5, c’est
la limite supérieure, mais

36
00:03:27,010 --> 00:03:36,660
pas toujours atteinte. Si j’écris
que B va de moins 0,5 à 3,5

37
00:03:36,660 --> 00:03:40,190
avec un pas de 2,
j’obtiens la même chose.

38
00:03:41,800 --> 00:03:45,540
A chaque fois, on a
redéfini la variable B.

39
00:03:46,860 --> 00:03:52,290
Quand je fais B égale, je vais
écraser la valeur qui existait

40
00:03:52,350 --> 00:03:56,330
déjà dans B, la dernière que j’ai
définie, c’est celle qui va

41
00:03:56,330 --> 00:03:57,040
rester en mémoire.

42
00:03:58,860 --> 00:04:03,370
Il y a une autre façon de définir
des vecteurs équidistribués,

43
00:04:03,380 --> 00:04:08,700
c’est avec l’In space,
 C égale à l’Inspace.

44
00:04:09,490 --> 00:04:13,180
Alors là je m’assure d’avoir
l’intervalle que je veux.

45
00:04:13,160 --> 00:04:20,220
Par exemple entre 2,1 et 4,2 et
je veux 4 éléments en tout.

46
00:04:21,800 --> 00:04:24,710
Alors ici je suis sûr que j’ai
4 éléments, le premier et le

47
00:04:24,710 --> 00:04:27,620
dernier sont donnés et ceux du milieu
sont calculés automatiquement.

48
00:04:29,670 --> 00:04:35,250
On peut manipuler les vecteurs
en faisant une concaténation,

49
00:04:35,250 --> 00:04:37,980
c’est-à-dire les mettre ensemble,
en extraire quelques-uns ou

50
00:04:38,250 --> 00:04:40,220
aussi transposer un vecteur.

51
00:04:41,320 --> 00:04:44,990
D’abord, nettoyons notre
environnement avec clear all.

52
00:04:46,300 --> 00:04:49,370
J’efface toutes les variables que
j’ai dans mon environnement.

53
00:04:49,850 --> 00:04:54,990
Maintenant, je définis une
nouvelle variable, par exemple A

54
00:04:57,140 --> 00:05:02,050
qui était égal à moins 1 jusqu’à 5.

55
00:05:04,200 --> 00:05:12,360
Maintenant, si je tape entrée
A va s’afficher à l’écran.

56
00:05:12,360 --> 00:05:17,150
Je n’ai pas envie d’à chaque fois
voir ce que je viens de taper

57
00:05:17,530 --> 00:05:21,760
alors je fais le point-virgule
comme ça la variable est définie,

58
00:05:21,970 --> 00:05:25,420
elle a bien les valeurs auxquelles
je m’attends, mais elle n’est

59
00:05:25,420 --> 00:05:26,680
pas affichée à nouveau à l’écran.

60
00:05:26,600 --> 00:05:40,680
Je définis un deuxième vecteur qui va
de 0,5 avec un pas de 1,4 jusqu’à 6.

61
00:05:46,170 --> 00:05:51,030
Et à nouveau, je n’ai pas
envie de voir le contenu.

62
00:05:50,740 --> 00:06:00,370
Et je veux mettre ensemble les vecteurs
A et B en un seul vecteur lignes.

63
00:06:00,280 --> 00:06:09,500
J’ai besoin à nouveau des crochets
et je mets A et B à la suite.

64
00:06:12,740 --> 00:06:18,920
J’ai un vecteur lignes composé
de 8 colonnes avec d’abord les

65
00:06:18,920 --> 00:06:20,700
entrées de A et ensuite, celles de B.

66
00:06:23,500 --> 00:06:28,550
Maintenant, je peux extraire
des valeurs de ce vecteur.

67
00:06:28,820 --> 00:06:34,020
Par exemple, je veux la troisième
valeur, alors je fais C de 3.

68
00:06:35,170 --> 00:06:40,020
Si je veux plusieurs valeurs d’un
seul coup, je peux les prendre

69
00:06:40,580 --> 00:06:43,560
et je peux même les mettre
dans un autre vecteur.

70
00:06:44,510 --> 00:06:50,970
Alors je peux avoir le vecteur X
qui est égal à certaines entrées

71
00:06:50,970 --> 00:06:58,960
de C, par exemple je veux
les entrées 2, 4 et 5.

72
00:06:58,960 --> 00:07:05,140
Je peux même prendre une autre
valeur, la première, donc ça

73
00:07:05,140 --> 00:07:10,250
ne va pas être dans le même ordre
et j’extraie ces index-là de C.

74
00:07:11,830 --> 00:07:15,700
Voilà mon nouveau vecteur, c’est
toujours un vecteur lignes,

75
00:07:16,210 --> 00:07:19,310
mais avec seulement
certaines entrées de C.

76
00:07:22,600 --> 00:07:33,290
Un vecteur colonnes peut être
transposé un vecteur ligne.

77
00:07:34,620 --> 00:07:44,120
Si je fais X avec ce symbole, c’est
un petit symbole qui ressemble

78
00:07:44,120 --> 00:07:48,240
à dérivée quand on parle de
fonction, mais ce n’est pas du tout

79
00:07:48,350 --> 00:07:51,270
la dérivée, c’est la transposée.

80
00:07:53,260 --> 00:07:55,420
Le vecteur lignes maintenant
est un vecteur colonnes.

81
00:07:57,650 --> 00:08:01,180
Voyons maintenant la somme et la
multiplication par un scalaire.

82
00:08:02,480 --> 00:08:08,640
Je nettoie à nouveau mon environnement
et je définis 2 vecteurs.

83
00:08:09,370 --> 00:08:12,460
Cette fois-ci, je prends des
vecteurs un peu plus petits, des

84
00:08:12,460 --> 00:08:16,510
vecteurs colonnes avec 3 entrées.

85
00:08:19,240 --> 00:08:22,450
Je sépare par un point virgule
parce que je le veux en colonnes.

86
00:08:22,430 --> 00:08:25,960
Il faut penser au point virgule
comme aller à la ligne.

87
00:08:29,140 --> 00:08:34,290
J’ai A et B en deuxième vecteur.

88
00:08:39,520 --> 00:08:44,440
Je définis de même taille parce
que je vais travailler avec

89
00:08:46,970 --> 00:08:52,290
A et B ensemble, en faire la somme
et du coup, ils doivent être

90
00:08:52,510 --> 00:09:00,740
de même taille. Si je fais C
égale à A plus B, j’obtiens un

91
00:09:00,960 --> 00:09:04,490
vecteur qui a la même taille
que A et B et dont les entrées

92
00:09:04,490 --> 00:09:09,420
sont la somme des entrées de A et B.

93
00:09:09,410 --> 00:09:13,860
Ici je multiplie par un scalaire
donc par un nombre, je vais

94
00:09:13,860 --> 00:09:20,990
prendre 3,2 fois le vecteur A.

95
00:09:23,090 --> 00:09:31,530
J’obtiens moins 9,6; 6,4; 3, 2, les
entrées de A multipliées par 3,2.

96
00:09:32,780 --> 00:09:36,220
Donc comme je le disais les
tailles des vecteurs doivent être

97
00:09:36,370 --> 00:09:38,360
les mêmes si on veut
en faire la somme.

98
00:09:39,010 --> 00:09:43,500
Si j’ai un vecteur qui est trop
long, par exemple, je prends

99
00:09:44,600 --> 00:09:53,200
le vecteur long qui est égal à
concaténation de A et B, ici

100
00:09:53,360 --> 00:09:57,920
je dois prendre A point virgule
B, je vais concaténer A et B

101
00:09:58,480 --> 00:10:04,240
sur une seule colonne. Et puis
je fais la somme entre A et ce

102
00:10:04,240 --> 00:10:11,290
nouveau vecteur, je vais obtenir
une erreur parce que les vecteurs

103
00:10:12,140 --> 00:10:14,820
ne sont pas compatibles,
n’ont pas à la même taille.

104
00:10:14,820 --> 00:10:21,260
Il y a un vecteur particulier,
c’est le vecteur nul.

105
00:10:21,570 --> 00:10:27,640
Je définis une nouvelle variable
vecteur nul qui est définie

106
00:10:27,640 --> 00:10:34,910
comme des 0 de taille 4,1.

107
00:10:35,540 --> 00:10:37,470
Qu’est-ce que ça veut dire ?

108
00:10:37,820 --> 00:10:44,040
J’ai un vecteur colonnes avec
4 entrées toutes égales à 0.

109
00:10:44,490 --> 00:10:50,150
Je peux aussi définir un vecteur
de 1, cette fois-ci, je vais

110
00:10:50,150 --> 00:10:52,020
le prendre en vecteur lignes.

111
00:10:52,500 --> 00:10:58,090
Donc je peux dire pointe 1,4 et
j’obtiens un vecteur lignes

112
00:11:01,400 --> 00:11:03,740
avec 4 entrées toutes égales à 1.

