1
00:00:04,160 --> 00:00:08,640
We will now see functions, not
mathematical function,

2
00:00:08,700 --> 00:00:11,560
but a function at the programming level.

3
00:00:12,200 --> 00:00:16,690
Coarsely, a function is constituted
by the input variables.

4
00:00:17,440 --> 00:00:20,310
It takes input variables, treats them,
we do

5
00:00:20,310 --> 00:00:24,240
a series of precise operations that
may call for other

6
00:00:24,240 --> 00:00:26,350
functions and after, we have an output.

7
00:00:26,830 --> 00:00:30,290
We have an input, the algorithm and
output.

8
00:00:30,490 --> 00:00:33,500
In this algorithm, we can do several
things, among others,

9
00:00:33,500 --> 00:00:34,980
call other functions.

10
00:00:35,490 --> 00:00:40,640
There are at least 4 kinds of possible
functions for you.

11
00:00:40,940 --> 00:00:43,680
There are built-in functions also
called buildings

12
00:00:43,680 --> 00:00:47,110
functions, functions defined by
the user that we'll

13
00:00:47,110 --> 00:00:51,650
put in M files, also called anonymous
functions

14
00:00:51,950 --> 00:00:54,140
lambda functions or inline functions.

15
00:00:54,690 --> 00:00:56,550
We will see these 4 cases.

16
00:00:57,330 --> 00:01:00,930
The integrated functions, most
mathematical functions

17
00:01:00,930 --> 00:01:02,130
are available directly known.

18
00:01:02,290 --> 00:01:05,600
Here you see in full.

19
00:01:05,600 --> 00:01:08,770
There are really a lot of functions
that are available.

20
00:01:09,740 --> 00:01:13,780
There are also functions that we've
already used as the plot,

21
00:01:13,800 --> 00:01:19,110
like the legend, as the title, those
were functions

22
00:01:19,410 --> 00:01:23,230
integrated in Matlab that are available
for different

23
00:01:23,230 --> 00:01:27,950
things: draw, write something on the
screen, etc.

24
00:01:27,950 --> 00:01:34,290
There was disp to display strings

25
00:01:34,290 --> 00:01:35,360
characters on the screen.

26
00:01:36,510 --> 00:01:38,670
Now I want to create a new function.

27
00:01:39,480 --> 00:01:44,990
When we create it, we can do it again
with the command

28
00:01:45,040 --> 00:01:48,180
edit, just as I do with a script.

29
00:01:48,650 --> 00:01:55,210
And my job, it's called function example,

30
00:01:55,210 --> 00:02:00,740
a very simple example and I'll tell the
function to create.

31
00:02:01,630 --> 00:02:05,470
Now I don't want to erase everything as

32
00:02:05,470 --> 00:02:08,990
with scripts, I'll just delete the part
that faces

33
00:02:08,990 --> 00:02:12,380
the license and I keep that structure.

34
00:02:12,820 --> 00:02:15,590
So this is the simple structure of
a function.

35
00:02:16,210 --> 00:02:20,620
This function is to tell when it starts
and then we will say

36
00:02:20,620 --> 00:02:23,720
also end when it ends.

37
00:02:23,720 --> 00:02:27,070
End function is only for Octave so
we won't

38
00:02:27,070 --> 00:02:30,530
use it, but we will use end, it works
very well.

39
00:02:30,530 --> 00:02:31,480
What I see here?

40
00:02:31,980 --> 00:02:33,840
I see the name of the function.

41
00:02:33,970 --> 00:02:37,890
This is very important that the file name

42
00:02:37,890 --> 00:02:39,250
and the name of the function is the same.

43
00:02:39,860 --> 00:02:42,450
In fact if you put here something else,
you will

44
00:02:42,450 --> 00:02:49,360
get remarks, warnings, by the software,
but you can

45
00:02:49,360 --> 00:02:51,720
not use the name that you enter here.

46
00:02:51,720 --> 00:02:57,310
In fact, we always call the function with
the file name.

47
00:02:58,160 --> 00:02:59,680
Here is the name of the function.

48
00:02:59,760 --> 00:03:01,970
Then here there is input 1 and input 2.

49
00:03:01,970 --> 00:03:05,420
You can put as many variables as desired

50
00:03:05,420 --> 00:03:07,790
as possible input parameters in
our function.

51
00:03:09,950 --> 00:03:21,380
I can have a matrix X and then
here I can

52
00:03:21,900 --> 00:03:27,180
want to do something with these matrices,
such as calculating

53
00:03:28,170 --> 00:03:33,050
AX equal AB. I say B is equal to A times
X.

54
00:03:34,670 --> 00:03:39,900
I save and then I run this function
directly

55
00:03:39,900 --> 00:03:42,320
in the command line or from another
script.

56
00:03:42,320 --> 00:03:46,520
At that time, I have to say
what is A, what is X.

57
00:03:46,920 --> 00:03:52,350
In truth, there is no need to specify
whether it is really

58
00:03:52,500 --> 00:03:57,010
vectors or matrices, it is done
automatically.

59
00:03:57,630 --> 00:04:00,770
I can also have multiple outputs.

60
00:04:02,120 --> 00:04:09,820
For example, I want the B standard,
I have to give

61
00:04:09,820 --> 00:04:17,750
a name for the variable and standard B
is equal to the standard B.

62
00:04:17,800 --> 00:04:22,040
At that time, I have 2 outputs.

63
00:04:22,450 --> 00:04:26,450
So I'll build a script that calls this
function.

64
00:04:28,490 --> 00:04:30,770
I call it call example.

65
00:04:32,770 --> 00:04:40,140
I erase everything. I must first define
my matrix A.

66
00:04:41,020 --> 00:04:44,800
My matrix A is 123456.

67
00:04:44,810 --> 00:04:57,310
After I define Z as the variable that
I will go to

68
00:04:57,310 --> 00:04:58,650
instead of X in my function.

69
00:04:59,890 --> 00:05:13,330
Z is 2 less 3 0.

70
00:05:17,270 --> 00:05:19,430
And then I'm going to call my function.

71
00:05:19,760 --> 00:05:23,110
It had 2 outputs, so I have to be careful,

72
00:05:23,360 --> 00:05:29,780
there is an output which is a vector
and an output which is

73
00:05:30,300 --> 00:05:32,080
a standard, for example N.

74
00:05:34,510 --> 00:05:38,370
And now I have to call with the
name of the function.

75
00:05:39,860 --> 00:05:44,550
It's called function example, without
the m, do not put the point m.

76
00:05:45,000 --> 00:05:46,220
Now I have to give the settings.

77
00:05:46,220 --> 00:05:50,110
You should not forget to give these
two parameters, so A and Z.

78
00:05:50,110 --> 00:05:56,580
I called them A and Z.

79
00:05:56,580 --> 00:05:59,680
Now I can even display V or N.

80
00:06:00,850 --> 00:06:01,700
I can rotate.

81
00:06:04,490 --> 00:06:06,980
There is an error, it can happen.

82
00:06:08,000 --> 00:06:10,360
"Standard Error" is not defined.

83
00:06:11,810 --> 00:06:15,350
How can I find my standard?

84
00:06:15,350 --> 00:06:20,730
If I do standard exists, can I do for
example standard Z?

85
00:06:20,730 --> 00:06:24,260
Yes. I can also do to help norm.

86
00:06:24,450 --> 00:06:25,750
So I go to my script.

87
00:06:26,600 --> 00:06:29,690
I change the script function.

88
00:06:32,430 --> 00:06:36,970
And now I can run my script.

89
00:06:37,470 --> 00:06:39,440
In my script, what's happening?

90
00:06:39,900 --> 00:06:44,710
I define A and Z, I pass them as
input parameters in

91
00:06:44,710 --> 00:06:52,220
function example. Now the local variable,

92
00:06:52,230 --> 00:06:56,710
A and this are not really the same.

93
00:06:57,750 --> 00:07:03,220
The variable here is copied in this
other variable A.

94
00:07:04,170 --> 00:07:09,890
Similarly, Z here is passed as parameter
and X which is defined

95
00:07:09,890 --> 00:07:13,330
here is equal to Z.

96
00:07:13,670 --> 00:07:17,620
Then, we do B is equal to A times X
and take the standard

97
00:07:17,650 --> 00:07:23,220
and restore it here.

98
00:07:23,440 --> 00:07:25,790
What we should pay attention to?

99
00:07:26,240 --> 00:07:30,970
The first thing I check is whether B
exists.

100
00:07:30,970 --> 00:07:35,600
I'll do B, B is not defined.

101
00:07:36,100 --> 00:07:40,560
In fact B, ceases to exist at the end of
the function.

102
00:07:41,510 --> 00:07:48,500
Its value is copied to the vector V,
the first parameter of

103
00:07:48,490 --> 00:07:55,120
the output function. If I look at same
standard B is not

104
00:07:55,120 --> 00:08:01,540
defined again because at the variable
B lives from here

105
00:08:01,590 --> 00:08:04,640
until the end of the function and
after it no longer exists.

106
00:08:05,100 --> 00:08:07,960
Its value is passed to the variable N.

107
00:08:09,130 --> 00:08:12,960
N is the standard of V.

108
00:08:16,520 --> 00:08:24,520
Similarly if you take A here, we copied it

109
00:08:24,520 --> 00:08:28,560
and now you say 'A, I want to change it,
I will

110
00:08:28,870 --> 00:08:32,680
make it simply equal to zero.

111
00:08:33,900 --> 00:08:39,490
And X also. "So it's done like this.

112
00:08:39,960 --> 00:08:45,710
I return to my script, I no longer need
to display N and V

113
00:08:45,710 --> 00:08:49,550
I think I know what it gives.

114
00:08:51,360 --> 00:08:57,080
Now I can verify if A changed value.

115
00:08:58,000 --> 00:09:03,870
No. A is always the 123456 matrix
even if at the end

116
00:09:03,870 --> 00:09:06,520
function, I changed the value.

117
00:09:07,080 --> 00:09:19,110
If I take my example, I run my script,
the X does not exist,

118
00:09:19,110 --> 00:09:22,800
what exists is the Z.

119
00:09:24,450 --> 00:09:29,710
Although X here I put zero outside
it has not changed.

120
00:09:30,350 --> 00:09:34,080
To summarize this user-defined feature,

121
00:09:34,080 --> 00:09:35,090
it is in a .m file.

122
00:09:35,320 --> 00:09:37,780
So function example .m.

123
00:09:37,780 --> 00:09:45,070
The first line must begin with the
keyword function it is essential.

124
00:09:45,170 --> 00:09:48,530
Then there is the list of outputs.

125
00:09:48,650 --> 00:09:55,690
The list of outputs is between
square brackets and each

126
00:09:55,690 --> 00:09:57,320
variable is separated by a comma.

127
00:09:57,460 --> 00:10:00,830
You can have 1, 2, 3, or even no output.

128
00:10:00,910 --> 00:10:04,410
If there is no output, you can simply
delete

129
00:10:04,410 --> 00:10:07,200
and even remove the equal.

130
00:10:08,770 --> 00:10:10,550
We here, we want outputs.

131
00:10:11,090 --> 00:10:14,720
Then there is the name of the
function to be precisely

132
00:10:14,720 --> 00:10:18,330
the same as the name of my files,
except extension .m

133
00:10:18,550 --> 00:10:21,390
and then the list of entries.

134
00:10:24,790 --> 00:10:32,320
We have inputs, run lines so our algorithm

135
00:10:32,380 --> 00:10:36,340
inside and then, outputs to be defined

136
00:10:36,390 --> 00:10:40,080
our algorithm. If you do not set B inside

137
00:10:40,930 --> 00:10:44,950
the body of the function, then you'll
get an error because

138
00:10:44,950 --> 00:10:46,760
the output variable is not defined.

139
00:10:46,770 --> 00:10:48,890
There is also another feature.

140
00:10:53,300 --> 00:10:55,380
I clean everything here.

141
00:10:56,020 --> 00:10:57,770
I go to my script.

142
00:10:58,910 --> 00:11:03,500
Now if you're not interested in the
second exit,

143
00:11:04,910 --> 00:11:08,330
simply call the function with a single
output.

144
00:11:08,460 --> 00:11:13,530
At that time, the second exit is
simply forgotten.

145
00:11:13,780 --> 00:11:18,000
Now here, the second output does
not exist and only.

146
00:11:18,000 --> 00:11:19,600
V is defined.

147
00:11:23,790 --> 00:11:25,330
Did he do something?

148
00:11:26,000 --> 00:11:31,270
Yes. Always make a comment to your
function.

149
00:11:31,770 --> 00:11:38,790
On the line following the definition
function, there must be

150
00:11:39,090 --> 00:11:45,230
help of the function. For example, I put
"this function is an example."

151
00:11:48,890 --> 00:11:54,390
And as a result, I will also say
that "A is the input parameter.

152
00:12:03,490 --> 00:12:10,310
"You need to describe" X as a vector ".

153
00:12:12,970 --> 00:12:18,560
And then you must describe what
the function does and normally

154
00:12:18,980 --> 00:12:24,750
we do it right away, "this
function calculates the matrix product

155
00:12:24,750 --> 00:12:28,540
of matrix of A and X ".

156
00:12:28,540 --> 00:12:33,480
After, we can say the outputs.

157
00:12:38,030 --> 00:13:00,670
There is B which is equal to AX and
standard B which is equal to standard B.

158
00:13:03,560 --> 00:13:07,960
I come here in my command line,
I type help function

159
00:13:08,340 --> 00:13:22,140
example and there is the description
of what I wrote:

160
00:13:22,140 --> 00:13:27,750
"This is an example.
This function calculates the matrix product

161
00:13:27,750 --> 00:13:35,150
A and X "with the input parameters, etc.

162
00:13:35,150 --> 00:13:42,890
Then, we must also put comments
on what you are doing.

163
00:13:42,950 --> 00:13:46,740
From the moment when there is a blank
line here, everything after

164
00:13:46,740 --> 00:13:49,630
does not fit more into account to help.

165
00:13:49,750 --> 00:13:54,700
So I put here in comment: "AX
calculation.

166
00:13:57,140 --> 00:14:00,990
standard B calculation

167
00:14:00,990 --> 00:14:04,920
Here they were unnecessary calculations.

168
00:14:09,360 --> 00:14:12,600
Now I have documented my function.

169
00:14:12,620 --> 00:14:18,880
I described the stages of my algorithm
and my function is complete.

