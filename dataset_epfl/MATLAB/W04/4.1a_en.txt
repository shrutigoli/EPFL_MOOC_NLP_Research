We will now see functions, not mathematical function, but a function at the programming level.
Coarsely, a function is constituted by the input variables.
It takes input variables, treats them, we do a series of precise operations that may call for other functions and after, we have an output.
We have an input, the algorithm and output.
In this algorithm, we can do several things, among others, call other functions.
There are at least 4 kinds of possible functions for you.
There are built-in functions also called buildings functions, functions defined by the user that we'll put in M files, also called anonymous functions lambda functions or inline functions.
We will see these 4 cases.
The integrated functions, most mathematical functions are available directly known.
Here you see in full.
There are really a lot of functions that are available.
There are also functions that we've already used as the plot, like the legend, as the title, those were functions integrated in Matlab that are available for different things: draw, write something on the screen, etc.
There was disp to display strings characters on the screen.
Now I want to create a new function.
When we create it, we can do it again with the command edit, just as I do with a script.
And my job, it's called function example, a very simple example and I'll tell the function to create.
Now I don't want to erase everything as with scripts, I'll just delete the part that faces the license and I keep that structure.
So this is the simple structure of a function.
This function is to tell when it starts and then we will say also end when it ends.
End function is only for Octave so we won't use it, but we will use end, it works very well.
What I see here?
I see the name of the function.
This is very important that the file name and the name of the function is the same.
In fact if you put here something else, you will get remarks, warnings, by the software, but you can not use the name that you enter here.
In fact, we always call the function with the file name.
Here is the name of the function.
Then here there is input 1 and input 2.
You can put as many variables as desired as possible input parameters in our function.
I can have a matrix X and then here I can want to do something with these matrices, such as calculating
AX equal AB. I say B is equal to A times
X.
I save and then I run this function directly in the command line or from another script.
At that time, I have to say what is A, what is X.
In truth, there is no need to specify whether it is really vectors or matrices, it is done automatically.
I can also have multiple outputs.
For example, I want the B standard,
I have to give a name for the variable and standard B is equal to the standard B.
At that time, I have 2 outputs.
So I'll build a script that calls this function.
I call it call example.
I erase everything. I must first define my matrix A.
My matrix A is 123456.
After I define Z as the variable that
I will go to instead of X in my function.
Z is 2 less 3 0.
And then I'm going to call my function.
It had 2 outputs, so I have to be careful, there is an output which is a vector and an output which is a standard, for example N.
And now I have to call with the name of the function.
It's called function example, without the m, do not put the point m.
Now I have to give the settings.
You should not forget to give these two parameters, so A and Z.
I called them A and Z.
Now I can even display V or N.
I can rotate.
There is an error, it can happen.
"Standard Error" is not defined.
How can I find my standard?
If I do standard exists, can I do for example standard Z?
Yes. I can also do to help norm.
So I go to my script.
I change the script function.
And now I can run my script.
In my script, what's happening?
I define A and Z, I pass them as input parameters in function example. Now the local variable,
A and this are not really the same.
The variable here is copied in this other variable A.
Similarly, Z here is passed as parameter and X which is defined here is equal to Z.
Then, we do B is equal to A times X and take the standard and restore it here.
What we should pay attention to?
The first thing I check is whether B exists.
I'll do B, B is not defined.
In fact B, ceases to exist at the end of the function.
Its value is copied to the vector V, the first parameter of the output function. If I look at same standard B is not defined again because at the variable
B lives from here until the end of the function and after it no longer exists.
Its value is passed to the variable N.
N is the standard of V.
Similarly if you take A here, we copied it and now you say 'A, I want to change it,
I will make it simply equal to zero.
And X also. "So it's done like this.
I return to my script, I no longer need to display N and V
I think I know what it gives.
Now I can verify if A changed value.
No. A is always the 123456 matrix even if at the end function, I changed the value.
If I take my example, I run my script, the X does not exist, what exists is the Z.
Although X here I put zero outside it has not changed.
To summarize this user-defined feature, it is in a .m file.
So function example .m.
The first line must begin with the keyword function it is essential.
Then there is the list of outputs.
The list of outputs is between square brackets and each variable is separated by a comma.
You can have 1, 2, 3, or even no output.
If there is no output, you can simply delete and even remove the equal.
We here, we want outputs.
Then there is the name of the function to be precisely the same as the name of my files, except extension .m and then the list of entries.
We have inputs, run lines so our algorithm inside and then, outputs to be defined our algorithm. If you do not set B inside the body of the function, then you'll get an error because the output variable is not defined.
There is also another feature.
I clean everything here.
I go to my script.
Now if you're not interested in the second exit, simply call the function with a single output.
At that time, the second exit is simply forgotten.
Now here, the second output does not exist and only.
V is defined.
Did he do something?
Yes. Always make a comment to your function.
On the line following the definition function, there must be help of the function. For example, I put
"this function is an example."
And as a result, I will also say that "A is the input parameter.
"You need to describe" X as a vector ".
And then you must describe what the function does and normally we do it right away, "this function calculates the matrix product of matrix of A and X ".
After, we can say the outputs.
There is B which is equal to AX and standard B which is equal to standard B.
I come here in my command line,
I type help function example and there is the description of what I wrote:
"This is an example.
This function calculates the matrix product
A and X "with the input parameters, etc.
Then, we must also put comments on what you are doing.
From the moment when there is a blank line here, everything after does not fit more into account to help.
So I put here in comment: "AX calculation. standard B calculation
Here they were unnecessary calculations.
Now I have documented my function.
I described the stages of my algorithm and my function is complete.
