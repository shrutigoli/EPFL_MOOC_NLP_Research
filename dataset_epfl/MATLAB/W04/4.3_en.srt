1
00:00:04,280 --> 00:00:06,970
When we implement an algorithm, i.e,
when writing

2
00:00:06,970 --> 00:00:10,860
the code that describes the algorithm,
there are parts that are repeated

3
00:00:10,860 --> 00:00:12,600
several times similarly.

4
00:00:12,900 --> 00:00:14,180
We define a loop.

5
00:00:14,760 --> 00:00:18,380
Loops can be written as, doing this
for an index

6
00:00:18,380 --> 00:00:20,270
that is from 5 to 10 for example.

7
00:00:20,750 --> 00:00:23,040
In this case we use a For loop "for".

8
00:00:23,660 --> 00:00:26,140
Another possibility is to continue
to execute a block

9
00:00:26,140 --> 00:00:28,550
of command, while a condition is true.

10
00:00:28,870 --> 00:00:31,060
This is called a While loop.

11
00:00:31,390 --> 00:00:34,820
So as long as something is true, do this.

12
00:00:35,560 --> 00:00:39,740
Imagine you're writing a function that
sums

13
00:00:39,790 --> 00:00:43,130
numbers between A and B.

14
00:00:43,130 --> 00:00:48,340
So, we will edit this function.

15
00:00:51,010 --> 00:00:54,090
As always, we must start with the
keyword function.

16
00:00:54,800 --> 00:00:56,610
What is it going to make this function?

17
00:00:56,830 --> 00:01:03,960
The sum. We will call this function,
"For Loop Test".

18
00:01:06,590 --> 00:01:15,670
And we will take as input the boundaries
A and B.

19
00:01:20,850 --> 00:01:23,370
For the test, sum the numbers between
A and B.

20
00:01:25,050 --> 00:01:31,230
We begin by defining the variable
sum equal to zero.

21
00:01:32,350 --> 00:01:40,340
And then we'll make a loop to I
going from A to B.

22
00:01:43,550 --> 00:01:50,930
And each time, we'll do the sum that is
equal to the sum

23
00:01:52,180 --> 00:01:57,030
plus the variable I.

24
00:01:59,580 --> 00:02:05,470
We end the block of the loop and
end the function.

25
00:02:06,620 --> 00:02:08,050
So we can do the test.

26
00:02:09,610 --> 00:02:12,230
For Loop Test, we must give two numbers.

27
00:02:12,230 --> 00:02:16,590
The sum of the numbers between 1 and 3
is 1 plus 2 plus 3 equals 6.

28
00:02:16,590 --> 00:02:25,890
And we can do the sum of the numbers
ranging from les than 10 to 10.

29
00:02:27,730 --> 00:02:31,250
And we get 0 since negative 10 plus 10
equals 0, negative 9

30
00:02:31,250 --> 00:02:32,910
plus 9 is 0, etc.

31
00:02:34,010 --> 00:02:38,800
Another possibility is to use while loops.

32
00:02:38,960 --> 00:02:45,290
Now, we write a function that will
continue to ask

33
00:02:45,430 --> 00:02:49,050
the user to enter a number until it has
guessed

34
00:02:49,700 --> 00:02:59,500
a selected number. So we call the
function with

35
00:02:59,500 --> 00:03:04,290
the parameter number and inside,
there is a loop.

36
00:03:05,460 --> 00:03:09,070
First, it must be able to ask the user
for a number.

37
00:03:09,870 --> 00:03:10,800
How do we do it ?

38
00:03:10,800 --> 00:03:13,940
We say Guess equals the Input.

39
00:03:13,940 --> 00:03:19,160
Input is a feature that allows us to
display a message,

40
00:03:20,790 --> 00:03:32,790
for example, guess the number.

41
00:03:33,430 --> 00:03:36,990
We ask the user to enter the number.

42
00:03:37,640 --> 00:03:39,900
So if I save like this.

43
00:03:44,800 --> 00:03:51,240
I can call While Test, and say I would
like the user

44
00:03:51,240 --> 00:03:59,170
to guess the number 5. So we enter
the number and it stops immediately.

45
00:03:59,590 --> 00:04:06,540
Already, we should say if the number
is the one asked,

46
00:04:14,400 --> 00:04:20,500
then we can write congratulation.

47
00:04:27,930 --> 00:04:34,480
When we call While Test 5, we renter 3,
you have nothing.

48
00:04:35,350 --> 00:04:39,280
And when we get 5, we are told
congratulation.

49
00:04:39,530 --> 00:04:43,850
But here we appealed to Input once.

50
00:04:43,880 --> 00:04:46,780
We made no loop.

51
00:04:48,170 --> 00:04:49,790
So what woul we like?

52
00:04:49,810 --> 00:04:56,760
We would like to say as long as what
we guess is different

53
00:04:58,430 --> 00:05:06,400
from the number, we ask again to
re-enter a number.

54
00:05:08,940 --> 00:05:13,530
And once that number is guessed,
we stop the loop.

55
00:05:18,430 --> 00:05:21,040
Now, if we do While Test 5.

56
00:05:21,040 --> 00:05:23,470
So we ask the lawmakers to re-enter
the number 5.

57
00:05:23,470 --> 00:05:28,400
We try, it gives 3, we try again,
this is not good, we try again.

58
00:05:28,560 --> 00:05:30,500
And at some point, we get 5.

59
00:05:30,500 --> 00:05:34,860
We can get out of the loop and have
the congratulation message.

60
00:05:35,910 --> 00:05:41,540
In the exercises, there will building of
loops that are

61
00:05:41,540 --> 00:05:42,880
more complicated than the latter.

62
00:05:42,980 --> 00:05:44,660
Here are the basics.

63
00:05:44,940 --> 00:05:50,360
Then we must enrich the block located
between While and End

64
00:05:50,360 --> 00:05:54,280
to perhaps help the user saying, no,

65
00:05:54,280 --> 00:05:55,900
it's bigger, no, it is smaller.

66
00:05:56,200 --> 00:06:03,150
So you need to put If, after requesting
the number to the user.

67
00:06:04,060 --> 00:06:05,750
And this is in the exercises.

68
00:06:06,690 --> 00:06:11,780
One possibility to interrupt a
For loop and While,

69
00:06:11,990 --> 00:06:14,650
is to use the keyword Break.

70
00:06:14,800 --> 00:06:23,520
So, say you want to let the user
only 5 trials.

71
00:06:24,830 --> 00:06:37,400
I'll set the maximum number of tests,
Max Number of Tries.

72
00:06:37,440 --> 00:06:42,190
That, I say, there are a maximum of 5.

73
00:06:44,320 --> 00:06:51,680
And now, we tried once, because
we have already asked

74
00:06:51,700 --> 00:07:00,600
the user once. In the loop,
we must increase

75
00:07:01,270 --> 00:07:08,550
the number of tests. We say
Tries equals Tries + 1.

76
00:07:11,800 --> 00:07:20,840
And check if the number of tests is
greater than

77
00:07:20,840 --> 00:07:29,010
the maximum number of defined tests,
so we'll go out.

78
00:07:31,250 --> 00:07:34,220
And for this, we use the keyword Break.

79
00:07:37,780 --> 00:07:40,220
The problem is that at the very end,
we need

80
00:07:40,220 --> 00:07:46,250
to test to see if we did get the number.

81
00:07:46,400 --> 00:08:06,520
So again,Guess has to be equal to
the requested number,

82
00:08:06,520 --> 00:08:08,460
then we display congratulation.

83
00:08:08,660 --> 00:08:15,700
Otherwise, we will display the sorry.

84
00:08:19,390 --> 00:08:22,690
And we can finish If.

85
00:08:24,370 --> 00:08:28,590
So we used several features that we studied.

86
00:08:30,780 --> 00:08:37,420
Now, if we test our function, we want
to guess the number 6.

87
00:08:38,430 --> 00:08:42,440
Then, we try once, twice, three times,
four times, five times.

88
00:08:44,170 --> 00:08:48,030
And it shows us congratulation,
because I have defined 6

89
00:08:47,990 --> 00:08:48,780
the last.

90
00:08:53,140 --> 00:08:56,460
Now I can reduce the number of tests.

91
00:08:57,400 --> 00:09:07,790
We can also see with just two tests.

92
00:09:08,360 --> 00:09:10,150
And ask to guess the number 10.

93
00:09:10,070 --> 00:09:15,210
So I take for example 3, 4.

94
00:09:15,310 --> 00:09:20,590
And there it stops, So it asked thrice
and then it stopped.

95
00:09:20,590 --> 00:09:28,390
Why three? Because first, it asked once

96
00:09:28,390 --> 00:09:32,950
outside of the While loop, and twice
within the While loop.

97
00:09:34,010 --> 00:09:38,400
So if we really want to have two tests,
then we must

98
00:09:38,400 --> 00:09:42,840
change and say that Max number of
Tries is 1.

99
00:09:43,920 --> 00:09:49,850
And in this case, there will be only
two tests.

100
00:09:52,290 --> 00:09:56,160
Once exercised these features,
you will be able

101
00:09:56,160 --> 00:10:00,020
to build a program.
The next chapter is the construction

102
00:10:00,020 --> 00:10:02,870
of a program where you will use
several functions,

103
00:10:02,870 --> 00:10:05,560
and inside the functions, there will
be loops, there will

104
00:10:05,560 --> 00:10:08,350
be conditions, and also calculations to
do.

