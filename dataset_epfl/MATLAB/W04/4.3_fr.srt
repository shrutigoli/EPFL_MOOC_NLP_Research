1
00:00:04,280 --> 00:00:06,970
Quand on implémente un algorithme,
c'est-à-dire quand on écrit

2
00:00:06,970 --> 00:00:10,860
le code qui décrit l'algorithme,
il y a des parties qui se répètent

3
00:00:10,860 --> 00:00:12,600
plusieurs fois de façon similaire.

4
00:00:12,900 --> 00:00:14,180
On définit alors une boucle.

5
00:00:14,760 --> 00:00:18,380
Les boucles peuvent s'écrire sous
forme, fait ceci pour un index

6
00:00:18,380 --> 00:00:20,270
qui va de 5 à 10 par exemple.

7
00:00:20,750 --> 00:00:23,040
On utilise dans ce cas
une boucle For, "pour".

8
00:00:23,660 --> 00:00:26,140
Une autre possibilité est de
continuer d'exécuter un bloc 

9
00:00:26,140 --> 00:00:28,550
de commande, tant qu'une
condition est vraie.

10
00:00:28,870 --> 00:00:31,060
C'est ce qu'on appelle
une boucle While.

11
00:00:31,390 --> 00:00:34,820
Donc, tant que quelque
chose est vrai, fais ceci.

12
00:00:35,560 --> 00:00:39,740
Imaginons qu'on veuille écrire
une fonction qui fait la somme

13
00:00:39,790 --> 00:00:43,130
de nombres entre A et B.

14
00:00:43,130 --> 00:00:48,340
Alors, on va éditer cette fonction.

15
00:00:51,010 --> 00:00:54,090
Comme toujours, il faut démarrer
avec le mot-clé fonction.

16
00:00:54,800 --> 00:00:56,610
Qu'est-ce qu'elle va
rendre cette fonction?

17
00:00:56,830 --> 00:01:03,960
La somme. On va appeler cette fonction,
donc on a dit "For Loop Test".

18
00:01:06,590 --> 00:01:15,670
Et on va prendre comme
entrée les limites A et B.

19
00:01:20,850 --> 00:01:23,370
Pour le test, fait la somme
des nombres entre A et B.

20
00:01:25,050 --> 00:01:31,230
Il faut commencer à définir la
variable somme égale à zéro.

21
00:01:32,350 --> 00:01:40,340
Et ensuite, on va faire une boucle
pour I qui va de A jusqu'à B.

22
00:01:43,550 --> 00:01:50,930
Et à chaque fois, on va faire la
somme qui est égale à somme

23
00:01:52,180 --> 00:01:57,030
plus cette variable I.

24
00:01:59,580 --> 00:02:05,470
On termine le bloc de la boucle
et on termine la fonction.

25
00:02:06,620 --> 00:02:08,050
Alors, on peut faire le test.

26
00:02:09,610 --> 00:02:12,230
For Loop Test, on doit
donner deux nombres.

27
00:02:12,230 --> 00:02:16,590
La somme des nombres entre 1 et 3,
c'est 1 plus 2 plus 3 est égal à 6.

28
00:02:16,590 --> 00:02:25,890
Et on peut faire la somme des
nombres qui vont de moins 10 à 10.

29
00:02:27,730 --> 00:02:31,250
Et on obtient 0, puisque moins
10 plus 10 égal à 0, moins 9

30
00:02:31,250 --> 00:02:32,910
plus 9 égal à 0, etc.

31
00:02:34,010 --> 00:02:38,800
Une autre possibilité, c'est
d'utiliser les boucles While.

32
00:02:38,960 --> 00:02:45,290
Maintenant, on écrit une fonction
qui va continuer à demander

33
00:02:45,430 --> 00:02:49,050
à l'utilisateur de rentrer un
nombre tant qu'il n'a pas deviné

34
00:02:49,700 --> 00:02:59,500
un nombre sélectionné. Donc, on
appelle la fonction avec

35
00:02:59,500 --> 00:03:04,290
le paramètre number et à l'intérieur,
on fait une boucle.

36
00:03:05,460 --> 00:03:09,070
D'abord, il faut être capable de
demander à l'utilisateur un nombre.

37
00:03:09,870 --> 00:03:10,800
Comment fait-on ça ?

38
00:03:10,800 --> 00:03:13,940
On dit Guess est égal à Input.

39
00:03:13,940 --> 00:03:19,160
Input c'est une fonction qui nous
permet d'afficher un message,

40
00:03:20,790 --> 00:03:32,790
par exemple deviner le nombre.

41
00:03:33,430 --> 00:03:36,990
On demande à l'utilisateur
de rentrer ce nombre.

42
00:03:37,640 --> 00:03:39,900
Alors, si je sauvegarde comme ça.

43
00:03:44,800 --> 00:03:51,240
Je peux appeler While Test, et se
dire j'aimerais que l'utilisateur

44
00:03:51,240 --> 00:03:59,170
devine le nombre 5. Alors, on rentre le
nombre et ça s'arrête tout de suite.

45
00:03:59,590 --> 00:04:06,540
Déjà, il faudrait dire si le nombre
est celui qu'on a demandé,

46
00:04:14,400 --> 00:04:20,500
alors on peut écrire congratulation.

47
00:04:27,930 --> 00:04:34,480
Quand on appelle While Test 5,
on rentre 3, on n’a rien.

48
00:04:35,350 --> 00:04:39,280
Et quand on rentre 5, on
nous dit congratulation.

49
00:04:39,530 --> 00:04:43,850
Mais ici, on a fait appel
à Input une seule fois.

50
00:04:43,880 --> 00:04:46,780
On n’a fait aucune boucle.

51
00:04:48,170 --> 00:04:49,790
Alors qu'est-ce qu'on aimerait ?

52
00:04:49,810 --> 00:04:56,760
On aimerait plutôt dire que tant
que ce qu'on devine est différent

53
00:04:58,430 --> 00:05:06,400
du nombre, on va redemander
de rentrer un nombre.

54
00:05:08,940 --> 00:05:13,530
Et une fois que le nombre est
deviné, on arrête la boucle.

55
00:05:18,430 --> 00:05:21,040
Maintenant, si on fait While Test 5.

56
00:05:21,040 --> 00:05:23,470
Donc, on demande aux législateurs
de rentrer le nombre 5.

57
00:05:23,470 --> 00:05:28,400
On essaie, ça donne 3, on réessaie,
ce n'est pas bon, on réessaie.

58
00:05:28,560 --> 00:05:30,500
Et à un moment donné, on tombe sur 5.

59
00:05:30,500 --> 00:05:34,860
On peut sortir de la boucle et
avoir le message congratulation.

60
00:05:35,910 --> 00:05:41,540
Dans les exercices, il y aura à
construire des boucles qui sont

61
00:05:41,540 --> 00:05:42,880
plus compliquées que celles-ci.

62
00:05:42,980 --> 00:05:44,660
Ici, c'est vraiment les bases.

63
00:05:44,940 --> 00:05:50,360
Après, on doit enrichir le bloc
qui se trouve entre While et End

64
00:05:50,360 --> 00:05:54,280
pour peut-être aider l'utilisateur 
en disant, non,

65
00:05:54,280 --> 00:05:55,900
c'est plus grand, non, c'est plus petit.

66
00:05:56,200 --> 00:06:03,150
Alors, il faudra mettre les If, après
avoir demandé le nombre à l'utilisateur.

67
00:06:04,060 --> 00:06:05,750
Et ceci est dans les exercices.

68
00:06:06,690 --> 00:06:11,780
Une possibilité d'interrompre
une boucle For et aussi While,

69
00:06:11,990 --> 00:06:14,650
c'est d'utiliser le mot-clé Break.

70
00:06:14,800 --> 00:06:23,520
Alors, imaginons que vous voulez laisser
à l'utilisateur seulement 5 essais.

71
00:06:24,830 --> 00:06:37,400
Je vais définir le nombre maximum
d'essais, Max Number of Tries.

72
00:06:37,440 --> 00:06:42,190
Ça, je vais dire, il
y en a au maximum 5.

73
00:06:44,320 --> 00:06:51,680
Et maintenant, on a essayé une
fois, parce qu'on a déjà demandé

74
00:06:51,700 --> 00:07:00,600
une fois à l'utilisateur. Dans
la boucle, on doit incrémenter

75
00:07:01,270 --> 00:07:08,550
le nombre d'essais. Il faut
dire Tries égal à Tries + 1.

76
00:07:11,800 --> 00:07:20,840
Et vérifier que si le nombre
d'essais est plus grand que

77
00:07:20,840 --> 00:07:29,010
le nombre maximum d'essais
défini, alors on va sortir.

78
00:07:31,250 --> 00:07:34,220
Et pour cela, on utilise
le mot-clé Break.

79
00:07:37,780 --> 00:07:40,220
Problème, c'est que maintenant à
la fin, tout à la fin, il faut

80
00:07:40,220 --> 00:07:46,250
aussi faire un test pour voir si on a
vraiment réussi à deviner le nombre.

81
00:07:46,400 --> 00:08:06,520
Donc là encore, il faut dire si
Guess est égal au nombre demandé,

82
00:08:06,520 --> 00:08:08,460
alors on affiche congratulation.

83
00:08:08,660 --> 00:08:15,700
Autrement, on va afficher le sorry.

84
00:08:19,390 --> 00:08:22,690
Et on peut terminer le If.

85
00:08:24,370 --> 00:08:28,590
Donc, on a utilisé plusieurs
fonctionnalités qu'on a étudiées.

86
00:08:30,780 --> 00:08:37,420
Maintenant, si on teste notre fonction,
on veut faire deviner le nombre 6.

87
00:08:38,430 --> 00:08:42,440
Alors, on essaie une fois, deux fois,
trois fois, quatre fois, cinq fois.

88
00:08:44,170 --> 00:08:48,030
Et il nous dit congratulation,
parce que j'ai défini le 6

89
00:08:47,990 --> 00:08:48,780
la toute dernière fois.

90
00:08:53,140 --> 00:08:56,460
Maintenant, je peux diminuer
le nombre d'essais.

91
00:08:57,400 --> 00:09:07,790
On peut aussi voir avec juste
deux essais au maximum.

92
00:09:08,360 --> 00:09:10,150
Et je demande de deviner le nombre 10.

93
00:09:10,070 --> 00:09:15,210
Alors, je prends par exemple 3, 4.

94
00:09:15,310 --> 00:09:20,590
Et là, il s'arrête, Donc, il a demandé
trois fois et ensuite il s'est arrêté.

95
00:09:20,590 --> 00:09:28,390
Pourquoi trois? Parce que d'abord,
il a demandé une fois

96
00:09:28,390 --> 00:09:32,950
à l'extérieur de la boucle While, et deux
fois à l'intérieur de la boucle While.

97
00:09:34,010 --> 00:09:38,400
Donc, si on veut vraiment avoir
que deux essais, alors il faut

98
00:09:38,400 --> 00:09:42,840
changer et dire que le Max
Num Tries est égal à 1.

99
00:09:43,920 --> 00:09:49,850
Et dans ce cas, on aura
seulement deux essais.

100
00:09:52,290 --> 00:09:56,160
Une fois exercées ces fonctionnalités,
vous serez à même 

101
00:09:56,160 --> 00:10:00,020
de construire un programme. Le prochain
chapitre, c'est la construction

102
00:10:00,020 --> 00:10:02,870
d'un programme où vous allez
utiliser plusieurs fonctions,

103
00:10:02,870 --> 00:10:05,560
et à l'intérieur des fonctions, il
y aura des boucles, il y aura

104
00:10:05,560 --> 00:10:08,350
des conditions, et aussi
des calculs à faire.

