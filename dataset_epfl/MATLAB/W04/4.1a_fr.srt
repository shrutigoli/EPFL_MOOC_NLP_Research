1
00:00:04,160 --> 00:00:08,640
On va voir maintenant les fonctions,
pas une fonction mathématique,

2
00:00:08,700 --> 00:00:11,560
mais une fonction au niveau
de la programmation.

3
00:00:12,200 --> 00:00:16,690
De façon grossière, une fonction est
constituée par des variables d'entrée.

4
00:00:17,440 --> 00:00:20,310
On prend des variables d'entrée,
on les traite, on fait

5
00:00:20,310 --> 00:00:24,240
une suite précise d'opérations qui
peuvent même faire appel à d'autres

6
00:00:24,240 --> 00:00:26,350
fonctions et après, on a une sortie.

7
00:00:26,830 --> 00:00:30,290
On a l'entrée, l'algorithme
et la sortie.

8
00:00:30,490 --> 00:00:33,500
Dans cet algorithme, on peut faire
plusieurs choses entre autres,

9
00:00:33,500 --> 00:00:34,980
appeler d'autres fonctions.

10
00:00:35,490 --> 00:00:40,640
Il y a au moins 4 sortes de
fonctions possibles pour vous.

11
00:00:40,940 --> 00:00:43,680
Il y a les fonctions intégrées
appelées aussi des buildings

12
00:00:43,680 --> 00:00:47,110
functions, des fonctions définies
par l'utilisateur qu'on va

13
00:00:47,110 --> 00:00:51,650
mettre dans des fichiers M, des
fonctions anonymes aussi appelées

14
00:00:51,950 --> 00:00:54,140
des fonctions lambda ou
des fonctions in line.

15
00:00:54,690 --> 00:00:56,550
Nous allons traiter ces 4 cas.

16
00:00:57,330 --> 00:01:00,930
Les fonctions intégrées, la plupart
des fonctions mathématiques

17
00:01:00,930 --> 00:01:02,130
connues sont disponibles directement.

18
00:01:02,290 --> 00:01:05,600
Ici, vous en voyez plein.

19
00:01:05,600 --> 00:01:08,770
Il y a vraiment beaucoup de
fonctions qui sont à disposition.

20
00:01:09,740 --> 00:01:13,780
Il y a aussi des fonctions qu'on
a déjà utilisées comme le plot,

21
00:01:13,800 --> 00:01:19,110
comme le legend, comme le title,
celles-là étaient des fonctions

22
00:01:19,410 --> 00:01:23,230
intégrées dans Matlab qui sont
disponibles pour faire différentes

23
00:01:23,230 --> 00:01:27,950
choses: dessiner, écrire
quelque chose à l'écran, etc.

24
00:01:27,950 --> 00:01:34,290
Il y avait aussi par exemple disp
pour juste afficher des chaînes

25
00:01:34,290 --> 00:01:35,360
de caractères à l'écran.

26
00:01:36,510 --> 00:01:38,670
Maintenant, je veux créer
une nouvelle fonction.

27
00:01:39,480 --> 00:01:44,990
Quand on va la créer, on peut
faire à nouveau avec la commande

28
00:01:45,040 --> 00:01:48,180
edit, un peu comme je le
fais avec un script.

29
00:01:48,650 --> 00:01:55,210
Et ma fonction, ça s'appelle par
exemple function exemple,

30
00:01:55,210 --> 00:02:00,740
une fonction exemple vraiment très
simple et je vais dire de créer.

31
00:02:01,630 --> 00:02:05,470
Maintenant je ne vais pas effacer
vraiment tout comme avec

32
00:02:05,470 --> 00:02:08,990
les scripts, je vais effacer 
seulement la partie qui regarde

33
00:02:08,990 --> 00:02:12,380
la licence et je garde cette structure.

34
00:02:12,820 --> 00:02:15,590
Donc ça, c'est la structure
très simple d'une fonction.

35
00:02:16,210 --> 00:02:20,620
C'est fonction pour dire quand
elle commence et puis on va dire

36
00:02:20,620 --> 00:02:23,720
aussi end quand elle se termine.

37
00:02:23,720 --> 00:02:27,070
End function, c'est seulement
pour Octave alors on ne va pas

38
00:02:27,070 --> 00:02:30,530
l'utiliser, on utilise plutôt
end, ça marche très bien aussi.

39
00:02:30,530 --> 00:02:31,480
Qu'est-ce que je vois ici ?

40
00:02:31,980 --> 00:02:33,840
Je vois le nom de la fonction.

41
00:02:33,970 --> 00:02:37,890
Ça, c'est vraiment très important
que le nom du fichier

42
00:02:37,890 --> 00:02:39,250
et le nom de la fonction soit le même.

43
00:02:39,860 --> 00:02:42,450
En fait si vous mettez ici quelque
chose d'autre, vous aurez

44
00:02:42,450 --> 00:02:49,360
des remarques, des warnings, par le
logiciel, mais vous ne pourrez

45
00:02:49,360 --> 00:02:51,720
pas utiliser le nom
que vous écrivez ici.

46
00:02:51,720 --> 00:02:57,310
En fait, on va toujours appeler la
fonction avec le nom du fichier.

47
00:02:58,160 --> 00:02:59,680
Ici, c'est le nom de la fonction.

48
00:02:59,760 --> 00:03:01,970
Ensuite ici, il y a
input 1 et input 2.

49
00:03:01,970 --> 00:03:05,420
En fait, on peut mettre autant
de variables qu'on le veut

50
00:03:05,420 --> 00:03:07,790
en tant que paramètres d'entrées
possibles dans notre fonction.

51
00:03:09,950 --> 00:03:21,380
Je peux avoir par exemple une
matrice X et ensuite ici, je peux

52
00:03:21,900 --> 00:03:27,180
vouloir faire quelque chose avec
ces matrices, par exemple calculer

53
00:03:28,170 --> 00:03:33,050
AX égale AB. Je vais dire
B est égal à A fois X.

54
00:03:34,670 --> 00:03:39,900
Je sauvegarde et après, je peux
appeler cette fonction directement

55
00:03:39,900 --> 00:03:42,320
dans la ligne de commande
ou par un autre script.

56
00:03:42,320 --> 00:03:46,520
À ce moment-là, je dois dire
ce qu'est A, ce qu'est X.

57
00:03:46,920 --> 00:03:52,350
En vérité, il n'y a pas besoin
de spécifier si c'est vraiment

58
00:03:52,500 --> 00:03:57,010
des vecteurs ou des matrices,
ça se fait automatiquement.

59
00:03:57,630 --> 00:04:00,770
Je peux aussi avoir plusieurs sorties.

60
00:04:02,120 --> 00:04:09,820
Par exemple, je peux vouloir la
norme de B, je dois donner

61
00:04:09,820 --> 00:04:17,750
un  nom à cette variable et norme
B est égale à la norme de B.

62
00:04:17,800 --> 00:04:22,040
À ce moment-là, j'ai 2 sorties.

63
00:04:22,450 --> 00:04:26,450
Alors je vais construire un script
qui appelle cette fonction.

64
00:04:28,490 --> 00:04:30,770
Je l'appelle call exemple.

65
00:04:32,770 --> 00:04:40,140
J'efface tout. Je dois définir
d'abord ma matrice A.

66
00:04:41,020 --> 00:04:44,800
Ma matrice A, c'est 123456.

67
00:04:44,810 --> 00:04:57,310
Après, je définis Z comme la
variable que je vais passer à

68
00:04:57,310 --> 00:04:58,650
la place de X dans ma fonction.

69
00:04:59,890 --> 00:05:13,330
Z est égal à 2 moins 3 0.

70
00:05:17,270 --> 00:05:19,430
Et ensuite, je vais faire
appel à ma fonction.

71
00:05:19,760 --> 00:05:23,110
Ma fonction avait 2 sorties, donc
il faut que je fasse attention,

72
00:05:23,360 --> 00:05:29,780
il y a une sortie qui est un
vecteur et une sortie qui est

73
00:05:30,300 --> 00:05:32,080
une norme, par exemple N.

74
00:05:34,510 --> 00:05:38,370
Et maintenant, je dois appeler
avec le nom de la fonction.

75
00:05:39,860 --> 00:05:44,550
Ça s'appelle function exemple, sans le
m, il ne faut pas mettre le point m.

76
00:05:45,000 --> 00:05:46,220
Maintenant, je dois
donner les paramètres.

77
00:05:46,220 --> 00:05:50,110
Il ne faut vraiment pas oublier de
donner ces 2 paramètres, donc A et Z.

78
00:05:50,110 --> 00:05:56,580
Je les ai appelés A et Z.

79
00:05:56,580 --> 00:05:59,680
Maintenant je peux même
afficher V ou afficher N.

80
00:06:00,850 --> 00:06:01,700
Je peux faire tourner.

81
00:06:04,490 --> 00:06:06,980
Il y a une erreur, ça peut arriver.

82
00:06:08,000 --> 00:06:10,360
"Erreur norme de", 
ce n'est pas défini.

83
00:06:11,810 --> 00:06:15,350
Comment je peux découvrir ma norme?

84
00:06:15,350 --> 00:06:20,730
Si je fais norme exists, est-ce que je
peux faire par exemple norme de Z?

85
00:06:20,730 --> 00:06:24,260
Oui. Je peux faire
aussi faire help norm.

86
00:06:24,450 --> 00:06:25,750
Alors je vais dans mon script.

87
00:06:26,600 --> 00:06:29,690
Je modifie par le script la fonction.

88
00:06:32,430 --> 00:06:36,970
Et maintenant, je peux
faire tourner mon script.

89
00:06:37,470 --> 00:06:39,440
Dans mon script, qu'est-ce
qu'il se passe?

90
00:06:39,900 --> 00:06:44,710
Je définis A et Z, je les passe
comme paramètres d'entrées en.

91
00:06:44,710 --> 00:06:52,220
function exemple. La variable
maintenant locale, cette variable

92
00:06:52,230 --> 00:06:56,710
A et celle-ci en vérité ne sont
pas exactement les mêmes.

93
00:06:57,750 --> 00:07:03,220
La variable qui arrive ici est copiée
dans cette autre variable A.

94
00:07:04,170 --> 00:07:09,890
De même, Z ici est passé comme
paramètre et le X qui est défini

95
00:07:09,890 --> 00:07:13,330
là est défini est égal à ce Z.

96
00:07:13,670 --> 00:07:17,620
Ensuite, on fait B égale à A
fois X et on prend la norme 

97
00:07:17,650 --> 00:07:23,220
et on le restitue ici.

98
00:07:23,440 --> 00:07:25,790
À quoi on doit faire attention?

99
00:07:26,240 --> 00:07:30,970
La première chose, je
regarde si B existe.

100
00:07:30,970 --> 00:07:35,600
Je vais faire B, B n'est pas défini.

101
00:07:36,100 --> 00:07:40,560
En fait B, termine d'exister
à la fin de la fonction.

102
00:07:41,510 --> 00:07:48,500
Sa valeur est copiée à ce vecteur
V, le premier paramètre de

103
00:07:48,490 --> 00:07:55,120
sortie de la fonction. Si je
regarde même norme B n'est pas

104
00:07:55,120 --> 00:08:01,540
défini parce qu'à nouveau la variable
norme B vit à partir d'ici

105
00:08:01,590 --> 00:08:04,640
jusqu'à la fin de la fonction
et après, elle n'existe plus.

106
00:08:05,100 --> 00:08:07,960
Sa valeur est passée à la variable N.

107
00:08:09,130 --> 00:08:12,960
N vaut la norme de V.

108
00:08:16,520 --> 00:08:24,520
De même que si vous prenez A qui
est entré ici, on l'a copié

109
00:08:24,520 --> 00:08:28,560
et maintenant vous vous dites "A,
je veux le modifier, je vais

110
00:08:28,870 --> 00:08:32,680
le mettre égal à zéro tout court.

111
00:08:33,900 --> 00:08:39,490
Et puis X aussi. " Alors
ça se fait comme ça.

112
00:08:39,960 --> 00:08:45,710
Je reviens à mon script, je n'ai
plus besoin d'afficher N et V

113
00:08:45,710 --> 00:08:49,550
je pense savoir ce que ça donne.

114
00:08:51,360 --> 00:08:57,080
Maintenant, je peux vérifier
si A a changé de valeur.

115
00:08:58,000 --> 00:09:03,870
Non. A vaut toujours cette matrice
123456 même si à la fin

116
00:09:03,870 --> 00:09:06,520
de la fonction, j'ai changé la valeur.

117
00:09:07,080 --> 00:09:19,110
Si je fais appel à mon exemple,
j'exécute mon script, le X n'existe pas,

118
00:09:19,110 --> 00:09:22,800
ce qui existe, c'est le Z.

119
00:09:24,450 --> 00:09:29,710
Même si X ici je l'ai mis égal à zéro,
à l'extérieur il n'a pas changé.

120
00:09:30,350 --> 00:09:34,080
Pour résumer cette fonction
définie par l'utilisateur,

121
00:09:34,080 --> 00:09:35,090
elle est dans un fichier .m.

122
00:09:35,320 --> 00:09:37,780
Donc function exemple .m.

123
00:09:37,780 --> 00:09:45,070
La première ligne doit commencer par
le mot-clé function, c'est essentiel.

124
00:09:45,170 --> 00:09:48,530
Ensuite, il y a la liste des sorties.

125
00:09:48,650 --> 00:09:55,690
La liste des sorties est entre des
parenthèses carrées et chaque

126
00:09:55,690 --> 00:09:57,320
variable est séparée par une virgule.

127
00:09:57,460 --> 00:10:00,830
On peut avoir 1, 2, 3 ou
même aucune sortie.

128
00:10:00,910 --> 00:10:04,410
S'il n'y a aucune sortie, vous
pouvez simplement effacer

129
00:10:04,410 --> 00:10:07,200
le tout et même enlever le égal.

130
00:10:08,770 --> 00:10:10,550
Nous ici, on veut des sorties.

131
00:10:11,090 --> 00:10:14,720
Ensuite, on a le nom de la fonction
qui doit être exactement

132
00:10:14,720 --> 00:10:18,330
le même que le nom de mes
fichiers, à part extension .m

133
00:10:18,550 --> 00:10:21,390
et ensuite la liste des entrées.

134
00:10:24,790 --> 00:10:32,320
Nous avons les entrées, les lignes
à exécuter donc notre algorithme

135
00:10:32,380 --> 00:10:36,340
à l'intérieur et ensuite, les
sorties qui doivent être définies

136
00:10:36,390 --> 00:10:40,080
dans notre algorithme. Si vous ne
définissez pas B à l'intérieur

137
00:10:40,930 --> 00:10:44,950
du corps de la fonction, alors
vous aurez une erreur parce que

138
00:10:44,950 --> 00:10:46,760
la variable de sortie
n'est pas définie.

139
00:10:46,770 --> 00:10:48,890
Il y a aussi une autre particularité.

140
00:10:53,300 --> 00:10:55,380
Je nettoie tout ici.

141
00:10:56,020 --> 00:10:57,770
Je vais dans mon script.

142
00:10:58,910 --> 00:11:03,500
Si maintenant vous n'êtes pas
intéressé par la deuxième sortie,

143
00:11:04,910 --> 00:11:08,330
il vous suffit d'appeler la
fonction avec une seule sortie.

144
00:11:08,460 --> 00:11:13,530
À ce moment-là, la deuxième
sortie est simplement oubliée.

145
00:11:13,780 --> 00:11:18,000
Maintenant ici, la deuxième sortie
n'existe pas et c'est seulement.

146
00:11:18,000 --> 00:11:19,600
V qui est défini.

147
00:11:23,790 --> 00:11:25,330
Est-ce qu'il faut faire autre chose?

148
00:11:26,000 --> 00:11:31,270
Oui. Il faut toujours faire un
commentaire à votre fonction.

149
00:11:31,770 --> 00:11:38,790
À la ligne qui suit la définition
de la fonction, il faut mettre

150
00:11:39,090 --> 00:11:45,230
l'aide de la fonction. Par exemple, je
mets "cette fonction est un exemple".

151
00:11:48,890 --> 00:11:54,390
Et à la suite, je vais aussi dire ce que
c'est: "A est le paramètre d'entrée.

152
00:12:03,490 --> 00:12:10,310
Une matrice". Il faut juste
décrire "X en vecteur".

153
00:12:12,970 --> 00:12:18,560
Et puis il faut décrire ce que
fait la fonction et normalement,

154
00:12:18,980 --> 00:12:24,750
on le fait tout de suite: "cette
fonction calcule le produit

155
00:12:24,750 --> 00:12:28,540
matriciel de A et X".

156
00:12:28,540 --> 00:12:33,480
Après, on peut dire les sorties.

157
00:12:38,030 --> 00:13:00,670
Donc, il y a B qui est égal à AX et
norme B qui est égal à la norme de B.

158
00:13:03,560 --> 00:13:07,960
Je viens ici, dans ma ligne de
commande, je tape help function

159
00:13:08,340 --> 00:13:22,140
exemple et il y a la description
de ce que j'ai écrit:

160
00:13:22,140 --> 00:13:27,750
"Cette fonction est un exemple. 
Cette fonction calcule le produit matriciel

161
00:13:27,750 --> 00:13:35,150
de A et X" avec les
paramètres d'entrée, etc.

162
00:13:35,150 --> 00:13:42,890
Ensuite, il faut aussi mettre des
commentaires à ce que vous faites.

163
00:13:42,950 --> 00:13:46,740
À partir du moment où il y a une
ligne vide ici, tout ce qui suit

164
00:13:46,740 --> 00:13:49,630
ne rentre plus en compte pour le help.

165
00:13:49,750 --> 00:13:54,700
Donc je mets ici en
commentaire: "Calcul de AX.

166
00:13:57,140 --> 00:14:00,990
Calcul de norme de B.

167
00:14:00,990 --> 00:14:04,920
" Et ici, c'étaient
des calculs inutiles.

168
00:14:09,360 --> 00:14:12,600
Maintenant, j'ai bien
documenté ma fonction.

169
00:14:12,620 --> 00:14:18,880
J'ai décrit les étapes de mon algorithme
et ma fonction est complète.

