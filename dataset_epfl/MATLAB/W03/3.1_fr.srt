1
00:00:04,430 --> 00:00:07,300
Travailler en ligne de commande
n'est pas toujours très pratique.

2
00:00:07,960 --> 00:00:09,400
Souvent, on fait des fautes de frappe.

3
00:00:09,400 --> 00:00:11,730
On veut changer en paramètres,
les mettre en valeur.

4
00:00:12,180 --> 00:00:14,450
Ce n'est pas très pratique,
de devoir tout retaper.

5
00:00:14,600 --> 00:00:17,500
Rechercher toutes les commandes, comme
on l'a fait en utilisant les flèches.

6
00:00:18,640 --> 00:00:21,170
Il est alors essentiel de
travailler avec les scripts.

7
00:00:21,430 --> 00:00:24,840
C'est-à-dire des fichiers qui
contiennent des commandes à exécuter

8
00:00:24,840 --> 00:00:25,450
et que l'on peut éditer.

9
00:00:27,170 --> 00:00:30,570
C'est ce qui nous permet aussi de
répéter les calculs ou reprendre

10
00:00:30,570 --> 00:00:31,640
le travail par la suite.

11
00:00:32,520 --> 00:00:34,310
Nos programmes contiennent
des algorithmes.

12
00:00:34,430 --> 00:00:36,440
Qu’est-ce qu'un algorithme ?

13
00:00:36,280 --> 00:00:39,630
Sur wiki, on explique qu'un
algorithme est une suite finie,

14
00:00:39,780 --> 00:00:43,510
non ambiguë d'opérations ou
d’instructions permettant de résoudre

15
00:00:43,510 --> 00:00:45,170
un problème et d'obtenir
un résultat donné.

16
00:00:46,440 --> 00:00:50,250
En particulier, on veut pouvoir donner
des paramètres à l’algorithme

17
00:00:50,350 --> 00:00:52,300
appelé paramètre d'entrée inclus.

18
00:00:52,880 --> 00:00:56,250
Et on veut recevoir une réponse
appelée sortie ou out.

19
00:00:56,860 --> 00:00:59,930
Par exemple, quand on veut
calculer le volume d'une sphère,

20
00:01:00,390 --> 00:01:04,230
on doit d'abord demander le
rayon de la sphère et ça, c'est

21
00:01:04,230 --> 00:01:05,460
l'utilisateur qui va le donner.

22
00:01:05,530 --> 00:01:08,170
Ensuite par une formule mathématique
on calcule le volume.

23
00:01:08,520 --> 00:01:10,810
Et le résultat est
rendu à l'utilisateur.

24
00:01:11,190 --> 00:01:13,840
Dans cet exemple, input est le
rayon, l’algorithme, c'est le

25
00:01:13,840 --> 00:01:16,380
calcul du volume et l
out, c'est le volume.

26
00:01:17,390 --> 00:01:19,850
Alors comment créer
son propre script?

27
00:01:20,090 --> 00:01:29,090
Alors commençons en nettoyant
notre environnement et on a créé

28
00:01:29,220 --> 00:01:32,380
un répertoire où on va
mettre nos fichiers.

29
00:01:32,720 --> 00:01:38,990
Ici, par exemple, on va dire, j’appelle
 C répertoire, introduction octave.

30
00:01:39,330 --> 00:01:40,950
mkdir, ça veut dire.

31
00:01:41,300 --> 00:01:43,170
Créer un répertoire.

32
00:01:43,780 --> 00:01:45,770
On peut aussi le créer autrement.

33
00:01:46,550 --> 00:01:50,720
Après, vous pouvez aller
dans ce répertoire.

34
00:01:52,140 --> 00:01:56,720
Donc cd, introduction octave, et vous
rentrez dans votre répertoire.

35
00:01:58,270 --> 00:02:04,690
D'ailleurs on voit aussi ici q
on est dans un autre reporter.

36
00:02:06,210 --> 00:02:10,770
On peut faire la même chose en
utilisant les boutons qui sont là.

37
00:02:10,810 --> 00:02:14,880
Maintenant, je veux créer un
fichier qui contient les étapes

38
00:02:14,880 --> 00:02:17,870
nécessaires au calcul du
volume d'une sphère.

39
00:02:19,050 --> 00:02:21,290
Alors je vais tout faire.

40
00:02:21,420 --> 00:02:30,460
Edit... Et je dois mettre, donc
pas seulement le nom du fichier,

41
00:02:30,460 --> 00:02:30,840
mais aussi l'extension.

42
00:02:32,010 --> 00:02:34,920
Et l'extension habituellement
est point m.

43
00:02:36,420 --> 00:02:41,540
On va voir, le fichier n'existe
pas, il nous demande de le créer.

44
00:02:42,350 --> 00:02:46,340
Maintenant, il y a une petite
particularité de octave seulement,

45
00:02:47,940 --> 00:02:56,290
c'est l'utilisation de ces symboles
sharp (#) pour faire des commentaires.

46
00:02:56,620 --> 00:03:00,400
Il y a aussi une autre façon,
c'est de mettre des pourcentages.

47
00:03:00,390 --> 00:03:04,570
Et cette autre façon elle est
compatible avec octave et Matlab.

48
00:03:04,930 --> 00:03:08,420
Et donc du coup, on
n’utilisera pas les dièses.

49
00:03:08,880 --> 00:03:12,660
Et à la place, on va
utiliser des pourcentages.

50
00:03:12,660 --> 00:03:18,800
Et aussi, on enlève le copyright
automatique qui vient écrire

51
00:03:19,040 --> 00:03:22,750
sur le fichier nouveau. Ce n’est
pas nécessaire à chaque fois

52
00:03:22,740 --> 00:03:25,220
de mettre un copyright. C'est bien
quand on fait des grands programmes.

53
00:03:25,690 --> 00:03:29,800
Et ici, il y a aussi une partie
d’aide qui est typique d’octave.

54
00:03:29,800 --> 00:03:32,970
On va aussi l'effacer directement.

55
00:03:34,020 --> 00:03:37,790
Faut juste retrouver
avec cette partie.

56
00:03:38,140 --> 00:03:40,660
Maintenant, on est en train
de faire une fonction.

57
00:03:40,700 --> 00:03:42,080
On est en train de faire un script.

58
00:03:42,140 --> 00:03:45,550
Donc là aussi, on peut
effacer cette partie.

59
00:03:45,360 --> 00:03:48,820
Elle sera utile plus tard
quand on verra des fonctions.

60
00:03:49,130 --> 00:03:54,850
On a affiché lui. Si vous êtes
en train d’utiliser octave, il

61
00:03:54,850 --> 00:03:58,240
faut d'abord effacer toute cette
partie quand vous avez un fichier

62
00:03:58,240 --> 00:04:02,080
nouveau, avec Matlab, le
fichier sera vide directement.

63
00:04:02,310 --> 00:04:04,120
Maintenant, je peux sauvegarder.

64
00:04:05,400 --> 00:04:09,250
Et commencer à écrire mon programme.

65
00:04:09,940 --> 00:04:13,990
Alors, je définis le rayon.

66
00:04:14,620 --> 00:04:17,590
Je prends par exemple en rayon, 5,4.

67
00:04:19,570 --> 00:04:22,710
Je mets un point-virgule parce
que je n'ai pas envie de voir

68
00:04:22,710 --> 00:04:26,320
afficher le résultat de cette
opération à chaque fois.

69
00:04:27,220 --> 00:04:38,300
Et après je peux calculer le
volume d'une sphère est donnée

70
00:04:38,300 --> 00:04:43,270
par quatre tiers fois y.

71
00:04:44,390 --> 00:04:48,950
Pi, c'est la variable trois virgule
quatorze, quinze et cetera.

72
00:04:49,630 --> 00:04:51,090
C'est le nombre de Pythagore.

73
00:04:51,800 --> 00:04:54,770
Fois le rayon au cube.

74
00:04:55,880 --> 00:04:59,110
Et là, je ne mets pas de point-virgule
comme ça, quand j'exécute

75
00:04:59,110 --> 00:05:03,480
mon script, je vais avoir aussi
la réponse affichée à l'écran.

76
00:05:03,840 --> 00:05:04,270
Maintenant, je sauvegarde.

77
00:05:06,940 --> 00:05:10,460
Je reviens sur la fenêtre de commande.

78
00:05:11,080 --> 00:05:13,940
Et je tape le nom de mon script.

79
00:05:15,910 --> 00:05:20,400
(Fear) volume, en fait, il ne
faut pas mettre de point.

80
00:05:21,940 --> 00:05:28,000
Donc c'est juste, on appelle le
script, le fichier sans l'extension.

81
00:05:28,300 --> 00:05:33,850
Il va exécuter. Maintenant
on a exécuté le programme.

82
00:05:34,820 --> 00:05:36,570
Alors, on a ici une erreur.

83
00:05:37,080 --> 00:05:42,390
En allant chercher l'erreur,
l'erreur, elle se trouve à la ligne

84
00:05:42,390 --> 00:05:48,550
2, la 21ème colonne. Ligne 2, ici,
radius, il n'est pas connu.

85
00:05:49,240 --> 00:05:53,110
Ici, je définis le rayon
avec une majuscule.

86
00:05:53,420 --> 00:05:58,300
Ici, une minuscule. Il faut donc
être consistant et utiliser

87
00:05:58,670 --> 00:06:04,990
toujours des minuscules, des
majuscules de manière consistante.

88
00:06:05,160 --> 00:06:11,020
Alors maintenant, je peux
relancer mon script.

89
00:06:13,060 --> 00:06:14,570
Et j’obtiens le résultat.

90
00:06:14,590 --> 00:06:16,820
Le volume de cette sphère est 659,58.

91
00:06:16,820 --> 00:06:26,550
Approximativement. Quand j'écris
un programme aussi un simple

92
00:06:26,550 --> 00:06:28,980
script, il faut aussi documenter.

93
00:06:29,930 --> 00:06:32,400
C'est écrire des commentaires sur
ce qu'on est en train de faire.

94
00:06:33,230 --> 00:06:37,930
Quand je regarde mon fichier, je
n'ai pas rajouté de commentaires.

95
00:06:37,930 --> 00:06:39,240
Il n’ y a aucun commentaire.

96
00:06:39,990 --> 00:06:45,720
Et d'ailleurs si je demande de
l'aide à propos de ce fichier,

97
00:06:46,250 --> 00:06:51,940
de ce script, je n’obtiens
aucune réponse.

98
00:06:52,140 --> 00:06:53,500
Ce fichier n'est pas documenté.

99
00:06:53,840 --> 00:06:55,110
Alors comment le documenter ?

100
00:06:55,110 --> 00:06:58,220
Il faut écrire des commentaires.

101
00:06:58,210 --> 00:07:02,790
Donc, en commentaires, il commence
toujours avec un pourcentage,

102
00:07:04,350 --> 00:07:07,370
avec octave, et Matlab comme
ça, on a un commentaire.

103
00:07:08,660 --> 00:07:11,330
Donc c'est quelque chose qui est
écrit dans le fichier, mais

104
00:07:11,330 --> 00:07:16,170
qui n’est pas exécuté. Alors
qu’est ce qui fait ce script?

105
00:07:16,230 --> 00:07:18,210
Je peux l'écrire
d'habitude en anglais.

106
00:07:19,260 --> 00:07:24,600
Parce que, on ne sait pas qui va
lire notre script sur octave

107
00:07:24,240 --> 00:07:27,820
si c'est écrit autrement.

108
00:07:30,450 --> 00:07:31,290
Conversation indistincte.

109
00:07:31,560 --> 00:07:45,250
Donc, ça sauvegarde.

110
00:07:46,170 --> 00:07:51,990
Maintenant, je regarde le help.

111
00:07:53,420 --> 00:07:57,330
Et il nous dit, la
phrase qu'on a dite.

112
00:07:57,320 --> 00:07:59,040
Plus le fait que c'est un script.

113
00:08:00,180 --> 00:08:04,570
Et après, en théorie, il y aurait
d'autres aides qu'on pourrait

114
00:08:04,570 --> 00:08:08,570
obtenir si on a une
documentation plus large.

115
00:08:08,880 --> 00:08:11,430
Mais dans ce cas, on a que sept aides.

116
00:08:11,460 --> 00:08:17,220
Après, dans le fichier même, il faut
rajouter d'autres commentaires.

117
00:08:18,590 --> 00:08:22,320
Pas seulement le help mais aussi
qu'est-ce qu'on fait à chaque étape?

118
00:08:22,500 --> 00:08:27,140
Alors d'abord, on va donner le rayon.

119
00:08:31,770 --> 00:08:33,680
Et à la suite, on calcule le volume.

120
00:08:39,850 --> 00:08:47,050
Quand on exécute ce volume, eh bien, il
y a le même résultat qu'auparavant.

121
00:08:47,440 --> 00:08:48,940
Les commentaires n'apparaissaient pas.

122
00:08:49,810 --> 00:08:54,890
Souvent, on a envie de pouvoir changer
certaines données pendant l'exécution.

123
00:08:54,970 --> 00:08:59,550
Par exemple, on veut demander le
rayon à l'utilisateur plutôt

124
00:08:59,550 --> 00:09:02,100
que l'écrire directement
dans un fichier.

125
00:09:03,010 --> 00:09:07,980
Alors, une chose qu'on peut
utiliser, c'est la fonction input.

126
00:09:08,800 --> 00:09:10,550
Alors comment elle marche ?

127
00:09:11,470 --> 00:09:16,870
Un exemple, je veux obtenir un
nombre a, alors je demande input.

128
00:09:17,760 --> 00:09:22,160
Et je donne aussi une petite
explication de ce que je veux obtenir,

129
00:09:22,500 --> 00:09:25,440
alors je dis entrée en nombre.

130
00:09:32,280 --> 00:09:36,860
A ce moment-là, je rentre en
nombre, je mets 8 en 7.

131
00:09:38,630 --> 00:09:44,910
Alors je vais copier-coller
cette partie dans mon script.

132
00:09:44,860 --> 00:09:51,790
Et à la place d'avoir le rayon
égal à 5,4, je dis entrer le

133
00:09:52,650 --> 00:09:59,610
rayon de la sphère. Je
sauvegarde, contrôle S.

134
00:10:02,390 --> 00:10:03,890
Et j'exécute mon script.

135
00:10:04,500 --> 00:10:08,960
Alors mon script, maintenant,
il me demande le rayon.

136
00:10:08,920 --> 00:10:12,210
Alors, je mets une sphère de rayon 1.

137
00:10:14,470 --> 00:10:19,740
Et elle me calcule quatre tiers
fois Pi fois un au cube.

138
00:10:19,740 --> 00:10:22,060
Je peux le rappeler à nouveau.

139
00:10:23,100 --> 00:10:28,220
Donner un autre nombre, je n’ai
plus besoin de toucher à mon

140
00:10:28,130 --> 00:10:33,180
fichier, ni au script. La sortie de
notre algorithme peut s'afficher

141
00:10:33,550 --> 00:10:34,840
sur la ligne de commande.

142
00:10:34,800 --> 00:10:40,370
Ou bien simplement être
sauvegardé dans une variable.

143
00:10:41,210 --> 00:10:46,220
Si on veut juste sauvegarder la
valeur dans une variable, on

144
00:10:46,220 --> 00:10:48,310
peut faire comme ça. On sauvegarde.

145
00:10:49,220 --> 00:10:51,760
On exécute. J'ai rajouté
le point-virgule.

146
00:10:52,420 --> 00:10:54,220
On va voir qu'est-ce
qu'il fait notre script.

147
00:10:54,090 --> 00:10:59,020
Si volume. Le rayon.

148
00:10:59,380 --> 00:11:06,880
Et, il n’y a rien qui se passe.

149
00:11:08,280 --> 00:11:13,500
Alors, est-ce que la variable
volume a été changée?

150
00:11:13,440 --> 00:11:16,810
Apparemment, oui. Je peux réessayer,
je vais faire un client rôle.

151
00:11:18,140 --> 00:11:18,750
Tout mon environnement.

152
00:11:19,690 --> 00:11:24,610
Et je rappelle à nouveau, le script.

153
00:11:24,870 --> 00:11:32,960
Et je mets 1. 5. Et je vais voir si
le volume est vraiment celui-là.

154
00:11:35,610 --> 00:11:41,450
On peut sauvegarder simplement les
variables qui sont dans le script.

155
00:11:41,450 --> 00:11:42,710
Et ne rien afficher.

156
00:11:43,040 --> 00:11:43,760
Il n’y a pas de problèmes.

157
00:11:43,760 --> 00:11:47,860
Ce qui est important à savoir,
c'est qu’un script, il utilise

158
00:11:49,000 --> 00:11:52,780
toutes les variables qui sont
dans la fenêtre de commande et,

159
00:11:53,660 --> 00:11:57,640
aussi de l'autre côté les variables
que vous définissiez dans

160
00:11:57,640 --> 00:12:01,800
un script, elles vont après
l'utilisation du script, apparaître

161
00:12:01,800 --> 00:12:03,850
aussi dans la ligne de commande.

162
00:12:04,560 --> 00:12:11,400
Par exemple, si je fais un
commentaire, le calcul du rayon ici,

163
00:12:11,400 --> 00:12:19,700
le rayon, il existe parce
qu'avant, je l’ai calculé.

164
00:12:25,140 --> 00:12:27,010
J'appelle sphère volume.

165
00:12:26,810 --> 00:12:29,850
On n'a pas eu d'erreur.

166
00:12:29,980 --> 00:12:32,000
Le rayon utilisé, c'est celui d'avant.

167
00:12:32,520 --> 00:12:38,960
Si maintenant, je fais reroll,
j'appelle sphere volume, je vais

168
00:12:38,930 --> 00:12:42,360
avoir une erreur. Rayon
n'est pas défini.

169
00:12:43,390 --> 00:12:48,850
Alors réessayons, je
dis rayon égal 4,3.

170
00:12:54,180 --> 00:12:55,790
J'appelle ma fonction.

171
00:12:56,130 --> 00:12:57,740
Et le volume a été calculé.

172
00:12:58,930 --> 00:13:04,740
Donc ça, pour vous montrer tout ce
qui est utilisé dans le script,

173
00:13:05,400 --> 00:13:09,050
il est sauvegardé directement
dans votre environnement.

174
00:13:10,140 --> 00:13:14,410
Je reviens, je préfère
utiliser le rayon comme ça.

175
00:13:14,550 --> 00:13:19,030
Et d'ailleurs parfois, on a envie
de mettre clear all au début

176
00:13:19,030 --> 00:13:23,590
pour se dire si vraiment on est
sûr qu’on n'a pas besoin de

177
00:13:23,590 --> 00:13:28,560
tout ce qui est dans mon
environnement de travail.

178
00:13:28,940 --> 00:13:32,750
C'est important d’utiliser clear
all ici, mais c'est peut-être

179
00:13:33,380 --> 00:13:38,790
judicieux d'y réfléchir avant, si on
ne veut pas effacer tous les bugs.

180
00:13:40,150 --> 00:13:42,380
Donc ça, d'un côté pour les
variables qui existent.

181
00:13:42,380 --> 00:13:45,740
Mais maintenant j'aimerais quand même
afficher quelque chose à l'écran.

182
00:13:45,740 --> 00:13:49,120
J’ai travaillé sur le
rayon, sur le volume.

183
00:13:49,120 --> 00:13:51,530
Maintenant, j'aimerais
que le volume S affiche.

184
00:13:51,620 --> 00:13:54,920
Alors pour le faire, je peux
utiliser la fonction 10.

185
00:13:54,920 --> 00:13:58,900
Elle prend une chaîne de caractères.

186
00:13:58,840 --> 00:14:02,350
On n'a pas encore vu ce que c'est,
c'est des caractères à la suite.

187
00:14:02,850 --> 00:14:07,200
Et ils sont délimités par des
guillemets, un simple guillemet.

188
00:14:07,200 --> 00:14:10,480
Mais, là je peux dire
volume of the sphere.

189
00:14:14,500 --> 00:14:25,010
Alors maintenant, c'est un peu
long, je vais à la ligne.

190
00:14:28,010 --> 00:14:29,270
Alors, sur la coupe.

191
00:14:30,160 --> 00:14:34,110
Alors là, je dois mettre
le rayon, c'est radius.

192
00:14:33,900 --> 00:14:41,040
Je mets simplement radius comme ça, il
ne va pas savoir comment interagir.

193
00:14:41,000 --> 00:14:42,030
Je vais le transformer.

194
00:14:43,660 --> 00:14:51,000
Je fais un nombre to string, il
transforme le nombre en une

195
00:14:51,000 --> 00:14:54,660
chaîne de caractères string,
je sélectionne le caractère.

196
00:14:55,540 --> 00:15:01,570
Et maintenant, j'aimerais afficher
le volume of sphere, values.

197
00:15:01,570 --> 00:15:08,930
Trois, par exemple et ensuite
il faut encore transformer en

198
00:15:08,930 --> 00:15:11,630
swing, en chaîne de
caractères, le résultat.

199
00:15:14,770 --> 00:15:19,150
Si je peux mettre le point-virgule,
alors, ce qu'il y a c'est

200
00:15:19,150 --> 00:15:24,510
que à l'intérieur de ces parenthèses,
je n'ai pas une chaîne

201
00:15:24,510 --> 00:15:28,350
de caractères, j’ai 3 chaînes de
caractères, juste une à côté de l'autre.

202
00:15:28,810 --> 00:15:31,860
Alors il faut que je
les mette ensemble.

203
00:15:32,490 --> 00:15:35,530
On a dit que mettre ensemble par
exemple des vecteurs, ça serait

204
00:15:35,530 --> 00:15:36,430
avec des parenthèses carré.

205
00:15:37,700 --> 00:15:40,660
Et voilà, ce qui est fait.

206
00:15:40,700 --> 00:15:44,610
Je mets un espace juste
pour les voir mieux.

207
00:15:45,610 --> 00:15:47,510
Et maintenant je vais
exécuter mon script.

208
00:15:54,250 --> 00:16:00,010
Je vais mettre le volume of sphere
radius (phon), 4,2 (phon).

209
00:15:59,800 --> 00:16:07,590
Et c'est bien ce qu'on a demandé.

210
00:16:08,740 --> 00:16:13,410
Afin d'écrire des opérations complexes,
il est nécessaire d'utiliser

211
00:16:13,410 --> 00:16:17,960
des fichiers. Ces fichiers, on va
écrire toutes les commandes comme ça.

212
00:16:17,960 --> 00:16:21,480
On peut aussi les modifier et les
sauvegarder pour continuer notre travail.

213
00:16:22,040 --> 00:16:23,280
On appelle cela un script.

214
00:16:23,540 --> 00:16:26,100
Plus tard, on verra qu'on peut
aussi écrire des fonctions.

215
00:16:26,870 --> 00:16:27,830
C'est un peu différent.

216
00:16:27,970 --> 00:16:29,050
Mais le principe est le même.

217
00:16:29,000 --> 00:16:35,650
C'est écrire sr des fichiers les
commandes qu’on veut exécuter.

218
00:16:35,650 --> 00:16:37,690
Donc, on a vu l'utilisation
des scripts.

219
00:16:37,850 --> 00:16:41,130
Et aussi comment organiser le
travail par rapport à l’entrée

220
00:16:42,390 --> 00:16:47,160
de l’algorithme, aux entrées de
l’algorithme, l'exécution de l'algorithme.

221
00:16:47,170 --> 00:16:51,050
Mais ici, c'était juste une ligne
avec des calculs et les sorties

222
00:16:51,190 --> 00:16:55,760
qui peuvent être soit sous forme
de valeur donnée à une variable

223
00:16:56,130 --> 00:17:01,990
sauvegardée dans notre environnement,
ou un affichage pour l'utilisateur.

