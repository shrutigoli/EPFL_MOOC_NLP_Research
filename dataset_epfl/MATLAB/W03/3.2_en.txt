Writing and reading a file is often necessary in order to read or transfer data.
We won't see all the possibilities, but will focus on the essential.
First we will see how to save space of work or only some variables to recover later.
Then we will see the writing of more complex files.
Let's first see how to save space.
For example, I take two variables
A and B, two matrices.
B, for example, which is just equal to two times a.
And now I'll save them to a MATLAB file
I call workspace.mat.
Here, the extension is mat, not M.
This is a binary file, it is called mat because we recognize that this is
Matlab format.
This is true when working on MATLAB or
Octave.
This is a file called in binary format
Matlab
Now I clean my workspace again
There are no more variable in my environment and I reload my file.
I look at the data.
There is A and B which have reappeared.
A at the value that was given earlier to this matrix.
Now I can only re-clean and only load the variable
A from the workspace.mat.
At this moment, there is more than variable A that is loaded.
If you prefer to save your variables in the text file rather than save in Matlab binary format we save in ASCII format.
For this, you must give the save command, with the option - ASCII and give the name of a text file in which to save.
The difference with the backup of a
Matlab file is that here you can save only one variable.
That's why I gave the name 1VAR, you need to state what variable you want to save.
Now I clean my environment, there is more variable.
And I load the file that I just wrote: load 1VAR. txt and a new variable was created.
A variable named as our file.
Inside is the original matrix.
If I want to give the name A to this new variable, I have to call load as function.
So it's load, the file name, 1VAR. txt and then I end the call of this function.
Now the only variable I have is A and its value is the matrix we had before.
This text file 1VAR . can be changed using a common editor or can also be the result of the calculations from our software or even another computer.
So you have a txt file and you can load it in your environment using the load command.
What is essential is that the file is formatted as a matrix.
So if we look at the first line, there will be some number of numbers, say 5.
Now on each successive line, there should be
5 values â€‹â€‹indicated otherwise load will not work.
If you want to write more complex texts on a file text, you can use the command fopen, fprintf or fclose.
They work in a little more complex way, so I advice you to look up help for these functions, fopen, fprintf or look on the internet for examples.
Here, I give you just a simple example on the use, so if we want to write in a file more than just a matrix, you must first open a file, and to open it, you need to use fopen. fopen function has two outputs.
We will see later, what it means 1 or 2 outputs of a function.
In any case, the syntax is like that.
It has 2 outputs for fopen fopen and has two arguments: one is the file we will write and the other what we want to do.
We, we want to write w like write.
Now in fileID (message), there is the result of the opening, this fileID is the identifier's file.
Now, if you want to write something about this file, you have the right.
With the fprintf function, you need to give this ID, do not give the name of the file, but the file identifier.
And then we can write the message we want on this file.
For example, I first go to the line.
Go to the line is a \ n, then text Hello, we are in 2016.
And I give the year as a number at the end which could be in a variable.
And what temperature it is.
So we want to give a number with a decimal point, so this number will occupy 3 places one place after the decimal point.
And then I write degrees.
And now, we must give the number you want to print.
So it's 2016, and the temperature 4.
5 degrees
After I can close the file.
Now I can look at what he has written in my file.
For example, if I want to just to look,
I use the command before I have to give the file name.
We see in the written file: hello we are in 2016 and it is 4.
5 degrees
The fprintf command prints something in the file.
We can also print directly on a string of characters,
So on a string with the command called sprintf.
But, it does not take the identifier of the file as it will be displayed on the screen.
We have exactly the same message as before.
This is why I am introducing this variable, it is in the case where I want to use 2016 and 4.
5, I will use the values â€‹â€‹in a specific variable.
For example, this variable var, I have
2016 and then the temperature which, perhaps, were calculated in another way.
So at this point, I can instead give a new matrix here, I give the variable var.
The effect is exactly the same.
Most often, the writing and reading of a file are more complicated.
Here we have seen the basics.
Nevertheless with the concepts learned, you should be able to adapt the concepts presented to your specific needs.
In this case, it will first run some tests and check that the controls you have in place are reliable.
